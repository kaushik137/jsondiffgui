/*
@license

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
jsondiffgui released under MIT license
Based on jq-web, json-diff, jsdifflib
    jq-web:
        https://github.com/fiatjaf/jq-web.git
        Copyright (c) 2019 fiatjaf <fiatjaf@gmail.com>
        license: ISC

        used to transform json objects
    json-diff:
        https://github.com/andreyvit/json-diff.git
        Copyright (c) 2015 Andrey Tarantsov
        license: MIT

        used to compute a diff of two jsons
    jsdifflib v1.0:
        <http://snowtide.com/jsdifflib>
        Copyright (c) 2007, Snowtide Informatics Systems, Inc.
        license: BSD

        Three functions celt, telt, ctelt are used in jsondiffgui source


The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

function _loadWasmModule (sync, src, imports) {
        var len = src.length
        var trailing = src[len-2] == '=' ? 2 : src[len-1] == '=' ? 1 : 0
        var buf = new Uint8Array((len * 3/4) - trailing)

        var _table = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
        var table = new Uint8Array(130)
        for (var c = 0; c < _table.length; c++) table[_table.charCodeAt(c)] = c

        for (var i = 0, b = 0; i < len; i+=4) {
          var second = table[src.charCodeAt(i+1)]
          var third = table[src.charCodeAt(i+2)]
          buf[b++] = (table[src.charCodeAt(i)] << 2) | (second >> 4)
          buf[b++] = ((second & 15) << 4) | (third >> 2)
          buf[b++] = ((third & 3) << 6) | (table[src.charCodeAt(i+3)] & 63)
        }

        if (sync) {
          var mod = new WebAssembly.Module(buf)
          return imports ? new WebAssembly.Instance(mod, imports) : mod
        }

        // return the the asynchronous WebAssembly.instantiate(buf) since this
        // is the primary API for compiling and instantiating WebAssembly code
        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate
        return imports ? WebAssembly.instantiate(buf, imports) : WebAssembly.compile(buf)
      }require=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
var css = "/*\nThis is part of jsdifflib v1.0. <http://github.com/cemerick/jsdifflib>\n\nCopyright 2007 - 2011 Chas Emerick <cemerick@snowtide.com>. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice, this list of\n      conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\n      of conditions and the following disclaimer in the documentation and/or other materials\n      provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY Chas Emerick ``AS IS'' AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Chas Emerick OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those of the\nauthors and should not be interpreted as representing official policies, either expressed\nor implied, of Chas Emerick.\n*/\ntable.diff {\n  border-collapse: collapse;\n  border: 1px solid darkgray;\n  white-space: pre-wrap;\n  width: 100%;\n  border-collapse: collapse;\n}\ntable.diff tbody {\n  font-family: Courier, monospace;\n}\ntable.diff tbody th {\n  font-family: verdana,arial,'Bitstream Vera Sans',helvetica,sans-serif;\n  background: #EED;\n  font-size: 11px;\n  font-weight: normal;\n  border: 1px solid #BBC;\n  color: #886;\n  padding: .3em .5em .1em 2em;\n  text-align: right;\n  vertical-align: top;\n}\ntable.diff thead {\n  border-bottom: 1px solid #BBC;\n  background: #EFEFEF;\n  font-family: Verdana;\n}\ntable.diff thead th.texttitle {\n  text-align: left;\n}\ntable.diff tbody tr {\n  border-bottom: 1pt solid black;\n}\ntable.diff tbody th {\n  width: 1%;\n}\ntable.diff tbody td {\n  padding: 0px .4em;\n  padding-top: .4em;\n  vertical-align: top;\n  word-break: break-all;\n  width: 45%;\n}\ntable.diff .empty {\n  background-color: #DDD;\n}\ntable.diff .replace {\n  background-color: #FD8;\n}\ntable.diff .delete {\n  background-color: #E99;\n}\ntable.diff .skip {\n  background-color: #EFEFEF;\n  border: 1px solid #AAA;\n  border-right: 1px solid #BBC;\n}\ntable.diff .insert {\n  background-color: #9E9;\n}\ntable.diff .tree_unequal {\n  background-color: #CC8;\n}\ntable.diff th.author {\n  text-align: right;\n  border-top: 1px solid #BBC;\n  background: #EFEFEF;\n}\n"; (require("browserify-css").createStyle(css, { "href": "../3rdparty/jsdifflib/diffview.css" }, { "insertAt": "bottom" })); module.exports = css;
},{"browserify-css":13}],2:[function(require,module,exports){
// This file has three functions celt, telt, ctelt copied from jsdifflib v1.0. http://github.com/cemerick/jsdifflib
// They are for creating html elements, used for creating rows of the diff
// The following is the license text of jsdifflib
/*
This is part of jsdifflib v1.0. <http://github.com/cemerick/jsdifflib>

Copyright 2007 - 2011 Chas Emerick <cemerick@snowtide.com>. All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are
permitted provided that the following conditions are met:

   1. Redistributions of source code must retain the above copyright notice, this list of
      conditions and the following disclaimer.

   2. Redistributions in binary form must reproduce the above copyright notice, this list
      of conditions and the following disclaimer in the documentation and/or other materials
      provided with the distribution.

THIS SOFTWARE IS PROVIDED BY Chas Emerick ``AS IS'' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Chas Emerick OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

The views and conclusions contained in the software and documentation are those of the
authors and should not be interpreted as representing official policies, either expressed
or implied, of Chas Emerick.
*/

(function(){
function celt (name, clazz) {
  var e = document.createElement(name);
  e.className = clazz;
  return e;
}

function telt (name, text) {
  var e = document.createElement(name);
  e.appendChild(document.createTextNode(text));
  return e;
}

function ctelt (name, clazz, text) {
  var e = document.createElement(name);
  e.className = clazz;
  e.appendChild(document.createTextNode(text));
  return e;
}

if (typeof module !== 'undefined' && module.exports) {
  module.exports = { celt, telt, ctelt }
} else {   // we're in a browser
  window.celt = celt;
  window.telt = telt;
  window.ctelt = ctelt;
}


})();

},{}],3:[function(require,module,exports){
/*

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
The MIT License (MIT)
Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

/* jshint esversion: 6                                  */
/* jshint  undef:true                                  */
/* jshint  curly:false                                  */
/* exported helloval                                    */
/* global isElementInView:true, eventCommand:true, create_table:true, JsondiffView:true, require:true, module:true */
/* experimental:  [asyncawait, asyncreqawait]  */


(function() {

( JsondiffView      = require('../../jsondiffview.js') );
( JsonDelta         = require('../../jsondelta.js') );
( JsondiffViewModel         = require('../../jsondiffviewmodel.js') );
( { eventCommand }    = require("./htmltable_eventcmder.js") );
( { setTableHandler } = require('./htmltable_eventhandler.js') );
( { create_table, isElementInView  } = require('./htmlutils.js') );


const HtmltableView = function (json_delta, toCompact=0) {
  this.viewmodel = new JsondiffViewModel(json_delta, toCompact)
  console.log("HtmltableView: Number of Rows =", this.viewmodel.rowsRepr.length)
  this.table = create_table(this.viewmodel.rowsRepr)
  this.change_selected_index(1)
  setTableHandler(this)

  this.recursive_collapse(1)
  this.toggle_collapse(1)
  this.redraw_node(1)

  return this
}

HtmltableView.prototype = JsondiffView.prototype

HtmltableView.prototype.scroll2index = function (index, flag_scroll2top) {
  const nearby_index = flag_scroll2top ? this.viewmodel.prev_row(index) : this.viewmodel.next_row(index)
  const nearby_elem = this.table.rows[nearby_index]
  nearby_elem.scrollIntoView(flag_scroll2top)
}

HtmltableView.prototype.scroll2selection = function() {
  return this.cur_selected_index
}

HtmltableView.prototype.jsondiffguiCommands.scroll2selection = HtmltableView.prototype.scroll2selection

HtmltableView.prototype.change_selected_index = function(index) {
  console.assert( !this.viewmodel.is_hidden(index) )
  if (this.cur_selected_index)
    this.table.rows[this.cur_selected_index].style.outline = ""

  this.cur_selected_index = index
  this.table.rows[this.cur_selected_index].style.outline = "#FF5500 double"
  return null
}

HtmltableView.prototype.jsondiffguiCommands.change_selected_index = HtmltableView.prototype.change_selected_index


HtmltableView.prototype.handleEvent = function (event, row_index)
{
    // row_index will be null when called from handler for 'TABLE'
    // (event.type==="keydown" && event.currentTarget.tagName==="TABLE")
    var cmdObj = new eventCommand(event, this, row_index ? row_index : this.cur_selected_index)

    const previndex = this.cur_selected_index
    // In future, the command target may be different from 'this'
    // var newindex = cmdObj ? cmdObj.cmd_target.execute(cmdObj) : null
    var newindex = cmdObj.is_valid() ? cmdObj.Do() : null
    console.log("cmd returned newindex = ", newindex, "cur selected index = ", this.cur_selected_index)

    if (newindex) {
      console.assert(newindex !== -1, "eventCommand ", cmdObj.cmdname, "returned index -1" )
      var ancestor_node = newindex
      if (this.viewmodel.is_hidden(newindex))
        ancestor_node = this.viewmodel.expand_to_node(newindex)

      this.redraw_node(ancestor_node)
      if (newindex !== row_index)
        this.change_selected_index( newindex )

      var elem = this.table.rows[newindex]
      if (!isElementInView(elem)) {
        const flag_scroll2top = (newindex > previndex) ? true : false
        this.scroll2index(newindex, flag_scroll2top)
      }

    }

}

function add_class_if_tree_unequal(table, row_index, cellindex, tree_is_unequal) {
  if (tree_is_unequal)
    table.rows[row_index].cells[cellindex].classList.add('tree_unequal')
  else
    table.rows[row_index].cells[cellindex].classList.remove('tree_unequal')
}

HtmltableView.prototype.redraw_node = function(ind) {
  const viewmodel = this.viewmodel
  const table = this.table

  var range = viewmodel.get_node_range(ind)
  for (var i = range[0]; i <= range[1]; ++i) {
    var cur_row = table.rows[i]
    cur_row.style.display = viewmodel.is_hidden(i) ? 'none' : 'table-row'

    const celltexts = viewmodel.get_row_cells(i)
    cur_row.cells[0].innerHTML = celltexts[0]
    cur_row.cells[1].innerHTML = celltexts[1]
    cur_row.cells[2].innerHTML = celltexts[2]
    cur_row.cells[3].innerHTML = celltexts[3]

    const tree_is_unequal = viewmodel.is_collapsed(i) && viewmodel.is_tree_unequal(i)
    add_class_if_tree_unequal(table, i, 1, tree_is_unequal )
    add_class_if_tree_unequal(table, i, 3, tree_is_unequal )
  }

}

HtmltableView.prototype.execute = function(cmdobj) {
  return cmdobj.fn.call(this, cmdobj.params.rowindex)
}

const create_jsondiff_htmltable = async function (basetxt, newtxt, toCompact=0) {
  var json_delta = await JsonDelta(basetxt, newtxt)
  var view = new HtmltableView(json_delta, toCompact)

  return view.table
}

jsondiffgui.create_jsondiff_htmltable = create_jsondiff_htmltable

})()

},{"../../jsondelta.js":9,"../../jsondiffview.js":10,"../../jsondiffviewmodel.js":11,"./htmltable_eventcmder.js":4,"./htmltable_eventhandler.js":5,"./htmlutils.js":6}],4:[function(require,module,exports){
/*

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/


/* jshint esversion: 6                                  */
/* jshint  undef:true                                  */
/* global HtmltableView:true, module:true */

(function() {
// in mac does altKey map to option key?
var eventCommandMaps = [
  { 'eventSpec' : { 'tagName' : 'TH', 'type' : 'click'                                     }, 'commandName' : 'toggle_collapse' },
  { 'eventSpec' : { 'tagName' : 'TH', 'type' : 'click', 'ctrlKey' : true                   }, 'commandName' : 'recursive_open' },
  { 'eventSpec' : { 'tagName' : 'TH', 'type' : 'click', 'ctrlKey' : true, 'altKey' : true  }, 'commandName' : 'recursive_collapse' },
  { 'eventSpec' : { 'tagName' : 'TD', 'type' : 'click'                                     }, 'commandName' : 'change_selected_index' },
  { 'eventSpec' : { 'tagName' : 'TD', 'type' : 'click',                   'altKey' : true  }, 'commandName' : 'scroll2selection' },

  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'p'  }, 'commandName' : 'prev_obj' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'n' }, 'commandName' : 'next_obj' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'Enter',      'ctrlKey' : true }, 'commandName' : 'recursive_open' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'Enter',      'ctrlKey' : true, 'altKey' : true }, 'commandName' : 'recursive_collapse' },

  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': '['                      }, 'commandName' : 'obj_open' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': ']'                      }, 'commandName' : 'obj_close' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'k'                      }, 'commandName' : 'prev_row' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'j'                      }, 'commandName' : 'next_row' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'ArrowLeft'              }, 'commandName' : 'prev_diff' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'ArrowRight'             }, 'commandName' : 'next_diff' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'Enter'                  }, 'commandName' : 'toggle_collapse' },
  { 'eventSpec' : { 'tagName' : 'TABLE', 'type' : 'keydown', 'key': 'Enter', 'altKey' : true }, 'commandName' : 'scroll2selection' },

]

function LOG() {
  return
}

const eventCommand = function(event, target_view, inrowindex) {
  const default_false = (x => x === undefined ? false : x)
  const inEvent = event
  const compare_event = ( x =>
    ( inEvent.type                === x.eventSpec.type                    ) &&
    ( inEvent.currentTarget.tagName  === x.eventSpec.tagName                    ) &&
    ( inEvent.key                 === x.eventSpec.key                     ) &&
    ( inEvent.ctrlKey             === default_false(x.eventSpec.ctrlKey)  ) &&
    ( inEvent.altKey              === default_false(x.eventSpec.altKey)   ) &&
    ( inEvent.shiftKey            === default_false(x.eventSpec.shiftKey) )
  )

  this.cmdname = "" ; this.fn = null; this.params = null ; this.cmd_target = null

  var cmd_index = eventCommandMaps.findIndex(compare_event)
  console.log("eventCommand: event = ",event, "tagname = ", event.currentTarget.tagName, "index = ", cmd_index)
  if (cmd_index !== -1 && inrowindex) {
    var cmdEventSpec = eventCommandMaps[cmd_index]
    console.log("command = ", cmdEventSpec.commandName, "eventSpec = ", cmdEventSpec.eventSpec, "rowindex=", inrowindex)

    const cmdname = cmdEventSpec.commandName
    var cmdFn = target_view.jsondiffguiCommands[cmdname]
    this.cmdname = cmdname; this.fn = cmdFn; this.params = { rowindex : inrowindex } ; this.cmd_target = target_view
    console.assert( typeof(this.fn) === "function", "eventCommand invalid function passed, this=", this)
  }

  return this
}

eventCommand.prototype.is_valid = function () {
  return this.cmdname && this.params && this.params.rowindex
}


eventCommand.prototype.Do = function () {
  LOG("eventCommand ", this)
  return this.cmd_target.execute(this)
}

if (typeof module !== 'undefined' && module.exports) {
  module.exports = { eventCommand }
} else {   // we're in a browser
  window.eventCommand = eventCommand
}



})()



},{}],5:[function(require,module,exports){
/*

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

/* jshint esversion: 6                                  */
/* jshint  undef:true                                  */

(function() {

function process_event(src, event, theview, row_index) {
  return theview.handleEvent(event, row_index)
}

function onclick_td_handler(theview, row) {
  return function(event) { return process_event(this, event, theview, row.rowIndex) }
}

function onclick_th_handler(theview, row) {
  return function(event) { return process_event(this, event, theview, row.rowIndex) }
}

function keydown_table_handler(theview) {
  return function(event) { return process_event(this, event, theview, null) }
}

function setTableHandler(theview) {
  var table = theview.table
  var rows = table.getElementsByTagName("tr");
  table.addEventListener('keydown', keydown_table_handler(theview) )
  table.tabIndex = 0

  table.onfocus = function(e) { this.style.outline="#0E0 ridge" ; } // jshint unused:false
  table.onblur  = function(e) { this.style.outline="" ; } // jshint unused:false
    // Todo: reset it to old value?

  for (var i = 1; i < rows.length; i++) {
    var row = table.rows[i];
    row.cells[0].onclick = onclick_th_handler(theview, row);
    row.cells[2].onclick = onclick_th_handler(theview, row);
    row.cells[1].onclick = onclick_td_handler(theview, row);
    row.cells[3].onclick = onclick_td_handler(theview, row);
    // reset_state_for_row(row)
  }
}

if (typeof module !== 'undefined' && module.exports) {
  module.exports = { setTableHandler }
} else {   // we're in a browser
  window.setTableHandler = setTableHandler
}



})()


},{}],6:[function(require,module,exports){
/*
@license

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
jsondiffgui released under MIT license
Based on jq-web, json-diff, jsdifflib
    jq-web:
        https://github.com/fiatjaf/jq-web.git
        Copyright (c) 2019 fiatjaf <fiatjaf@gmail.com>
        license: ISC

        used to transform json objects
    json-diff:
        https://github.com/andreyvit/json-diff.git
        Copyright (c) 2015 Andrey Tarantsov
        license: MIT

        used to compute a diff of two jsons
    jsdifflib v1.0:
        <http://snowtide.com/jsdifflib>
        Copyright (c) 2007, Snowtide Informatics Systems, Inc.
        license: BSD

        Three functions celt, telt, ctelt are used in jsondiffgui source


The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/


/* async/await not supported by jshint */

/* jshint esversion: 6                                  */
/* jshint  curly:false                                  */
/* jshint  undef:true                                  */
/* exported diffviewcss                                    */
/* global require:true */
/* global celt:true, telt:true, ctelt:true  */
/* global innerWidth:true, innerHeight:true */
/* experimental:  [asyncawait, asyncreqawait]  */

(function() {
let diffviewcss = require("../../../3rdparty/jsdifflib/diffview.css");

( { celt, telt, ctelt } = require('../../../3rdparty/jsdifflib/htmlelem.js') );



function create_row(rowrepr) {
    var row = document.createElement("tr")

    function create_cell(num, text, op) {
      if (op==="empty") {
        row.appendChild(document.createElement("th"));
        row.appendChild(celt("td", "empty"));
      } else {
        row.appendChild(telt("th", num.toString()));
        row.appendChild(ctelt("td", op, String(text))); // .replace(/\t/g, "\u00a0\u00a0\u00a0\u00a0")
      }
    }

    create_cell(rowrepr.cells[0], rowrepr.cells[1], rowrepr.opcodes[0])
    create_cell(rowrepr.cells[2], rowrepr.cells[3], rowrepr.opcodes[1])

    return row
}

const create_table = function (RowsRepr) {
    var baseTextName="base"
    var newTextName="new"

    var table = celt("table", "diff" );
    var thead = document.createElement("thead");

    var headrow = document.createElement("tr");
    headrow.appendChild(document.createElement("th"));
    headrow.appendChild(ctelt("th", "texttitle", baseTextName));
    headrow.appendChild(document.createElement("th"));
    headrow.appendChild(ctelt("th", "texttitle", newTextName));

    var tbody=document.createElement("tbody");

    table.appendChild(thead)
    thead.appendChild(headrow)
    table.appendChild(tbody)

    const re_number = /^(0|[1-9]\d*)$/
    var arr_notation=function(x) { var m=x.match(re_number); return m ? "["+m[0]+"]" : "."+x }

    for (var i=1; i< RowsRepr.length ; ++i) {
      var xrow=create_row(RowsRepr[i])
      //const tooltip = RowsRepr[i].linerepr.path.map(arr_notation).join('')
      const row = RowsRepr[i]
      var fn = (x => x === "same" ? row.linerepr.path : x)

      var apath = fn(row.actual_paths[0])
      xrow.cells[0].title = apath ? apath.map(arr_notation).join('') : null
      apath = fn(row.actual_paths[1])
      xrow.cells[2].title = apath ? apath.map(arr_notation).join('') : null

      tbody.insertBefore(xrow, null); // if 2nd arg is null will be appended, i.e inserted at the end
    }

    return table
}


function isElementInView(elem) {
  var vw=Math.max( innerWidth || 0, document.documentElement.clientWidth)
  var vh=Math.max( innerHeight || 0, document.documentElement.clientHeight)

  var rect = elem.getBoundingClientRect()
  return (rect.top >= 0 && rect.left >= 0 && rect.bottom > 0 && rect.right > 0 && rect.bottom < vh && rect.right < vw)

}

if (typeof module !== 'undefined' && module.exports) {
  module.exports = { create_table, isElementInView }
} else {   // we're in a browser
  window.create_table = create_table
  window.isElementInView = isElementInView
}



})()

},{"../../../3rdparty/jsdifflib/diffview.css":1,"../../../3rdparty/jsdifflib/htmlelem.js":2}],7:[function(require,module,exports){
/* global jsondiffgui:true */
jsondiffgui.version="1.0 Build:2024-02-12 2012"
// console.log("jsondiffgui version:",jsondiffgui.version)

},{}],8:[function(require,module,exports){
/*

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

/* jshint esversion: 6                                  */
/* jshint  undef:true                                  */
/* jshint  curly:false                                  */
/* exported helloval                                    */
/* global require:true */
/* global module:true */

(function(){
var patchArr='def patch_arrays($op): walk(if ( (type=="array" ) and (length == 2 ) and (.[0]==" " or.[0]=="-" or .[0]=="+" or .[0]=="~" )   ) then if ( .[0] == $op ) then "__deleted__" else .[1] end else . end ) ; '

var fixKeys='def fixKeys($tag): ["__added", "__deleted"] as $a | ( if $tag=="__old" then ($a|reverse) else $a end ) as [$x,$y] | with_entries( if (.key|endswith($y)) then .value|="__deleted__" else . end | .key|=rtrimstr($x)  | .key|=rtrimstr($y)) ; '

var patchObj=fixKeys + 'def patch_obj($tag): (.. | select(has($tag)?)  )|=.[$tag] | walk(if type=="object" then fixKeys($tag) else . end) ; '

/*
async function patch_delta(b12) {
  const jq = await require('jq-web')
  const _ = await require('lodash')

  async function patch_for_base(b12) {
    return jq.promised.json( b12, patchArr + patchObj +  'patch_arrays("+") | patch_obj("__old")' ).then( res => _.cloneDeep(res) ).catch(x => console.log("Err: ",x))
  }

  async function patch_for_new(b12) {
    return jq.promised.json( b12, patchArr + patchObj +  'patch_arrays("-") | patch_obj("__new")' ).then( res => _.cloneDeep(res) ).catch(x => console.log("Err: ",x))
  }

  var allRes = await Promise.all([ patch_for_base(b12), patch_for_new(b12)]);
  return { left: allRes[0], right: allRes[1] }
}
*/

async function patch_delta(b12) {
  const jq=require('jq-web')
  const _=require('lodash')

  var d = {}
  d.left  = await jq.promised.json( b12, patchArr + patchObj +  'patch_arrays("+") | patch_obj("__old")' ).then( res => _.cloneDeep(res) ).catch(x => console.log("Err: ",x))
  d.right = await jq.promised.json( b12, patchArr + patchObj +  'patch_arrays("-") | patch_obj("__new")' ).then( res => _.cloneDeep(res) ).catch(x => console.log("Err: ",x))

  return d
}


if (typeof module !== 'undefined' && module.exports) {
  module.exports={
  patch_delta
  };
} else {   // we're in a browser
  window.patch_delta = patch_delta;
}

})();

},{"jq-web":"jq-web","lodash":"lodash"}],9:[function(require,module,exports){
/*

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/


/* async/await not supported by jshint */

/* jshint esversion: 6                                  */
/* exported helloval                                    */
/* global require:true */
/* global module:true */
/* experimental:  [asyncawait, asyncreqawait]  */

(function() {

const JsonDelta = async function (basetxt, newtxt) {
  const json_diff=require('json-diff')
  const jqutils=require('./jqutils.js')
  var delta_lr=json_diff.diff(JSON.parse(basetxt, 'utf-8'), JSON.parse(newtxt,'utf-8'), {keepUnchangedValues: true, full: true } )
  const patched_lr=await jqutils.patch_delta( delta_lr)
  return patched_lr
}

if (typeof module !== 'undefined' && module.exports) {
  module.exports = JsonDelta
} else {   // we're in a browser
  window.JsonDelta = JsonDelta
}

})()

},{"./jqutils.js":8,"json-diff":"json_diff"}],10:[function(require,module,exports){
/*

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

/* jshint esversion: 6                                  */
/* jshint  undef:true                                  */
/* global module:true, JsondiffView:true */
/* experimental:  [asyncawait, asyncreqawait]  */

(function() {

jsondiffgui = { version: 1.0  }

let JsondiffView = function () {  }

JsondiffView.prototype.scroll2selection = null

JsondiffView.prototype.change_selected_index = null

JsondiffView.prototype.recursive_collapse = function(row_index) {
  const toCollapse = true
  return this.viewmodel.recursive_collapse(row_index, toCollapse)
}

JsondiffView.prototype.recursive_open = function(row_index) {
  const toCollapse = false
  return this.viewmodel.recursive_collapse(row_index, toCollapse)
}

JsondiffView.prototype.toggle_collapse = function(row_index) {
  return this.viewmodel.collapse(row_index, "flip")
}

JsondiffView.prototype.prev_row = function(row_index) {
  return this.viewmodel.prev_row(row_index)
}

JsondiffView.prototype.next_row = function(row_index) {
  return this.viewmodel.next_row(row_index)
}

JsondiffView.prototype.prev_obj = function(row_index) {
  return this.viewmodel.prev_obj(row_index)
}

JsondiffView.prototype.next_obj = function(row_index) {
  return this.viewmodel.next_obj(row_index)
}

JsondiffView.prototype.prev_diff = function(row_index) {
  return this.viewmodel.prev_diff(row_index)
}

JsondiffView.prototype.next_diff = function(row_index) {
  return this.viewmodel.next_diff(row_index)
}

JsondiffView.prototype.obj_open = function(row_index) {
  return this.viewmodel.obj_open(row_index)
}

JsondiffView.prototype.obj_close = function(row_index) {
  return this.viewmodel.obj_close(row_index)
}

JsondiffView.prototype.handleEvent = function (event) { // jshint unused:false
  return
}

JsondiffView.prototype.redraw_node = function (index) { // jshint unused:false
  return
}


JsondiffView.prototype.jsondiffguiCommands = {
  "scroll2selection" : JsondiffView.prototype.scroll2selection,
  "change_selected_index" : JsondiffView.prototype.change_selected_index,
  "recursive_collapse" : JsondiffView.prototype.recursive_collapse,
  "recursive_open" : JsondiffView.prototype.recursive_open,
  "toggle_collapse" : JsondiffView.prototype.toggle_collapse,
  "prev_row" : JsondiffView.prototype.prev_row,
  "next_row" : JsondiffView.prototype.next_row,
  "prev_obj" : JsondiffView.prototype.prev_obj,
  "next_obj" : JsondiffView.prototype.next_obj,
  "prev_diff" : JsondiffView.prototype.prev_diff,
  "next_diff" : JsondiffView.prototype.next_diff,
  "obj_open" : JsondiffView.prototype.obj_open,
  "obj_close" : JsondiffView.prototype.obj_close
}

if (typeof module !== 'undefined' && module.exports) {
  module.exports = JsondiffView
} else {
  window.JsondiffView = JsondiffView
}


})()



},{}],11:[function(require,module,exports){
/*

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/


/* jshint esversion: 6                                  */
/* jshint  undef:true                                  */
/* jshint  curly:false                                  */
/* global require:true */
/* experimental:  [asyncawait, asyncreqawait]  */

(function(){

const _=require('lodash');
( { get_path_range, generate_diff } = require('./jsonutils.js') );

function LOG() { return ; }

const is_different = r => r.opcodes.some( x=> x!=='equal' && x!=='tree_unequal')

const JsondiffViewModel = function (json_deltas, toCompact=0) {
  this.json_deltas = json_deltas
  this.rowsRepr = generate_diff(json_deltas.left, json_deltas.right, toCompact)
  this.current_selected_index = 0

  return this
}

JsondiffViewModel.prototype._RRPath = function (i)      { return this.rowsRepr[i].linerepr.path   }

JsondiffViewModel.prototype._RRLen = function (i)       { return this.rowsRepr[i].linerepr.length }

JsondiffViewModel.prototype._RRFind = function (fn, i=0, j=null) {
  j = j || this.rowsRepr.length
  var next = this.rowsRepr.slice(i,j).findIndex(fn)
  return (next === -1 ) ? -1 : i+next
}

JsondiffViewModel.prototype._RRFindLastIndex = function (fn, i=0, j=null) {
  j = j || this.rowsRepr.length
  var next = this.rowsRepr.slice(i,j).findLastIndex(fn)
  return (next === -1 ) ? -1 : i+next
}

JsondiffViewModel.prototype.is_collapsed = function (index) {
  return this.rowsRepr[index].is_collapsed
}

JsondiffViewModel.prototype.is_ancestor_collapsed = function (index) {
  return this.rowsRepr[index].ancestor_collapsed
}

JsondiffViewModel.prototype.is_hidden = function (index) {
    // or hidden_from_diff due to diff context (in future)
    return this.is_ancestor_collapsed(index)
}

JsondiffViewModel.prototype.is_tree_unequal = function (index) {
  return this.rowsRepr[index].tree_unequal
}


JsondiffViewModel.prototype.get_node_range = function (index) {
  return get_path_range(index, this._RRLen(index) )
}

JsondiffViewModel.prototype.get_row_cells = function (index) {
  return this.rowsRepr[index].cells
}

JsondiffViewModel.prototype.expand_to_node = function (index) {
  var path = this._RRPath(index)
    const line_matches_path = function (inPath) {
      return ( x => x.linerepr.length>0 && _.isEqual(x.linerepr.path, inPath) )
    }

  var paths_to_update = []
  for (var i = 0; i <= path.length-1; ++i) {
    var ancestor_path = path.slice(0,i)

    // var ancestor_index = this._RRFind( x => x.linerepr.length>0 && _.isEqual(x.linerepr.path, ancestor_path) )
    var ancestor_index = this._RRFind( line_matches_path(ancestor_path) )

    console.assert( ancestor_index !== -1 , "expand to node: ancestor_index!=-1 "+ancestor_index)
    if (this.rowsRepr[ancestor_index].is_collapsed) {
      this.collapse(ancestor_index, false)
      paths_to_update.push(ancestor_index)
    }
  }

  LOG("expand to node: paths to update", paths_to_update)
  return  paths_to_update[0]
}

JsondiffViewModel.prototype.set_collapsedtext = function (index, objIndex, toCollapse) {
  var cellIndex = (objIndex*2) + 1
  var celltext = this.rowsRepr[index].cells[cellIndex]
  var replaced_text = celltext

  const re_collapsed = /^ *@.*\.\.\.$/
  const re_number = /^(0|[1-9]\d*)$/

  var cur_row = this.rowsRepr[index]
  var fn = (x => x === "same" ? cur_row.linerepr.path : x)

  // Todo: assuming no multiline when deleted. actual_paths may be null otherwise
  const thepath = fn(cur_row.actual_paths[objIndex])
  const node_key = thepath.at(-1)
  const node_key_isArrayIndex = node_key ? node_key.match(re_number) : null

  if (toCollapse && !celltext.match(re_collapsed) ) {
      if (node_key_isArrayIndex)
        replaced_text = celltext.replace(/^( *)(.*)/,"$1"+"@["+node_key+"] $2"+"...")
      else
        replaced_text = celltext.replace(/^( *)(.*)/,"$1"+"@"+"$2"+"...")
  }
  else if (!toCollapse && celltext.match(re_collapsed) ) {
      if (node_key_isArrayIndex)
        replaced_text = celltext.replace(/^(.*)@\[\d+\] (.*)\.\.\./,"$1"+"$2");
      else
        replaced_text = celltext.replace(/^(.*)@(.*)\.\.\./,"$1"+"$2");
  }

  this.rowsRepr[index].cells[cellIndex] = replaced_text
}

JsondiffViewModel.prototype.collapse = function (index, toCollapse) {
  var range = this.get_node_range(index)
  var startIndex = range[0], endIndex = range[1]

  if (toCollapse === "flip")
    toCollapse = !this.rowsRepr[index].is_collapsed

  this.rowsRepr[startIndex].is_collapsed = toCollapse ? true : false
  this.rowsRepr[endIndex].is_collapsed   = toCollapse ? true : false

  if (toCollapse) {
    for (let i = startIndex+1; i < endIndex; i++) {
      this.rowsRepr[i].ancestor_collapsed = true
    }
  } else {
      let i=startIndex+1
      while (i < endIndex) {
        var node_length = this._RRLen(i)
        // set ancestor_collapsed stated for both start and end for a node that span multiple lines
        // if on a node spanning multiple lines, the end brace occurs at [i+ node_length - 1]
        // Also skip so many rows so that collapse state is not changed, since we are not opening recursively
        this.rowsRepr[i].ancestor_collapsed = false
        if (node_length !== null && node_length > 0) {
          this.rowsRepr[i + node_length -1].ancestor_collapsed = false
          if (this.rowsRepr[i].is_collapsed)
            i += node_length - 1
        }
        i = i + 1
      }
  }

  this.update_collapsedtext(startIndex)
  return startIndex
}

JsondiffViewModel.prototype.recursive_collapse = function (rowIndex, toCollapse) {
  var range = this.get_node_range( rowIndex)
  var startIndex = range[0], endIndex = range[1]

  this.rowsRepr[startIndex].is_collapsed = toCollapse ? true : false // for row with opening brace
  this.rowsRepr[endIndex].is_collapsed   = toCollapse ? true : false // for row with closing brace

  for(var i = startIndex+1; i < endIndex; ++i) {
    var node_length = this._RRLen(i)

    this.rowsRepr[i].ancestor_collapsed = toCollapse
    if (node_length !== null && node_length > 0) {
      this.rowsRepr[i].is_collapsed = toCollapse
      this.rowsRepr[i+node_length-1].is_collapsed = toCollapse
    }
  }

  this.update_collapsedtext(startIndex)
  return startIndex
}

JsondiffViewModel.prototype.prev_diff = function (i) {
  const maxindex = this.rowsRepr.length - 1
  var index = i<=1 ? maxindex : i-1

  var next = this._RRFindLastIndex(is_different, 0, index+1)
  if (next === -1) {
    next = this._RRFindLastIndex(is_different, index)
  }
  return next
}

JsondiffViewModel.prototype.next_diff = function (i) {
  const maxindex = this.rowsRepr.length - 1
  var index = i>=maxindex ? 1 : i+1

  var next = this._RRFind(is_different, index)
  if (next === -1) {
    next = this._RRFind(is_different, 1)
  }

  return next
}

JsondiffViewModel.prototype.prev_row = function(rowIndex) {
  if (rowIndex<=1)
    return 1

  for (var i = rowIndex-1; i>1; --i) {
    if (!this.is_hidden(i))
      break
  }

  return i
}

JsondiffViewModel.prototype.next_row = function(rowIndex) {
  const maxlen = this.rowsRepr.length-1
  if (rowIndex>=maxlen)
    return maxlen

  for (var i = rowIndex+1; i<maxlen-1; ++i) {
    if (!this.is_hidden(i))
      break
  }
  return i

}

JsondiffViewModel.prototype.prev_obj = function(rowIndex) {
  var len = this._RRLen(rowIndex)
  var path = this._RRPath(rowIndex)

  if (len > 0) {
    rowIndex = this._RRFind( x => x.linerepr.length>0 && _.isEqual(x.linerepr.path, path ) )
    path = this._RRPath(rowIndex)
  }
  console.assert( rowIndex !== -1, "path for object start not found" )

  var nextind = this._RRFindLastIndex( x => x.linerepr.length!==null && x.linerepr.length>0 && x.linerepr.path.length<=path.length , 0, rowIndex)

  return nextind === -1 ? 1 : nextind
}

JsondiffViewModel.prototype.next_obj = function(rowIndex) {
  var len = this._RRLen(rowIndex)
  var path = this._RRPath(rowIndex)

  if (len > 0)
    rowIndex = this._RRFind( x => x.linerepr.length<0 && _.isEqual(x.linerepr.path, path ) )

  console.assert( rowIndex !== -1, "path for object closing brace not found")

  var nextind = this._RRFind( x => x.linerepr.length!==null && x.linerepr.length>0 , rowIndex+1)

  return nextind === -1 ? this.rowsRepr.length-1 : nextind
}


JsondiffViewModel.prototype.obj_open = function(rowIndex) {
  var parent = this._RRPath(rowIndex).slice(0,-1)
  return this._RRFind( x => _.isEqual(x.linerepr.path, parent) )
}

JsondiffViewModel.prototype.obj_close = function(rowIndex) {
  var parent = this._RRPath(rowIndex).slice(0,-1)
  return this._RRFind( x => x.linerepr.length<0 && _.isEqual(x.linerepr.path, parent) )
}


JsondiffViewModel.prototype.update_collapsedtext = function (index) {
  var range = this.get_node_range(index)
  var start = range[0], end = range[1]
  for (var i = start; i <= end; i++) {
    var node_length = this._RRLen(i)
    if (node_length &&  (node_length>0) ) {
        var toCollapse = this.rowsRepr[i].is_collapsed
        this.set_collapsedtext(i, 0, toCollapse)
        this.set_collapsedtext(i, 1, toCollapse)
    }
  }
}



if (typeof module !== 'undefined' && module.exports) {
  module.exports = JsondiffViewModel;
} else {   // we're in a browser
  window.JsondiffViewModel = JsondiffViewModel;
}

})();




},{"./jsonutils.js":12,"lodash":"lodash"}],12:[function(require,module,exports){
/*

jsondiffgui:
jsondiffgui Copyright (c) 2023 Kaushik Sundararajan
https://github.com/kaushik137/jsondiffgui.git
The MIT License (MIT)

Copyright (c) 2023 Kaushik Sundararajan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

/* jshint esversion: 6                                  */
/* jshint  undef:true                                  */
/* jshint  curly:false                                  */
/* global require:true, module:true */
/* experimental:  [asyncawait, asyncreqawait]  */


(function(){

function assert() { }

const _=require('lodash')

class LineRepr {
  constructor(path, length ) {
    this.path=path; this.length=length; // this.lastkey=lastkey
  }
  // first_term() { }
  // last_term() { }
  str(jo) {
    var path=this.path
    var obj = (path.length > 0 ) ? _.get(jo , path) : jo
    if (obj===undefined) return undefined
    assert ( (typeof(obj)==='object' || this.length===null), "length should be 1 for scalar paths")
    var val=obj
    var key=(path.length>=1) ? path[path.length-1] : ""
    if (typeof(obj)==='object') {
      if (this.length===null)
        val=JSON.stringify(obj)
      else {
        if (this.length>0)
          val=Array.isArray(obj) ? "[" : "{"
        else if (this.length<0)
          { val=Array.isArray(obj) ? "]" : "}" ; key="" }
        else
          assert(true, "this.length shouldn't be 1 for multiline paths")
      }
    }

    var indent="  ".repeat(path.length)
    key=(key==="" || Number.isInteger(Number(key))) ? "" : (key+": ") // Todo: Ideally check if parent is of type array
    return (val==="__deleted__") ? undefined : indent+key+val
  }
}

const is_key_integer = function (path) {
  const re_number = /^(0|[1-9]\d*)$/

  const node_key = path.at(-1)
  return node_key ? node_key.match(re_number) : null
}

function lodash_get(obj, path) {
  return path.length === 0 ? obj : _.get(obj, path)
}

const isPathSpecMultiline = function (jo, path) {
  "use strict";
  var multiline=0
  const toCompact = 0 // Compact feature to turn on if needed
  var obj = (path.length > 0 ) ? _.get(jo ,path) : jo
  if (typeof(obj)==='object') {
    if (!_.isEmpty(obj)) {
      multiline=1
      if (toCompact>=1 && Object.values(obj).every((x) => typeof(x)!=='object') )
        multiline=0
    }
  }
  return multiline
}

const get_linerepr_for_node = function (jo, node_path) {
  "use strict";
  var length=isPathSpecMultiline(jo, node_path) ? 1 : null
  var d={ path: node_path, length: length }

  return d
}

const next_key = function (inObj, par, inKey=null) {
    var obj = (par.length > 0 ) ? _.get(inObj ,par) : inObj

    var outKey=null
    if (typeof(obj)==='object') {
        var arr=Object.keys(obj)
        if (arr.length===0)
            outKey=null
        else if (inKey===null)
            outKey=arr[0]
        else {
            var i=arr.indexOf(String(inKey))
            assert( i>=0, `next_key: par=${par} inKey=${inKey} is invalid path` )
            outKey= (i>=0 && i<arr.length-1) ? arr[i+1] : null
        }
    }

    return outKey
}

const next_linerepr = function (inObj, line) {
  "use strict";
  if (line===null)
    return get_linerepr_for_node(inObj, [])

  var path=line.path, nLine=null
  if (line.length===null && path.length>0) {
      let nKey=next_key(inObj, path.slice(0,-1), path[path.length-1])
      path.pop()
      if (nKey)
          nLine=get_linerepr_for_node(inObj, path.concat([nKey]))
      else
          nLine={ path: path, length: -1 }
  } else {
    // assert( Object.keys(obj).length>0, "Fatal Error: when line.length!=null object can't be empty. Must have got atleast one key here")
    if (line.length>0) { // opening a brace for an object
      let nKey=next_key(inObj, path, null)
      assert( nKey, "Fatal Error: Must have got a key here")
      path.push(nKey)
      nLine=get_linerepr_for_node(inObj, path)
    } else { // line.length<0  -- closing a brace for some path
      if (path.length>0)
      {
        var nKey=next_key(inObj, path.slice(0,-1), path[path.length-1])
        path.pop()
        if (nKey)
            nLine=get_linerepr_for_node(inObj, path.concat([nKey]))
        else
            nLine={ path: path, length: -1 }
      }
    }
  }

  return nLine
}

const get_diffrepr_for_line = function (left, right, linerepr, par_row) {
    var lobj = (linerepr.path.length > 0 ) ? _.get(left,  linerepr.path) : left
    var robj = (linerepr.path.length > 0 ) ? _.get(right, linerepr.path) : right
    // ToAssert lobj && robj  !== undefined
    // Todo : why? we shouldnt force deleted paths to be single line always.
    if (lobj===undefined || lobj==="__deleted__" || robj===undefined || robj==="__deleted__" )
      linerepr.length=null

    var l=new LineRepr(linerepr.path, linerepr.length ).str(left)
    var r=new LineRepr(linerepr.path, linerepr.length ).str(right)

    // Todo: Handle replace of different object types
    var opcodes=[ "equal", "equal" ]
    assert( (l!==undefined || r!==undefined) , `FatalError: For path ${linerepr.path}, both left and right paths are missing`)
    if (l===undefined || l==="__deleted__") {
      opcodes=[ "empty", "insert" ]
      l=""
    }
    if (r===undefined || r==="__deleted__" ) {
      opcodes=[ "delete", "empty" ]
      r=""
    }

    if (l!=="" && r!=="" && l!==r)
      opcodes=[ "replace", "replace" ]

    var tree_unequal=null
    if (opcodes[0] === 'equal' && opcodes[1] === 'equal' && linerepr.length!==null && linerepr.length>=1) {
      // At the start of a vector field
      tree_unequal = _.isEqual( lobj, robj) ? 0 : 1
    }

    var actual_paths = [ "same", "same" ]
    actual_paths[0] = (lobj === "__deleted__") ? null : get_actual_paths(left, 0, linerepr, par_row)
    actual_paths[1] = (robj === "__deleted__") ? null : get_actual_paths(right, 1, linerepr, par_row)

    return { l : l, r: r, opcodes : opcodes, tree_unequal : tree_unequal, actual_paths: actual_paths }
}

const get_path_range = function (lineIndex, len) {
  "use strict";
  if (len === null)
    return [ lineIndex, lineIndex]

  var offset = (len > 0) ? len-1 : len+1
  var startIndex, endIndex

  if (offset > 0) {
    // An object opening brace
    startIndex = lineIndex
    endIndex = lineIndex + offset
  } else {
    // An object closing brace
    endIndex = lineIndex
    startIndex = lineIndex + offset
  }

  return [ startIndex, endIndex ]
}

const get_path_length = function (Rows, path_index) {
  "use strict";
  var len = null
  var linerepr = Rows[path_index].linerepr

  if (linerepr.length !== null) {
    var areNegatives = function (x,y) { return (y*x < 0) ? true : false }
    var matchForCurRowPath = function (x) {
      return _.isEqual(x.linerepr.path,linerepr.path) && areNegatives(x.linerepr.length, linerepr.length)
    }

    var matchIndex = 1 + Rows.slice(1).findIndex(x => matchForCurRowPath(x) )
    if (linerepr.length > 0)
      len = matchIndex - path_index + 1
    else {
      len = path_index - matchIndex + 1
      len = (linerepr.length > 0) ? len : -len
    }
  }

  return len

}

const get_equal_sections = function (Rows, ctxtSize) {
  var isequal = (row => row.opcodes[0]==='equal' && row.opcodes[1]==='equal')
  var next_row = ( (start,fn) => { var i=Rows.slice(start).findIndex(fn); return (i===-1||start===null) ? null : start + i } )
  var is_notequal = (row => !isequal(row) )

  var r1=0, r2=0
  var equal_sections=[]
  var minSize=ctxtSize*2

  do
  {
    r1 = next_row(r2, isequal)
    r2 = next_row( is_notequal)

    if (r2===null || r2 - r1 >= minSize)
      equal_sections.push( [ r1, r2 ] )

  }
  while (r1!==null && r2!==null);

  return equal_sections
}

const get_actual_paths = function (left, a_path_ind, linerepr, par_row) {
  var ret_path = "same"
  if (par_row)
  {
    var parent_a_p = par_row.actual_paths[a_path_ind]
    if (parent_a_p === "same")
      parent_a_p = par_row.linerepr.path

    ret_path = JSON.parse(JSON.stringify(parent_a_p))
    ret_path.push(get_actual_key(left, linerepr.path) )
  }

  return ret_path
}

function get_actual_key(obj, path) {
  const del = "__deleted__"

  if (path.length === 0 ) return null
  var actual_key = path.at(-1)

  if (is_key_integer(path)) {
    var arr = lodash_get(obj, path.slice(0,-1))
    const index = Number(path.at(-1))
    var del_count = arr.slice(0,index).reduce( ((acc, val) => { return (val === del) ? ++acc : acc; } ), 0)
    const real_index = index - del_count
    actual_key = String(real_index)
  }

  return actual_key
}

const get_parent_index = function (rows, path) {
  if (path.length === 0) return null

  const parent = path.slice(0,-1)
  const fn = ( x => x.linerepr.length>0 && _.isEqual(x.linerepr.path, parent) )
  const ind = rows.findLastIndex(fn)
  console.assert( ind !== -1, "Parent node path not found")
  return ind
}


const generate_diff = function (left,right, toCompact=0) { // jshint unused:false
  var linerepr=null
  var null_row={ linerepr: {path: null, length: null}, cells: [ 0, "", 0, "" ], opcodes: [ "equal", "equal" ] , actual_paths: ["same", "same"], is_collapsed : false, ancestor_collapsed : false }
  var Rows=[ null_row ]
  var prevline = [0,0]

  while (linerepr=next_linerepr(left, linerepr)) {
    var par_ind = get_parent_index(Rows, linerepr.path)
    var difrepr = get_diffrepr_for_line(left, right, linerepr, par_ind ? Rows[par_ind] : null)
    var row=JSON.parse(JSON.stringify(null_row))
    row.linerepr=linerepr
    row.cells[0]=prevline[0]+1
    row.cells[1]=difrepr.l
    row.cells[2]=prevline[1]+1
    row.cells[3]=difrepr.r
    if (row.cells[1])
      prevline[0] = row.cells[0]
    if (row.cells[3])
      prevline[1] = row.cells[2]
    row.opcodes[0]=difrepr.opcodes[0]
    row.opcodes[1]=difrepr.opcodes[1]
    row.actual_paths[0] = difrepr.actual_paths[0]
    row.actual_paths[1] = difrepr.actual_paths[1]
    row.tree_unequal=difrepr.tree_unequal
    Rows.push(JSON.parse(JSON.stringify(row)))
  }

  for (var i = 1; i < Rows.length; ++i) {
    Rows[i].linerepr.length = get_path_length( Rows, i )
  }

  return Rows
}

if (typeof module !== 'undefined' && module.exports) {
  module.exports={
  next_key,
  LineRepr,
  get_linerepr_for_node,
  next_linerepr,
  get_path_range,
  get_equal_sections,
  generate_diff,
  get_diffrepr_for_line
  };
} else {   // we're in a browser
  window.get_path_range = get_path_range;
  window.generate_diff = generate_diff;
}

})();


},{"lodash":"lodash"}],13:[function(require,module,exports){
'use strict';
// For more information about browser field, check out the browser field at https://github.com/substack/browserify-handbook#browser-field.

var styleElementsInsertedAtTop = [];

var insertStyleElement = function(styleElement, options) {
    var head = document.head || document.getElementsByTagName('head')[0];
    var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];

    options = options || {};
    options.insertAt = options.insertAt || 'bottom';

    if (options.insertAt === 'top') {
        if (!lastStyleElementInsertedAtTop) {
            head.insertBefore(styleElement, head.firstChild);
        } else if (lastStyleElementInsertedAtTop.nextSibling) {
            head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
        } else {
            head.appendChild(styleElement);
        }
        styleElementsInsertedAtTop.push(styleElement);
    } else if (options.insertAt === 'bottom') {
        head.appendChild(styleElement);
    } else {
        throw new Error('Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.');
    }
};

module.exports = {
    // Create a <link> tag with optional data attributes
    createLink: function(href, attributes) {
        var head = document.head || document.getElementsByTagName('head')[0];
        var link = document.createElement('link');

        link.href = href;
        link.rel = 'stylesheet';

        for (var key in attributes) {
            if ( ! attributes.hasOwnProperty(key)) {
                continue;
            }
            var value = attributes[key];
            link.setAttribute('data-' + key, value);
        }

        head.appendChild(link);
    },
    // Create a <style> tag with optional data attributes
    createStyle: function(cssText, attributes, extraOptions) {
        extraOptions = extraOptions || {};

        var style = document.createElement('style');
        style.type = 'text/css';

        for (var key in attributes) {
            if ( ! attributes.hasOwnProperty(key)) {
                continue;
            }
            var value = attributes[key];
            style.setAttribute('data-' + key, value);
        }

        if (style.sheet) { // for jsdom and IE9+
            style.innerHTML = cssText;
            style.sheet.cssText = cssText;
            insertStyleElement(style, { insertAt: extraOptions.insertAt });
        } else if (style.styleSheet) { // for IE8 and below
            insertStyleElement(style, { insertAt: extraOptions.insertAt });
            style.styleSheet.cssText = cssText;
        } else { // for Chrome, Firefox, and Safari
            style.appendChild(document.createTextNode(cssText));
            insertStyleElement(style, { insertAt: extraOptions.insertAt });
        }
    }
};

},{}],14:[function(require,module,exports){
module.exports = require('./lib/difflib');

},{"./lib/difflib":15}],15:[function(require,module,exports){
// Generated by CoffeeScript 2.6.1
(function() {
  /*
  Module difflib -- helpers for computing deltas between objects.

  Function getCloseMatches(word, possibilities, n=3, cutoff=0.6):
      Use SequenceMatcher to return list of the best "good enough" matches.

  Function contextDiff(a, b):
      For two lists of strings, return a delta in context diff format.

  Function ndiff(a, b):
      Return a delta: the difference between `a` and `b` (lists of strings).

  Function restore(delta, which):
      Return one of the two sequences that generated an ndiff delta.

  Function unifiedDiff(a, b):
      For two lists of strings, return a delta in unified diff format.

  Class SequenceMatcher:
      A flexible class for comparing pairs of sequences of any type.

  Class Differ:
      For producing human-readable deltas from sequences of lines of text.
  */
  var Differ, Heap, IS_CHARACTER_JUNK, IS_LINE_JUNK, SequenceMatcher, _any, _arrayCmp, _calculateRatio, _countLeading, _formatRangeContext, _formatRangeUnified, _has, assert, contextDiff, floor, getCloseMatches, max, min, ndiff, restore, unifiedDiff,
    indexOf = [].indexOf;

  // Requires
  ({floor, max, min} = Math);

  Heap = require('heap');

  assert = require('assert');

  // Helper functions
  _calculateRatio = function(matches, length) {
    if (length) {
      return 2.0 * matches / length;
    } else {
      return 1.0;
    }
  };

  _arrayCmp = function(a, b) {
    var i, l, la, lb, ref;
    [la, lb] = [a.length, b.length];
    for (i = l = 0, ref = min(la, lb); (0 <= ref ? l < ref : l > ref); i = 0 <= ref ? ++l : --l) {
      if (a[i] < b[i]) {
        return -1;
      }
      if (a[i] > b[i]) {
        return 1;
      }
    }
    return la - lb;
  };

  _has = function(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
  };

  _any = function(items) {
    var item, l, len;
    for (l = 0, len = items.length; l < len; l++) {
      item = items[l];
      if (item) {
        return true;
      }
    }
    return false;
  };

  SequenceMatcher = class SequenceMatcher {
    /*
    SequenceMatcher is a flexible class for comparing pairs of sequences of
    any type, so long as the sequence elements are hashable.  The basic
    algorithm predates, and is a little fancier than, an algorithm
    published in the late 1980's by Ratcliff and Obershelp under the
    hyperbolic name "gestalt pattern matching".  The basic idea is to find
    the longest contiguous matching subsequence that contains no "junk"
    elements (R-O doesn't address junk).  The same idea is then applied
    recursively to the pieces of the sequences to the left and to the right
    of the matching subsequence.  This does not yield minimal edit
    sequences, but does tend to yield matches that "look right" to people.

    SequenceMatcher tries to compute a "human-friendly diff" between two
    sequences.  Unlike e.g. UNIX(tm) diff, the fundamental notion is the
    longest *contiguous* & junk-free matching subsequence.  That's what
    catches peoples' eyes.  The Windows(tm) windiff has another interesting
    notion, pairing up elements that appear uniquely in each sequence.
    That, and the method here, appear to yield more intuitive difference
    reports than does diff.  This method appears to be the least vulnerable
    to synching up on blocks of "junk lines", though (like blank lines in
    ordinary text files, or maybe "<P>" lines in HTML files).  That may be
    because this is the only method of the 3 that has a *concept* of
    "junk" <wink>.

    Example, comparing two strings, and considering blanks to be "junk":

    >>> isjunk = (c) -> c is ' '
    >>> s = new SequenceMatcher(isjunk,
                                'private Thread currentThread;',
                                'private volatile Thread currentThread;')

    .ratio() returns a float in [0, 1], measuring the "similarity" of the
    sequences.  As a rule of thumb, a .ratio() value over 0.6 means the
    sequences are close matches:

    >>> s.ratio().toPrecision(3)
    '0.866'

    If you're only interested in where the sequences match,
    .getMatchingBlocks() is handy:

    >>> for [a, b, size] in s.getMatchingBlocks()
    ...   console.log("a[#{a}] and b[#{b}] match for #{size} elements");
    a[0] and b[0] match for 8 elements
    a[8] and b[17] match for 21 elements
    a[29] and b[38] match for 0 elements

    Note that the last tuple returned by .get_matching_blocks() is always a
    dummy, (len(a), len(b), 0), and this is the only case in which the last
    tuple element (number of elements matched) is 0.

    If you want to know how to change the first sequence into the second,
    use .get_opcodes():

    >>> for [op, a1, a2, b1, b2] in s.getOpcodes()
    ...   console.log "#{op} a[#{a1}:#{a2}] b[#{b1}:#{b2}]"
    equal a[0:8] b[0:8]
    insert a[8:8] b[8:17]
    equal a[8:29] b[17:38]

    See the Differ class for a fancy human-friendly file differencer, which
    uses SequenceMatcher both to compare sequences of lines, and to compare
    sequences of characters within similar (near-matching) lines.

    See also function getCloseMatches() in this module, which shows how
    simple code building on SequenceMatcher can be used to do useful work.

    Timing:  Basic R-O is cubic time worst case and quadratic time expected
    case.  SequenceMatcher is quadratic time for the worst case and has
    expected-case behavior dependent in a complicated way on how many
    elements the sequences have in common; best case time is linear.

    Methods:

    constructor(isjunk=null, a='', b='')
        Construct a SequenceMatcher.

    setSeqs(a, b)
        Set the two sequences to be compared.

    setSeq1(a)
        Set the first sequence to be compared.

    setSeq2(b)
        Set the second sequence to be compared.

    findLongestMatch(alo, ahi, blo, bhi)
        Find longest matching block in a[alo:ahi] and b[blo:bhi].

    getMatchingBlocks()
        Return list of triples describing matching subsequences.

    getOpcodes()
        Return list of 5-tuples describing how to turn a into b.

    ratio()
        Return a measure of the sequences' similarity (float in [0,1]).

    quickRatio()
        Return an upper bound on .ratio() relatively quickly.

    realQuickRatio()
        Return an upper bound on ratio() very quickly.
    */
    constructor(isjunk1, a = '', b = '', autojunk = true) {
      this.isjunk = isjunk1;
      this.autojunk = autojunk;
      /*
      Construct a SequenceMatcher.

      Optional arg isjunk is null (the default), or a one-argument
      function that takes a sequence element and returns true iff the
      element is junk.  Null is equivalent to passing "(x) -> 0", i.e.
      no elements are considered to be junk.  For example, pass
          (x) -> x in ' \t'
      if you're comparing lines as sequences of characters, and don't
      want to synch up on blanks or hard tabs.

      Optional arg a is the first of two sequences to be compared.  By
      default, an empty string.  The elements of a must be hashable.  See
      also .setSeqs() and .setSeq1().

      Optional arg b is the second of two sequences to be compared.  By
      default, an empty string.  The elements of b must be hashable. See
      also .setSeqs() and .setSeq2().

      Optional arg autojunk should be set to false to disable the
      "automatic junk heuristic" that treats popular elements as junk
      (see module documentation for more information).
      */
      // Members:
      // a
      //      first sequence
      // b
      //      second sequence; differences are computed as "what do
      //      we need to do to 'a' to change it into 'b'?"
      // b2j
      //      for x in b, b2j[x] is a list of the indices (into b)
      //      at which x appears; junk elements do not appear
      // fullbcount
      //      for x in b, fullbcount[x] == the number of times x
      //      appears in b; only materialized if really needed (used
      //      only for computing quickRatio())
      // matchingBlocks
      //      a list of [i, j, k] triples, where a[i...i+k] == b[j...j+k];
      //      ascending & non-overlapping in i and in j; terminated by
      //      a dummy (len(a), len(b), 0) sentinel
      // opcodes
      //      a list of [tag, i1, i2, j1, j2] tuples, where tag is
      //      one of
      //          'replace'   a[i1...i2] should be replaced by b[j1...j2]
      //          'delete'    a[i1...i2] should be deleted
      //          'insert'    b[j1...j2] should be inserted
      //          'equal'     a[i1...i2] == b[j1...j2]
      // isjunk
      //      a user-supplied function taking a sequence element and
      //      returning true iff the element is "junk" -- this has
      //      subtle but helpful effects on the algorithm, which I'll
      //      get around to writing up someday <0.9 wink>.
      //      DON'T USE!  Only __chainB uses this.  Use isbjunk.
      // isbjunk
      //      for x in b, isbjunk(x) == isjunk(x) but much faster;
      //      DOES NOT WORK for x in a!
      // isbpopular
      //      for x in b, isbpopular(x) is true iff b is reasonably long
      //      (at least 200 elements) and x accounts for more than 1 + 1% of
      //      its elements (when autojunk is enabled).
      //      DOES NOT WORK for x in a!
      this.a = this.b = null;
      this.setSeqs(a, b);
    }

    setSeqs(a, b) {
      /* 
      Set the two sequences to be compared. 

      >>> s = new SequenceMatcher()
      >>> s.setSeqs('abcd', 'bcde')
      >>> s.ratio()
      0.75
      */
      this.setSeq1(a);
      return this.setSeq2(b);
    }

    setSeq1(a) {
      /* 
      Set the first sequence to be compared. 

      The second sequence to be compared is not changed.

      >>> s = new SequenceMatcher(null, 'abcd', 'bcde')
      >>> s.ratio()
      0.75
      >>> s.setSeq1('bcde')
      >>> s.ratio()
      1.0

      SequenceMatcher computes and caches detailed information about the
      second sequence, so if you want to compare one sequence S against
      many sequences, use .setSeq2(S) once and call .setSeq1(x)
      repeatedly for each of the other sequences.

      See also setSeqs() and setSeq2().
      */
      if (a === this.a) {
        return;
      }
      this.a = a;
      return this.matchingBlocks = this.opcodes = null;
    }

    setSeq2(b) {
      /*
      Set the second sequence to be compared. 

      The first sequence to be compared is not changed.

      >>> s = new SequenceMatcher(null, 'abcd', 'bcde')
      >>> s.ratio()
      0.75
      >>> s.setSeq2('abcd')
      >>> s.ratio()
      1.0

      SequenceMatcher computes and caches detailed information about the
      second sequence, so if you want to compare one sequence S against
      many sequences, use .setSeq2(S) once and call .setSeq1(x)
      repeatedly for each of the other sequences.

      See also setSeqs() and setSeq1().
      */
      if (b === this.b) {
        return;
      }
      this.b = b;
      this.matchingBlocks = this.opcodes = null;
      this.fullbcount = null;
      return this._chainB();
    }

    // For each element x in b, set b2j[x] to a list of the indices in
    // b where x appears; the indices are in increasing order; note that
    // the number of times x appears in b is b2j[x].length ...
    // when @isjunk is defined, junk elements don't show up in this
    // map at all, which stops the central findLongestMatch method
    // from starting any matching block at a junk element ...
    // also creates the fast isbjunk function ...
    // b2j also does not contain entries for "popular" elements, meaning
    // elements that account for more than 1 + 1% of the total elements, and
    // when the sequence is reasonably large (>= 200 elements); this can
    // be viewed as an adaptive notion of semi-junk, and yields an enormous
    // speedup when, e.g., comparing program files with hundreds of
    // instances of "return null;" ...
    // note that this is only called when b changes; so for cross-product
    // kinds of matches, it's best to call setSeq2 once, then setSeq1
    // repeatedly
    _chainB() {
      var b, b2j, elt, i, indices, isjunk, junk, l, len, n, ntest, popular;
      // Because isjunk is a user-defined function, and we test
      // for junk a LOT, it's important to minimize the number of calls.
      // Before the tricks described here, __chainB was by far the most
      // time-consuming routine in the whole module!  If anyone sees
      // Jim Roskind, thank him again for profile.py -- I never would
      // have guessed that.
      // The first trick is to build b2j ignoring the possibility
      // of junk.  I.e., we don't call isjunk at all yet.  Throwing
      // out the junk later is much cheaper than building b2j "right"
      // from the start.
      b = this.b;
      this.b2j = b2j = new Map();
      for (i = l = 0, len = b.length; l < len; i = ++l) {
        elt = b[i];
        if (!b2j.has(elt)) {
          b2j.set(elt, []);
        }
        indices = b2j.get(elt);
        indices.push(i);
      }
      // Purge junk elements
      junk = new Map();
      isjunk = this.isjunk;
      if (isjunk) {
        b2j.forEach(function(idxs, elt) {
          if (isjunk(elt)) {
            junk.set(elt, true);
            return b2j.delete(elt);
          }
        });
      }
      // Purge popular elements that are not junk
      popular = new Map();
      n = b.length;
      if (this.autojunk && n >= 200) {
        ntest = floor(n / 100) + 1;
        b2j.forEach(function(idxs, elt) {
          if (idxs.length > ntest) {
            popular.set(elt, true);
            return b2j.delete(elt);
          }
        });
      }
      // Now for x in b, isjunk(x) == x in junk, but the latter is much faster.
      // Sicne the number of *unique* junk elements is probably small, the
      // memory burden of keeping this set alive is likely trivial compared to
      // the size of b2j.
      this.isbjunk = function(b) {
        return junk.has(b);
      };
      return this.isbpopular = function(b) {
        return popular.has(b);
      };
    }

    findLongestMatch(alo, ahi, blo, bhi) {
      var a, b, b2j, besti, bestj, bestsize, i, isbjunk, j, j2len, jlist, k, l, len, m, newj2len, ref, ref1;
      /* 
      Find longest matching block in a[alo...ahi] and b[blo...bhi].  

      If isjunk is not defined:

      Return [i,j,k] such that a[i...i+k] is equal to b[j...j+k], where
          alo <= i <= i+k <= ahi
          blo <= j <= j+k <= bhi
      and for all [i',j',k'] meeting those conditions,
          k >= k'
          i <= i'
          and if i == i', j <= j'

      In other words, of all maximal matching blocks, return one that
      starts earliest in a, and of all those maximal matching blocks that
      start earliest in a, return the one that starts earliest in b.

      >>> isjunk = (x) -> x is ' '
      >>> s = new SequenceMatcher(isjunk, ' abcd', 'abcd abcd')
      >>> s.findLongestMatch(0, 5, 0, 9)
      [1, 0, 4]

      >>> s = new SequenceMatcher(null, 'ab', 'c')
      >>> s.findLongestMatch(0, 2, 0, 1)
      [0, 0, 0]
      */
      // CAUTION:  stripping common prefix or suffix would be incorrect.
      // E.g.,
      //    ab
      //    acab
      // Longest matching block is "ab", but if common prefix is
      // stripped, it's "a" (tied with "b").  UNIX(tm) diff does so
      // strip, so ends up claiming that ab is changed to acab by
      // inserting "ca" in the middle.  That's minimal but unintuitive:
      // "it's obvious" that someone inserted "ac" at the front.
      // Windiff ends up at the same place as diff, but by pairing up
      // the unique 'b's and then matching the first two 'a's.
      [a, b, b2j, isbjunk] = [this.a, this.b, this.b2j, this.isbjunk];
      [besti, bestj, bestsize] = [alo, blo, 0];
      // find longest junk-free match
      // during an iteration of the loop, j2len[j] = length of longest
      // junk-free match ending with a[i-1] and b[j]
      j2len = {};
      for (i = l = ref = alo, ref1 = ahi; (ref <= ref1 ? l < ref1 : l > ref1); i = ref <= ref1 ? ++l : --l) {
        // look at all instances of a[i] in b; note that because
        // b2j has no junk keys, the loop is skipped if a[i] is junk
        newj2len = {};
        jlist = [];
        if (b2j.has(a[i])) {
          jlist = b2j.get(a[i]);
        }
        for (m = 0, len = jlist.length; m < len; m++) {
          j = jlist[m];
          if (j < blo) {
            // a[i] matches b[j]
            continue;
          }
          if (j >= bhi) {
            break;
          }
          k = newj2len[j] = (j2len[j - 1] || 0) + 1;
          if (k > bestsize) {
            [besti, bestj, bestsize] = [i - k + 1, j - k + 1, k];
          }
        }
        j2len = newj2len;
      }
      // Extend the best by non-junk elements on each end.  In particular,
      // "popular" non-junk elements aren't in b2j, which greatly speeds
      // the inner loop above, but also means "the best" match so far
      // doesn't contain any junk *or* popular non-junk elements.
      while (besti > alo && bestj > blo && !isbjunk(b[bestj - 1]) && a[besti - 1] === b[bestj - 1]) {
        [besti, bestj, bestsize] = [besti - 1, bestj - 1, bestsize + 1];
      }
      while (besti + bestsize < ahi && bestj + bestsize < bhi && !isbjunk(b[bestj + bestsize]) && a[besti + bestsize] === b[bestj + bestsize]) {
        bestsize++;
      }
      // Now that we have a wholly interesting match (albeit possibly
      // empty!), we may as well suck up the matching junk on each
      // side of it too.  Can't think of a good reason not to, and it
      // saves post-processing the (possibly considerable) expense of
      // figuring out what to do with it.  In the case of an empty
      // interesting match, this is clearly the right thing to do,
      // because no other kind of match is possible in the regions.
      while (besti > alo && bestj > blo && isbjunk(b[bestj - 1]) && a[besti - 1] === b[bestj - 1]) {
        [besti, bestj, bestsize] = [besti - 1, bestj - 1, bestsize + 1];
      }
      while (besti + bestsize < ahi && bestj + bestsize < bhi && isbjunk(b[bestj + bestsize]) && a[besti + bestsize] === b[bestj + bestsize]) {
        bestsize++;
      }
      return [besti, bestj, bestsize];
    }

    getMatchingBlocks() {
      var ahi, alo, bhi, blo, i, i1, i2, j, j1, j2, k, k1, k2, l, la, lb, len, matchingBlocks, nonAdjacent, queue, x;
      if (this.matchingBlocks) {
        /*
        Return list of triples describing matching subsequences.

        Each triple is of the form [i, j, n], and means that
        a[i...i+n] == b[j...j+n].  The triples are monotonically increasing in
        i and in j.  it's also guaranteed that if
        [i, j, n] and [i', j', n'] are adjacent triples in the list, and
        the second is not the last triple in the list, then i+n != i' or
        j+n != j'.  IOW, adjacent triples never describe adjacent equal
        blocks.

        The last triple is a dummy, [a.length, b.length, 0], and is the only
        triple with n==0.

        >>> s = new SequenceMatcher(null, 'abxcd', 'abcd')
        >>> s.getMatchingBlocks()
        [[0, 0, 2], [3, 2, 2], [5, 4, 0]]

        */
        return this.matchingBlocks;
      }
      [la, lb] = [this.a.length, this.b.length];
      // This is most naturally expressed as a recursive algorithm, but
      // at least one user bumped into extreme use cases that exceeded
      // the recursion limit on their box.  So, now we maintain a list
      // ('queue`) of blocks we still need to look at, and append partial
      // results to `matching_blocks` in a loop; the matches are sorted
      // at the end.
      queue = [[0, la, 0, lb]];
      matchingBlocks = [];
      while (queue.length) {
        [alo, ahi, blo, bhi] = queue.pop();
        [i, j, k] = x = this.findLongestMatch(alo, ahi, blo, bhi);
        // a[alo...i] vs b[blo...j] unknown
        // a[i...i+k] same as b[j...j+k]
        // a[i+k...ahi] vs b[j+k...bhi] unknown
        if (k) {
          matchingBlocks.push(x);
          if (alo < i && blo < j) {
            queue.push([alo, i, blo, j]);
          }
          if (i + k < ahi && j + k < bhi) {
            queue.push([i + k, ahi, j + k, bhi]);
          }
        }
      }
      matchingBlocks.sort(_arrayCmp);
      // It's possible that we have adjacent equal blocks in the
      // matching_blocks list now. 
      i1 = j1 = k1 = 0;
      nonAdjacent = [];
      for (l = 0, len = matchingBlocks.length; l < len; l++) {
        [i2, j2, k2] = matchingBlocks[l];
        // Is this block adjacent to i1, j1, k1?
        if (i1 + k1 === i2 && j1 + k1 === j2) {
          // Yes, so collapse them -- this just increases the length of
          // the first block by the length of the second, and the first
          // block so lengthened remains the block to compare against.
          k1 += k2;
        } else {
          // Not adjacent.  Remember the first block (k1==0 means it's
          // the dummy we started with), and make the second block the
          // new block to compare against.
          if (k1) {
            nonAdjacent.push([i1, j1, k1]);
          }
          [i1, j1, k1] = [i2, j2, k2];
        }
      }
      if (k1) {
        nonAdjacent.push([i1, j1, k1]);
      }
      nonAdjacent.push([la, lb, 0]);
      return this.matchingBlocks = nonAdjacent;
    }

    getOpcodes() {
      var ai, answer, bj, i, j, l, len, ref, size, tag;
      if (this.opcodes) {
        /* 
        Return list of 5-tuples describing how to turn a into b.

        Each tuple is of the form [tag, i1, i2, j1, j2].  The first tuple
        has i1 == j1 == 0, and remaining tuples have i1 == the i2 from the
        tuple preceding it, and likewise for j1 == the previous j2.

        The tags are strings, with these meanings:

        'replace':  a[i1...i2] should be replaced by b[j1...j2]
        'delete':   a[i1...i2] should be deleted.
                    Note that j1==j2 in this case.
        'insert':   b[j1...j2] should be inserted at a[i1...i1].
                    Note that i1==i2 in this case.
        'equal':    a[i1...i2] == b[j1...j2]

        >>> s = new SequenceMatcher(null, 'qabxcd', 'abycdf')
        >>> s.getOpcodes()
        [ [ 'delete'  , 0 , 1 , 0 , 0 ] ,
          [ 'equal'   , 1 , 3 , 0 , 2 ] ,
          [ 'replace' , 3 , 4 , 2 , 3 ] ,
          [ 'equal'   , 4 , 6 , 3 , 5 ] ,
          [ 'insert'  , 6 , 6 , 5 , 6 ] ]
        */
        return this.opcodes;
      }
      i = j = 0;
      this.opcodes = answer = [];
      ref = this.getMatchingBlocks();
      for (l = 0, len = ref.length; l < len; l++) {
        [ai, bj, size] = ref[l];
        // invariant:  we've pumped out correct diffs to change
        // a[0...i] into b[0...j], and the next matching block is
        // a[ai...ai+size] == b[bj...bj+size].  So we need to pump
        // out a diff to change a[i:ai] into b[j...bj], pump out
        // the matching block, and move [i,j] beyond the match
        tag = '';
        if (i < ai && j < bj) {
          tag = 'replace';
        } else if (i < ai) {
          tag = 'delete';
        } else if (j < bj) {
          tag = 'insert';
        }
        if (tag) {
          answer.push([tag, i, ai, j, bj]);
        }
        [i, j] = [ai + size, bj + size];
        // the list of matching blocks is terminated by a
        // sentinel with size 0
        if (size) {
          answer.push(['equal', ai, i, bj, j]);
        }
      }
      return answer;
    }

    getGroupedOpcodes(n = 3) {
      /* 
      Isolate change clusters by eliminating ranges with no changes.

      Return a list groups with upto n lines of context.
      Each group is in the same format as returned by get_opcodes().

      >>> a = [1...40].map(String)
      >>> b = a.slice()
      >>> b[8...8] = 'i'
      >>> b[20] += 'x'
      >>> b[23...28] = []
      >>> b[30] += 'y'
      >>> s = new SequenceMatcher(null, a, b)
      >>> s.getGroupedOpcodes()
      [ [ [ 'equal'  , 5 , 8  , 5 , 8 ],
          [ 'insert' , 8 , 8  , 8 , 9 ],
          [ 'equal'  , 8 , 11 , 9 , 12 ] ],
        [ [ 'equal'   , 16 , 19 , 17 , 20 ],
          [ 'replace' , 19 , 20 , 20 , 21 ],
          [ 'equal'   , 20 , 22 , 21 , 23 ],
          [ 'delete'  , 22 , 27 , 23 , 23 ],
          [ 'equal'   , 27 , 30 , 23 , 26 ] ],
        [ [ 'equal'   , 31 , 34 , 27 , 30 ],
          [ 'replace' , 34 , 35 , 30 , 31 ],
          [ 'equal'   , 35 , 38 , 31 , 34 ] ] ]
      */
      var codes, group, groups, i1, i2, j1, j2, l, len, nn, tag;
      codes = this.getOpcodes();
      if (!codes.length) {
        codes = [['equal', 0, 1, 0, 1]];
      }
      // Fixup leading and trailing groups if they show no changes.
      if (codes[0][0] === 'equal') {
        [tag, i1, i2, j1, j2] = codes[0];
        codes[0] = [tag, max(i1, i2 - n), i2, max(j1, j2 - n), j2];
      }
      if (codes[codes.length - 1][0] === 'equal') {
        [tag, i1, i2, j1, j2] = codes[codes.length - 1];
        codes[codes.length - 1] = [tag, i1, min(i2, i1 + n), j1, min(j2, j1 + n)];
      }
      nn = n + n;
      groups = [];
      group = [];
      for (l = 0, len = codes.length; l < len; l++) {
        [tag, i1, i2, j1, j2] = codes[l];
        // End the current group and start a new one whenever
        // there is a large range with no changes.
        if (tag === 'equal' && i2 - i1 > nn) {
          group.push([tag, i1, min(i2, i1 + n), j1, min(j2, j1 + n)]);
          groups.push(group);
          group = [];
          [i1, j1] = [max(i1, i2 - n), max(j1, j2 - n)];
        }
        group.push([tag, i1, i2, j1, j2]);
      }
      if (group.length && !(group.length === 1 && group[0][0] === 'equal')) {
        groups.push(group);
      }
      return groups;
    }

    ratio() {
      /*
      Return a measure of the sequences' similarity (float in [0,1]).

      Where T is the total number of elements in both sequences, and
      M is the number of matches, this is 2.0*M / T.
      Note that this is 1 if the sequences are identical, and 0 if
      they have nothing in common.

      .ratio() is expensive to compute if you haven't already computed
      .getMatchingBlocks() or .getOpcodes(), in which case you may
      want to try .quickRatio() or .realQuickRatio() first to get an
      upper bound.

      >>> s = new SequenceMatcher(null, 'abcd', 'bcde')
      >>> s.ratio()
      0.75
      >>> s.quickRatio()
      0.75
      >>> s.realQuickRatio()
      1.0
      */
      var l, len, match, matches, ref;
      matches = 0;
      ref = this.getMatchingBlocks();
      for (l = 0, len = ref.length; l < len; l++) {
        match = ref[l];
        matches += match[2];
      }
      return _calculateRatio(matches, this.a.length + this.b.length);
    }

    quickRatio() {
      var avail, elt, fullbcount, l, len, len1, m, matches, numb, ref, ref1;
      /*
      Return an upper bound on ratio() relatively quickly.

      This isn't defined beyond that it is an upper bound on .ratio(), and
      is faster to compute.
      */
      // viewing a and b as multisets, set matches to the cardinality
      // of their intersection; this counts the number of matches
      // without regard to order, so is clearly an upper bound
      if (!this.fullbcount) {
        this.fullbcount = fullbcount = {};
        ref = this.b;
        for (l = 0, len = ref.length; l < len; l++) {
          elt = ref[l];
          fullbcount[elt] = (fullbcount[elt] || 0) + 1;
        }
      }
      fullbcount = this.fullbcount;
      // avail[x] is the number of times x appears in 'b' less the
      // number of times we've seen it in 'a' so far ... kinda
      avail = {};
      matches = 0;
      ref1 = this.a;
      for (m = 0, len1 = ref1.length; m < len1; m++) {
        elt = ref1[m];
        if (_has(avail, elt)) {
          numb = avail[elt];
        } else {
          numb = fullbcount[elt] || 0;
        }
        avail[elt] = numb - 1;
        if (numb > 0) {
          matches++;
        }
      }
      return _calculateRatio(matches, this.a.length + this.b.length);
    }

    realQuickRatio() {
      /*
      Return an upper bound on ratio() very quickly.

      This isn't defined beyond that it is an upper bound on .ratio(), and
      is faster to compute than either .ratio() or .quickRatio().
      */
      var la, lb;
      [la, lb] = [this.a.length, this.b.length];
      // can't have more matches than the number of elements in the
      // shorter sequence
      return _calculateRatio(min(la, lb), la + lb);
    }

  };

  getCloseMatches = function(word, possibilities, n = 3, cutoff = 0.6) {
    var l, len, len1, m, result, results, s, score, x;
    /*
    Use SequenceMatcher to return list of the best "good enough" matches.

    word is a sequence for which close matches are desired (typically a
    string).

    possibilities is a list of sequences against which to match word
    (typically a list of strings).

    Optional arg n (default 3) is the maximum number of close matches to
    return.  n must be > 0.

    Optional arg cutoff (default 0.6) is a float in [0, 1].  Possibilities
    that don't score at least that similar to word are ignored.

    The best (no more than n) matches among the possibilities are returned
    in a list, sorted by similarity score, most similar first.

    >>> getCloseMatches('appel', ['ape', 'apple', 'peach', 'puppy'])
    ['apple', 'ape']
    >>> KEYWORDS = require('coffee-script').RESERVED
    >>> getCloseMatches('wheel', KEYWORDS)
    ['when', 'while']
    >>> getCloseMatches('accost', KEYWORDS)
    ['const']
    */
    if (!(n > 0)) {
      throw new Error(`n must be > 0: (${n})`);
    }
    if (!((0.0 <= cutoff && cutoff <= 1.0))) {
      throw new Error(`cutoff must be in [0.0, 1.0]: (${cutoff})`);
    }
    result = [];
    s = new SequenceMatcher();
    s.setSeq2(word);
    for (l = 0, len = possibilities.length; l < len; l++) {
      x = possibilities[l];
      s.setSeq1(x);
      if (s.realQuickRatio() >= cutoff && s.quickRatio() >= cutoff && s.ratio() >= cutoff) {
        result.push([s.ratio(), x]);
      }
    }
    // Move the best scorers to head of list
    result = Heap.nlargest(result, n, _arrayCmp);
    results = [];
    for (m = 0, len1 = result.length; m < len1; m++) {
      [score, x] = result[m];
      // Strip scores for the best n matches
      results.push(x);
    }
    return results;
  };

  _countLeading = function(line, ch) {
    /*
    Return number of `ch` characters at the start of `line`.

    >>> _countLeading('   abc', ' ')
    3
    */
    var i, n;
    [i, n] = [0, line.length];
    while (i < n && line[i] === ch) {
      i++;
    }
    return i;
  };

  Differ = class Differ {
    /*
    Differ is a class for comparing sequences of lines of text, and
    producing human-readable differences or deltas.  Differ uses
    SequenceMatcher both to compare sequences of lines, and to compare
    sequences of characters within similar (near-matching) lines.

    Each line of a Differ delta begins with a two-letter code:

        '- '    line unique to sequence 1
        '+ '    line unique to sequence 2
        '  '    line common to both sequences
        '? '    line not present in either input sequence

    Lines beginning with '? ' attempt to guide the eye to intraline
    differences, and were not present in either input sequence.  These lines
    can be confusing if the sequences contain tab characters.

    Note that Differ makes no claim to produce a *minimal* diff.  To the
    contrary, minimal diffs are often counter-intuitive, because they synch
    up anywhere possible, sometimes accidental matches 100 pages apart.
    Restricting synch points to contiguous matches preserves some notion of
    locality, at the occasional cost of producing a longer diff.

    Example: Comparing two texts.

    >>> text1 = ['1. Beautiful is better than ugly.\n',
    ...   '2. Explicit is better than implicit.\n',
    ...   '3. Simple is better than complex.\n',
    ...   '4. Complex is better than complicated.\n']
    >>> text1.length
    4
    >>> text2 = ['1. Beautiful is better than ugly.\n',
    ...   '3.   Simple is better than complex.\n',
    ...   '4. Complicated is better than complex.\n',
    ...   '5. Flat is better than nested.\n']

    Next we instantiate a Differ object:

    >>> d = new Differ()

    Note that when instantiating a Differ object we may pass functions to
    filter out line and character 'junk'.

    Finally, we compare the two:

    >>> result = d.compare(text1, text2)
    [ '  1. Beautiful is better than ugly.\n',
      '- 2. Explicit is better than implicit.\n',
      '- 3. Simple is better than complex.\n',
      '+ 3.   Simple is better than complex.\n',
      '?   ++\n',
      '- 4. Complex is better than complicated.\n',
      '?          ^                     ---- ^\n',
      '+ 4. Complicated is better than complex.\n',
      '?         ++++ ^                      ^\n',
      '+ 5. Flat is better than nested.\n' ]

    Methods:

    constructor(linejunk=null, charjunk=null)
        Construct a text differencer, with optional filters.
    compare(a, b)
        Compare two sequences of lines; generate the resulting delta.
    */
    constructor(linejunk1, charjunk1) {
      this.linejunk = linejunk1;
      this.charjunk = charjunk1;
    }

    /*
    Construct a text differencer, with optional filters.

    The two optional keyword parameters are for filter functions:

    - `linejunk`: A function that should accept a single string argument,
      and return true iff the string is junk. The module-level function
      `IS_LINE_JUNK` may be used to filter out lines without visible
      characters, except for at most one splat ('#').  It is recommended
      to leave linejunk null. 

    - `charjunk`: A function that should accept a string of length 1. The
      module-level function `IS_CHARACTER_JUNK` may be used to filter out
      whitespace characters (a blank or tab; **note**: bad idea to include
      newline in this!).  Use of IS_CHARACTER_JUNK is recommended.
    */
    compare(a, b) {
      /*
      Compare two sequences of lines; generate the resulting delta.

      Each sequence must contain individual single-line strings ending with
      newlines. Such sequences can be obtained from the `readlines()` method
      of file-like objects.  The delta generated also consists of newline-
      terminated strings, ready to be printed as-is via the writeline()
      method of a file-like object.

      Example:

      >>> d = new Differ
      >>> d.compare(['one\n', 'two\n', 'three\n'],
      ...           ['ore\n', 'tree\n', 'emu\n'])
      [ '- one\n',
        '?  ^\n',
        '+ ore\n',
        '?  ^\n',
        '- two\n',
        '- three\n',
        '?  -\n',
        '+ tree\n',
        '+ emu\n' ]
      */
      var ahi, alo, bhi, blo, cruncher, g, l, len, len1, line, lines, m, ref, tag;
      cruncher = new SequenceMatcher(this.linejunk, a, b);
      lines = [];
      ref = cruncher.getOpcodes();
      for (l = 0, len = ref.length; l < len; l++) {
        [tag, alo, ahi, blo, bhi] = ref[l];
        switch (tag) {
          case 'replace':
            g = this._fancyReplace(a, alo, ahi, b, blo, bhi);
            break;
          case 'delete':
            g = this._dump('-', a, alo, ahi);
            break;
          case 'insert':
            g = this._dump('+', b, blo, bhi);
            break;
          case 'equal':
            g = this._dump(' ', a, alo, ahi);
            break;
          default:
            throw new Error(`unknow tag (${tag})`);
        }
        for (m = 0, len1 = g.length; m < len1; m++) {
          line = g[m];
          lines.push(line);
        }
      }
      return lines;
    }

    _dump(tag, x, lo, hi) {
      var i, l, ref, ref1, results;
      results = [];
      for (i = l = ref = lo, ref1 = hi; (ref <= ref1 ? l < ref1 : l > ref1); i = ref <= ref1 ? ++l : --l) {
        /*
        Generate comparison results for a same-tagged range.
        */
        results.push(`${tag} ${x[i]}`);
      }
      return results;
    }

    _plainReplace(a, alo, ahi, b, blo, bhi) {
      var first, g, l, len, len1, line, lines, m, ref, second;
      assert(alo < ahi && blo < bhi);
      // dump the shorter block first -- reduces the burden on short-term
      // memory if the blocks are of very different sizes
      if (bhi - blo < ahi - alo) {
        first = this._dump('+', b, blo, bhi);
        second = this._dump('-', a, alo, ahi);
      } else {
        first = this._dump('-', a, alo, ahi);
        second = this._dump('+', b, blo, bhi);
      }
      lines = [];
      ref = [first, second];
      for (l = 0, len = ref.length; l < len; l++) {
        g = ref[l];
        for (m = 0, len1 = g.length; m < len1; m++) {
          line = g[m];
          lines.push(line);
        }
      }
      return lines;
    }

    _fancyReplace(a, alo, ahi, b, blo, bhi) {
      var aelt, ai, ai1, ai2, atags, belt, bestRatio, besti, bestj, bj, bj1, bj2, btags, cruncher, cutoff, eqi, eqj, i, j, l, la, lb, len, len1, len2, len3, len4, line, lines, m, o, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, t, tag;
      /*
      When replacing one block of lines with another, search the blocks
      for *similar* lines; the best-matching pair (if any) is used as a
      synch point, and intraline difference marking is done on the
      similar pair. Lots of work, but often worth it.

      Example:
      >>> d = new Differ
      >>> d._fancyReplace(['abcDefghiJkl\n'], 0, 1,
      ...                 ['abcdefGhijkl\n'], 0, 1)
      [ '- abcDefghiJkl\n',
        '?    ^  ^  ^\n',
        '+ abcdefGhijkl\n',
        '?    ^  ^  ^\n' ]
      */
      // don't synch up unless the lines have a similarity score of at
      // least cutoff; best_ratio tracks the best score seen so far
      [bestRatio, cutoff] = [0.74, 0.75];
      cruncher = new SequenceMatcher(this.charjunk);
      [eqi, eqj] = [
        null,
        null // 1st indices of equal lines (if any)
      ];
      lines = [];
// search for the pair that matches best without being identical
// (identical lines must be junk lines, & we don't want to synch up
// on junk -- unless we have to)
      for (j = l = ref = blo, ref1 = bhi; (ref <= ref1 ? l < ref1 : l > ref1); j = ref <= ref1 ? ++l : --l) {
        bj = b[j];
        cruncher.setSeq2(bj);
        for (i = m = ref2 = alo, ref3 = ahi; (ref2 <= ref3 ? m < ref3 : m > ref3); i = ref2 <= ref3 ? ++m : --m) {
          ai = a[i];
          if (ai === bj) {
            if (eqi === null) {
              [eqi, eqj] = [i, j];
            }
            continue;
          }
          cruncher.setSeq1(ai);
          // computing similarity is expensive, so use the quick
          // upper bounds first -- have seen this speed up messy
          // compares by a factor of 3.
          // note that ratio() is only expensive to compute the first
          // time it's called on a sequence pair; the expensive part
          // of the computation is cached by cruncher
          if (cruncher.realQuickRatio() > bestRatio && cruncher.quickRatio() > bestRatio && cruncher.ratio() > bestRatio) {
            [bestRatio, besti, bestj] = [cruncher.ratio(), i, j];
          }
        }
      }
      if (bestRatio < cutoff) {
        // no non-identical "pretty close" pair
        if (eqi === null) {
          ref4 = this._plainReplace(a, alo, ahi, b, blo, bhi);
          // no identical pair either -- treat it as a straight replace
          for (o = 0, len = ref4.length; o < len; o++) {
            line = ref4[o];
            lines.push(line);
          }
          return lines;
        }
        // no close pair, but an identical pair -- synch up on that
        [besti, bestj, bestRatio] = [eqi, eqj, 1.0];
      } else {
        // there's a close pair, so forget the identical pair (if any)
        eqi = null;
      }
      ref5 = this._fancyHelper(a, alo, besti, b, blo, bestj);
      // a[besti] very similar to b[bestj]; eqi is null iff they're not
      // identical

      // pump out diffs from before the synch point
      for (p = 0, len1 = ref5.length; p < len1; p++) {
        line = ref5[p];
        lines.push(line);
      }
      // do intraline marking on the synch pair
      [aelt, belt] = [a[besti], b[bestj]];
      if (eqi === null) {
        // pump out a '-', '?', '+', '?' quad for the synched lines
        atags = btags = '';
        cruncher.setSeqs(aelt, belt);
        ref6 = cruncher.getOpcodes();
        for (q = 0, len2 = ref6.length; q < len2; q++) {
          [tag, ai1, ai2, bj1, bj2] = ref6[q];
          [la, lb] = [ai2 - ai1, bj2 - bj1];
          switch (tag) {
            case 'replace':
              atags += Array(la + 1).join('^');
              btags += Array(lb + 1).join('^');
              break;
            case 'delete':
              atags += Array(la + 1).join('-');
              break;
            case 'insert':
              btags += Array(lb + 1).join('+');
              break;
            case 'equal':
              atags += Array(la + 1).join(' ');
              btags += Array(lb + 1).join(' ');
              break;
            default:
              throw new Error(`unknow tag (${tag})`);
          }
        }
        ref7 = this._qformat(aelt, belt, atags, btags);
        for (r = 0, len3 = ref7.length; r < len3; r++) {
          line = ref7[r];
          lines.push(line);
        }
      } else {
        // the synch pair is identical
        lines.push('  ' + aelt);
      }
      ref8 = this._fancyHelper(a, besti + 1, ahi, b, bestj + 1, bhi);
      // pump out diffs from after the synch point
      for (t = 0, len4 = ref8.length; t < len4; t++) {
        line = ref8[t];
        lines.push(line);
      }
      return lines;
    }

    _fancyHelper(a, alo, ahi, b, blo, bhi) {
      var g;
      g = [];
      if (alo < ahi) {
        if (blo < bhi) {
          g = this._fancyReplace(a, alo, ahi, b, blo, bhi);
        } else {
          g = this._dump('-', a, alo, ahi);
        }
      } else if (blo < bhi) {
        g = this._dump('+', b, blo, bhi);
      }
      return g;
    }

    _qformat(aline, bline, atags, btags) {
      /*
      Format "?" output and deal with leading tabs.

      Example:

      >>> d = new Differ
      >>> d._qformat('\tabcDefghiJkl\n', '\tabcdefGhijkl\n',
      [ '- \tabcDefghiJkl\n',
        '? \t ^ ^  ^\n',
        '+ \tabcdefGhijkl\n',
        '? \t ^ ^  ^\n' ]
      */
      var common, lines;
      lines = [];
      // Can hurt, but will probably help most of the time.
      common = min(_countLeading(aline, '\t'), _countLeading(bline, '\t'));
      common = min(common, _countLeading(atags.slice(0, common), ' '));
      common = min(common, _countLeading(btags.slice(0, common), ' '));
      atags = atags.slice(common).replace(/\s+$/, '');
      btags = btags.slice(common).replace(/\s+$/, '');
      lines.push('- ' + aline);
      if (atags.length) {
        lines.push(`? ${Array(common + 1).join('\t')}${atags}\n`);
      }
      lines.push('+ ' + bline);
      if (btags.length) {
        lines.push(`? ${Array(common + 1).join('\t')}${btags}\n`);
      }
      return lines;
    }

  };

  // With respect to junk, an earlier version of ndiff simply refused to
  // *start* a match with a junk element.  The result was cases like this:
  //     before: private Thread currentThread;
  //     after:  private volatile Thread currentThread;
  // If you consider whitespace to be junk, the longest contiguous match
  // not starting with junk is "e Thread currentThread".  So ndiff reported
  // that "e volatil" was inserted between the 't' and the 'e' in "private".
  // While an accurate view, to people that's absurd.  The current version
  // looks for matching blocks that are entirely junk-free, then extends the
  // longest one of those as far as possible but only with matching junk.
  // So now "currentThread" is matched, then extended to suck up the
  // preceding blank; then "private" is matched, and extended to suck up the
  // following blank; then "Thread" is matched; and finally ndiff reports
  // that "volatile " was inserted before "Thread".  The only quibble
  // remaining is that perhaps it was really the case that " volatile"
  // was inserted after "private".  I can live with that <wink>.
  IS_LINE_JUNK = function(line, pat = /^\s*#?\s*$/) {
    /*
    Return 1 for ignorable line: iff `line` is blank or contains a single '#'.

    Examples:

    >>> IS_LINE_JUNK('\n')
    true
    >>> IS_LINE_JUNK('  #   \n')
    true
    >>> IS_LINE_JUNK('hello\n')
    false
    */
    return pat.test(line);
  };

  IS_CHARACTER_JUNK = function(ch, ws = ' \t') {
    /*
    Return 1 for ignorable character: iff `ch` is a space or tab.

    Examples:
    >>> IS_CHARACTER_JUNK(' ').should.be.true
    true
    >>> IS_CHARACTER_JUNK('\t').should.be.true
    true
    >>> IS_CHARACTER_JUNK('\n').should.be.false
    false
    >>> IS_CHARACTER_JUNK('x').should.be.false
    false
    */
    return indexOf.call(ws, ch) >= 0;
  };

  _formatRangeUnified = function(start, stop) {
    var beginning, length;
    /*
    Convert range to the "ed" format'
    */
    // Per the diff spec at http://www.unix.org/single_unix_specification/
    beginning = start + 1; // lines start numbering with one
    length = stop - start;
    if (length === 1) {
      return `${beginning}`;
    }
    if (!length) { // empty ranges begin at line just before the range
      beginning--;
    }
    return `${beginning},${length}`;
  };

  unifiedDiff = function(a, b, {fromfile, tofile, fromfiledate, tofiledate, n, lineterm} = {}) {
    var file1Range, file2Range, first, fromdate, group, i1, i2, j1, j2, l, last, len, len1, len2, len3, len4, line, lines, m, o, p, q, ref, ref1, ref2, ref3, started, tag, todate;
    /*
    Compare two sequences of lines; generate the delta as a unified diff.

    Unified diffs are a compact way of showing line changes and a few
    lines of context.  The number of context lines is set by 'n' which
    defaults to three.

    By default, the diff control lines (those with ---, +++, or @@) are
    created with a trailing newline.  

    For inputs that do not have trailing newlines, set the lineterm
    argument to "" so that the output will be uniformly newline free.

    The unidiff format normally has a header for filenames and modification
    times.  Any or all of these may be specified using strings for
    'fromfile', 'tofile', 'fromfiledate', and 'tofiledate'.
    The modification times are normally expressed in the ISO 8601 format.

    Example:

    >>> unifiedDiff('one two three four'.split(' '),
    ...             'zero one tree four'.split(' '), {
    ...               fromfile: 'Original'
    ...               tofile: 'Current',
    ...               fromfiledate: '2005-01-26 23:30:50',
    ...               tofiledate: '2010-04-02 10:20:52',
    ...               lineterm: ''
    ...             })
    [ '--- Original\t2005-01-26 23:30:50',
      '+++ Current\t2010-04-02 10:20:52',
      '@@ -1,4 +1,4 @@',
      '+zero',
      ' one',
      '-two',
      '-three',
      '+tree',
      ' four' ]

    */
    if (fromfile == null) {
      fromfile = '';
    }
    if (tofile == null) {
      tofile = '';
    }
    if (fromfiledate == null) {
      fromfiledate = '';
    }
    if (tofiledate == null) {
      tofiledate = '';
    }
    if (n == null) {
      n = 3;
    }
    if (lineterm == null) {
      lineterm = '\n';
    }
    lines = [];
    started = false;
    ref = (new SequenceMatcher(null, a, b)).getGroupedOpcodes();
    for (l = 0, len = ref.length; l < len; l++) {
      group = ref[l];
      if (!started) {
        started = true;
        fromdate = fromfiledate ? `\t${fromfiledate}` : '';
        todate = tofiledate ? `\t${tofiledate}` : '';
        lines.push(`--- ${fromfile}${fromdate}${lineterm}`);
        lines.push(`+++ ${tofile}${todate}${lineterm}`);
      }
      [first, last] = [group[0], group[group.length - 1]];
      file1Range = _formatRangeUnified(first[1], last[2]);
      file2Range = _formatRangeUnified(first[3], last[4]);
      lines.push(`@@ -${file1Range} +${file2Range} @@${lineterm}`);
      for (m = 0, len1 = group.length; m < len1; m++) {
        [tag, i1, i2, j1, j2] = group[m];
        if (tag === 'equal') {
          ref1 = a.slice(i1, i2);
          for (o = 0, len2 = ref1.length; o < len2; o++) {
            line = ref1[o];
            lines.push(' ' + line);
          }
          continue;
        }
        if (tag === 'replace' || tag === 'delete') {
          ref2 = a.slice(i1, i2);
          for (p = 0, len3 = ref2.length; p < len3; p++) {
            line = ref2[p];
            lines.push('-' + line);
          }
        }
        if (tag === 'replace' || tag === 'insert') {
          ref3 = b.slice(j1, j2);
          for (q = 0, len4 = ref3.length; q < len4; q++) {
            line = ref3[q];
            lines.push('+' + line);
          }
        }
      }
    }
    return lines;
  };

  _formatRangeContext = function(start, stop) {
    var beginning, length;
    /*
    Convert range to the "ed" format'
    */
    // Per the diff spec at http://www.unix.org/single_unix_specification/
    beginning = start + 1; // lines start numbering with one
    length = stop - start;
    if (!length) { // empty ranges begin at line just before the range
      beginning--;
    }
    if (length <= 1) {
      return `${beginning}`;
    }
    return `${beginning},${beginning + length - 1}`;
  };

  // See http://www.unix.org/single_unix_specification/
  contextDiff = function(a, b, {fromfile, tofile, fromfiledate, tofiledate, n, lineterm} = {}) {
    var _, file1Range, file2Range, first, fromdate, group, i1, i2, j1, j2, l, last, len, len1, len2, len3, len4, line, lines, m, o, p, prefix, q, ref, ref1, ref2, started, tag, todate;
    /*
    Compare two sequences of lines; generate the delta as a context diff.

    Context diffs are a compact way of showing line changes and a few
    lines of context.  The number of context lines is set by 'n' which
    defaults to three.

    By default, the diff control lines (those with *** or ---) are
    created with a trailing newline.  This is helpful so that inputs
    created from file.readlines() result in diffs that are suitable for
    file.writelines() since both the inputs and outputs have trailing
    newlines.

    For inputs that do not have trailing newlines, set the lineterm
    argument to "" so that the output will be uniformly newline free.

    The context diff format normally has a header for filenames and
    modification times.  Any or all of these may be specified using
    strings for 'fromfile', 'tofile', 'fromfiledate', and 'tofiledate'.
    The modification times are normally expressed in the ISO 8601 format.
    If not specified, the strings default to blanks.

    Example:
    >>> a = ['one\n', 'two\n', 'three\n', 'four\n']
    >>> b = ['zero\n', 'one\n', 'tree\n', 'four\n']
    >>> contextDiff(a, b, {fromfile: 'Original', tofile: 'Current'})
    [ '*** Original\n',
      '--- Current\n',
      '***************\n',
      '*** 1,4 ****\n',
      '  one\n',
      '! two\n',
      '! three\n',
      '  four\n',
      '--- 1,4 ----\n',
      '+ zero\n',
      '  one\n',
      '! tree\n',
      '  four\n' ]
    */
    if (fromfile == null) {
      fromfile = '';
    }
    if (tofile == null) {
      tofile = '';
    }
    if (fromfiledate == null) {
      fromfiledate = '';
    }
    if (tofiledate == null) {
      tofiledate = '';
    }
    if (n == null) {
      n = 3;
    }
    if (lineterm == null) {
      lineterm = '\n';
    }
    prefix = {
      insert: '+ ',
      delete: '- ',
      replace: '! ',
      equal: '  '
    };
    started = false;
    lines = [];
    ref = (new SequenceMatcher(null, a, b)).getGroupedOpcodes();
    for (l = 0, len = ref.length; l < len; l++) {
      group = ref[l];
      if (!started) {
        started = true;
        fromdate = fromfiledate ? `\t${fromfiledate}` : '';
        todate = tofiledate ? `\t${tofiledate}` : '';
        lines.push(`*** ${fromfile}${fromdate}${lineterm}`);
        lines.push(`--- ${tofile}${todate}${lineterm}`);
        [first, last] = [group[0], group[group.length - 1]];
        lines.push('***************' + lineterm);
        file1Range = _formatRangeContext(first[1], last[2]);
        lines.push(`*** ${file1Range} ****${lineterm}`);
        if (_any((function() {
          var len1, m, results;
          results = [];
          for (m = 0, len1 = group.length; m < len1; m++) {
            [tag, _, _, _, _] = group[m];
            results.push(tag === 'replace' || tag === 'delete');
          }
          return results;
        })())) {
          for (m = 0, len1 = group.length; m < len1; m++) {
            [tag, i1, i2, _, _] = group[m];
            if (tag !== 'insert') {
              ref1 = a.slice(i1, i2);
              for (o = 0, len2 = ref1.length; o < len2; o++) {
                line = ref1[o];
                lines.push(prefix[tag] + line);
              }
            }
          }
        }
        file2Range = _formatRangeContext(first[3], last[4]);
        lines.push(`--- ${file2Range} ----${lineterm}`);
        if (_any((function() {
          var len3, p, results;
          results = [];
          for (p = 0, len3 = group.length; p < len3; p++) {
            [tag, _, _, _, _] = group[p];
            results.push(tag === 'replace' || tag === 'insert');
          }
          return results;
        })())) {
          for (p = 0, len3 = group.length; p < len3; p++) {
            [tag, _, _, j1, j2] = group[p];
            if (tag !== 'delete') {
              ref2 = b.slice(j1, j2);
              for (q = 0, len4 = ref2.length; q < len4; q++) {
                line = ref2[q];
                lines.push(prefix[tag] + line);
              }
            }
          }
        }
      }
    }
    return lines;
  };

  ndiff = function(a, b, linejunk, charjunk = IS_CHARACTER_JUNK) {
    /*
    Compare `a` and `b` (lists of strings); return a `Differ`-style delta.

    Optional keyword parameters `linejunk` and `charjunk` are for filter
    functions (or None):

    - linejunk: A function that should accept a single string argument, and
      return true iff the string is junk.  The default is null, and is
      recommended; 

    - charjunk: A function that should accept a string of length 1. The
      default is module-level function IS_CHARACTER_JUNK, which filters out
      whitespace characters (a blank or tab; note: bad idea to include newline
      in this!).

    Example:
    >>> a = ['one\n', 'two\n', 'three\n']
    >>> b = ['ore\n', 'tree\n', 'emu\n']
    >>> ndiff(a, b)
    [ '- one\n',
      '?  ^\n',
      '+ ore\n',
      '?  ^\n',
      '- two\n',
      '- three\n',
      '?  -\n',
      '+ tree\n',
      '+ emu\n' ]
    */
    return (new Differ(linejunk, charjunk)).compare(a, b);
  };

  restore = function(delta, which) {
    /*
    Generate one of the two sequences that generated a delta.

    Given a `delta` produced by `Differ.compare()` or `ndiff()`, extract
    lines originating from file 1 or 2 (parameter `which`), stripping off line
    prefixes.

    Examples:
    >>> a = ['one\n', 'two\n', 'three\n']
    >>> b = ['ore\n', 'tree\n', 'emu\n']
    >>> diff = ndiff(a, b)
    >>> restore(diff, 1)
    [ 'one\n',
      'two\n',
      'three\n' ]
    >>> restore(diff, 2)
    [ 'ore\n',
      'tree\n',
      'emu\n' ]
    */
    var l, len, line, lines, prefixes, ref, tag;
    tag = {
      1: '- ',
      2: '+ '
    }[which];
    if (!tag) {
      throw new Error(`unknow delta choice (must be 1 or 2): ${which}`);
    }
    prefixes = ['  ', tag];
    lines = [];
    for (l = 0, len = delta.length; l < len; l++) {
      line = delta[l];
      if (ref = line.slice(0, 2), indexOf.call(prefixes, ref) >= 0) {
        lines.push(line.slice(2));
      }
    }
    return lines;
  };

  // exports to global
  exports._arrayCmp = _arrayCmp;

  exports.SequenceMatcher = SequenceMatcher;

  exports.getCloseMatches = getCloseMatches;

  exports._countLeading = _countLeading;

  exports.Differ = Differ;

  exports.IS_LINE_JUNK = IS_LINE_JUNK;

  exports.IS_CHARACTER_JUNK = IS_CHARACTER_JUNK;

  exports._formatRangeUnified = _formatRangeUnified;

  exports.unifiedDiff = unifiedDiff;

  exports._formatRangeContext = _formatRangeContext;

  exports.contextDiff = contextDiff;

  exports.ndiff = ndiff;

  exports.restore = restore;

}).call(this);

},{"assert":79,"heap":174}],16:[function(require,module,exports){
'use strict';

const asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":17,"./asn1/base":19,"./asn1/constants":23,"./asn1/decoders":25,"./asn1/encoders":28,"bn.js":30}],17:[function(require,module,exports){
'use strict';

const encoders = require('./encoders');
const decoders = require('./decoders');
const inherits = require('inherits');

const api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
}

Entity.prototype._createNamed = function createNamed(Base) {
  const name = this.name;

  function Generated(entity) {
    this._initNamed(entity, name);
  }
  inherits(Generated, Base);
  Generated.prototype._initNamed = function _initNamed(entity, name) {
    Base.call(this, entity, name);
  };

  return new Generated(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"./decoders":25,"./encoders":28,"inherits":178}],18:[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Reporter = require('../base/reporter').Reporter;
const Buffer = require('safer-buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
  if (data instanceof DecoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    Buffer.isBuffer(data.base) &&
    data.constructor.name === 'DecoderBuffer' &&
    typeof data.offset === 'number' &&
    typeof data.length === 'number' &&
    typeof data.save === 'function' &&
    typeof data.restore === 'function' &&
    typeof data.isEmpty === 'function' &&
    typeof data.readUInt8 === 'function' &&
    typeof data.skip === 'function' &&
    typeof data.raw === 'function';

  return isCompatible;
};

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  const res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
};

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  const res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
};

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
};

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!EncoderBuffer.isEncoderBuffer(item))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
  if (data instanceof EncoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    data.constructor.name === 'EncoderBuffer' &&
    typeof data.length === 'number' &&
    typeof data.join === 'function';

  return isCompatible;
};

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = Buffer.alloc(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base/reporter":21,"inherits":178,"safer-buffer":220}],19:[function(require,module,exports){
'use strict';

const base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":18,"./node":20,"./reporter":21}],20:[function(require,module,exports){
'use strict';

const Reporter = require('../base/reporter').Reporter;
const EncoderBuffer = require('../base/buffer').EncoderBuffer;
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const assert = require('minimalistic-assert');

// Supported tags
const tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
const methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
const overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent, name) {
  const state = {};
  this._baseState = state;

  state.name = name;
  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

const stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  const state = this._baseState;
  const cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  const res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  const state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      const clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  const state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  const state = this._baseState;

  // Filter children and args
  const children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      const res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        const value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    const state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    const state = this._baseState;
    const args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  const state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  const state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  const state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  const state = this._baseState;
  const args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  const state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  const state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  const state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  const state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  let result = state['default'];
  let present = true;

  let prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    let tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      const save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  let prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      const explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    const start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      let save;
      if (state.any)
        save = input.save();
      const body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any) {
      // no-op
    } else if (state.choice === null) {
      result = this._decodeGeneric(state.tag, input, options);
    } else {
      result = this._decodeChoice(input, options);
    }

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      const data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
        ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  const state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
      ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  const state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  const state = this._baseState;
  let result = null;
  let match = false;

  Object.keys(state.choice).some(function(key) {
    const save = input.save();
    const node = state.choice[key];
    try {
      const value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  const state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  const result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  let result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default'];
    else
      return;
  }

  // Encode children first
  let content = null;
  let primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      const prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      const res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      const child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        const state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  if (!state.any && state.choice === null) {
    const tag = state.implicit !== null ? state.implicit : state.tag;
    const cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  const state = this._baseState;

  const node = state.choice[data.type];
  if (!node) {
    assert(
      false,
      data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  const state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
};

},{"../base/buffer":18,"../base/reporter":21,"minimalistic-assert":188}],21:[function(require,module,exports){
'use strict';

const inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  const state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  const state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  const state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  const state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  const state = this._reporterState;

  const prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  const state = this._reporterState;

  const now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  let err;
  const state = this._reporterState;

  const inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  const state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
}
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":178}],22:[function(require,module,exports){
'use strict';

// Helper
function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
}

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = reverse(exports.tag);

},{}],23:[function(require,module,exports){
'use strict';

const constants = exports;

// Helper
constants._reverse = function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":22}],24:[function(require,module,exports){
'use strict';

const inherits = require('inherits');

const bignum = require('bn.js');
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const Node = require('../base/node');

// Import DER constants
const der = require('../constants/der');

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!DecoderBuffer.isDecoderBuffer(data)) {
    data = new DecoderBuffer(data, options);
  }

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  const state = buffer.save();
  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  const decodedTag = derDecodeTag(buffer,
    'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  let len = derDecodeLen(buffer,
    decodedTag.primitive,
    'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  const state = buffer.save();
  const res = this._skipUntilEnd(
    buffer,
    'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  for (;;) {
    const tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    const len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    let res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len);
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
  options) {
  const result = [];
  while (!buffer.isEmpty()) {
    const possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    const res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    const unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    const raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    let str = '';
    for (let i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    const numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    const printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  let result;
  const identifiers = [];
  let ident = 0;
  let subident = 0;
  while (!buffer.isEmpty()) {
    subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  const first = (identifiers[0] / 40) | 0;
  const second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    let tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  const str = buffer.raw().toString();

  let year;
  let mon;
  let day;
  let hour;
  let min;
  let sec;
  if (tag === 'gentime') {
    year = str.slice(0, 4) | 0;
    mon = str.slice(4, 6) | 0;
    day = str.slice(6, 8) | 0;
    hour = str.slice(8, 10) | 0;
    min = str.slice(10, 12) | 0;
    sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    year = str.slice(0, 2) | 0;
    mon = str.slice(2, 4) | 0;
    day = str.slice(4, 6) | 0;
    hour = str.slice(6, 8) | 0;
    min = str.slice(8, 10) | 0;
    sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull() {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  const res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  const raw = buffer.raw();
  let res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  let tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  const cls = der.tagClass[tag >> 6];
  const primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    let oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  const tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  let len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  const num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (let i = 0; i < num; i++) {
    len <<= 8;
    const j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../base/buffer":18,"../base/node":20,"../constants/der":22,"bn.js":30,"inherits":178}],25:[function(require,module,exports){
'use strict';

const decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":24,"./pem":26}],26:[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;

const DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  const lines = data.toString().split(/[\r\n]+/g);

  const label = options.label.toUpperCase();

  const re = /^-----(BEGIN|END) ([^-]+)-----$/;
  let start = -1;
  let end = -1;
  for (let i = 0; i < lines.length; i++) {
    const match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  const base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9+/=]+/gi, '');

  const input = Buffer.from(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":24,"inherits":178,"safer-buffer":220}],27:[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;
const Node = require('../base/node');

// Import DER constants
const der = require('../constants/der');

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
  primitive,
  cls,
  content) {
  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    const header = Buffer.alloc(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  let lenOctets = 1;
  for (let i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  const header = Buffer.alloc(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    const buf = Buffer.alloc(str.length * 2);
    for (let i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s.]+/g);
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  let size = 0;
  for (let i = 0; i < id.length; i++) {
    let ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  const objid = Buffer.alloc(size);
  let offset = objid.length - 1;
  for (let i = id.length - 1; i >= 0; i--) {
    let ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  let str;
  const date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getUTCFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getUTCFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    const numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = Buffer.from(numArray);
  }

  if (Buffer.isBuffer(num)) {
    let size = num.length;
    if (num.length === 0)
      size++;

    const out = Buffer.alloc(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0;
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  let size = 1;
  for (let i = num; i >= 0x100; i >>= 8)
    size++;

  const out = new Array(size);
  for (let i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(Buffer.from(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  const state = this._baseState;
  let i;
  if (state['default'] === null)
    return false;

  const data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  let res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../base/node":20,"../constants/der":22,"inherits":178,"safer-buffer":220}],28:[function(require,module,exports){
'use strict';

const encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":27,"./pem":29}],29:[function(require,module,exports){
'use strict';

const inherits = require('inherits');

const DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  const buf = DEREncoder.prototype.encode.call(this, data);

  const p = buf.toString('base64');
  const out = [ '-----BEGIN ' + options.label + '-----' ];
  for (let i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":27,"inherits":178}],30:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = require('buffer').Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":35}],31:[function(require,module,exports){
(function (global){(function (){
'use strict';

var possibleNames = [
	'BigInt64Array',
	'BigUint64Array',
	'Float32Array',
	'Float64Array',
	'Int16Array',
	'Int32Array',
	'Int8Array',
	'Uint16Array',
	'Uint32Array',
	'Uint8Array',
	'Uint8ClampedArray'
];

var g = typeof globalThis === 'undefined' ? global : globalThis;

module.exports = function availableTypedArrays() {
	var out = [];
	for (var i = 0; i < possibleNames.length; i++) {
		if (typeof g[possibleNames[i]] === 'function') {
			out[out.length] = possibleNames[i];
		}
	}
	return out;
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],32:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],33:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = require('buffer').Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // '0' - '9'
    if (c >= 48 && c <= 57) {
      return c - 48;
    // 'A' - 'F'
    } else if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    } else {
      assert(false, 'Invalid character in ' + string);
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this._strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":35}],34:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":35}],35:[function(require,module,exports){

},{}],36:[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":219}],37:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
var incr32 = require('./incr32')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":36,"./ghash":41,"./incr32":42,"buffer-xor":84,"cipher-base":87,"inherits":178,"safe-buffer":219}],38:[function(require,module,exports){
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":39,"./encrypter":40,"./modes/list.json":50}],39:[function(require,module,exports){
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./aes":36,"./authCipher":37,"./modes":49,"./streamCipher":52,"cipher-base":87,"evp_bytestokey":135,"inherits":178,"safe-buffer":219}],40:[function(require,module,exports){
var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./aes":36,"./authCipher":37,"./modes":49,"./streamCipher":52,"cipher-base":87,"evp_bytestokey":135,"inherits":178,"safe-buffer":219}],41:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":219}],42:[function(require,module,exports){
function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32

},{}],43:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":84}],44:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"buffer-xor":84,"safe-buffer":219}],45:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":219}],46:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":219}],47:[function(require,module,exports){
var xor = require('buffer-xor')
var Buffer = require('safe-buffer').Buffer
var incr32 = require('../incr32')

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"../incr32":42,"buffer-xor":84,"safe-buffer":219}],48:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],49:[function(require,module,exports){
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./cbc":43,"./cfb":44,"./cfb1":45,"./cfb8":46,"./ctr":47,"./ecb":48,"./list.json":50,"./ofb":51}],50:[function(require,module,exports){
module.exports={
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}

},{}],51:[function(require,module,exports){
(function (Buffer){(function (){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":82,"buffer-xor":84}],52:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":36,"cipher-base":87,"inherits":178,"safe-buffer":219}],53:[function(require,module,exports){
var DES = require('browserify-des')
var aes = require('browserify-aes/browser')
var aesModes = require('browserify-aes/modes')
var desModes = require('browserify-des/modes')
var ebtk = require('evp_bytestokey')

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":38,"browserify-aes/modes":49,"browserify-des":54,"browserify-des/modes":55,"evp_bytestokey":135}],54:[function(require,module,exports){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (!Buffer.isBuffer(key)) {
    key = Buffer.from(key)
  }
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  if (!Buffer.isBuffer(iv)) {
    iv = Buffer.from(iv)
  }
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return Buffer.from(this._des.update(data))
}
DES.prototype._final = function () {
  return Buffer.from(this._des.final())
}

},{"cipher-base":87,"des.js":106,"inherits":178,"safe-buffer":219}],55:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],56:[function(require,module,exports){
(function (Buffer){(function (){
var BN = require('bn.js')
var randomBytes = require('randombytes')

function blind (priv) {
  var r = getr(priv)
  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()
  return { blinder: blinder, unblinder: r.invm(priv.modulus) }
}

function getr (priv) {
  var len = priv.modulus.byteLength()
  var r
  do {
    r = new BN(randomBytes(len))
  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))
  return r
}

function crt (msg, priv) {
  var blinds = blind(priv)
  var len = priv.modulus.byteLength()
  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)
  var c1 = blinded.toRed(BN.mont(priv.prime1))
  var c2 = blinded.toRed(BN.mont(priv.prime2))
  var qinv = priv.coefficient
  var p = priv.prime1
  var q = priv.prime2
  var m1 = c1.redPow(priv.exponent1).fromRed()
  var m2 = c2.redPow(priv.exponent2).fromRed()
  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)
  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)
}
crt.getr = getr

module.exports = crt

}).call(this)}).call(this,require("buffer").Buffer)
},{"bn.js":33,"buffer":82,"randombytes":216}],57:[function(require,module,exports){
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":58}],58:[function(require,module,exports){
module.exports={
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}

},{}],59:[function(require,module,exports){
module.exports={
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}

},{}],60:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var createHash = require('create-hash')
var stream = require('readable-stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = Buffer.from(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

},{"./algorithms.json":58,"./sign":61,"./verify":62,"create-hash":101,"inherits":178,"readable-stream":77,"safe-buffer":219}],61:[function(require,module,exports){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [0, 1]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return Buffer.from(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [0].concat(r)
  if (s[0] & 0x80) s = [0].concat(s)

  var total = r.length + s.length + 4
  var res = [0x30, total, 0x02, r.length]
  res = res.concat(r, [0x02, s.length], s)
  return Buffer.from(res)
}

function getKey (x, q, hash, algo) {
  x = Buffer.from(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - x.length)
    x = Buffer.concat([zeros, x])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = Buffer.alloc(hlen)
  v.fill(1)
  var k = Buffer.alloc(hlen)
  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = Buffer.from(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - out.length)
    out = Buffer.concat([zeros, out])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = Buffer.alloc(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([t, kv.v])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

},{"./curves.json":59,"bn.js":33,"browserify-rsa":56,"create-hmac":103,"elliptic":117,"parse-asn1":200,"safe-buffer":219}],62:[function(require,module,exports){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [1]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = Buffer.from(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = Buffer.from(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

},{"./curves.json":59,"bn.js":33,"elliptic":117,"parse-asn1":200,"safe-buffer":219}],63:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],64:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
};
/*</replacement>*/

module.exports = Duplex;
var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');
require('inherits')(Duplex, Readable);
{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}
function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;
  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;
    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}
Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

// the no-half-open enforcer
function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(onEndNT, this);
}
function onEndNT(self) {
  self.end();
}
Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":66,"./_stream_writable":68,"_process":208,"inherits":178}],65:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;
var Transform = require('./_stream_transform');
require('inherits')(PassThrough, Transform);
function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}
PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":67,"inherits":178}],66:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

module.exports = Readable;

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;
var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

var Buffer = require('buffer').Buffer;
var OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*<replacement>*/
var debugUtil = require('util');
var debug;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/buffer_list');
var destroyImpl = require('./internal/streams/destroy');
var _require = require('./internal/streams/state'),
  getHighWaterMark = _require.getHighWaterMark;
var _require$codes = require('../errors').codes,
  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;

// Lazy loaded to improve the startup performance.
var StringDecoder;
var createReadableStreamAsyncIterator;
var from;
require('inherits')(Readable, Stream);
var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];
function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}
function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true;

  // Should close be emitted on destroy. Defaults to true.
  this.emitClose = options.emitClose !== false;

  // Should .destroy() be called after 'end' (and potentially 'finish')
  this.autoDestroy = !!options.autoDestroy;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}
function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options);

  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5
  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex);

  // legacy
  this.readable = true;
  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }
  Stream.call(this);
}
Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;
  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }
  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};
function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }
      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  }

  // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.
  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}
function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}
function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }
  return er;
}
Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder;
  // If setEncoding(null), decoder.encoding equals utf8
  this._readableState.encoding = this._readableState.decoder.encoding;

  // Iterate over current buffer to convert already stored Buffers:
  var p = this._readableState.buffer.head;
  var content = '';
  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }
  this._readableState.buffer.clear();
  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
};

// Don't raise the hwm > 1GB
var MAX_HWM = 0x40000000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }
  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }
  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;
  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }
  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }
  if (ret !== null) this.emit('data', ret);
  return ret;
};
function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;
  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;
    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}
function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);
  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  }

  // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.
  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}
function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};
Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;
  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }
  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);
    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);
  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }
  return dest;
};
function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}
Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {
      hasUnpiped: false
    });
    return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;
  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0;

    // Try start flowing on next tick if stream isn't explicitly paused
    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);
      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }
  return res;
};
Readable.prototype.addListener = Readable.prototype.on;
Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);
  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }
  return res;
};
Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);
  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }
  return res;
};
function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;
  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true;

    // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}
function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()
    state.flowing = !state.readableListening;
    resume(this, state);
  }
  state.paused = false;
  return this;
};
function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}
function resume_(stream, state) {
  debug('resume', state.reading);
  if (!state.reading) {
    stream.read(0);
  }
  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}
Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  this._readableState.paused = true;
  return this;
};
function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null);
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;
  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }
    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;
    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };
  return this;
};
if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }
    return createReadableStreamAsyncIterator(this);
  };
}
Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
});

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}
function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);
  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}
function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length);

  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;
      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}
if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }
    return from(Readable, iterable, opts);
  };
}
function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":63,"./_stream_duplex":64,"./internal/streams/async_iterator":69,"./internal/streams/buffer_list":70,"./internal/streams/destroy":71,"./internal/streams/from":73,"./internal/streams/state":75,"./internal/streams/stream":76,"_process":208,"buffer":82,"events":134,"inherits":178,"string_decoder/":244,"util":35}],67:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;
var _require$codes = require('../errors').codes,
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
var Duplex = require('./_stream_duplex');
require('inherits')(Transform, Duplex);
function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;
  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }
  ts.writechunk = null;
  ts.writecb = null;
  if (data != null)
    // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}
function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;
  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}
function prefinish() {
  var _this = this;
  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}
Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};
Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;
  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};
Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};
function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null)
    // single equals check for both `null` and `undefined`
    stream.push(data);

  // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":63,"./_stream_duplex":64,"inherits":178}],68:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;
  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

var Buffer = require('buffer').Buffer;
var OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
var destroyImpl = require('./internal/streams/destroy');
var _require = require('./internal/streams/state'),
  getHighWaterMark = _require.getHighWaterMark;
var _require$codes = require('../errors').codes,
  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
var errorOrDestroy = destroyImpl.errorOrDestroy;
require('inherits')(Writable, Stream);
function nop() {}
function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // Should close be emitted on destroy. Defaults to true.
  this.emitClose = options.emitClose !== false;

  // Should .destroy() be called after 'finish' (and potentially 'end')
  this.autoDestroy = !!options.autoDestroy;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}
WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};
(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}
function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.

  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5
  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex);

  // legacy.
  this.writable = true;
  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }
  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};
function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END();
  // TODO: defer error events consistently everywhere, not just the cb
  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var er;
  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }
  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }
  return true;
}
Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);
  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }
  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }
  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};
Writable.prototype.cork = function () {
  this._writableState.corked++;
};
Writable.prototype.uncork = function () {
  var state = this._writableState;
  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};
Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};
Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}
Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;
  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }
  return ret;
}
function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}
function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}
function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}
function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;
    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }
    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}
function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;
  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }
    if (entry === null) state.lastBufferedRequest = null;
  }
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}
Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};
Writable.prototype._writev = null;
Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;
  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }
  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending) endWritable(this, state, cb);
  return this;
};
Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});
function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      errorOrDestroy(stream, err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}
function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;
        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }
  return need;
}
function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}
function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }

  // reuse the free corkReq.
  state.corkedRequestsFree.next = corkReq;
}
Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":63,"./_stream_duplex":64,"./internal/streams/destroy":71,"./internal/streams/state":75,"./internal/streams/stream":76,"_process":208,"buffer":82,"inherits":178,"util-deprecate":245}],69:[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var finished = require('./end-of-stream');
var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');
function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}
function readAndResolve(iter) {
  var resolve = iter[kLastResolve];
  if (resolve !== null) {
    var data = iter[kStream].read();
    // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'
    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}
function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}
function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }
      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}
var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },
  next: function next() {
    var _this = this;
    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];
    if (error !== null) {
      return Promise.reject(error);
    }
    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }
    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    }

    // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time
    var lastPromise = this[kLastPromise];
    var promise;
    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();
      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }
      promise = new Promise(this[kHandlePromise]);
    }
    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;
  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }
      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);
var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;
  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();
      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject];
      // reject if we are waiting for data in the Promise
      // returned by next() and store the error
      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }
      iterator[kError] = err;
      return;
    }
    var resolve = iterator[kLastResolve];
    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }
    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};
module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":72,"_process":208}],70:[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var _require = require('buffer'),
  Buffer = _require.Buffer;
var _require2 = require('util'),
  inspect = _require2.inspect;
var custom = inspect && inspect.custom || 'inspect';
function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}
module.exports = /*#__PURE__*/function () {
  function BufferList() {
    _classCallCheck(this, BufferList);
    this.head = null;
    this.tail = null;
    this.length = 0;
  }
  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;
      while (p = p.next) ret += s + p.data;
      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;
      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }
      return ret;
    }

    // Consumes a specified amount of bytes or characters from the buffered data.
  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;
      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }
      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    }

    // Consumes a specified amount of characters from the buffered data.
  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;
      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;
        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }
          break;
        }
        ++c;
      }
      this.length -= c;
      return ret;
    }

    // Consumes a specified amount of bytes from the buffered data.
  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;
      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;
        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }
          break;
        }
        ++c;
      }
      this.length -= c;
      return ret;
    }

    // Make sure the linked list only shows the minimal necessary information.
  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);
  return BufferList;
}();
},{"buffer":82,"util":35}],71:[function(require,module,exports){
(function (process){(function (){
'use strict';

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;
  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;
  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }
  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });
  return this;
}
function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}
function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}
function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }
  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}
function emitErrorNT(self, err) {
  self.emit('error', err);
}
function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.

  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}
module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":208}],72:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).

'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;
function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    callback.apply(this, args);
  };
}
function noop() {}
function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}
function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;
  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };
  var writableEnded = stream._writableState && stream._writableState.finished;
  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };
  var readableEnded = stream._readableState && stream._readableState.endEmitted;
  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };
  var onerror = function onerror(err) {
    callback.call(stream, err);
  };
  var onclose = function onclose() {
    var err;
    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };
  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };
  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }
  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}
module.exports = eos;
},{"../../../errors":63}],73:[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],74:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).

'use strict';

var eos;
function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}
var _require$codes = require('../../../errors').codes,
  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}
function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}
function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true;

    // request.destroy just do .end - .abort is what we want
    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}
function call(fn) {
  fn();
}
function pipe(from, to) {
  return from.pipe(to);
}
function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}
function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }
  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];
  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }
  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}
module.exports = pipeline;
},{"../../../errors":63,"./end-of-stream":72}],75:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;
function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}
function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }
    return Math.floor(hwm);
  }

  // Default value
  return state.objectMode ? 16 : 16 * 1024;
}
module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":63}],76:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":134}],77:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
exports.finished = require('./lib/internal/streams/end-of-stream.js');
exports.pipeline = require('./lib/internal/streams/pipeline.js');

},{"./lib/_stream_duplex.js":64,"./lib/_stream_passthrough.js":65,"./lib/_stream_readable.js":66,"./lib/_stream_transform.js":67,"./lib/_stream_writable.js":68,"./lib/internal/streams/end-of-stream.js":72,"./lib/internal/streams/pipeline.js":74}],78:[function(require,module,exports){
arguments[4][35][0].apply(exports,arguments)
},{"dup":35}],79:[function(require,module,exports){
(function (global){(function (){
'use strict';

var objectAssign = require('object.assign/polyfill')();

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:
// NB: The URL to the CommonJS spec is kept just for tradition.
//     node-assert has evolved a lot since then, both in API and behavior.

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = require('util/');
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

// Expose a strict only variant of assert
function strict(value, message) {
  if (!value) fail(value, true, message, '==', strict);
}
assert.strict = objectAssign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
});
assert.strict.strict = assert.strict;

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"object.assign/polyfill":194,"util/":81}],80:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],81:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":80,"_process":208,"inherits":83}],82:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":32,"buffer":82,"ieee754":177}],83:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],84:[function(require,module,exports){
(function (Buffer){(function (){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":82}],85:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":86,"get-intrinsic":139}],86:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"function-bind":138,"get-intrinsic":139}],87:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"inherits":178,"safe-buffer":219,"stream":229,"string_decoder":244}],88:[function(require,module,exports){
/*

The MIT License (MIT)

Original Library
  - Copyright (c) Marak Squires

Additional functionality
 - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var colors = {};
module['exports'] = colors;

colors.themes = {};

var util = require('util');
var ansiStyles = colors.styles = require('./styles');
var defineProps = Object.defineProperties;
var newLineRegex = new RegExp(/[\r\n]+/g);

colors.supportsColor = require('./system/supports-colors').supportsColor;

if (typeof colors.enabled === 'undefined') {
  colors.enabled = colors.supportsColor() !== false;
}

colors.enable = function() {
  colors.enabled = true;
};

colors.disable = function() {
  colors.enabled = false;
};

colors.stripColors = colors.strip = function(str) {
  return ('' + str).replace(/\x1B\[\d+m/g, '');
};

// eslint-disable-next-line no-unused-vars
var stylize = colors.stylize = function stylize(str, style) {
  if (!colors.enabled) {
    return str+'';
  }

  var styleMap = ansiStyles[style];

  // Stylize should work for non-ANSI styles, too
  if(!styleMap && style in colors){
    // Style maps like trap operate as functions on strings;
    // they don't have properties like open or close.
    return colors[style](str);
  }

  return styleMap.open + str + styleMap.close;
};

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
var escapeStringRegexp = function(str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }
  return str.replace(matchOperatorsRe, '\\$&');
};

function build(_styles) {
  var builder = function builder() {
    return applyStyle.apply(builder, arguments);
  };
  builder._styles = _styles;
  // __proto__ is used because we must return a function, but there is
  // no way to create a function with a different prototype.
  builder.__proto__ = proto;
  return builder;
}

var styles = (function() {
  var ret = {};
  ansiStyles.grey = ansiStyles.gray;
  Object.keys(ansiStyles).forEach(function(key) {
    ansiStyles[key].closeRe =
      new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
    ret[key] = {
      get: function() {
        return build(this._styles.concat(key));
      },
    };
  });
  return ret;
})();

var proto = defineProps(function colors() {}, styles);

function applyStyle() {
  var args = Array.prototype.slice.call(arguments);

  var str = args.map(function(arg) {
    // Use weak equality check so we can colorize null/undefined in safe mode
    if (arg != null && arg.constructor === String) {
      return arg;
    } else {
      return util.inspect(arg);
    }
  }).join(' ');

  if (!colors.enabled || !str) {
    return str;
  }

  var newLinesPresent = str.indexOf('\n') != -1;

  var nestedStyles = this._styles;

  var i = nestedStyles.length;
  while (i--) {
    var code = ansiStyles[nestedStyles[i]];
    str = code.open + str.replace(code.closeRe, code.open) + code.close;
    if (newLinesPresent) {
      str = str.replace(newLineRegex, function(match) {
        return code.close + match + code.open;
      });
    }
  }

  return str;
}

colors.setTheme = function(theme) {
  if (typeof theme === 'string') {
    console.log('colors.setTheme now only accepts an object, not a string.  ' +
      'If you are trying to set a theme from a file, it is now your (the ' +
      'caller\'s) responsibility to require the file.  The old syntax ' +
      'looked like colors.setTheme(__dirname + ' +
      '\'/../themes/generic-logging.js\'); The new syntax looks like '+
      'colors.setTheme(require(__dirname + ' +
      '\'/../themes/generic-logging.js\'));');
    return;
  }
  for (var style in theme) {
    (function(style) {
      colors[style] = function(str) {
        if (typeof theme[style] === 'object') {
          var out = str;
          for (var i in theme[style]) {
            out = colors[theme[style][i]](out);
          }
          return out;
        }
        return colors[theme[style]](str);
      };
    })(style);
  }
};

function init() {
  var ret = {};
  Object.keys(styles).forEach(function(name) {
    ret[name] = {
      get: function() {
        return build([name]);
      },
    };
  });
  return ret;
}

var sequencer = function sequencer(map, str) {
  var exploded = str.split('');
  exploded = exploded.map(map);
  return exploded.join('');
};

// custom formatter methods
colors.trap = require('./custom/trap');
colors.zalgo = require('./custom/zalgo');

// maps
colors.maps = {};
colors.maps.america = require('./maps/america')(colors);
colors.maps.zebra = require('./maps/zebra')(colors);
colors.maps.rainbow = require('./maps/rainbow')(colors);
colors.maps.random = require('./maps/random')(colors);

for (var map in colors.maps) {
  (function(map) {
    colors[map] = function(str) {
      return sequencer(colors.maps[map], str);
    };
  })(map);
}

defineProps(colors, init());

},{"./custom/trap":89,"./custom/zalgo":90,"./maps/america":91,"./maps/rainbow":92,"./maps/random":93,"./maps/zebra":94,"./styles":95,"./system/supports-colors":97,"util":248}],89:[function(require,module,exports){
module['exports'] = function runTheTrap(text, options) {
  var result = '';
  text = text || 'Run the trap, drop the bass';
  text = text.split('');
  var trap = {
    a: ['\u0040', '\u0104', '\u023a', '\u0245', '\u0394', '\u039b', '\u0414'],
    b: ['\u00df', '\u0181', '\u0243', '\u026e', '\u03b2', '\u0e3f'],
    c: ['\u00a9', '\u023b', '\u03fe'],
    d: ['\u00d0', '\u018a', '\u0500', '\u0501', '\u0502', '\u0503'],
    e: ['\u00cb', '\u0115', '\u018e', '\u0258', '\u03a3', '\u03be', '\u04bc',
      '\u0a6c'],
    f: ['\u04fa'],
    g: ['\u0262'],
    h: ['\u0126', '\u0195', '\u04a2', '\u04ba', '\u04c7', '\u050a'],
    i: ['\u0f0f'],
    j: ['\u0134'],
    k: ['\u0138', '\u04a0', '\u04c3', '\u051e'],
    l: ['\u0139'],
    m: ['\u028d', '\u04cd', '\u04ce', '\u0520', '\u0521', '\u0d69'],
    n: ['\u00d1', '\u014b', '\u019d', '\u0376', '\u03a0', '\u048a'],
    o: ['\u00d8', '\u00f5', '\u00f8', '\u01fe', '\u0298', '\u047a', '\u05dd',
      '\u06dd', '\u0e4f'],
    p: ['\u01f7', '\u048e'],
    q: ['\u09cd'],
    r: ['\u00ae', '\u01a6', '\u0210', '\u024c', '\u0280', '\u042f'],
    s: ['\u00a7', '\u03de', '\u03df', '\u03e8'],
    t: ['\u0141', '\u0166', '\u0373'],
    u: ['\u01b1', '\u054d'],
    v: ['\u05d8'],
    w: ['\u0428', '\u0460', '\u047c', '\u0d70'],
    x: ['\u04b2', '\u04fe', '\u04fc', '\u04fd'],
    y: ['\u00a5', '\u04b0', '\u04cb'],
    z: ['\u01b5', '\u0240'],
  };
  text.forEach(function(c) {
    c = c.toLowerCase();
    var chars = trap[c] || [' '];
    var rand = Math.floor(Math.random() * chars.length);
    if (typeof trap[c] !== 'undefined') {
      result += trap[c][rand];
    } else {
      result += c;
    }
  });
  return result;
};

},{}],90:[function(require,module,exports){
// please no
module['exports'] = function zalgo(text, options) {
  text = text || '   he is here   ';
  var soul = {
    'up': [
      '̍', '̎', '̄', '̅',
      '̿', '̑', '̆', '̐',
      '͒', '͗', '͑', '̇',
      '̈', '̊', '͂', '̓',
      '̈', '͊', '͋', '͌',
      '̃', '̂', '̌', '͐',
      '̀', '́', '̋', '̏',
      '̒', '̓', '̔', '̽',
      '̉', 'ͣ', 'ͤ', 'ͥ',
      'ͦ', 'ͧ', 'ͨ', 'ͩ',
      'ͪ', 'ͫ', 'ͬ', 'ͭ',
      'ͮ', 'ͯ', '̾', '͛',
      '͆', '̚',
    ],
    'down': [
      '̖', '̗', '̘', '̙',
      '̜', '̝', '̞', '̟',
      '̠', '̤', '̥', '̦',
      '̩', '̪', '̫', '̬',
      '̭', '̮', '̯', '̰',
      '̱', '̲', '̳', '̹',
      '̺', '̻', '̼', 'ͅ',
      '͇', '͈', '͉', '͍',
      '͎', '͓', '͔', '͕',
      '͖', '͙', '͚', '̣',
    ],
    'mid': [
      '̕', '̛', '̀', '́',
      '͘', '̡', '̢', '̧',
      '̨', '̴', '̵', '̶',
      '͜', '͝', '͞',
      '͟', '͠', '͢', '̸',
      '̷', '͡', ' ҉',
    ],
  };
  var all = [].concat(soul.up, soul.down, soul.mid);

  function randomNumber(range) {
    var r = Math.floor(Math.random() * range);
    return r;
  }

  function isChar(character) {
    var bool = false;
    all.filter(function(i) {
      bool = (i === character);
    });
    return bool;
  }


  function heComes(text, options) {
    var result = '';
    var counts;
    var l;
    options = options || {};
    options['up'] =
      typeof options['up'] !== 'undefined' ? options['up'] : true;
    options['mid'] =
      typeof options['mid'] !== 'undefined' ? options['mid'] : true;
    options['down'] =
      typeof options['down'] !== 'undefined' ? options['down'] : true;
    options['size'] =
      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';
    text = text.split('');
    for (l in text) {
      if (isChar(l)) {
        continue;
      }
      result = result + text[l];
      counts = {'up': 0, 'down': 0, 'mid': 0};
      switch (options.size) {
        case 'mini':
          counts.up = randomNumber(8);
          counts.mid = randomNumber(2);
          counts.down = randomNumber(8);
          break;
        case 'maxi':
          counts.up = randomNumber(16) + 3;
          counts.mid = randomNumber(4) + 1;
          counts.down = randomNumber(64) + 3;
          break;
        default:
          counts.up = randomNumber(8) + 1;
          counts.mid = randomNumber(6) / 2;
          counts.down = randomNumber(8) + 1;
          break;
      }

      var arr = ['up', 'mid', 'down'];
      for (var d in arr) {
        var index = arr[d];
        for (var i = 0; i <= counts[index]; i++) {
          if (options[index]) {
            result = result + soul[index][randomNumber(soul[index].length)];
          }
        }
      }
    }
    return result;
  }
  // don't summon him
  return heComes(text, options);
};


},{}],91:[function(require,module,exports){
module['exports'] = function(colors) {
  return function(letter, i, exploded) {
    if (letter === ' ') return letter;
    switch (i%3) {
      case 0: return colors.red(letter);
      case 1: return colors.white(letter);
      case 2: return colors.blue(letter);
    }
  };
};

},{}],92:[function(require,module,exports){
module['exports'] = function(colors) {
  // RoY G BiV
  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta'];
  return function(letter, i, exploded) {
    if (letter === ' ') {
      return letter;
    } else {
      return colors[rainbowColors[i++ % rainbowColors.length]](letter);
    }
  };
};


},{}],93:[function(require,module,exports){
module['exports'] = function(colors) {
  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green',
    'blue', 'white', 'cyan', 'magenta', 'brightYellow', 'brightRed',
    'brightGreen', 'brightBlue', 'brightWhite', 'brightCyan', 'brightMagenta'];
  return function(letter, i, exploded) {
    return letter === ' ' ? letter :
      colors[
          available[Math.round(Math.random() * (available.length - 2))]
      ](letter);
  };
};

},{}],94:[function(require,module,exports){
module['exports'] = function(colors) {
  return function(letter, i, exploded) {
    return i % 2 === 0 ? letter : colors.inverse(letter);
  };
};

},{}],95:[function(require,module,exports){
/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

var styles = {};
module['exports'] = styles;

var codes = {
  reset: [0, 0],

  bold: [1, 22],
  dim: [2, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  hidden: [8, 28],
  strikethrough: [9, 29],

  black: [30, 39],
  red: [31, 39],
  green: [32, 39],
  yellow: [33, 39],
  blue: [34, 39],
  magenta: [35, 39],
  cyan: [36, 39],
  white: [37, 39],
  gray: [90, 39],
  grey: [90, 39],

  brightRed: [91, 39],
  brightGreen: [92, 39],
  brightYellow: [93, 39],
  brightBlue: [94, 39],
  brightMagenta: [95, 39],
  brightCyan: [96, 39],
  brightWhite: [97, 39],

  bgBlack: [40, 49],
  bgRed: [41, 49],
  bgGreen: [42, 49],
  bgYellow: [43, 49],
  bgBlue: [44, 49],
  bgMagenta: [45, 49],
  bgCyan: [46, 49],
  bgWhite: [47, 49],
  bgGray: [100, 49],
  bgGrey: [100, 49],

  bgBrightRed: [101, 49],
  bgBrightGreen: [102, 49],
  bgBrightYellow: [103, 49],
  bgBrightBlue: [104, 49],
  bgBrightMagenta: [105, 49],
  bgBrightCyan: [106, 49],
  bgBrightWhite: [107, 49],

  // legacy styles for colors pre v1.0.0
  blackBG: [40, 49],
  redBG: [41, 49],
  greenBG: [42, 49],
  yellowBG: [43, 49],
  blueBG: [44, 49],
  magentaBG: [45, 49],
  cyanBG: [46, 49],
  whiteBG: [47, 49],

};

Object.keys(codes).forEach(function(key) {
  var val = codes[key];
  var style = styles[key] = [];
  style.open = '\u001b[' + val[0] + 'm';
  style.close = '\u001b[' + val[1] + 'm';
});

},{}],96:[function(require,module,exports){
(function (process){(function (){
/*
MIT License

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

'use strict';

module.exports = function(flag, argv) {
  argv = argv || process.argv;

  var terminatorPos = argv.indexOf('--');
  var prefix = /^-{1,2}/.test(flag) ? '' : '--';
  var pos = argv.indexOf(prefix + flag);

  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};

}).call(this)}).call(this,require('_process'))
},{"_process":208}],97:[function(require,module,exports){
(function (process){(function (){
/*
The MIT License (MIT)

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

'use strict';

var os = require('os');
var hasFlag = require('./has-flag.js');

var env = process.env;

var forceColor = void 0;
if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {
  forceColor = false;
} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')
           || hasFlag('color=always')) {
  forceColor = true;
}
if ('FORCE_COLOR' in env) {
  forceColor = env.FORCE_COLOR.length === 0
    || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
  if (level === 0) {
    return false;
  }

  return {
    level: level,
    hasBasic: true,
    has256: level >= 2,
    has16m: level >= 3,
  };
}

function supportsColor(stream) {
  if (forceColor === false) {
    return 0;
  }

  if (hasFlag('color=16m') || hasFlag('color=full')
      || hasFlag('color=truecolor')) {
    return 3;
  }

  if (hasFlag('color=256')) {
    return 2;
  }

  if (stream && !stream.isTTY && forceColor !== true) {
    return 0;
  }

  var min = forceColor ? 1 : 0;

  if (process.platform === 'win32') {
    // Node.js 7.5.0 is the first version of Node.js to include a patch to
    // libuv that enables 256 color output on Windows. Anything earlier and it
    // won't work. However, here we target Node.js 8 at minimum as it is an LTS
    // release, and Node.js 7 is not. Windows 10 build 10586 is the first
    // Windows release that supports 256 colors. Windows 10 build 14931 is the
    // first release that supports 16m/TrueColor.
    var osRelease = os.release().split('.');
    if (Number(process.versions.node.split('.')[0]) >= 8
        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
      return Number(osRelease[2]) >= 14931 ? 3 : 2;
    }

    return 1;
  }

  if ('CI' in env) {
    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {
      return sign in env;
    }) || env.CI_NAME === 'codeship') {
      return 1;
    }

    return min;
  }

  if ('TEAMCITY_VERSION' in env) {
    return (/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0
    );
  }

  if ('TERM_PROGRAM' in env) {
    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

    switch (env.TERM_PROGRAM) {
      case 'iTerm.app':
        return version >= 3 ? 3 : 2;
      case 'Hyper':
        return 3;
      case 'Apple_Terminal':
        return 2;
      // No default
    }
  }

  if (/-256(color)?$/i.test(env.TERM)) {
    return 2;
  }

  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
    return 1;
  }

  if ('COLORTERM' in env) {
    return 1;
  }

  if (env.TERM === 'dumb') {
    return min;
  }

  return min;
}

function getSupportLevel(stream) {
  var level = supportsColor(stream);
  return translateLevel(level);
}

module.exports = {
  supportsColor: getSupportLevel,
  stdout: getSupportLevel(process.stdout),
  stderr: getSupportLevel(process.stderr),
};

}).call(this)}).call(this,require('_process'))
},{"./has-flag.js":96,"_process":208,"os":195}],98:[function(require,module,exports){
//
// Remark: Requiring this file will use the "safe" colors API,
// which will not touch String.prototype.
//
//   var colors = require('colors/safe');
//   colors.red("foo")
//
//
var colors = require('./lib/colors');
module['exports'] = colors;

},{"./lib/colors":88}],99:[function(require,module,exports){
(function (Buffer){(function (){
var elliptic = require('elliptic')
var BN = require('bn.js')

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"bn.js":100,"buffer":82,"elliptic":117}],100:[function(require,module,exports){
arguments[4][30][0].apply(exports,arguments)
},{"buffer":35,"dup":30}],101:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var MD5 = require('md5.js')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Base = require('cipher-base')

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}

},{"cipher-base":87,"inherits":178,"md5.js":185,"ripemd160":218,"sha.js":222}],102:[function(require,module,exports){
var MD5 = require('md5.js')

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}

},{"md5.js":185}],103:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"./legacy":104,"cipher-base":87,"create-hash/md5":102,"inherits":178,"ripemd160":218,"safe-buffer":219,"sha.js":222}],104:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"cipher-base":87,"inherits":178,"safe-buffer":219}],105:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = require('randomfill')

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"browserify-cipher":53,"browserify-sign":60,"browserify-sign/algos":57,"create-ecdh":99,"create-hash":101,"create-hmac":103,"diffie-hellman":112,"pbkdf2":202,"public-encrypt":209,"randombytes":216,"randomfill":217}],106:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":107,"./des/cipher":108,"./des/des":109,"./des/ede":110,"./des/utils":111}],107:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":178,"minimalistic-assert":188}],108:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":188}],109:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var utils = require('./utils');
var Cipher = require('./cipher');

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"./cipher":108,"./utils":111,"inherits":178,"minimalistic-assert":188}],110:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var Cipher = require('./cipher');
var DES = require('./des');

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"./cipher":108,"./des":109,"inherits":178,"minimalistic-assert":188}],111:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],112:[function(require,module,exports){
(function (Buffer){(function (){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this)}).call(this,require("buffer").Buffer)
},{"./lib/dh":113,"./lib/generatePrime":114,"./lib/primes.json":115,"buffer":82}],113:[function(require,module,exports){
(function (Buffer){(function (){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./generatePrime":114,"bn.js":116,"buffer":82,"miller-rabin":186,"randombytes":216}],114:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":116,"miller-rabin":186,"randombytes":216}],115:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],116:[function(require,module,exports){
arguments[4][30][0].apply(exports,arguments)
},{"buffer":35,"dup":30}],117:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":133,"./elliptic/curve":120,"./elliptic/curves":123,"./elliptic/ec":124,"./elliptic/eddsa":127,"./elliptic/utils":131,"brorand":34}],118:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../utils":131,"bn.js":132}],119:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var assert = utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
    this.y,
    this.z,
    this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../utils":131,"./base":118,"bn.js":132,"inherits":178}],120:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":118,"./edwards":119,"./mont":121,"./short":122}],121:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var utils = require('../utils');

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../utils":131,"./base":118,"bn.js":132,"inherits":178}],122:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var assert = utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../utils":131,"./base":118,"bn.js":132,"inherits":178}],123:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var curve = require('./curve');
var utils = require('./utils');

var assert = utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve.edwards(options);
  else
    this.curve = new curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});

},{"./curve":120,"./precomputed/secp256k1":130,"./utils":131,"hash.js":162}],124:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var utils = require('../utils');
var curves = require('../curves');
var rand = require('brorand');
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(Object.prototype.hasOwnProperty.call(curves, options),
      'Unknown curve ' + options);

    options = curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  for (;;) {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../curves":123,"../utils":131,"./key":125,"./signature":126,"bn.js":132,"brorand":34,"hmac-drbg":176}],125:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../utils":131,"bn.js":132}],126:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var utils = require('../utils');
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../utils":131,"bn.js":132}],127:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var curves = require('../curves');
var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
    .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../curves":123,"../utils":131,"./key":128,"./signature":129,"hash.js":162}],128:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../utils":131}],129:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength),
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../utils":131,"bn.js":132}],130:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
      ],
    ],
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
      ],
    ],
  },
};

},{}],131:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":132,"minimalistic-assert":188,"minimalistic-crypto-utils":189}],132:[function(require,module,exports){
arguments[4][30][0].apply(exports,arguments)
},{"buffer":35,"dup":30}],133:[function(require,module,exports){
module.exports={
  "name": "elliptic",
  "version": "6.5.4",
  "description": "EC cryptography",
  "main": "lib/elliptic.js",
  "files": [
    "lib"
  ],
  "scripts": {
    "lint": "eslint lib test",
    "lint:fix": "npm run lint -- --fix",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "test": "npm run lint && npm run unit",
    "version": "grunt dist && git add dist/"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:indutny/elliptic"
  },
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "author": "Fedor Indutny <fedor@indutny.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "homepage": "https://github.com/indutny/elliptic",
  "devDependencies": {
    "brfs": "^2.0.2",
    "coveralls": "^3.1.0",
    "eslint": "^7.6.0",
    "grunt": "^1.2.1",
    "grunt-browserify": "^5.3.0",
    "grunt-cli": "^1.3.2",
    "grunt-contrib-connect": "^3.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^5.0.0",
    "grunt-mocha-istanbul": "^5.0.2",
    "grunt-saucelabs": "^9.0.1",
    "istanbul": "^0.4.5",
    "mocha": "^8.0.1"
  },
  "dependencies": {
    "bn.js": "^4.11.9",
    "brorand": "^1.1.0",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.1",
    "inherits": "^2.0.4",
    "minimalistic-assert": "^1.0.1",
    "minimalistic-crypto-utils": "^1.0.1"
  }
}

},{}],134:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}],135:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"md5.js":185,"safe-buffer":219}],136:[function(require,module,exports){
'use strict';

var isCallable = require('is-callable');

var toStr = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

var forEachArray = function forEachArray(array, iterator, receiver) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            if (receiver == null) {
                iterator(array[i], i, array);
            } else {
                iterator.call(receiver, array[i], i, array);
            }
        }
    }
};

var forEachString = function forEachString(string, iterator, receiver) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        if (receiver == null) {
            iterator(string.charAt(i), i, string);
        } else {
            iterator.call(receiver, string.charAt(i), i, string);
        }
    }
};

var forEachObject = function forEachObject(object, iterator, receiver) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            if (receiver == null) {
                iterator(object[k], k, object);
            } else {
                iterator.call(receiver, object[k], k, object);
            }
        }
    }
};

var forEach = function forEach(list, iterator, thisArg) {
    if (!isCallable(iterator)) {
        throw new TypeError('iterator must be a function');
    }

    var receiver;
    if (arguments.length >= 3) {
        receiver = thisArg;
    }

    if (toStr.call(list) === '[object Array]') {
        forEachArray(list, iterator, receiver);
    } else if (typeof list === 'string') {
        forEachString(list, iterator, receiver);
    } else {
        forEachObject(list, iterator, receiver);
    }
};

module.exports = forEach;

},{"is-callable":180}],137:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],138:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":137}],139:[function(require,module,exports){
'use strict';

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();
var hasProto = require('has-proto')();

var getProto = Object.getPrototypeOf || (
	hasProto
		? function (x) { return x.__proto__; } // eslint-disable-line no-proto
		: null
);

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":138,"has":145,"has-proto":141,"has-symbols":142}],140:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;

},{"get-intrinsic":139}],141:[function(require,module,exports){
'use strict';

var test = {
	foo: {}
};

var $Object = Object;

module.exports = function hasProto() {
	return { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);
};

},{}],142:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":143}],143:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],144:[function(require,module,exports){
'use strict';

var hasSymbols = require('has-symbols/shams');

module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};

},{"has-symbols/shams":143}],145:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":138}],146:[function(require,module,exports){
'use strict'
var Buffer = require('safe-buffer').Buffer
var Transform = require('readable-stream').Transform
var inherits = require('inherits')

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

},{"inherits":178,"readable-stream":161,"safe-buffer":219}],147:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],148:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"./_stream_readable":150,"./_stream_writable":152,"_process":208,"dup":64,"inherits":178}],149:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./_stream_transform":151,"dup":65,"inherits":178}],150:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"../errors":147,"./_stream_duplex":148,"./internal/streams/async_iterator":153,"./internal/streams/buffer_list":154,"./internal/streams/destroy":155,"./internal/streams/from":157,"./internal/streams/state":159,"./internal/streams/stream":160,"_process":208,"buffer":82,"dup":66,"events":134,"inherits":178,"string_decoder/":244,"util":35}],151:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"../errors":147,"./_stream_duplex":148,"dup":67,"inherits":178}],152:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"../errors":147,"./_stream_duplex":148,"./internal/streams/destroy":155,"./internal/streams/state":159,"./internal/streams/stream":160,"_process":208,"buffer":82,"dup":68,"inherits":178,"util-deprecate":245}],153:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"./end-of-stream":156,"_process":208,"dup":69}],154:[function(require,module,exports){
arguments[4][70][0].apply(exports,arguments)
},{"buffer":82,"dup":70,"util":35}],155:[function(require,module,exports){
arguments[4][71][0].apply(exports,arguments)
},{"_process":208,"dup":71}],156:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"../../../errors":147,"dup":72}],157:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"dup":73}],158:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"../../../errors":147,"./end-of-stream":156,"dup":74}],159:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"../../../errors":147,"dup":75}],160:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"dup":76,"events":134}],161:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"./lib/_stream_duplex.js":148,"./lib/_stream_passthrough.js":149,"./lib/_stream_readable.js":150,"./lib/_stream_transform.js":151,"./lib/_stream_writable.js":152,"./lib/internal/streams/end-of-stream.js":156,"./lib/internal/streams/pipeline.js":158,"dup":77}],162:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":163,"./hash/hmac":164,"./hash/ripemd":165,"./hash/sha":166,"./hash/utils":173}],163:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":173,"minimalistic-assert":188}],164:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":173,"minimalistic-assert":188}],165:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./common":163,"./utils":173}],166:[function(require,module,exports){
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":167,"./sha/224":168,"./sha/256":169,"./sha/384":170,"./sha/512":171}],167:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":163,"../utils":173,"./common":172}],168:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":173,"./256":169}],169:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":163,"../utils":173,"./common":172,"minimalistic-assert":188}],170:[function(require,module,exports){
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":173,"./512":171}],171:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../common":163,"../utils":173,"minimalistic-assert":188}],172:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":173}],173:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"inherits":178,"minimalistic-assert":188}],174:[function(require,module,exports){
module.exports = require('./lib/heap');

},{"./lib/heap":175}],175:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;

  floor = Math.floor, min = Math.min;


  /*
  Default comparison function to be used
   */

  defaultCmp = function(x, y) {
    if (x < y) {
      return -1;
    }
    if (x > y) {
      return 1;
    }
    return 0;
  };


  /*
  Insert item x in list a, and keep it sorted assuming a is sorted.
  
  If x is already in a, insert it to the right of the rightmost x.
  
  Optional args lo (default 0) and hi (default a.length) bound the slice
  of a to be searched.
   */

  insort = function(a, x, lo, hi, cmp) {
    var mid;
    if (lo == null) {
      lo = 0;
    }
    if (cmp == null) {
      cmp = defaultCmp;
    }
    if (lo < 0) {
      throw new Error('lo must be non-negative');
    }
    if (hi == null) {
      hi = a.length;
    }
    while (lo < hi) {
      mid = floor((lo + hi) / 2);
      if (cmp(x, a[mid]) < 0) {
        hi = mid;
      } else {
        lo = mid + 1;
      }
    }
    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);
  };


  /*
  Push item onto heap, maintaining the heap invariant.
   */

  heappush = function(array, item, cmp) {
    if (cmp == null) {
      cmp = defaultCmp;
    }
    array.push(item);
    return _siftdown(array, 0, array.length - 1, cmp);
  };


  /*
  Pop the smallest item off the heap, maintaining the heap invariant.
   */

  heappop = function(array, cmp) {
    var lastelt, returnitem;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    lastelt = array.pop();
    if (array.length) {
      returnitem = array[0];
      array[0] = lastelt;
      _siftup(array, 0, cmp);
    } else {
      returnitem = lastelt;
    }
    return returnitem;
  };


  /*
  Pop and return the current smallest value, and add the new item.
  
  This is more efficient than heappop() followed by heappush(), and can be
  more appropriate when using a fixed size heap. Note that the value
  returned may be larger than item! That constrains reasonable use of
  this routine unless written as part of a conditional replacement:
      if item > array[0]
        item = heapreplace(array, item)
   */

  heapreplace = function(array, item, cmp) {
    var returnitem;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    returnitem = array[0];
    array[0] = item;
    _siftup(array, 0, cmp);
    return returnitem;
  };


  /*
  Fast version of a heappush followed by a heappop.
   */

  heappushpop = function(array, item, cmp) {
    var _ref;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    if (array.length && cmp(array[0], item) < 0) {
      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];
      _siftup(array, 0, cmp);
    }
    return item;
  };


  /*
  Transform list into a heap, in-place, in O(array.length) time.
   */

  heapify = function(array, cmp) {
    var i, _i, _j, _len, _ref, _ref1, _results, _results1;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    _ref1 = (function() {
      _results1 = [];
      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }
      return _results1;
    }).apply(this).reverse();
    _results = [];
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      i = _ref1[_i];
      _results.push(_siftup(array, i, cmp));
    }
    return _results;
  };


  /*
  Update the position of the given item in the heap.
  This function should be called every time the item is being modified.
   */

  updateItem = function(array, item, cmp) {
    var pos;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    pos = array.indexOf(item);
    if (pos === -1) {
      return;
    }
    _siftdown(array, 0, pos, cmp);
    return _siftup(array, pos, cmp);
  };


  /*
  Find the n largest elements in a dataset.
   */

  nlargest = function(array, n, cmp) {
    var elem, result, _i, _len, _ref;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    result = array.slice(0, n);
    if (!result.length) {
      return result;
    }
    heapify(result, cmp);
    _ref = array.slice(n);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      elem = _ref[_i];
      heappushpop(result, elem, cmp);
    }
    return result.sort(cmp).reverse();
  };


  /*
  Find the n smallest elements in a dataset.
   */

  nsmallest = function(array, n, cmp) {
    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    if (n * 10 <= array.length) {
      result = array.slice(0, n).sort(cmp);
      if (!result.length) {
        return result;
      }
      los = result[result.length - 1];
      _ref = array.slice(n);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        elem = _ref[_i];
        if (cmp(elem, los) < 0) {
          insort(result, elem, 0, null, cmp);
          result.pop();
          los = result[result.length - 1];
        }
      }
      return result;
    }
    heapify(array, cmp);
    _results = [];
    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
      _results.push(heappop(array, cmp));
    }
    return _results;
  };

  _siftdown = function(array, startpos, pos, cmp) {
    var newitem, parent, parentpos;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    newitem = array[pos];
    while (pos > startpos) {
      parentpos = (pos - 1) >> 1;
      parent = array[parentpos];
      if (cmp(newitem, parent) < 0) {
        array[pos] = parent;
        pos = parentpos;
        continue;
      }
      break;
    }
    return array[pos] = newitem;
  };

  _siftup = function(array, pos, cmp) {
    var childpos, endpos, newitem, rightpos, startpos;
    if (cmp == null) {
      cmp = defaultCmp;
    }
    endpos = array.length;
    startpos = pos;
    newitem = array[pos];
    childpos = 2 * pos + 1;
    while (childpos < endpos) {
      rightpos = childpos + 1;
      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {
        childpos = rightpos;
      }
      array[pos] = array[childpos];
      pos = childpos;
      childpos = 2 * pos + 1;
    }
    array[pos] = newitem;
    return _siftdown(array, startpos, pos, cmp);
  };

  Heap = (function() {
    Heap.push = heappush;

    Heap.pop = heappop;

    Heap.replace = heapreplace;

    Heap.pushpop = heappushpop;

    Heap.heapify = heapify;

    Heap.updateItem = updateItem;

    Heap.nlargest = nlargest;

    Heap.nsmallest = nsmallest;

    function Heap(cmp) {
      this.cmp = cmp != null ? cmp : defaultCmp;
      this.nodes = [];
    }

    Heap.prototype.push = function(x) {
      return heappush(this.nodes, x, this.cmp);
    };

    Heap.prototype.pop = function() {
      return heappop(this.nodes, this.cmp);
    };

    Heap.prototype.peek = function() {
      return this.nodes[0];
    };

    Heap.prototype.contains = function(x) {
      return this.nodes.indexOf(x) !== -1;
    };

    Heap.prototype.replace = function(x) {
      return heapreplace(this.nodes, x, this.cmp);
    };

    Heap.prototype.pushpop = function(x) {
      return heappushpop(this.nodes, x, this.cmp);
    };

    Heap.prototype.heapify = function() {
      return heapify(this.nodes, this.cmp);
    };

    Heap.prototype.updateItem = function(x) {
      return updateItem(this.nodes, x, this.cmp);
    };

    Heap.prototype.clear = function() {
      return this.nodes = [];
    };

    Heap.prototype.empty = function() {
      return this.nodes.length === 0;
    };

    Heap.prototype.size = function() {
      return this.nodes.length;
    };

    Heap.prototype.clone = function() {
      var heap;
      heap = new Heap();
      heap.nodes = this.nodes.slice(0);
      return heap;
    };

    Heap.prototype.toArray = function() {
      return this.nodes.slice(0);
    };

    Heap.prototype.insert = Heap.prototype.push;

    Heap.prototype.top = Heap.prototype.peek;

    Heap.prototype.front = Heap.prototype.peek;

    Heap.prototype.has = Heap.prototype.contains;

    Heap.prototype.copy = Heap.prototype.clone;

    return Heap;

  })();

  (function(root, factory) {
    if (typeof define === 'function' && define.amd) {
      return define([], factory);
    } else if (typeof exports === 'object') {
      return module.exports = factory();
    } else {
      return root.Heap = factory();
    }
  })(this, function() {
    return Heap;
  });

}).call(this);

},{}],176:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":162,"minimalistic-assert":188,"minimalistic-crypto-utils":189}],177:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],178:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],179:[function(require,module,exports){
'use strict';

var hasToStringTag = require('has-tostringtag/shams')();
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');

var isStandardArguments = function isArguments(value) {
	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null &&
		typeof value === 'object' &&
		typeof value.length === 'number' &&
		value.length >= 0 &&
		$toString(value) !== '[object Array]' &&
		$toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

},{"call-bind/callBound":85,"has-tostringtag/shams":144}],180:[function(require,module,exports){
'use strict';

var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var objectClass = '[object Object]';
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var ddaClass = '[object HTMLAllCollection]'; // IE 11
var ddaClass2 = '[object HTML document.all class]';
var ddaClass3 = '[object HTMLCollection]'; // IE 9-10
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`

var isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing

var isDDA = function isDocumentDotAll() { return false; };
if (typeof document === 'object') {
	// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly
	var all = document.all;
	if (toStr.call(all) === toStr.call(document.all)) {
		isDDA = function isDocumentDotAll(value) {
			/* globals document: false */
			// in IE 6-8, typeof document.all is "object" and it's truthy
			if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {
				try {
					var str = toStr.call(value);
					return (
						str === ddaClass
						|| str === ddaClass2
						|| str === ddaClass3 // opera 12.16
						|| str === objectClass // IE 6-8
					) && value('') == null; // eslint-disable-line eqeqeq
				} catch (e) { /**/ }
			}
			return false;
		};
	}
}

module.exports = reflectApply
	? function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value) && tryFunctionObject(value);
	}
	: function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		if (strClass !== fnClass && strClass !== genClass && !(/^\[object HTML/).test(strClass)) { return false; }
		return tryFunctionObject(value);
	};

},{}],181:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;
var fnToStr = Function.prototype.toString;
var isFnRegex = /^\s*(?:function)?\*/;
var hasToStringTag = require('has-tostringtag/shams')();
var getProto = Object.getPrototypeOf;
var getGeneratorFunc = function () { // eslint-disable-line consistent-return
	if (!hasToStringTag) {
		return false;
	}
	try {
		return Function('return function*() {}')();
	} catch (e) {
	}
};
var GeneratorFunction;

module.exports = function isGeneratorFunction(fn) {
	if (typeof fn !== 'function') {
		return false;
	}
	if (isFnRegex.test(fnToStr.call(fn))) {
		return true;
	}
	if (!hasToStringTag) {
		var str = toStr.call(fn);
		return str === '[object GeneratorFunction]';
	}
	if (!getProto) {
		return false;
	}
	if (typeof GeneratorFunction === 'undefined') {
		var generatorFunc = getGeneratorFunc();
		GeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;
	}
	return getProto(fn) === GeneratorFunction;
};

},{"has-tostringtag/shams":144}],182:[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('for-each');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasToStringTag = require('has-tostringtag/shams')();
var gOPD = require('gopd');

var g = typeof globalThis === 'undefined' ? global : globalThis;
var typedArrays = availableTypedArrays();

var $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {
	for (var i = 0; i < array.length; i += 1) {
		if (array[i] === value) {
			return i;
		}
	}
	return -1;
};
var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		var arr = new g[typedArray]();
		if (Symbol.toStringTag in arr) {
			var proto = getPrototypeOf(arr);
			var descriptor = gOPD(proto, Symbol.toStringTag);
			if (!descriptor) {
				var superProto = getPrototypeOf(proto);
				descriptor = gOPD(superProto, Symbol.toStringTag);
			}
			toStrTags[typedArray] = descriptor.get;
		}
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var anyTrue = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!anyTrue) {
			try {
				anyTrue = getter.call(value) === typedArray;
			} catch (e) { /**/ }
		}
	});
	return anyTrue;
};

module.exports = function isTypedArray(value) {
	if (!value || typeof value !== 'object') { return false; }
	if (!hasToStringTag || !(Symbol.toStringTag in value)) {
		var tag = $slice($toString(value), 8, -1);
		return $indexOf(typedArrays, tag) > -1;
	}
	if (!gOPD) { return false; }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":31,"call-bind/callBound":85,"for-each":136,"gopd":140,"has-tostringtag/shams":144}],183:[function(require,module,exports){
const color = require('colors/safe')

const { extendedTypeOf } = require('./util')

const Theme = {
  ' ' (s) { return s },
  '+': color.green,
  '-': color.red
}

const subcolorizeToCallback = function (options, key, diff, output, color, indent) {
  let subvalue
  const prefix = key ? `${key}: ` : ''
  const subindent = indent + '  '

  const outputElisions = (n) => {
    const maxElisions = options.maxElisions === undefined ? Infinity : options.maxElisions
    if (n < maxElisions) {
      for (let i = 0; i < n; i++) {
        output(' ', subindent + '...')
      }
    } else {
      output(' ', subindent + `... (${n} entries)`)
    }
  }

  switch (extendedTypeOf(diff)) {
    case 'object':
      if (('__old' in diff) && ('__new' in diff) && (Object.keys(diff).length === 2)) {
        subcolorizeToCallback(options, key, diff.__old, output, '-', indent)
        return subcolorizeToCallback(options, key, diff.__new, output, '+', indent)
      } else {
        output(color, `${indent}${prefix}{`)
        for (const subkey of Object.keys(diff)) {
          let m
          subvalue = diff[subkey]
          if ((m = subkey.match(/^(.*)__deleted$/))) {
            subcolorizeToCallback(options, m[1], subvalue, output, '-', subindent)
          } else if ((m = subkey.match(/^(.*)__added$/))) {
            subcolorizeToCallback(options, m[1], subvalue, output, '+', subindent)
          } else {
            subcolorizeToCallback(options, subkey, subvalue, output, color, subindent)
          }
        }
        return output(color, `${indent}}`)
      }

    case 'array': {
      output(color, `${indent}${prefix}[`)

      let looksLikeDiff = true
      for (const item of diff) {
        if ((extendedTypeOf(item) !== 'array') || !((item.length === 2) || ((item.length === 1) && (item[0] === ' '))) || !(typeof (item[0]) === 'string') || (item[0].length !== 1) || !([' ', '-', '+', '~'].includes(item[0]))) {
          looksLikeDiff = false
        }
      }

      if (looksLikeDiff) {
        let op
        let elisionCount = 0
        for ([op, subvalue] of diff) {
          if (op === ' ' && subvalue == null) {
            elisionCount++
          } else {
            if (elisionCount > 0) {
              outputElisions(elisionCount)
            }
            elisionCount = 0

            if (![' ', '~', '+', '-'].includes(op)) {
              throw new Error(`Unexpected op '${op}' in ${JSON.stringify(diff, null, 2)}`)
            }
            if (op === '~') { op = ' ' }
            subcolorizeToCallback(options, '', subvalue, output, op, subindent)
          }
        }
        if (elisionCount > 0) {
          outputElisions(elisionCount)
        }
      } else {
        for (subvalue of diff) {
          subcolorizeToCallback(options, '', subvalue, output, color, subindent)
        }
      }

      return output(color, `${indent}]`)
    }

    default:
      if (diff === 0 || diff === null || diff === false || diff === '' || diff) {
        return output(color, indent + prefix + JSON.stringify(diff))
      }
  }
}

const colorizeToCallback = (diff, options, output) =>
  subcolorizeToCallback(options, '', diff, output, ' ', '')

const colorizeToArray = function (diff, options = {}) {
  const output = []
  colorizeToCallback(diff, options, (color, line) => output.push(`${color}${line}`))
  return output
}

const colorize = function (diff, options = {}) {
  const output = []
  colorizeToCallback(diff, options, function (color, line) {
    if (options.color != null ? options.color : true) {
      return output.push(((options.theme != null ? options.theme[color] : undefined) != null ? (options.theme != null ? options.theme[color] : undefined) : Theme[color])(`${color}${line}`) + '\n')
    } else {
      return output.push(`${color}${line}\n`)
    }
  })
  return output.join('')
}

module.exports = { colorize, colorizeToArray, colorizeToCallback }

},{"./util":184,"colors/safe":98}],184:[function(require,module,exports){
const extendedTypeOf = function (obj) {
  const result = typeof obj
  if (obj == null) {
    return 'null'
  } else if (result === 'object' && obj.constructor === Array) {
    return 'array'
  } else if (result === 'object' && obj instanceof Date) {
    return 'date'
  } else {
    return result
  }
}

const roundObj = function (data, precision) {
  const type = typeof data
  if (type === 'array') {
    return data.map((x) => roundObj(x, precision))
  } else if (type === 'object') {
    for (const key in data) {
      data[key] = roundObj(data[key], precision)
    }
    return data
  } else if (
    type === 'number' &&
    Number.isFinite(data) &&
    !Number.isInteger(data)
  ) {
    return +data.toFixed(precision)
  } else {
    return data
  }
}

module.exports = { extendedTypeOf, roundObj }

},{}],185:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')
var Buffer = require('safe-buffer').Buffer

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.allocUnsafe(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

},{"hash-base":146,"inherits":178,"safe-buffer":219}],186:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":187,"brorand":34}],187:[function(require,module,exports){
arguments[4][30][0].apply(exports,arguments)
},{"buffer":35,"dup":30}],188:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],189:[function(require,module,exports){
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],190:[function(require,module,exports){
'use strict';

var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = require('./isArguments'); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;

},{"./isArguments":192}],191:[function(require,module,exports){
'use strict';

var slice = Array.prototype.slice;
var isArgs = require('./isArguments');

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./implementation":190,"./isArguments":192}],192:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],193:[function(require,module,exports){
'use strict';

// modified from https://github.com/es-shims/es6-shim
var objectKeys = require('object-keys');
var hasSymbols = require('has-symbols/shams')();
var callBound = require('call-bind/callBound');
var toObject = Object;
var $push = callBound('Array.prototype.push');
var $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');
var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;

// eslint-disable-next-line no-unused-vars
module.exports = function assign(target, source1) {
	if (target == null) { throw new TypeError('target must be an object'); }
	var to = toObject(target); // step 1
	if (arguments.length === 1) {
		return to; // step 2
	}
	for (var s = 1; s < arguments.length; ++s) {
		var from = toObject(arguments[s]); // step 3.a.i

		// step 3.a.ii:
		var keys = objectKeys(from);
		var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
		if (getSymbols) {
			var syms = getSymbols(from);
			for (var j = 0; j < syms.length; ++j) {
				var key = syms[j];
				if ($propIsEnumerable(from, key)) {
					$push(keys, key);
				}
			}
		}

		// step 3.a.iii:
		for (var i = 0; i < keys.length; ++i) {
			var nextKey = keys[i];
			if ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2
				var propValue = from[nextKey]; // step 3.a.iii.2.a
				to[nextKey] = propValue; // step 3.a.iii.2.b
			}
		}
	}

	return to; // step 4
};

},{"call-bind/callBound":85,"has-symbols/shams":143,"object-keys":191}],194:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var lacksProperEnumerationOrder = function () {
	if (!Object.assign) {
		return false;
	}
	/*
	 * v8, specifically in node 4.x, has a bug with incorrect property enumeration order
	 * note: this does not detect the bug unless there's 20 characters
	 */
	var str = 'abcdefghijklmnopqrst';
	var letters = str.split('');
	var map = {};
	for (var i = 0; i < letters.length; ++i) {
		map[letters[i]] = letters[i];
	}
	var obj = Object.assign({}, map);
	var actual = '';
	for (var k in obj) {
		actual += k;
	}
	return str !== actual;
};

var assignHasPendingExceptions = function () {
	if (!Object.assign || !Object.preventExtensions) {
		return false;
	}
	/*
	 * Firefox 37 still has "pending exception" logic in its Object.assign implementation,
	 * which is 72% slower than our shim, and Firefox 40's native implementation.
	 */
	var thrower = Object.preventExtensions({ 1: 2 });
	try {
		Object.assign(thrower, 'xy');
	} catch (e) {
		return thrower[1] === 'y';
	}
	return false;
};

module.exports = function getPolyfill() {
	if (!Object.assign) {
		return implementation;
	}
	if (lacksProperEnumerationOrder()) {
		return implementation;
	}
	if (assignHasPendingExceptions()) {
		return implementation;
	}
	return Object.assign;
};

},{"./implementation":193}],195:[function(require,module,exports){
exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

exports.homedir = function () {
	return '/'
};

},{}],196:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],197:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"./certificate":198,"asn1.js":16}],198:[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional(),
    this.key('curve').objid().optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int().optional(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":16}],199:[function(require,module,exports){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
var Buffer = require('safe-buffer').Buffer
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = Buffer.from(match[2], 'hex')
    var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

},{"browserify-aes":38,"evp_bytestokey":135,"safe-buffer":219}],200:[function(require,module,exports){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
var Buffer = require('safe-buffer').Buffer
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

},{"./aesid.json":196,"./asn1":197,"./fixProc":199,"browserify-aes":38,"pbkdf2":202,"safe-buffer":219}],201:[function(require,module,exports){
(function (process){(function (){
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;

}).call(this)}).call(this,require('_process'))
},{"_process":208}],202:[function(require,module,exports){
exports.pbkdf2 = require('./lib/async')
exports.pbkdf2Sync = require('./lib/sync')

},{"./lib/async":203,"./lib/sync":206}],203:[function(require,module,exports){
(function (global){(function (){
var Buffer = require('safe-buffer').Buffer

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var toBuffer = require('./to-buffer')

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  sha: 'SHA-1',
  'sha-1': 'SHA-1',
  sha1: 'SHA-1',
  sha256: 'SHA-256',
  'sha-256': 'SHA-256',
  sha384: 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  sha512: 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}
var nextTick
function getNextTick () {
  if (nextTick) {
    return nextTick
  }
  if (global.process && global.process.nextTick) {
    nextTick = global.process.nextTick
  } else if (global.queueMicrotask) {
    nextTick = global.queueMicrotask
  } else if (global.setImmediate) {
    nextTick = global.setImmediate
  } else {
    nextTick = global.setTimeout
  }
  return nextTick
}
function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    getNextTick()(function () {
      callback(null, out)
    })
  }, function (e) {
    getNextTick()(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    getNextTick()(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
    return
  }

  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./default-encoding":204,"./precondition":205,"./sync":206,"./to-buffer":207,"safe-buffer":219}],204:[function(require,module,exports){
(function (process,global){(function (){
var defaultEncoding
/* istanbul ignore next */
if (global.process && global.process.browser) {
  defaultEncoding = 'utf-8'
} else if (global.process && global.process.version) {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
} else {
  defaultEncoding = 'utf-8'
}
module.exports = defaultEncoding

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":208}],205:[function(require,module,exports){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

},{}],206:[function(require,module,exports){
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Buffer = require('safe-buffer').Buffer

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var toBuffer = require('./to-buffer')

var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }
  function rmd160Func (data) {
    return new RIPEMD160().update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2

},{"./default-encoding":204,"./precondition":205,"./to-buffer":207,"create-hash/md5":102,"ripemd160":218,"safe-buffer":219,"sha.js":222}],207:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

module.exports = function (thing, encoding, name) {
  if (Buffer.isBuffer(thing)) {
    return thing
  } else if (typeof thing === 'string') {
    return Buffer.from(thing, encoding)
  } else if (ArrayBuffer.isView(thing)) {
    return Buffer.from(thing.buffer)
  } else {
    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')
  }
}

},{"safe-buffer":219}],208:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],209:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt')
exports.privateDecrypt = require('./privateDecrypt')

exports.privateEncrypt = function privateEncrypt (key, buf) {
  return exports.publicEncrypt(key, buf, true)
}

exports.publicDecrypt = function publicDecrypt (key, buf) {
  return exports.privateDecrypt(key, buf, true)
}

},{"./privateDecrypt":212,"./publicEncrypt":213}],210:[function(require,module,exports){
var createHash = require('create-hash')
var Buffer = require('safe-buffer').Buffer

module.exports = function (seed, len) {
  var t = Buffer.alloc(0)
  var i = 0
  var c
  while (t.length < len) {
    c = i2ops(i++)
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
  }
  return t.slice(0, len)
}

function i2ops (c) {
  var out = Buffer.allocUnsafe(4)
  out.writeUInt32BE(c, 0)
  return out
}

},{"create-hash":101,"safe-buffer":219}],211:[function(require,module,exports){
arguments[4][30][0].apply(exports,arguments)
},{"buffer":35,"dup":30}],212:[function(require,module,exports){
var parseKeys = require('parse-asn1')
var mgf = require('./mgf')
var xor = require('./xor')
var BN = require('bn.js')
var crt = require('browserify-rsa')
var createHash = require('create-hash')
var withPublic = require('./withPublic')
var Buffer = require('safe-buffer').Buffer

module.exports = function privateDecrypt (privateKey, enc, reverse) {
  var padding
  if (privateKey.padding) {
    padding = privateKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }

  var key = parseKeys(privateKey)
  var k = key.modulus.byteLength()
  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error')
  }
  var msg
  if (reverse) {
    msg = withPublic(new BN(enc), key)
  } else {
    msg = crt(enc, key)
  }
  var zBuffer = Buffer.alloc(k - msg.length)
  msg = Buffer.concat([zBuffer, msg], k)
  if (padding === 4) {
    return oaep(key, msg)
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    return msg
  } else {
    throw new Error('unknown padding')
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  if (msg[0] !== 0) {
    throw new Error('decryption error')
  }
  var maskedSeed = msg.slice(1, hLen + 1)
  var maskedDb = msg.slice(hLen + 1)
  var seed = xor(maskedSeed, mgf(maskedDb, hLen))
  var db = xor(maskedDb, mgf(seed, k - hLen - 1))
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error')
  }
  var i = hLen
  while (db[i] === 0) {
    i++
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error')
  }
  return db.slice(i)
}

function pkcs1 (key, msg, reverse) {
  var p1 = msg.slice(0, 2)
  var i = 2
  var status = 0
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++
      break
    }
  }
  var ps = msg.slice(2, i - 1)

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
    status++
  }
  if (ps.length < 8) {
    status++
  }
  if (status) {
    throw new Error('decryption error')
  }
  return msg.slice(i)
}
function compare (a, b) {
  a = Buffer.from(a)
  b = Buffer.from(b)
  var dif = 0
  var len = a.length
  if (a.length !== b.length) {
    dif++
    len = Math.min(a.length, b.length)
  }
  var i = -1
  while (++i < len) {
    dif += (a[i] ^ b[i])
  }
  return dif
}

},{"./mgf":210,"./withPublic":214,"./xor":215,"bn.js":211,"browserify-rsa":56,"create-hash":101,"parse-asn1":200,"safe-buffer":219}],213:[function(require,module,exports){
var parseKeys = require('parse-asn1')
var randomBytes = require('randombytes')
var createHash = require('create-hash')
var mgf = require('./mgf')
var xor = require('./xor')
var BN = require('bn.js')
var withPublic = require('./withPublic')
var crt = require('browserify-rsa')
var Buffer = require('safe-buffer').Buffer

module.exports = function publicEncrypt (publicKey, msg, reverse) {
  var padding
  if (publicKey.padding) {
    padding = publicKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }
  var key = parseKeys(publicKey)
  var paddedMsg
  if (padding === 4) {
    paddedMsg = oaep(key, msg)
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    paddedMsg = new BN(msg)
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus')
    }
  } else {
    throw new Error('unknown padding')
  }
  if (reverse) {
    return crt(paddedMsg, key)
  } else {
    return withPublic(paddedMsg, key)
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var mLen = msg.length
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  var hLen2 = 2 * hLen
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long')
  }
  var ps = Buffer.alloc(k - mLen - hLen2 - 2)
  var dblen = k - hLen - 1
  var seed = randomBytes(hLen)
  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
  var maskedSeed = xor(seed, mgf(maskedDb, hLen))
  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
}
function pkcs1 (key, msg, reverse) {
  var mLen = msg.length
  var k = key.modulus.byteLength()
  if (mLen > k - 11) {
    throw new Error('message too long')
  }
  var ps
  if (reverse) {
    ps = Buffer.alloc(k - mLen - 3, 0xff)
  } else {
    ps = nonZero(k - mLen - 3)
  }
  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
}
function nonZero (len) {
  var out = Buffer.allocUnsafe(len)
  var i = 0
  var cache = randomBytes(len * 2)
  var cur = 0
  var num
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len * 2)
      cur = 0
    }
    num = cache[cur++]
    if (num) {
      out[i++] = num
    }
  }
  return out
}

},{"./mgf":210,"./withPublic":214,"./xor":215,"bn.js":211,"browserify-rsa":56,"create-hash":101,"parse-asn1":200,"randombytes":216,"safe-buffer":219}],214:[function(require,module,exports){
var BN = require('bn.js')
var Buffer = require('safe-buffer').Buffer

function withPublic (paddedMsg, key) {
  return Buffer.from(paddedMsg
    .toRed(BN.mont(key.modulus))
    .redPow(new BN(key.publicExponent))
    .fromRed()
    .toArray())
}

module.exports = withPublic

},{"bn.js":211,"safe-buffer":219}],215:[function(require,module,exports){
module.exports = function xor (a, b) {
  var len = a.length
  var i = -1
  while (++i < len) {
    a[i] ^= b[i]
  }
  return a
}

},{}],216:[function(require,module,exports){
(function (process,global){(function (){
'use strict'

// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES = 65536

// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32 = 4294967295

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')

  var bytes = Buffer.allocUnsafe(size)

  if (size > 0) {  // getRandomValues fails on IE if size == 0
    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues
      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
      for (var generated = 0; generated < size; generated += MAX_BYTES) {
        // buffer.slice automatically checks if the end is past the end of
        // the buffer so we don't have to here
        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
      }
    } else {
      crypto.getRandomValues(bytes)
    }
  }

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":208,"safe-buffer":219}],217:[function(require,module,exports){
(function (process,global){(function (){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = require('safe-buffer')
var randombytes = require('randombytes')
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":208,"randombytes":216,"safe-buffer":219}],218:[function(require,module,exports){
'use strict'
var Buffer = require('buffer').Buffer
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

},{"buffer":82,"hash-base":146,"inherits":178}],219:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":82}],220:[function(require,module,exports){
(function (process){(function (){
/* eslint-disable node/no-deprecated-api */

'use strict'

var buffer = require('buffer')
var Buffer = buffer.Buffer

var safer = {}

var key

for (key in buffer) {
  if (!buffer.hasOwnProperty(key)) continue
  if (key === 'SlowBuffer' || key === 'Buffer') continue
  safer[key] = buffer[key]
}

var Safer = safer.Buffer = {}
for (key in Buffer) {
  if (!Buffer.hasOwnProperty(key)) continue
  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue
  Safer[key] = Buffer[key]
}

safer.Buffer.prototype = Buffer.prototype

if (!Safer.from || Safer.from === Uint8Array.from) {
  Safer.from = function (value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value)
    }
    if (value && typeof value.length === 'undefined') {
      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)
    }
    return Buffer(value, encodingOrOffset, length)
  }
}

if (!Safer.alloc) {
  Safer.alloc = function (size, fill, encoding) {
    if (typeof size !== 'number') {
      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size)
    }
    if (size < 0 || size >= 2 * (1 << 30)) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"')
    }
    var buf = Buffer(size)
    if (!fill || fill.length === 0) {
      buf.fill(0)
    } else if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
    return buf
  }
}

if (!safer.kStringMaxLength) {
  try {
    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength
  } catch (e) {
    // we can't determine kStringMaxLength in environments where process.binding
    // is unsupported, so let's not set it
  }
}

if (!safer.constants) {
  safer.constants = {
    MAX_LENGTH: safer.kMaxLength
  }
  if (safer.kStringMaxLength) {
    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength
  }
}

module.exports = safer

}).call(this)}).call(this,require('_process'))
},{"_process":208,"buffer":82}],221:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

},{"safe-buffer":219}],222:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":223,"./sha1":224,"./sha224":225,"./sha256":226,"./sha384":227,"./sha512":228}],223:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

},{"./hash":221,"inherits":178,"safe-buffer":219}],224:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

},{"./hash":221,"inherits":178,"safe-buffer":219}],225:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

},{"./hash":221,"./sha256":226,"inherits":178,"safe-buffer":219}],226:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

},{"./hash":221,"inherits":178,"safe-buffer":219}],227:[function(require,module,exports){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

},{"./hash":221,"./sha512":228,"inherits":178,"safe-buffer":219}],228:[function(require,module,exports){
var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

},{"./hash":221,"inherits":178,"safe-buffer":219}],229:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":134,"inherits":178,"readable-stream/lib/_stream_duplex.js":231,"readable-stream/lib/_stream_passthrough.js":232,"readable-stream/lib/_stream_readable.js":233,"readable-stream/lib/_stream_transform.js":234,"readable-stream/lib/_stream_writable.js":235,"readable-stream/lib/internal/streams/end-of-stream.js":239,"readable-stream/lib/internal/streams/pipeline.js":241}],230:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],231:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"./_stream_readable":233,"./_stream_writable":235,"_process":208,"dup":64,"inherits":178}],232:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./_stream_transform":234,"dup":65,"inherits":178}],233:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"../errors":230,"./_stream_duplex":231,"./internal/streams/async_iterator":236,"./internal/streams/buffer_list":237,"./internal/streams/destroy":238,"./internal/streams/from":240,"./internal/streams/state":242,"./internal/streams/stream":243,"_process":208,"buffer":82,"dup":66,"events":134,"inherits":178,"string_decoder/":244,"util":35}],234:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"../errors":230,"./_stream_duplex":231,"dup":67,"inherits":178}],235:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"../errors":230,"./_stream_duplex":231,"./internal/streams/destroy":238,"./internal/streams/state":242,"./internal/streams/stream":243,"_process":208,"buffer":82,"dup":68,"inherits":178,"util-deprecate":245}],236:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"./end-of-stream":239,"_process":208,"dup":69}],237:[function(require,module,exports){
arguments[4][70][0].apply(exports,arguments)
},{"buffer":82,"dup":70,"util":35}],238:[function(require,module,exports){
arguments[4][71][0].apply(exports,arguments)
},{"_process":208,"dup":71}],239:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"../../../errors":230,"dup":72}],240:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"dup":73}],241:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"../../../errors":230,"./end-of-stream":239,"dup":74}],242:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"../../../errors":230,"dup":75}],243:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"dup":76,"events":134}],244:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":219}],245:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],246:[function(require,module,exports){
arguments[4][80][0].apply(exports,arguments)
},{"dup":80}],247:[function(require,module,exports){
// Currently in sync with Node.js lib/internal/util/types.js
// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9

'use strict';

var isArgumentsObject = require('is-arguments');
var isGeneratorFunction = require('is-generator-function');
var whichTypedArray = require('which-typed-array');
var isTypedArray = require('is-typed-array');

function uncurryThis(f) {
  return f.call.bind(f);
}

var BigIntSupported = typeof BigInt !== 'undefined';
var SymbolSupported = typeof Symbol !== 'undefined';

var ObjectToString = uncurryThis(Object.prototype.toString);

var numberValue = uncurryThis(Number.prototype.valueOf);
var stringValue = uncurryThis(String.prototype.valueOf);
var booleanValue = uncurryThis(Boolean.prototype.valueOf);

if (BigIntSupported) {
  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
}

if (SymbolSupported) {
  var symbolValue = uncurryThis(Symbol.prototype.valueOf);
}

function checkBoxedPrimitive(value, prototypeValueOf) {
  if (typeof value !== 'object') {
    return false;
  }
  try {
    prototypeValueOf(value);
    return true;
  } catch(e) {
    return false;
  }
}

exports.isArgumentsObject = isArgumentsObject;
exports.isGeneratorFunction = isGeneratorFunction;
exports.isTypedArray = isTypedArray;

// Taken from here and modified for better browser support
// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js
function isPromise(input) {
	return (
		(
			typeof Promise !== 'undefined' &&
			input instanceof Promise
		) ||
		(
			input !== null &&
			typeof input === 'object' &&
			typeof input.then === 'function' &&
			typeof input.catch === 'function'
		)
	);
}
exports.isPromise = isPromise;

function isArrayBufferView(value) {
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    return ArrayBuffer.isView(value);
  }

  return (
    isTypedArray(value) ||
    isDataView(value)
  );
}
exports.isArrayBufferView = isArrayBufferView;


function isUint8Array(value) {
  return whichTypedArray(value) === 'Uint8Array';
}
exports.isUint8Array = isUint8Array;

function isUint8ClampedArray(value) {
  return whichTypedArray(value) === 'Uint8ClampedArray';
}
exports.isUint8ClampedArray = isUint8ClampedArray;

function isUint16Array(value) {
  return whichTypedArray(value) === 'Uint16Array';
}
exports.isUint16Array = isUint16Array;

function isUint32Array(value) {
  return whichTypedArray(value) === 'Uint32Array';
}
exports.isUint32Array = isUint32Array;

function isInt8Array(value) {
  return whichTypedArray(value) === 'Int8Array';
}
exports.isInt8Array = isInt8Array;

function isInt16Array(value) {
  return whichTypedArray(value) === 'Int16Array';
}
exports.isInt16Array = isInt16Array;

function isInt32Array(value) {
  return whichTypedArray(value) === 'Int32Array';
}
exports.isInt32Array = isInt32Array;

function isFloat32Array(value) {
  return whichTypedArray(value) === 'Float32Array';
}
exports.isFloat32Array = isFloat32Array;

function isFloat64Array(value) {
  return whichTypedArray(value) === 'Float64Array';
}
exports.isFloat64Array = isFloat64Array;

function isBigInt64Array(value) {
  return whichTypedArray(value) === 'BigInt64Array';
}
exports.isBigInt64Array = isBigInt64Array;

function isBigUint64Array(value) {
  return whichTypedArray(value) === 'BigUint64Array';
}
exports.isBigUint64Array = isBigUint64Array;

function isMapToString(value) {
  return ObjectToString(value) === '[object Map]';
}
isMapToString.working = (
  typeof Map !== 'undefined' &&
  isMapToString(new Map())
);

function isMap(value) {
  if (typeof Map === 'undefined') {
    return false;
  }

  return isMapToString.working
    ? isMapToString(value)
    : value instanceof Map;
}
exports.isMap = isMap;

function isSetToString(value) {
  return ObjectToString(value) === '[object Set]';
}
isSetToString.working = (
  typeof Set !== 'undefined' &&
  isSetToString(new Set())
);
function isSet(value) {
  if (typeof Set === 'undefined') {
    return false;
  }

  return isSetToString.working
    ? isSetToString(value)
    : value instanceof Set;
}
exports.isSet = isSet;

function isWeakMapToString(value) {
  return ObjectToString(value) === '[object WeakMap]';
}
isWeakMapToString.working = (
  typeof WeakMap !== 'undefined' &&
  isWeakMapToString(new WeakMap())
);
function isWeakMap(value) {
  if (typeof WeakMap === 'undefined') {
    return false;
  }

  return isWeakMapToString.working
    ? isWeakMapToString(value)
    : value instanceof WeakMap;
}
exports.isWeakMap = isWeakMap;

function isWeakSetToString(value) {
  return ObjectToString(value) === '[object WeakSet]';
}
isWeakSetToString.working = (
  typeof WeakSet !== 'undefined' &&
  isWeakSetToString(new WeakSet())
);
function isWeakSet(value) {
  return isWeakSetToString(value);
}
exports.isWeakSet = isWeakSet;

function isArrayBufferToString(value) {
  return ObjectToString(value) === '[object ArrayBuffer]';
}
isArrayBufferToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  isArrayBufferToString(new ArrayBuffer())
);
function isArrayBuffer(value) {
  if (typeof ArrayBuffer === 'undefined') {
    return false;
  }

  return isArrayBufferToString.working
    ? isArrayBufferToString(value)
    : value instanceof ArrayBuffer;
}
exports.isArrayBuffer = isArrayBuffer;

function isDataViewToString(value) {
  return ObjectToString(value) === '[object DataView]';
}
isDataViewToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  typeof DataView !== 'undefined' &&
  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))
);
function isDataView(value) {
  if (typeof DataView === 'undefined') {
    return false;
  }

  return isDataViewToString.working
    ? isDataViewToString(value)
    : value instanceof DataView;
}
exports.isDataView = isDataView;

// Store a copy of SharedArrayBuffer in case it's deleted elsewhere
var SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;
function isSharedArrayBufferToString(value) {
  return ObjectToString(value) === '[object SharedArrayBuffer]';
}
function isSharedArrayBuffer(value) {
  if (typeof SharedArrayBufferCopy === 'undefined') {
    return false;
  }

  if (typeof isSharedArrayBufferToString.working === 'undefined') {
    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());
  }

  return isSharedArrayBufferToString.working
    ? isSharedArrayBufferToString(value)
    : value instanceof SharedArrayBufferCopy;
}
exports.isSharedArrayBuffer = isSharedArrayBuffer;

function isAsyncFunction(value) {
  return ObjectToString(value) === '[object AsyncFunction]';
}
exports.isAsyncFunction = isAsyncFunction;

function isMapIterator(value) {
  return ObjectToString(value) === '[object Map Iterator]';
}
exports.isMapIterator = isMapIterator;

function isSetIterator(value) {
  return ObjectToString(value) === '[object Set Iterator]';
}
exports.isSetIterator = isSetIterator;

function isGeneratorObject(value) {
  return ObjectToString(value) === '[object Generator]';
}
exports.isGeneratorObject = isGeneratorObject;

function isWebAssemblyCompiledModule(value) {
  return ObjectToString(value) === '[object WebAssembly.Module]';
}
exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;

function isNumberObject(value) {
  return checkBoxedPrimitive(value, numberValue);
}
exports.isNumberObject = isNumberObject;

function isStringObject(value) {
  return checkBoxedPrimitive(value, stringValue);
}
exports.isStringObject = isStringObject;

function isBooleanObject(value) {
  return checkBoxedPrimitive(value, booleanValue);
}
exports.isBooleanObject = isBooleanObject;

function isBigIntObject(value) {
  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);
}
exports.isBigIntObject = isBigIntObject;

function isSymbolObject(value) {
  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);
}
exports.isSymbolObject = isSymbolObject;

function isBoxedPrimitive(value) {
  return (
    isNumberObject(value) ||
    isStringObject(value) ||
    isBooleanObject(value) ||
    isBigIntObject(value) ||
    isSymbolObject(value)
  );
}
exports.isBoxedPrimitive = isBoxedPrimitive;

function isAnyArrayBuffer(value) {
  return typeof Uint8Array !== 'undefined' && (
    isArrayBuffer(value) ||
    isSharedArrayBuffer(value)
  );
}
exports.isAnyArrayBuffer = isAnyArrayBuffer;

['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {
  Object.defineProperty(exports, method, {
    enumerable: false,
    value: function() {
      throw new Error(method + ' is not supported in userland');
    }
  });
});

},{"is-arguments":179,"is-generator-function":181,"is-typed-array":182,"which-typed-array":249}],248:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
  function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {};
    for (var i = 0; i < keys.length; i++) {
      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    }
    return descriptors;
  };

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  }

  // Allow for deprecating things in the process of starting up.
  if (typeof process === 'undefined') {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnvRegex = /^$/;

if (process.env.NODE_DEBUG) {
  var debugEnv = process.env.NODE_DEBUG;
  debugEnv = debugEnv.replace(/[|\\{}()[\]^$+?.]/g, '\\$&')
    .replace(/\*/g, '.*')
    .replace(/,/g, '$|^')
    .toUpperCase();
  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');
}
exports.debuglog = function(set) {
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (debugEnvRegex.test(set)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').slice(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.slice(1, -1);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
exports.types = require('./support/types');

function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;
exports.types.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;
exports.types.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;
exports.types.isNativeError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function')
    throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });

    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }
    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    getOwnPropertyDescriptors(original)
  );
}

exports.promisify.custom = kCustomPromisifiedSymbol

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }
  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  }

  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }
    var self = this;
    var cb = function() {
      return maybeCb.apply(self, arguments);
    };
    // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)
    original.apply(this, args)
      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },
            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified,
                          getOwnPropertyDescriptors(original));
  return callbackified;
}
exports.callbackify = callbackify;

}).call(this)}).call(this,require('_process'))
},{"./support/isBuffer":246,"./support/types":247,"_process":208,"inherits":178}],249:[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('for-each');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');
var gOPD = require('gopd');

var $toString = callBound('Object.prototype.toString');
var hasToStringTag = require('has-tostringtag/shams')();

var g = typeof globalThis === 'undefined' ? global : globalThis;
var typedArrays = availableTypedArrays();

var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		if (typeof g[typedArray] === 'function') {
			var arr = new g[typedArray]();
			if (Symbol.toStringTag in arr) {
				var proto = getPrototypeOf(arr);
				var descriptor = gOPD(proto, Symbol.toStringTag);
				if (!descriptor) {
					var superProto = getPrototypeOf(proto);
					descriptor = gOPD(superProto, Symbol.toStringTag);
				}
				toStrTags[typedArray] = descriptor.get;
			}
		}
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var foundName = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!foundName) {
			try {
				var name = getter.call(value);
				if (name === typedArray) {
					foundName = name;
				}
			} catch (e) {}
		}
	});
	return foundName;
};

var isTypedArray = require('is-typed-array');

module.exports = function whichTypedArray(value) {
	if (!isTypedArray(value)) { return false; }
	if (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":31,"call-bind/callBound":85,"for-each":136,"gopd":140,"has-tostringtag/shams":144,"is-typed-array":182}],"jq-web":[function(require,module,exports){
(function (process,Buffer,__dirname){(function (){
var jq=function(e){var r=void 0!==(e=e||{})?e:{},a=!1,i=[],f="",k=[],b=[],n=[];function s(e){for(var r=new Uint8Array(e),a="",i=0;i<r.length;++i)a+=String.fromCharCode(r[i]);return decodeURIComponent(escape(a))}r=Object.assign({noInitialRun:!0,noExitRuntime:!0,onRuntimeInitialized:function(){a=!0,i.forEach(function(e){e()})},preRun:function(){Te.init(function(){return k.length?k.pop():f?(k=function(e){for(var r=[],a=unescape(encodeURIComponent(e)),i=0;i<a.length;i++)r.push(a.charCodeAt(i));return r}(f),f="",k.push(null),k.reverse(),k.pop()):null},function(e){e&&b.push(e)},function(e){e&&n.push(e)})}},r);var t,c={};for(t in r)r.hasOwnProperty(t)&&(c[t]=r[t]);var o,u,l,v=[],d="./this.program",h=function(e,r){throw r},m=!1,w=!1;m="object"==typeof window,w="function"==typeof importScripts,u="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,o=u&&!m&&!w,l=!m&&!o&&!w;var p,g,y,E,_,D="";function S(e){return r.locateFile?r.locateFile(e,D):D+e}o?(D=__dirname+"/",p=function(e,r){var a;return E||(E=require("fs")),_||(_=require("path")),e=_.normalize(e),a=E.readFileSync(e),r?a:a.toString()},y=function(e){var r=p(e,!0);return r.buffer||(r=new Uint8Array(r)),N(r.buffer),r},process.argv.length>1&&(d=process.argv[1].replace(/\\/g,"/")),v=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof ir))throw e}),process.on("unhandledRejection",me),h=function(e){process.exit(e)},r.inspect=function(){return"[Emscripten Module object]"}):l?("undefined"!=typeof read&&(p=function(e){return read(e)}),y=function(e){var r;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(r=read(e,"binary"))),r)},"undefined"!=typeof scriptArgs?v=scriptArgs:void 0!==arguments&&(v=arguments),"function"==typeof quit&&(h=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(m||w)&&(w?D=self.location.href:document.currentScript&&(D=document.currentScript.src),D=0!==D.indexOf("blob:")?D.substr(0,D.lastIndexOf("/")+1):"",p=function(e){var r=new XMLHttpRequest;return r.open("GET",e,!1),r.send(null),r.responseText},w&&(y=function(e){var r=new XMLHttpRequest;return r.open("GET",e,!1),r.responseType="arraybuffer",r.send(null),new Uint8Array(r.response)}),g=function(e,r,a){var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.onload=function(){200==i.status||0==i.status&&i.response?r(i.response):a()},i.onerror=a,i.send(null)});var F=r.print||console.log.bind(console),M=r.printErr||console.warn.bind(console);for(t in c)c.hasOwnProperty(t)&&(r[t]=c[t]);function A(e){var r=Z[re>>2],a=r+e+15&-16;return a>J.length&&me(),Z[re>>2]=a,r}function x(e){switch(e){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:if("*"===e[e.length-1])return 4;if("i"===e[0]){var r=parseInt(e.substr(1));return N(r%8==0,"getNativeTypeSize invalid bits "+r+", type "+e),r/8}return 0}}c=null,r.arguments&&(v=r.arguments),r.thisProgram&&(d=r.thisProgram),r.quit&&(h=r.quit);var P;r.wasmBinary&&(P=r.wasmBinary),r.noExitRuntime&&r.noExitRuntime;var T,R={Memory:function(e){return{buffer:new ArrayBuffer(65536*e.initial),grow:function(e){return $e(e)}}},Table:function(e){var r=new Array(e.initial);return r.grow=function(e){r.length>=177&&me("Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH."),r.push(null)},r.set=function(e,a){r[e]=a},r.get=function(e){return r[e]},r},Module:function(e){return{}},Instance:function(e,r){return{exports:function(e,r,a){var i=new ArrayBuffer(8),f=new Int32Array(i),k=(new Float32Array(i),new Float64Array(i));function b(e){return f[e]}function n(e,r){f[e]=r}function s(){return k[0]}function t(e){k[0]=e}function c(){return"function"==typeof setTempRet0&&setTempRet0(f[1]),f[0]}function o(e,r){f[0]=e,f[1]=r}return function(e,r,i){r.memory;var f=a,k=new e.Int8Array(i),u=new e.Int16Array(i),l=new e.Int32Array(i),v=new e.Uint8Array(i),d=new e.Uint16Array(i),h=new e.Uint32Array(i),m=(new e.Float32Array(i),new e.Float64Array(i)),w=e.Math.imul,p=e.Math.fround,g=e.Math.abs,y=e.Math.clz32,E=e.Math.min,_=e.Math.max,D=e.Math.floor,S=e.Math.ceil,F=e.Math.sqrt,M=r.abort,A=e.NaN,x=e.Infinity,P=r.a,T=r.b,R=r.c,O=r.d,I=r.e,z=r.f,N=r.g,j=r.h,U=r.i,B=r.j,C=r.k,L=r.l,H=r.m,q=r.n,Y=r.o,W=r.p,G=r.q,X=r.r,J=r.s,V=r.t,K=r.u,Z=r.v,$=r.w,Q=r.x,ee=r.y,re=r.z,ae=r.A,ie=r.B,fe=r.C,ke=r.D,be=r.getTempRet0,ne=5575296,se=0;function te(e,r){var a,i=0,f=0,b=0,n=0,s=0,t=0,c=0;ne=a=ne-400|0,s=r+48|0,l[a+368>>2]=0,l[a+372>>2]=0,l[a+376>>2]=0,l[a+380>>2]=0;e:{for(;;){r:{a:{if(!(i=l[r+8>>2])){if(t=Ti(r),!l[r+4144>>2])break r;if(i=v[r+44|0]|v[r+45|0]<<8|v[r+46|0]<<16|v[r+47|0]<<24,c=v[r+40|0]|v[r+41|0]<<8|v[r+42|0]<<16|v[r+43|0]<<24,l[a+392>>2]=c,l[a+396>>2]=i,b=v[r+32|0]|v[r+33|0]<<8|v[r+34|0]<<16|v[r+35|0]<<24,n=v[r+36|0]|v[r+37|0]<<8|v[r+38|0]<<16|v[r+39|0]<<24,l[a+136>>2]=c,l[a+140>>2]=i,l[a+384>>2]=b,l[a+388>>2]=n,l[a+128>>2]=b,l[a+132>>2]=n,15&v[a+128|0]){Uk(a+352|0,s,l[r+4144>>2]),i=l[r+44>>2],l[a+120>>2]=l[r+40>>2],l[a+124>>2]=i,i=l[r+32>>2],b=l[r+36>>2],n=l[a+364>>2],l[a+104>>2]=l[a+360>>2],l[a+108>>2]=n,l[a+112>>2]=i,l[a+116>>2]=b,i=l[a+356>>2],l[a+96>>2]=l[a+352>>2],l[a+100>>2]=i,Ok(a+384|0,a+112|0,a+96|0),i=l[a+396>>2],l[r+40>>2]=l[a+392>>2],l[r+44>>2]=i,i=l[a+388>>2],l[r+32>>2]=l[a+384>>2],l[r+36>>2]=i;break r}if(i=l[a+380>>2],l[a+88>>2]=l[a+376>>2],l[a+92>>2]=i,i=l[a+372>>2],l[a+80>>2]=l[a+368>>2],l[a+84>>2]=i,15&v[a+80|0]||(jb(a+384|0,16997),i=l[a+396>>2],l[a+376>>2]=l[a+392>>2],l[a+380>>2]=i,i=l[a+388>>2],l[a+368>>2]=l[a+384>>2],l[a+372>>2]=i),i=l[r+4144>>2],10!=v[47+(b=i+r|0)|0])break a;k[b+47|0]=0,Uk(a+336|0,s,l[r+4144>>2]+-1|0),r=l[a+380>>2],l[a+40>>2]=l[a+376>>2],l[a+44>>2]=r,r=l[a+348>>2],l[a+24>>2]=l[a+344>>2],l[a+28>>2]=r,r=l[a+372>>2],l[a+32>>2]=l[a+368>>2],l[a+36>>2]=r,r=l[a+340>>2],l[a+16>>2]=l[a+336>>2],l[a+20>>2]=r,Ok(e,a+32|0,a+16|0);break e}if((i=l[i>>2]?l[i+4>>2]-l[i+8>>2]|0:0)||(!(t=Ti(r))|l[r+4144>>2]||(l[a+384>>2]=0,l[a+388>>2]=0,l[a+392>>2]=0,l[a+396>>2]=0,i=l[a+396>>2],l[a+376>>2]=l[a+392>>2],l[a+380>>2]=i,i=l[a+388>>2],l[a+368>>2]=l[a+384>>2],l[a+372>>2]=i),ve(l[r+8>>2],s,l[r+4144>>2],!t)),gf(a+384|0,l[r+8>>2]),i=l[a+396>>2],l[a+376>>2]=l[a+392>>2],l[a+380>>2]=i,i=l[a+388>>2],l[a+368>>2]=l[a+384>>2],l[a+372>>2]=i,i=v[r+44|0]|v[r+45|0]<<8|v[r+46|0]<<16|v[r+47|0]<<24,c=v[r+40|0]|v[r+41|0]<<8|v[r+42|0]<<16|v[r+43|0]<<24,l[a+392>>2]=c,l[a+396>>2]=i,b=v[r+32|0]|v[r+33|0]<<8|v[r+34|0]<<16|v[r+35|0]<<24,n=v[r+36|0]|v[r+37|0]<<8|v[r+38|0]<<16|v[r+39|0]<<24,l[a+280>>2]=c,l[a+284>>2]=i,l[a+384>>2]=b,l[a+388>>2]=n,l[a+272>>2]=b,l[a+276>>2]=n,15&v[a+272|0]){if(i=l[r+8>>2],f=0,l[i>>2]&&(f=l[i+4>>2]-l[i+8>>2]|0),i=l[a+380>>2],l[a+264>>2]=l[a+376>>2],l[a+268>>2]=i,i=l[a+372>>2],l[a+256>>2]=l[a+368>>2],l[a+260>>2]=i,15&v[a+256|0]){i=l[r+44>>2],l[a+248>>2]=l[r+40>>2],l[a+252>>2]=i,i=l[r+32>>2],b=l[r+36>>2],n=l[a+380>>2],l[a+232>>2]=l[a+376>>2],l[a+236>>2]=n,l[a+240>>2]=i,l[a+244>>2]=b,i=l[a+372>>2],l[a+224>>2]=l[a+368>>2],l[a+228>>2]=i,Vb(a+384|0,a+240|0,a+224|0),i=l[a+396>>2],l[r+40>>2]=l[a+392>>2],l[r+44>>2]=i,i=l[a+388>>2],l[r+32>>2]=l[a+384>>2],l[r+36>>2]=i,l[a+384>>2]=0,l[a+388>>2]=0,l[a+392>>2]=0,l[a+396>>2]=0,i=l[a+396>>2],l[a+376>>2]=l[a+392>>2],l[a+380>>2]=i,i=l[a+388>>2],l[a+368>>2]=l[a+384>>2],l[a+372>>2]=i;break r}if(i=l[a+380>>2],l[a+216>>2]=l[a+376>>2],l[a+220>>2]=i,i=l[a+372>>2],l[a+208>>2]=l[a+368>>2],l[a+212>>2]=i,Nb(a+304|0,a+208|0),i=l[a+316>>2],l[a+200>>2]=l[a+312>>2],l[a+204>>2]=i,i=l[a+308>>2],l[a+192>>2]=l[a+304>>2],l[a+196>>2]=i,!rb(a+192|0))break r;r=l[a+372>>2],l[e>>2]=l[a+368>>2],l[e+4>>2]=r,r=l[a+380>>2],l[e+8>>2]=l[a+376>>2],l[e+12>>2]=r;break e}if(i=l[a+380>>2],l[a+184>>2]=l[a+376>>2],l[a+188>>2]=i,i=l[a+372>>2],l[a+176>>2]=l[a+368>>2],l[a+180>>2]=i,!(15&v[a+176|0]||(i=l[a+380>>2],l[a+168>>2]=l[a+376>>2],l[a+172>>2]=i,i=l[a+372>>2],l[a+160>>2]=l[a+368>>2],l[a+164>>2]=i,Nb(a+288|0,a+160|0),i=l[a+300>>2],l[a+152>>2]=l[a+296>>2],l[a+156>>2]=i,i=l[a+292>>2],l[a+144>>2]=l[a+288>>2],l[a+148>>2]=i,rb(a+144|0))))break r;r=l[a+372>>2],l[e>>2]=l[a+368>>2],l[e+4>>2]=r,r=l[a+380>>2],l[e+8>>2]=l[a+376>>2],l[e+12>>2]=r;break e}Uk(a+320|0,s,i),i=l[a+380>>2],l[a+72>>2]=l[a+376>>2],l[a+76>>2]=i,i=l[a+332>>2],l[a+56>>2]=l[a+328>>2],l[a+60>>2]=i,i=l[a+372>>2],l[a+64>>2]=l[a+368>>2],l[a+68>>2]=i,i=l[a+324>>2],l[a+48>>2]=l[a+320>>2],l[a+52>>2]=i,Ok(a+384|0,a- -64|0,a+48|0),i=l[a+396>>2],l[a+376>>2]=l[a+392>>2],l[a+380>>2]=i,i=l[a+388>>2],l[a+368>>2]=l[a+384>>2],l[a+372>>2]=i,l[r+4144>>2]=0,k[r+48|0]=0}if(!(f|!t))break}f=v[r+44|0]|v[r+45|0]<<8|v[r+46|0]<<16|v[r+47|0]<<24,t=v[r+40|0]|v[r+41|0]<<8|v[r+42|0]<<16|v[r+43|0]<<24,l[a+392>>2]=t,l[a+396>>2]=f,s=v[r+32|0]|v[r+33|0]<<8|v[r+34|0]<<16|v[r+35|0]<<24,i=v[r+36|0]|v[r+37|0]<<8|v[r+38|0]<<16|v[r+39|0]<<24,l[a+8>>2]=t,l[a+12>>2]=f,l[a+384>>2]=s,l[a+388>>2]=i,l[a>>2]=s,l[a+4>>2]=i,15&v[0|a]&&(f=l[r+44>>2],l[a+376>>2]=l[r+40>>2],l[a+380>>2]=f,f=l[r+36>>2],l[a+368>>2]=l[r+32>>2],l[a+372>>2]=f,l[a+384>>2]=0,l[a+388>>2]=0,l[a+392>>2]=0,l[a+396>>2]=0,f=l[a+396>>2],l[r+40>>2]=l[a+392>>2],l[r+44>>2]=f,f=l[a+388>>2],l[r+32>>2]=l[a+384>>2],l[r+36>>2]=f),r=l[a+372>>2],l[e>>2]=l[a+368>>2],l[e+4>>2]=r,r=l[a+380>>2],l[e+8>>2]=l[a+376>>2],l[e+12>>2]=r}ne=a+400|0}function ce(e,r,a,i,f,k){var b,n=0,s=0,t=0,c=0,o=0,u=0;ne=b=ne-1856|0,n=l[a+12>>2],l[(s=b+1408|0)>>2]=l[a+8>>2],l[s+4>>2]=n,s=l[a+4>>2],l[b+1400>>2]=l[a>>2],l[b+1404>>2]=s;e:if(6==(15&v[b+1400|0]))if(n=l[r+12>>2],l[(s=b+1376|0)>>2]=l[r+8>>2],l[s+4>>2]=n,s=l[r+4>>2],l[b+1368>>2]=l[r>>2],l[b+1372>>2]=s,5==(15&v[b+1368|0])){n=l[k+12>>2],l[(s=b+1736|0)>>2]=l[k+8>>2],l[s+4>>2]=n,s=l[k+4>>2],l[b+1728>>2]=l[k>>2],l[b+1732>>2]=s,s=l[f+12>>2],l[(k=b+1720|0)>>2]=l[f+8>>2],l[k+4>>2]=s,k=l[f+4>>2],l[b+1712>>2]=l[f>>2],l[b+1716>>2]=k,s=l[a+12>>2],l[(f=b+1704|0)>>2]=l[a+8>>2],l[f+4>>2]=s,k=l[a+4>>2],l[b+1696>>2]=l[a>>2],l[b+1700>>2]=k,s=l[a+12>>2],l[(k=b+1344|0)>>2]=l[a+8>>2],l[k+4>>2]=s,k=l[a+4>>2],l[b+1336>>2]=l[a>>2],l[b+1340>>2]=k;r:{if(6==(15&v[b+1336|0])){if(rn(b+1840|0),n=l[10947],l[8+(s=k=b+1808|0)>>2]=l[10946],l[s+12>>2]=n,s=l[10945],l[k>>2]=l[10944],l[k+4>>2]=s,s=l[f+4>>2],l[(k=b+1328|0)>>2]=l[f>>2],l[k+4>>2]=s,f=l[b+1700>>2],l[b+1320>>2]=l[b+1696>>2],l[b+1324>>2]=f,Nb(b+1792|0,b+1320|0),s=l[4+(k=b+1800|0)>>2],l[(f=b+1312|0)>>2]=l[k>>2],l[f+4>>2]=s,f=l[b+1796>>2],l[b+1304>>2]=l[b+1792>>2],l[b+1308>>2]=f,(0|(o=Zb(b+1304|0)))>=1)for(k=0;n=l[4+(s=b+1704|0)>>2],l[(f=b+1296|0)>>2]=l[s>>2],l[f+4>>2]=n,f=l[b+1700>>2],l[b+1288>>2]=l[b+1696>>2],l[b+1292>>2]=f,Nb(b+1760|0,b+1288|0),n=l[4+(s=b+1768|0)>>2],l[(f=b+1280|0)>>2]=l[s>>2],l[f+4>>2]=n,f=l[b+1764>>2],l[b+1272>>2]=l[b+1760>>2],l[b+1276>>2]=f,Kb(b+1576|0,b+1272|0,k),n=l[4+(s=b+1584|0)>>2],f=b+1784|0,c=l[s>>2],l[f>>2]=c,l[f+4>>2]=n,l[(t=b+1264|0)>>2]=c,l[t+4>>2]=n,n=l[b+1580>>2],t=l[b+1576>>2],l[b+1776>>2]=t,l[b+1780>>2]=n,l[b+1256>>2]=t,l[b+1260>>2]=n,5==(15&v[b+1256|0])?(t=l[f+4>>2],l[(n=b+1232|0)>>2]=l[f>>2],l[n+4>>2]=t,n=l[b+1780>>2],l[b+1224>>2]=l[b+1776>>2],l[b+1228>>2]=n,zr(b+1576|0,b+1224|0),n=l[s+4>>2],t=l[s>>2],l[f>>2]=t,l[f+4>>2]=n,l[(c=b+1216|0)>>2]=t,l[c+4>>2]=n,n=l[b+1580>>2],t=l[b+1576>>2],l[b+1776>>2]=t,l[b+1780>>2]=n,l[b+1208>>2]=t,l[b+1212>>2]=n,15&v[b+1208|0]?(t=l[f+4>>2],l[(n=b+1200|0)>>2]=l[f>>2],l[n+4>>2]=t,n=l[b+1780>>2],l[b+1192>>2]=l[b+1776>>2],l[b+1196>>2]=n,fn(18724,Gb(b+1192|0))?(t=l[f+4>>2],l[(n=b+1184|0)>>2]=l[f>>2],l[n+4>>2]=t,n=l[b+1780>>2],l[b+1176>>2]=l[b+1776>>2],l[b+1180>>2]=n,Db(19028,Gb(b+1176|0),8)?(u=l[4+(n=b+1736|0)>>2],l[(t=b+1168|0)>>2]=l[n>>2],l[t+4>>2]=u,t=l[b+1732>>2],l[b+1160>>2]=l[b+1728>>2],l[b+1164>>2]=t,5!=(15&v[b+1160|0])||(c=l[f+4>>2],l[(t=b+1152|0)>>2]=l[f>>2],l[t+4>>2]=c,t=l[b+1780>>2],l[b+1144>>2]=l[b+1776>>2],l[b+1148>>2]=t,Nb(b+1744|0,b+1144|0),t=l[4+(c=b+1752|0)>>2],c=l[c>>2],l[s>>2]=c,l[s+4>>2]=t,l[(u=b+1136|0)>>2]=c,l[u+4>>2]=t,t=l[b+1748>>2],c=l[b+1744>>2],l[b+1576>>2]=c,l[b+1580>>2]=t,l[b+1128>>2]=c,l[b+1132>>2]=t,t=v[0|Gb(b+1128|0)],u=l[s+4>>2],l[(c=b+1120|0)>>2]=l[s>>2],l[c+4>>2]=u,c=l[b+1580>>2],l[b+1112>>2]=l[b+1576>>2],l[b+1116>>2]=c,zb(b+1112|0),47==(0|t))?(t=l[f+4>>2],l[(n=b+1832|0)>>2]=l[f>>2],l[n+4>>2]=t,n=l[b+1780>>2],l[b+1824>>2]=l[b+1776>>2],l[b+1828>>2]=n,l[(n=b+1576|0)>>2]=0,l[n+4>>2]=0,l[n+8>>2]=0,l[n+12>>2]=0,n=l[s+4>>2],l[f>>2]=l[s>>2],l[f+4>>2]=n,n=l[b+1580>>2],l[b+1776>>2]=l[b+1576>>2],l[b+1780>>2]=n):(c=l[n+4>>2],l[(t=b+1104|0)>>2]=l[n>>2],l[t+4>>2]=c,n=l[b+1732>>2],l[b+1096>>2]=l[b+1728>>2],l[b+1100>>2]=n,n=Gb(b+1096|0),c=l[f+4>>2],l[(t=b+1088|0)>>2]=l[f>>2],l[t+4>>2]=c,t=l[b+1780>>2],l[b+1080>>2]=l[b+1776>>2],l[b+1084>>2]=t,l[b+1076>>2]=Gb(b+1080|0),l[b+1072>>2]=n,Yb(b+1576|0,19405,b+1072|0),t=l[s+4>>2],l[(n=b+1832|0)>>2]=l[s>>2],l[n+4>>2]=t,n=l[b+1580>>2],l[b+1824>>2]=l[b+1576>>2],l[b+1828>>2]=n)):(c=l[4+(t=b+1720|0)>>2],l[(n=b+1064|0)>>2]=l[t>>2],l[n+4>>2]=c,n=l[b+1716>>2],l[b+1056>>2]=l[b+1712>>2],l[b+1060>>2]=n,n=Gb(b+1056|0),c=l[f+4>>2],l[(t=b+1048|0)>>2]=l[f>>2],l[t+4>>2]=c,t=l[b+1780>>2],l[b+1040>>2]=l[b+1776>>2],l[b+1044>>2]=t,t=Gb(b+1040|0),l[b+1024>>2]=n,l[b+1028>>2]=t+8,Yb(b+1576|0,19405,b+1024|0),t=l[s+4>>2],l[(n=b+1832|0)>>2]=l[s>>2],l[n+4>>2]=t,n=l[b+1580>>2],l[b+1824>>2]=l[b+1576>>2],l[b+1828>>2]=n)):(n=l[f+4>>2],l[b+1016>>2]=l[f>>2],l[b+1020>>2]=n,n=l[b+1780>>2],l[b+1008>>2]=l[b+1776>>2],l[b+1012>>2]=n,Nb(b+1576|0,b+1008|0),t=l[s+4>>2],l[(n=b+1832|0)>>2]=l[s>>2],l[n+4>>2]=t,n=l[b+1580>>2],l[b+1824>>2]=l[b+1576>>2],l[b+1828>>2]=n),c=l[4+(n=b+1848|0)>>2],l[b+1e3>>2]=l[n>>2],l[b+1004>>2]=c,c=l[4+(t=b+1832|0)>>2],l[b+984>>2]=l[t>>2],l[b+988>>2]=c,t=l[b+1844>>2],l[b+992>>2]=l[b+1840>>2],l[b+996>>2]=t,t=l[b+1828>>2],l[b+976>>2]=l[b+1824>>2],l[b+980>>2]=t,Vb(b+1576|0,b+992|0,b+976|0),t=l[s+4>>2],l[n>>2]=l[s>>2],l[n+4>>2]=t,s=l[f+4>>2],l[b+968>>2]=l[f>>2],l[b+972>>2]=s,f=l[b+1580>>2],l[b+1840>>2]=l[b+1576>>2],l[b+1844>>2]=f,f=l[b+1780>>2],l[b+960>>2]=l[b+1776>>2],l[b+964>>2]=f,zb(b+960|0)):(t=l[f+4>>2],l[(n=b+1816|0)>>2]=l[f>>2],l[n+4>>2]=t,n=l[b+1780>>2],l[b+1808>>2]=l[b+1776>>2],l[b+1812>>2]=n,c=l[10947],l[8+(n=b+1576|0)>>2]=l[10946],l[n+12>>2]=c,t=l[10945],l[n>>2]=l[10944],l[n+4>>2]=t,n=l[s+4>>2],l[f>>2]=l[s>>2],l[f+4>>2]=n,f=l[b+1580>>2],l[b+1776>>2]=l[b+1576>>2],l[b+1780>>2]=f)):(n=l[f+4>>2],l[(s=b+1248|0)>>2]=l[f>>2],l[s+4>>2]=n,f=l[b+1780>>2],l[b+1240>>2]=l[b+1776>>2],l[b+1244>>2]=f,zb(b+1240|0)),(0|o)!=(0|(k=k+1|0)););k=l[4+(f=b+1720|0)>>2],l[b+952>>2]=l[f>>2],l[b+956>>2]=k,f=l[b+1716>>2],l[b+944>>2]=l[b+1712>>2],l[b+948>>2]=f,zb(b+944|0),k=l[4+(f=b+1736|0)>>2],l[b+936>>2]=l[f>>2],l[b+940>>2]=k,f=l[b+1732>>2],l[b+928>>2]=l[b+1728>>2],l[b+932>>2]=f,zb(b+928|0),k=l[4+(f=b+1704|0)>>2],l[b+920>>2]=l[f>>2],l[b+924>>2]=k,f=l[b+1700>>2],l[b+912>>2]=l[b+1696>>2],l[b+916>>2]=f,zb(b+912|0),rn(b+1776|0),k=l[4+(f=b+1784|0)>>2],l[b+904>>2]=l[f>>2],l[b+908>>2]=k,s=l[4+(f=b+1848|0)>>2],l[b+888>>2]=l[f>>2],l[b+892>>2]=s,k=l[b+1780>>2],l[b+896>>2]=l[b+1776>>2],l[b+900>>2]=k,k=l[b+1844>>2],l[b+880>>2]=l[b+1840>>2],l[b+884>>2]=k,Vb(b+1576|0,b+896|0,b+880|0),n=l[4+(s=k=b+1584|0)>>2],l[b+872>>2]=l[s>>2],l[b+876>>2]=n,t=l[4+(n=s=b+1816|0)>>2],l[b+856>>2]=l[n>>2],l[b+860>>2]=t,n=l[b+1580>>2],l[b+864>>2]=l[b+1576>>2],l[b+868>>2]=n,n=l[b+1812>>2],l[b+848>>2]=l[b+1808>>2],l[b+852>>2]=n,Vb(b+1560|0,b+864|0,b+848|0),t=l[4+(n=b+1568|0)>>2],l[a+8>>2]=l[n>>2],l[a+12>>2]=t,n=l[b+1564>>2],l[a>>2]=l[b+1560>>2],l[a+4>>2]=n,n=l[a+12>>2],l[b+840>>2]=l[a+8>>2],l[b+844>>2]=n,n=l[a+4>>2],l[b+832>>2]=l[a>>2],l[b+836>>2]=n,Nb(b+1544|0,b+832|0),t=l[4+(n=b+1552|0)>>2],l[b+824>>2]=l[n>>2],l[b+828>>2]=t,n=l[b+1548>>2],l[b+816>>2]=l[b+1544>>2],l[b+820>>2]=n,Kb(b+1824|0,b+816|0,1),n=l[a+12>>2],l[b+808>>2]=l[a+8>>2],l[b+812>>2]=n,n=l[a+4>>2],l[b+800>>2]=l[a>>2],l[b+804>>2]=n,Kb(b+1576|0,b+800|0,0),n=l[k+4>>2],l[a+8>>2]=l[k>>2],l[a+12>>2]=n,n=l[b+1580>>2],l[a>>2]=l[b+1576>>2],l[a+4>>2]=n,n=l[r+12>>2],l[b+792>>2]=l[r+8>>2],l[b+796>>2]=n,n=l[r+4>>2],l[b+784>>2]=l[r>>2],l[b+788>>2]=n,Nb(b+1528|0,b+784|0),n=l[4+(t=b+1536|0)>>2],t=l[t>>2],l[f>>2]=t,l[f+4>>2]=n,l[b+776>>2]=t,l[b+780>>2]=n,n=l[b+1532>>2],t=l[b+1528>>2],l[b+1840>>2]=t,l[b+1844>>2]=n,l[b+768>>2]=t,l[b+772>>2]=n,(n=function(e,r){for(var a=0;;){if(!r)return 0;if(47==v[0|(a=(r=r+-1|0)+e|0)])break}return a}(n=Gb(b+768|0),on(n)+1|0))?(l[b+752>>2]=n,Yb(b+1576|0,19710,b+752|0),n=l[f+4>>2],l[b+744>>2]=l[f>>2],l[b+748>>2]=n,f=l[b+1844>>2],l[b+736>>2]=l[b+1840>>2],l[b+740>>2]=f,zb(b+736|0),f=l[k+4>>2],l[s>>2]=l[k>>2],l[s+4>>2]=f,f=l[b+1580>>2],l[b+1808>>2]=l[b+1576>>2],l[b+1812>>2]=f):(k=l[f+4>>2],l[s>>2]=l[f>>2],l[s+4>>2]=k,f=l[b+1844>>2],l[b+1808>>2]=l[b+1840>>2],l[b+1812>>2]=f),f=l[a+12>>2],l[b+728>>2]=l[a+8>>2],l[b+732>>2]=f,f=l[a+4>>2],l[b+720>>2]=l[a>>2],l[b+724>>2]=f,Nb(b+1512|0,b+720|0),k=l[4+(f=b+1520|0)>>2],l[b+712>>2]=l[f>>2],l[b+716>>2]=k,f=l[b+1516>>2],l[b+704>>2]=l[b+1512>>2],l[b+708>>2]=f,t=Zb(b+704|0);a:if(!((0|t)<1))for(k=0;;){if(f=l[a+12>>2],l[b+696>>2]=l[a+8>>2],l[b+700>>2]=f,f=l[a+4>>2],l[b+688>>2]=l[a>>2],l[b+692>>2]=f,Nb(b+1496|0,b+688|0),s=l[4+(f=b+1504|0)>>2],l[b+680>>2]=l[f>>2],l[b+684>>2]=s,f=l[b+1500>>2],l[b+672>>2]=l[b+1496>>2],l[b+676>>2]=f,Kb(b+1792|0,b+672|0,k),n=l[4+(s=b+1800|0)>>2],f=b+1848|0,c=l[s>>2],l[f>>2]=c,l[f+4>>2]=n,l[b+664>>2]=c,l[b+668>>2]=n,n=l[b+1796>>2],o=l[b+1792>>2],l[b+1840>>2]=o,l[b+1844>>2]=n,l[b+656>>2]=o,l[b+660>>2]=n,1==(15&v[b+656|0])){f=l[4+(i=b+1848|0)>>2],l[b+216>>2]=l[i>>2],l[b+220>>2]=f,i=l[b+1844>>2],l[b+208>>2]=l[b+1840>>2],l[b+212>>2]=i,zb(b+208|0);break a}if(n=l[f+4>>2],l[b+648>>2]=l[f>>2],l[b+652>>2]=n,n=l[b+1844>>2],l[b+640>>2]=l[b+1840>>2],l[b+644>>2]=n,5==(15&v[b+640|0])&&(n=l[f+4>>2],l[b+632>>2]=l[f>>2],l[b+636>>2]=n,n=l[b+1844>>2],l[b+624>>2]=l[b+1840>>2],l[b+628>>2]=n,v[0|Gb(b+624|0)])){n=l[f+4>>2],l[b+616>>2]=l[f>>2],l[b+620>>2]=n,n=l[b+1844>>2],l[b+608>>2]=l[b+1840>>2],l[b+612>>2]=n,n=Gb(b+608|0),o=l[r+12>>2],l[b+600>>2]=l[r+8>>2],l[b+604>>2]=o,o=l[r+4>>2],l[b+592>>2]=l[r>>2],l[b+596>>2]=o,o=Gb(b+592|0),l[b+584>>2]=i,l[b+580>>2]=o,l[b+576>>2]=n,Yb(b+1480|0,16159,b+576|0),o=l[4+(n=b+1488|0)>>2],l[b+568>>2]=l[n>>2],l[b+572>>2]=o,n=l[b+1484>>2],l[b+560>>2]=l[b+1480>>2],l[b+564>>2]=n,db(e,b+560|0),n=l[e+12>>2],l[b+552>>2]=l[e+8>>2],l[b+556>>2]=n,n=l[e+4>>2],l[b+544>>2]=l[e>>2],l[b+548>>2]=n,n=Bf(Gb(b+544|0),b+1576|0);i:{if(-1==(0|n)&&(44!=l[82952]||(n=l[e+12>>2],l[b+536>>2]=l[e+8>>2],l[b+540>>2]=n,n=l[e+4>>2],l[b+528>>2]=l[e>>2],l[b+532>>2]=n,zb(b+528|0),n=l[f+4>>2],l[b+520>>2]=l[f>>2],l[b+524>>2]=n,n=l[b+1844>>2],l[b+512>>2]=l[b+1840>>2],l[b+516>>2]=n,n=Gb(b+512|0),o=l[r+12>>2],l[b+504>>2]=l[r+8>>2],l[b+508>>2]=o,o=l[r+4>>2],l[b+496>>2]=l[r>>2],l[b+500>>2]=o,o=Gb(b+496|0),l[b+492>>2]=i,l[b+488>>2]=16989,l[b+484>>2]=o,l[b+480>>2]=n,Yb(b+1464|0,16544,b+480|0),o=l[4+(n=b+1472|0)>>2],l[b+472>>2]=l[n>>2],l[b+476>>2]=o,n=l[b+1468>>2],l[b+464>>2]=l[b+1464>>2],l[b+468>>2]=n,db(b+1792|0,b+464|0),n=l[s+4>>2],l[e+8>>2]=l[s>>2],l[e+12>>2]=n,n=l[b+1796>>2],l[e>>2]=l[b+1792>>2],l[e+4>>2]=n,n=l[e+12>>2],l[b+456>>2]=l[e+8>>2],l[b+460>>2]=n,n=l[e+4>>2],l[b+448>>2]=l[e>>2],l[b+452>>2]=n,-1==(0|(n=Bf(Gb(b+448|0),b+1576|0)))))){if(44!=l[82952])break i;n=l[e+12>>2],l[b+440>>2]=l[e+8>>2],l[b+444>>2]=n,n=l[e+4>>2],l[b+432>>2]=l[e>>2],l[b+436>>2]=n,zb(b+432|0),n=l[f+4>>2],l[b+424>>2]=l[f>>2],l[b+428>>2]=n,n=l[b+1844>>2],l[b+416>>2]=l[b+1840>>2],l[b+420>>2]=n,n=Gb(b+416|0),o=l[r+12>>2],l[b+408>>2]=l[r+8>>2],l[b+412>>2]=o,o=l[r+4>>2],l[b+400>>2]=l[r>>2],l[b+404>>2]=o,o=Gb(b+400|0),u=l[4+(c=b+1816|0)>>2],l[b+392>>2]=l[c>>2],l[b+396>>2]=u,c=l[b+1812>>2],l[b+384>>2]=l[b+1808>>2],l[b+388>>2]=c,c=Gb(b+384|0),l[b+380>>2]=i,l[b+376>>2]=c,l[b+372>>2]=o,l[b+368>>2]=n,Yb(b+1448|0,16544,b+368|0),o=l[4+(n=b+1456|0)>>2],l[b+360>>2]=l[n>>2],l[b+364>>2]=o,n=l[b+1452>>2],l[b+352>>2]=l[b+1448>>2],l[b+356>>2]=n,db(b+1792|0,b+352|0),n=l[s+4>>2],l[e+8>>2]=l[s>>2],l[e+12>>2]=n,s=l[b+1796>>2],l[e>>2]=l[b+1792>>2],l[e+4>>2]=s,s=l[e+12>>2],l[b+344>>2]=l[e+8>>2],l[b+348>>2]=s,s=l[e+4>>2],l[b+336>>2]=l[e>>2],l[b+340>>2]=s,n=Bf(Gb(b+336|0),b+1576|0)}if(!n)break r}s=l[e+12>>2],l[b+328>>2]=l[e+8>>2],l[b+332>>2]=s,s=l[e+4>>2],l[b+320>>2]=l[e>>2],l[b+324>>2]=s,zb(b+320|0)}if(s=l[f+4>>2],l[b+232>>2]=l[f>>2],l[b+236>>2]=s,f=l[b+1844>>2],l[b+224>>2]=l[b+1840>>2],l[b+228>>2]=f,zb(b+224|0),(0|t)==(0|(k=k+1|0)))break}f=l[4+(i=b+1832|0)>>2],l[b+200>>2]=l[i>>2],l[b+204>>2]=f,i=l[b+1828>>2],l[b+192>>2]=l[b+1824>>2],l[b+196>>2]=i,15&v[b+192|0]?(i=l[r+12>>2],l[b+184>>2]=l[r+8>>2],l[b+188>>2]=i,i=l[r+4>>2],l[b+176>>2]=l[r>>2],l[b+180>>2]=i,l[b+160>>2]=Gb(b+176|0),Yb(b+1416|0,17580,b+160|0),f=l[4+(i=b+1424|0)>>2],l[b+152>>2]=l[i>>2],l[b+156>>2]=f,i=l[b+1420>>2],l[b+144>>2]=l[b+1416>>2],l[b+148>>2]=i,Hb(b+1792|0,b+144|0),k=l[4+(f=b+1800|0)>>2],l[(i=b+1848|0)>>2]=l[f>>2],l[i+4>>2]=k):(k=l[4+(f=i=b+1832|0)>>2],l[b+136>>2]=l[f>>2],l[b+140>>2]=k,f=l[b+1828>>2],l[b+128>>2]=l[b+1824>>2],l[b+132>>2]=f,Ck(b+1840|0,b+128|0),s=l[4+(f=b+1848|0)>>2],l[i>>2]=l[f>>2],l[i+4>>2]=s,k=l[b+1844>>2],l[b+1824>>2]=l[b+1840>>2],l[b+1828>>2]=k,k=l[r+12>>2],l[b+120>>2]=l[r+8>>2],l[b+124>>2]=k,k=l[r+4>>2],l[b+112>>2]=l[r>>2],l[b+116>>2]=k,k=Gb(b+112|0),s=l[i+4>>2],l[b+104>>2]=l[i>>2],l[b+108>>2]=s,i=l[b+1828>>2],l[b+96>>2]=l[b+1824>>2],l[b+100>>2]=i,l[b+84>>2]=Gb(b+96|0),l[b+80>>2]=k,Yb(b+1432|0,17261,b+80|0),k=l[4+(i=b+1440|0)>>2],l[b+72>>2]=l[i>>2],l[b+76>>2]=k,i=l[b+1436>>2],l[b+64>>2]=l[b+1432>>2],l[b+68>>2]=i,Hb(b+1792|0,b- -64|0),k=l[4+(i=b+1800|0)>>2],l[f>>2]=l[i>>2],l[f+4>>2]=k),i=l[b+1796>>2],l[b+1840>>2]=l[b+1792>>2],l[b+1844>>2]=i,f=l[4+(i=b+1832|0)>>2],l[b+56>>2]=l[i>>2],l[b+60>>2]=f,i=l[b+1828>>2],l[b+48>>2]=l[b+1824>>2],l[b+52>>2]=i,zb(b+48|0),i=l[r+12>>2],l[b+40>>2]=l[r+8>>2],l[b+44>>2]=i,i=l[r+4>>2],l[b+32>>2]=l[r>>2],l[b+36>>2]=i,zb(b+32|0),r=l[a+12>>2],l[b+24>>2]=l[a+8>>2],l[b+28>>2]=r,r=l[a+4>>2],l[b+16>>2]=l[a>>2],l[b+20>>2]=r,zb(b+16|0),a=l[4+(r=b+1816|0)>>2],l[b+8>>2]=l[r>>2],l[b+12>>2]=a,r=l[b+1812>>2],l[b>>2]=l[b+1808>>2],l[b+4>>2]=r,zb(b),a=l[4+(r=b+1848|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[b+1844>>2],l[e>>2]=l[b+1840>>2],l[e+4>>2]=r;break e}P(17899,18311,51,45280),M()}i=l[4+(e=b+1832|0)>>2],l[b+312>>2]=l[e>>2],l[b+316>>2]=i,e=l[b+1828>>2],l[b+304>>2]=l[b+1824>>2],l[b+308>>2]=e,zb(b+304|0),e=l[r+12>>2],l[b+296>>2]=l[r+8>>2],l[b+300>>2]=e,e=l[r+4>>2],l[b+288>>2]=l[r>>2],l[b+292>>2]=e,zb(b+288|0),e=l[a+12>>2],l[b+280>>2]=l[a+8>>2],l[b+284>>2]=e,e=l[a+4>>2],l[b+272>>2]=l[a>>2],l[b+276>>2]=e,zb(b+272|0),r=l[4+(e=b+1816|0)>>2],l[b+264>>2]=l[e>>2],l[b+268>>2]=r,e=l[b+1812>>2],l[b+256>>2]=l[b+1808>>2],l[b+260>>2]=e,zb(b+256|0),r=l[4+(e=b+1848|0)>>2],l[b+248>>2]=l[e>>2],l[b+252>>2]=r,e=l[b+1844>>2],l[b+240>>2]=l[b+1840>>2],l[b+244>>2]=e,zb(b+240|0)}else Yb(b+1664|0,15340,0),i=l[4+(a=b+1672|0)>>2],l[(r=b+1360|0)>>2]=l[a>>2],l[r+4>>2]=i,r=l[b+1668>>2],l[b+1352>>2]=l[b+1664>>2],l[b+1356>>2]=r,Hb(e,b+1352|0);else Yb(b+1680|0,14921,0),i=l[4+(a=b+1688|0)>>2],l[(r=b+1392|0)>>2]=l[a>>2],l[r+4>>2]=i,r=l[b+1684>>2],l[b+1384>>2]=l[b+1680>>2],l[b+1388>>2]=r,Hb(e,b+1384|0);ne=b+1856|0}function oe(e,r){var a,i=0,f=0,k=0,b=0,n=0,s=0;ne=a=ne-912|0,i=l[r+12>>2],l[a+616>>2]=l[r+8>>2],l[a+620>>2]=i,i=l[r+4>>2],l[a+608>>2]=l[r>>2],l[a+612>>2]=i,n=Gb(a+608|0);e:if(hn(n,92))l[a+592>>2]=n,Yb(a+896|0,19988,a+592|0),f=l[a+908>>2],l[a+584>>2]=l[a+904>>2],l[a+588>>2]=f,f=l[a+900>>2],l[a+576>>2]=l[a+896>>2],l[a+580>>2]=f,Hb(e,a+576|0),e=l[r+12>>2],l[a+568>>2]=l[r+8>>2],l[a+572>>2]=e,e=l[r+4>>2],l[a+560>>2]=l[r>>2],l[a+564>>2]=e,zb(a+560|0);else{if(i=l[r+12>>2],l[a+552>>2]=l[r+8>>2],l[a+556>>2]=i,i=l[r+4>>2],l[a+544>>2]=l[r>>2],l[a+548>>2]=i,Nb(a+864|0,a+544|0),jb(a+848|0,20298),i=l[a+876>>2],l[a+536>>2]=l[a+872>>2],l[a+540>>2]=i,i=l[a+860>>2],l[a+520>>2]=l[a+856>>2],l[a+524>>2]=i,i=l[a+868>>2],l[a+528>>2]=l[a+864>>2],l[a+532>>2]=i,i=l[a+852>>2],l[a+512>>2]=l[a+848>>2],l[a+516>>2]=i,oa(a+880|0,a+528|0,a+512|0),i=l[a+892>>2],l[a+504>>2]=l[a+888>>2],l[a+508>>2]=i,i=l[a+884>>2],l[a+496>>2]=l[a+880>>2],l[a+500>>2]=i,Nb(a+816|0,a+496|0),i=l[a+828>>2],l[a+488>>2]=l[a+824>>2],l[a+492>>2]=i,i=l[a+820>>2],l[a+480>>2]=l[a+816>>2],l[a+484>>2]=i,Kb(a+832|0,a+480|0,0),i=l[a+892>>2],l[a+472>>2]=l[a+888>>2],l[a+476>>2]=i,i=l[a+884>>2],l[a+464>>2]=l[a+880>>2],l[a+468>>2]=i,Nb(a+784|0,a+464|0),i=l[a+796>>2],l[a+456>>2]=l[a+792>>2],l[a+460>>2]=i,i=l[a+788>>2],l[a+448>>2]=l[a+784>>2],l[a+452>>2]=i,i=Zb(a+448|0),b=l[a+892>>2],l[a+440>>2]=l[a+888>>2],l[a+444>>2]=b,b=l[a+884>>2],l[a+432>>2]=l[a+880>>2],l[a+436>>2]=b,eb(a+800|0,a+432|0,1,i),i=l[a+812>>2],b=l[a+808>>2],l[a+888>>2]=b,l[a+892>>2]=i,l[a+424>>2]=b,l[a+428>>2]=i,i=l[a+804>>2],b=l[a+800>>2],l[a+880>>2]=b,l[a+884>>2]=i,l[a+416>>2]=b,l[a+420>>2]=i,Nb(a+768|0,a+416|0),i=l[a+780>>2],l[a+408>>2]=l[a+776>>2],l[a+412>>2]=i,i=l[a+772>>2],l[a+400>>2]=l[a+768>>2],l[a+404>>2]=i,(0|(b=Zb(a+400|0)))>=1)for(;;){i=l[a+892>>2],l[a+392>>2]=l[a+888>>2],l[a+396>>2]=i,i=l[a+884>>2],l[a+384>>2]=l[a+880>>2],l[a+388>>2]=i,Nb(a+736|0,a+384|0),i=l[a+748>>2],l[a+376>>2]=l[a+744>>2],l[a+380>>2]=i,i=l[a+740>>2],l[a+368>>2]=l[a+736>>2],l[a+372>>2]=i,Kb(a+752|0,a+368|0,f),i=l[a+764>>2],k=l[a+760>>2],l[a+808>>2]=k,l[a+812>>2]=i,l[a+360>>2]=k,l[a+364>>2]=i,i=l[a+756>>2],k=l[a+752>>2],l[a+800>>2]=k,l[a+804>>2]=i,l[a+352>>2]=k,l[a+356>>2]=i;r:{if(i=a,s=a,fn(Gb(a+352|0),20567)){if(!f)break r;if(k=l[a+812>>2],l[a+344>>2]=l[a+808>>2],l[a+348>>2]=k,k=l[a+804>>2],l[a+336>>2]=l[a+800>>2],l[a+340>>2]=k,Nb(a+704|0,a+336|0),k=l[a+892>>2],l[a+328>>2]=l[a+888>>2],l[a+332>>2]=k,k=l[a+884>>2],l[a+320>>2]=l[a+880>>2],l[a+324>>2]=k,Nb(a+672|0,a+320|0),k=l[a+684>>2],l[a+312>>2]=l[a+680>>2],l[a+316>>2]=k,k=l[a+676>>2],l[a+304>>2]=l[a+672>>2],l[a+308>>2]=k,Kb(a+688|0,a+304|0,f+-1|0),k=l[a+716>>2],l[a+296>>2]=l[a+712>>2],l[a+300>>2]=k,k=l[a+700>>2],l[a+280>>2]=l[a+696>>2],l[a+284>>2]=k,k=l[a+708>>2],l[a+288>>2]=l[a+704>>2],l[a+292>>2]=k,k=l[a+692>>2],l[a+272>>2]=l[a+688>>2],l[a+276>>2]=k,!gn(a+288|0,a+272|0))break r;f=l[a+812>>2],l[a+264>>2]=l[a+808>>2],l[a+268>>2]=f,f=l[a+804>>2],l[a+256>>2]=l[a+800>>2],l[a+260>>2]=f,zb(a+256|0),f=l[a+844>>2],l[a+248>>2]=l[a+840>>2],l[a+252>>2]=f,f=l[a+836>>2],l[a+240>>2]=l[a+832>>2],l[a+244>>2]=f,zb(a+240|0),f=l[a+892>>2],l[a+232>>2]=l[a+888>>2],l[a+236>>2]=f,f=l[a+884>>2],l[a+224>>2]=l[a+880>>2],l[a+228>>2]=f,zb(a+224|0),f=l[r+12>>2],l[a+216>>2]=l[r+8>>2],l[a+220>>2]=f,f=l[r+4>>2],l[a+208>>2]=l[r>>2],l[a+212>>2]=f,l[a+192>>2]=Gb(a+208|0),Yb(a+656|0,21043,a+192|0),f=a+656|0}else f=l[a+812>>2],l[a+88>>2]=l[a+808>>2],l[a+92>>2]=f,f=l[a+804>>2],l[a+80>>2]=l[a+800>>2],l[a+84>>2]=f,zb(a+80|0),f=l[a+844>>2],l[a+72>>2]=l[a+840>>2],l[a+76>>2]=f,f=l[a+836>>2],l[a+64>>2]=l[a+832>>2],l[a+68>>2]=f,zb(a- -64|0),f=l[a+892>>2],l[a+56>>2]=l[a+888>>2],l[a+60>>2]=f,f=l[a+884>>2],l[a+48>>2]=l[a+880>>2],l[a+52>>2]=f,zb(a+48|0),l[a+32>>2]=n,Yb(a+720|0,20720,a+32|0),f=a+720|0;n=l[f+12>>2],l[s+24>>2]=l[f+8>>2],l[i+28>>2]=n,i=l[f+4>>2],l[a+16>>2]=l[f>>2],l[a+20>>2]=i,Hb(e,a+16|0),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a);break e}if(jb(a+624|0,20298),i=l[a+636>>2],l[a+184>>2]=l[a+632>>2],l[a+188>>2]=i,i=l[a+812>>2],l[a+168>>2]=l[a+808>>2],l[a+172>>2]=i,i=l[a+628>>2],l[a+176>>2]=l[a+624>>2],l[a+180>>2]=i,i=l[a+804>>2],l[a+160>>2]=l[a+800>>2],l[a+164>>2]=i,Ok(a+640|0,a+176|0,a+160|0),i=l[a+844>>2],l[a+152>>2]=l[a+840>>2],l[a+156>>2]=i,i=l[a+652>>2],l[a+136>>2]=l[a+648>>2],l[a+140>>2]=i,i=l[a+836>>2],l[a+144>>2]=l[a+832>>2],l[a+148>>2]=i,i=l[a+644>>2],l[a+128>>2]=l[a+640>>2],l[a+132>>2]=i,Ok(a+752|0,a+144|0,a+128|0),i=l[a+764>>2],l[a+840>>2]=l[a+760>>2],l[a+844>>2]=i,i=l[a+756>>2],l[a+832>>2]=l[a+752>>2],l[a+836>>2]=i,(0|b)==(0|(f=f+1|0)))break}f=l[a+892>>2],l[a+120>>2]=l[a+888>>2],l[a+124>>2]=f,f=l[a+884>>2],l[a+112>>2]=l[a+880>>2],l[a+116>>2]=f,zb(a+112|0),f=l[r+12>>2],l[a+104>>2]=l[r+8>>2],l[a+108>>2]=f,f=l[r+4>>2],l[a+96>>2]=l[r>>2],l[a+100>>2]=f,zb(a+96|0),r=l[a+844>>2],l[e+8>>2]=l[a+840>>2],l[e+12>>2]=r,r=l[a+836>>2],l[e>>2]=l[a+832>>2],l[e+4>>2]=r}ne=a+912|0}function ue(e,r){var a,i=0,f=0,k=0,b=0,n=0;ne=a=ne-80|0,rn(e),k=l[r>>2];e:if(k){r:{a:{i:{f:{if(34==l[k+8>>2]){if(!(f=l[k>>2]))break f;l[f+4>>2]=0,l[r>>2]=f,l[k>>2]=0}else f=k,k=0;k:{for(;;){if(i=0,36!=(-2&(b=l[f+8>>2])))break k;if((i=l[f>>2])?(l[i+4>>2]=0,l[r>>2]=i,l[f>>2]=0):(l[r>>2]=0,l[r+4>>2]=0),36==(0|b)&&(i=l[f+36>>2],l[a+40>>2]=l[f+32>>2],l[a+44>>2]=i,i=l[f+28>>2],l[a+32>>2]=l[f+24>>2],l[a+36>>2]=i,Nb(a+48|0,a+32|0),i=l[e+12>>2],l[a+24>>2]=l[e+8>>2],l[a+28>>2]=i,i=l[e>>2],b=l[e+4>>2],n=l[a+60>>2],l[a+8>>2]=l[a+56>>2],l[a+12>>2]=n,l[a+16>>2]=i,l[a+20>>2]=b,i=l[a+52>>2],l[a>>2]=l[a+48>>2],l[a+4>>2]=i,Vb(a- -64|0,a+16|0,a),i=l[a+76>>2],l[e+8>>2]=l[a+72>>2],l[e+12>>2]=i,i=l[a+68>>2],l[e>>2]=l[a+64>>2],l[e+4>>2]=i),Wk(f),!(f=l[r>>2]))break}f=0,i=1}if(!k)break e;if(e=k,i)break r;if(l[k>>2])break i;if(l[f+4>>2])break a;e=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,l[k>>2]=f,l[f+4>>2]=k;break r}l[r>>2]=0,l[r+4>>2]=0,e=k;break r}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}l[r+4>>2]=e,l[r>>2]=k}ne=a+80|0}function le(e){var r,a=0,i=0,f=0,b=0,n=0,s=0,t=0;return b=-48,n=-48,(((r=k[0|e])+-48&255)>>>0<10||(n=-87,(r+-97&255)>>>0<6||(n=-55,a=-1,!((r+-65&255)>>>0>5))))&&(((i=k[e+1|0])+-48&255)>>>0<10||(b=-87,(i+-97&255)>>>0<6||(b=-55,a=-1,!((i+-65&255)>>>0>5))))&&(s=-48,t=-48,(((f=k[e+2|0])+-48&255)>>>0<10||(t=-87,(f+-97&255)>>>0<6||(t=-55,a=-1,!((f+-65&255)>>>0>5))))&&(((e=k[e+3|0])+-48&255)>>>0<10||(s=-87,(e+-97&255)>>>0<6||(s=-55,a=-1,!((e+-65&255)>>>0>5))))&&(a=e+s|(t+f|(b+i|n+r<<4)<<4)<<4)),a}function ve(e,r,a,i){var f=0,k=0;if(l[e+8>>2]==l[e+4>>2]||!l[e>>2]){e:if(!((0|a)<1))for(f=l[e+20>>2];;){if(f>>>0>2)break e;if(f=(k=v[0|r]==v[f+44582|0])?f+1|0:f?255:3,l[e+20>>2]=f,r=k?r+1|0:r,!((0|(a=a-k|0))>0))break}return l[e+12>>2]=i,l[e+8>>2]=0,l[e+4>>2]=a,void(l[e>>2]=r)}P(14410,14895,685,44564),M()}function de(e,r){var a,i=0,f=0,k=0,b=0,n=0,s=0,t=0;ne=a=ne-48|0,l[a+40>>2]=0,l[a+44>>2]=0,i=l[r>>2];e:{r:{for(;;){t=0;a:{i:{if(i)for(;;){if((f=l[i>>2])?(l[f+4>>2]=0,l[r>>2]=f,l[i>>2]=0):(l[r>>2]=0,l[r+4>>2]=0),34==l[i+8>>2])break i;if(l[a+36>>2]=i,l[a+32>>2]=i,f=l[a+44>>2],l[a+16>>2]=l[a+40>>2],l[a+20>>2]=f,f=l[a+36>>2],l[a+24>>2]=l[a+32>>2],l[a+28>>2]=f,f=Ki(a+24|0,a+16|0),k=l[a+36>>2],l[a+8>>2]=l[a+32>>2],l[a+12>>2]=k,k=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=k,(0|f)!=(0-Ki(a+8|0,a)|0)){if(k=l[a+44>>2]){if(l[k>>2])break r;if(l[i+4>>2])break e;f=l[a+40>>2],l[k>>2]=i,l[i+4>>2]=k}else f=i;l[a+44>>2]=i,l[a+40>>2]=f}else{if(b){if(l[b>>2])break r;if(l[i+4>>2])break e;l[b>>2]=i,l[i+4>>2]=b}else n=i;t=t+1|0,b=i}if(!(i=l[r>>2]))break}f=l[a+44>>2],i=l[a+40>>2];break a}if(k=l[r>>2]){if(l[k+4>>2])break e;f=l[r+4>>2],l[i>>2]=k,l[k+4>>2]=i}else f=i;if(l[r+4>>2]=f,l[r>>2]=i,s=l[a+44>>2]){if(l[s>>2])break r;if(l[i+4>>2])break e;k=l[a+40>>2],l[s>>2]=i,l[i+4>>2]=s,i=k}}if(l[r+4>>2]=f,l[r>>2]=i,l[a+40>>2]=0,l[a+44>>2]=0,!t)break}if(n)for(;i=l[n>>2],Wk(n),n=i,i;);return i=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=i,void(ne=a+48|0)}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function he(e){var r,a=0;ne=r=ne-32|0,On(e),a=l[e+52>>2],l[r+24>>2]=l[e+48>>2],l[r+28>>2]=a,a=l[e+44>>2],l[r+16>>2]=l[e+40>>2],l[r+20>>2]=a,zb(r+16|0),a=l[e+76>>2],l[r+8>>2]=l[e+72>>2],l[r+12>>2]=a,a=l[e+68>>2],l[r>>2]=l[e+64>>2],l[r+4>>2]=a,zb(r),Lb(l[e+28>>2]),Lb(l[e+96>>2]),Ji(e+116|0),Lb(e),ne=r+32|0}function me(e){var r;return Lr(r=Bb(160),e),l[r+24>>2]=e,r}function we(e,r,a){var i,f,b=0,n=0,s=0,t=0,c=0,o=0;ne=i=ne-16|0,f=Hr(e,a,i+12|0,i+8|0,i+4|0),n=r,l[i+8>>2]&&(k[0|r]=45,n=r+1|0),b=l[i+12>>2];e:if(9999!=(0|b))if((0|b)<=(15+(l[i+4>>2]-f|0)|0)&&(0|b)>=-3){r:{a:{i:{if((0|b)>=1){if(s=v[0|f],k[0|n]=s,s)break i;b=n;break a}if(k[0|n]=11824,k[n+1|0]=46,n=n+2|0,(0|b)<=-1)for(;k[0|n]=48,n=n+1|0,b=l[i+12>>2]+1|0,l[i+12>>2]=b,(0|b)<0;);for(b=f;s=v[0|b],k[0|n]=s,n=n+1|0,b=b+1|0,s;);break e}for(s=f;;){c=b+-1|0,l[i+12>>2]=c,b=n+1|0,s=s+1|0;i:{f:{if(!c){if(!(c=v[0|s])){k[0|b]=c;break f}k[n+1|0]=46,b=n+2|0}if(n=b,b=v[0|s],k[0|n]=b,b)break i;b=n}if(l[i+12>>2]<1)break r;break a}b=l[i+12>>2]}}for(;k[0|b]=48,b=b+1|0,n=l[i+12>>2]+-1|0,l[i+12>>2]=n,(0|n)>0;);}k[0|b]=0}else{if(k[0|n]=v[0|f],v[f+1|0]){if(k[n+1|0]=46,s=v[0|(b=f+1|0)],k[n+2|0]=s,t=n+2|0,s)for(;n=v[b+1|0],k[t+1|0]=n,t=t+1|0,b=b+1|0,n;);}else t=n+1|0;for(k[0|t]=101,b=l[i+12>>2],l[i+12>>2]=b+-1,(0|b)<=0?(k[t+1|0]=45,o=0-l[i+12>>2]|0,l[i+12>>2]=o):(k[t+1|0]=43,o=l[i+12>>2]),b=2,s=10;b=(n=b)+1|0,c=s,(0|(s=w(s,10)))<=(0|o););if(s=(0|o)/(0|c)|0,k[t+2|0]=s+48,b=t+3|0,n>>>0>=2)for(;s=w(l[i+12>>2]-w(s,c)|0,10),l[i+12>>2]=s,s=(0|s)/(0|c)|0,k[0|b]=s+48,b=b+1|0,t=(0|n)>2,n=n+-1|0,t;);k[0|b]=0}else for(b=f;s=v[0|b],k[0|n]=s,n=n+1|0,b=b+1|0,s;);return n=l[(b=f+-4|0)>>2],l[f>>2]=n,l[f+4>>2]=1<<n,(0|n)>=8?Lb(b):(e=(n<<2)+e|0,l[b>>2]=l[e>>2],l[e>>2]=b),ne=i+16|0,r}function pe(e,r){var a,i,f,k,b=0,t=0,c=0,o=0,u=0;f=(i=e+20|0)+(l[e+16>>2]<<2)|0,e=((a=l[(t=f+-4|0)>>2])>>>0<65536)<<4,e=(b=(c=a>>>0>65535?a:a<<16)>>>0>16777215)?e:8|e,o=e=(b=(c=b?c:c<<8)>>>0>268435455)?e:4|e,k=2|e,o=(e=(b=b?c:c<<4)>>>0>1073741823)?o:k;e:{r:{a:{if((0|(e=e?b:b<<2))>=0){if(!(1073741824&e))break a;o=o+1|0}if(l[r>>2]=32-o,(0|o)>10)break r;r=0,r=t>>>0>i>>>0?l[f+-8>>2]:r,t=a>>>(e=11-o|0),u=a<<o+21|r>>>e;break e}l[r>>2]=0,o=32}t>>>0>i>>>0&&(u=l[(t=f+-8|0)>>2]),(c=o+-11|0)?(r=u>>>(b=43-o|0),e=0,e=t>>>0>i>>>0?l[t+-4>>2]:e,t=r|a<<c,u=u<<c|e>>>b):t=a}return n(0,0|u),n(1,1072693248|t),+s()}function ge(e,r,a){var i=0,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0;e:if(f=l[a+16>>2],!(i=l[r+16>>2]-f|0)){for(i=(k=r+20|0)+(f<<=2)|0,f=20+(a+f|0)|0;;){if((0|(b=l[(f=f+-4|0)>>2]))!=(0|(s=l[(i=i+-4|0)>>2]))){i=s>>>0<b>>>0?-1:1;break e}if(!(i>>>0>k>>>0))break}return(i=l[e>>2])?l[e>>2]=l[i>>2]:(i=Bb(24),l[i+4>>2]=0,l[i+8>>2]=1),l[i+20>>2]=0,l[i+12>>2]=0,l[i+16>>2]=1,i}for(f=(k=(0|i)<0)?r:a,i>>>=31,(0|(a=l[(k=k?a:r)+4>>2]))>7||!(r=l[(e=(a<<2)+e|0)>>2])?(r=Bb(20+((e=1<<a)<<2)|0),l[r+8>>2]=e,l[r+4>>2]=a):l[e>>2]=l[r>>2],l[r+12>>2]=i,l[r+16>>2]=0,s=(b=f+20|0)+(l[f+16>>2]<<2)|0,i=r+20|0,f=k+20|0,e=l[k+16>>2];t=0-((c=l[f>>2])>>>0<(o=l[b>>2])>>>0)-(((a=c-o|0)>>>0<n>>>0)+t)|0,l[i>>2]=a-n,i=i+4|0,f=f+4|0,n=1&t,t=0,(b=b+4|0)>>>0<s>>>0;);if(f>>>0<(k=20+(k+(e<<2)|0)|0)>>>0)for(;b=0-(((a=l[f>>2])>>>0<n>>>0)+t|0)|0,l[i>>2]=a-n,i=i+4|0,n=1&b,(f=f+4|0)>>>0<k>>>0;);for(;e=(a=e)+-1|0,!l[(i=i+-4|0)>>2];);return l[r+16>>2]=a,r}function ye(e,r){var a,i=0,f=0;if(ne=a=ne-304|0,f=l[r+12>>2],l[a+216>>2]=l[r+8>>2],l[a+220>>2]=f,f=l[r+4>>2],l[a+208>>2]=l[r>>2],l[a+212>>2]=f,7==(15&v[a+208|0])){if(f=l[r+12>>2],l[a+184>>2]=l[r+8>>2],l[a+188>>2]=f,f=l[r+4>>2],l[a+176>>2]=l[r>>2],l[a+180>>2]=f,Nb(a+272|0,a+176|0),f=l[a+284>>2],l[a+168>>2]=l[a+280>>2],l[a+172>>2]=f,f=l[a+276>>2],l[a+160>>2]=l[a+272>>2],l[a+164>>2]=f,Oe(a+288|0,Sf(a+160|0)),f=l[r+12>>2],l[a+152>>2]=l[r+8>>2],l[a+156>>2]=f,f=l[r+4>>2],l[a+144>>2]=l[r>>2],l[a+148>>2]=f,f=Df(a+144|0),i=l[r+12>>2],l[a+136>>2]=l[r+8>>2],l[a+140>>2]=i,i=l[r+4>>2],l[a+128>>2]=l[r>>2],l[a+132>>2]=i,-2!=(0|f))for(;i=l[r+12>>2],l[a+120>>2]=l[r+8>>2],l[a+124>>2]=i,i=l[r+4>>2],l[a+112>>2]=l[r>>2],l[a+116>>2]=i,_f(a+224|0,a+112|0,f),i=l[a+236>>2],l[a+264>>2]=l[a+232>>2],l[a+268>>2]=i,i=l[a+228>>2],l[a+256>>2]=l[a+224>>2],l[a+260>>2]=i,i=l[r+12>>2],l[a+104>>2]=l[r+8>>2],l[a+108>>2]=i,i=l[r+4>>2],l[a+96>>2]=l[r>>2],l[a+100>>2]=i,fk(a+224|0,a+96|0,f),i=l[a+236>>2],l[a+248>>2]=l[a+232>>2],l[a+252>>2]=i,i=l[a+300>>2],l[a+88>>2]=l[a+296>>2],l[a+92>>2]=i,i=l[a+268>>2],l[a+72>>2]=l[a+264>>2],l[a+76>>2]=i,i=l[a+228>>2],l[a+240>>2]=l[a+224>>2],l[a+244>>2]=i,i=l[a+292>>2],l[a+80>>2]=l[a+288>>2],l[a+84>>2]=i,i=l[a+260>>2],l[a+64>>2]=l[a+256>>2],l[a+68>>2]=i,Vb(a+224|0,a+80|0,a- -64|0),i=l[a+236>>2],l[a+296>>2]=l[a+232>>2],l[a+300>>2]=i,i=l[a+252>>2],l[a+56>>2]=l[a+248>>2],l[a+60>>2]=i,i=l[a+228>>2],l[a+288>>2]=l[a+224>>2],l[a+292>>2]=i,i=l[a+244>>2],l[a+48>>2]=l[a+240>>2],l[a+52>>2]=i,zb(a+48|0),i=l[r+12>>2],l[a+40>>2]=l[r+8>>2],l[a+44>>2]=i,i=l[r+4>>2],l[a+32>>2]=l[r>>2],l[a+36>>2]=i,f=jn(a+32|0,f),i=l[r+12>>2],l[a+24>>2]=l[r+8>>2],l[a+28>>2]=i,i=l[r+4>>2],l[a+16>>2]=l[r>>2],l[a+20>>2]=i,-2!=(0|f););f=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=f,f=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=f,zb(a),r=l[a+300>>2],l[e+8>>2]=l[a+296>>2],l[e+12>>2]=r,r=l[a+292>>2],l[e>>2]=l[a+288>>2],l[e+4>>2]=r}else f=l[r+12>>2],l[a+200>>2]=l[r+8>>2],l[a+204>>2]=f,f=l[r+4>>2],l[a+192>>2]=l[r>>2],l[a+196>>2]=f,Ef(e,a+192|0);ne=a+304|0}function Ee(e,r){var a,i=0,f=0,k=0,b=0,n=0;ne=a=ne-320|0,i=l[e+12>>2],l[a+216>>2]=l[e+8>>2],l[a+220>>2]=i,i=l[e+4>>2],l[a+208>>2]=l[e>>2],l[a+212>>2]=i;e:{r:{if(6==(15&v[a+208|0])){if(i=l[r+12>>2],l[a+200>>2]=l[r+8>>2],l[a+204>>2]=i,i=l[r+4>>2],l[a+192>>2]=l[r>>2],l[a+196>>2]=i,6!=(15&v[a+192|0]))break r;if(i=l[e+12>>2],l[a+184>>2]=l[e+8>>2],l[a+188>>2]=i,i=l[e+4>>2],l[a+176>>2]=l[e>>2],l[a+180>>2]=i,Nb(a+304|0,a+176|0),i=l[a+316>>2],l[a+168>>2]=l[a+312>>2],l[a+172>>2]=i,i=l[a+308>>2],l[a+160>>2]=l[a+304>>2],l[a+164>>2]=i,i=Zb(a+160|0),f=l[r+12>>2],l[a+152>>2]=l[r+8>>2],l[a+156>>2]=f,f=l[r+4>>2],l[a+144>>2]=l[r>>2],l[a+148>>2]=f,Nb(a+288|0,a+144|0),f=l[a+300>>2],l[a+136>>2]=l[a+296>>2],l[a+140>>2]=f,f=l[a+292>>2],l[a+128>>2]=l[a+288>>2],l[a+132>>2]=f,(0|Zb(a+128|0))!=(0|i))break e;if(i=l[e+12>>2],l[a+120>>2]=l[e+8>>2],l[a+124>>2]=i,i=l[e+4>>2],l[a+112>>2]=l[e>>2],l[a+116>>2]=i,Nb(a+272|0,a+112|0),i=l[a+284>>2],l[a+104>>2]=l[a+280>>2],l[a+108>>2]=i,i=l[a+276>>2],l[a+96>>2]=l[a+272>>2],l[a+100>>2]=i,n=gb(40,b=Zb(a+96|0)),(0|b)>=1)for(f=0;i=l[e+12>>2],l[a+88>>2]=l[e+8>>2],l[a+92>>2]=i,i=l[e+4>>2],l[a+80>>2]=l[e>>2],l[a+84>>2]=i,Nb(a+240|0,a+80|0),i=l[a+252>>2],l[a+72>>2]=l[a+248>>2],l[a+76>>2]=i,i=l[a+244>>2],l[a+64>>2]=l[a+240>>2],l[a+68>>2]=i,Kb(a+256|0,a- -64|0,f),k=l[a+268>>2],i=w(f,40)+n|0,l[i+8>>2]=l[a+264>>2],l[i+12>>2]=k,k=l[a+260>>2],l[i>>2]=l[a+256>>2],l[i+4>>2]=k,k=l[r+12>>2],l[a+56>>2]=l[r+8>>2],l[a+60>>2]=k,k=l[r+4>>2],l[a+48>>2]=l[r>>2],l[a+52>>2]=k,Nb(a+224|0,a+48|0),k=l[a+236>>2],l[a+40>>2]=l[a+232>>2],l[a+44>>2]=k,k=l[a+228>>2],l[a+32>>2]=l[a+224>>2],l[a+36>>2]=k,Kb(a+256|0,a+32|0,f),k=l[a+268>>2],l[i+24>>2]=l[a+264>>2],l[i+28>>2]=k,k=l[a+260>>2],l[i+16>>2]=l[a+256>>2],l[i+20>>2]=k,l[i+32>>2]=f,(0|b)!=(0|(f=f+1|0)););return i=l[e+12>>2],l[a+24>>2]=l[e+8>>2],l[a+28>>2]=i,i=l[e+4>>2],l[a+16>>2]=l[e>>2],l[a+20>>2]=i,zb(a+16|0),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a),za(n,b,40,6),ne=a+320|0,n}P(19901,16044,586,44246),M()}P(20245,16044,587,44246),M()}P(20477,16044,588,44246),M()}function _e(e,r,a,i){var f,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,w=0,p=0;ne=f=ne-2816|0,rn(f+2336|0),k=a,a=l[a+12>>2],l[(b=f+2072|0)>>2]=l[k+8>>2],l[b+4>>2]=a,a=l[k+4>>2],l[f+2064>>2]=l[k>>2],l[f+2068>>2]=a,Nb(f+2320|0,f+2064|0),n=l[4+(b=d=f+2328|0)>>2],l[(a=f+2056|0)>>2]=l[b>>2],l[a+4>>2]=n,a=l[f+2324>>2],l[f+2048>>2]=l[f+2320>>2],l[f+2052>>2]=a;e:if(!((0|Zb(f+2048|0))<1)){t=i+1|0,a=0;r:{for(;;){if(n=l[k+12>>2],l[(b=f+2040|0)>>2]=l[k+8>>2],l[b+4>>2]=n,b=l[k+4>>2],l[f+2032>>2]=l[k>>2],l[f+2036>>2]=b,Nb(f+2288|0,f+2032|0),c=l[4+(n=f+2296|0)>>2],l[(b=f+2024|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+2292>>2],l[f+2016>>2]=l[f+2288>>2],l[f+2020>>2]=b,Kb(f+2304|0,f+2016|0,a),c=l[4+(n=f+2312|0)>>2],l[(b=f+2008|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+2308>>2],l[f+2e3>>2]=l[f+2304>>2],l[f+2004>>2]=b,!((0|Zb(f+2e3|0))<=(0|i))){n=l[k+12>>2],l[(b=f+1992|0)>>2]=l[k+8>>2],l[b+4>>2]=n,b=l[k+4>>2],l[f+1984>>2]=l[k>>2],l[f+1988>>2]=b,Nb(f+2256|0,f+1984|0),c=l[4+(n=f+2264|0)>>2],l[(b=f+1976|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+2260>>2],l[f+1968>>2]=l[f+2256>>2],l[f+1972>>2]=b,Kb(f+2272|0,f+1968|0,a),c=l[4+(n=f+2280|0)>>2],l[(b=f+1960|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+2276>>2],l[f+1952>>2]=l[f+2272>>2],l[f+1956>>2]=b,c=Zb(f+1952|0),n=l[k+12>>2],l[(b=f+1944|0)>>2]=l[k+8>>2],l[b+4>>2]=n,b=l[k+4>>2],l[f+1936>>2]=l[k>>2],l[f+1940>>2]=b,Nb(f+2224|0,f+1936|0),s=l[4+(n=f+2232|0)>>2],l[(b=f+1928|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+2228>>2],l[f+1920>>2]=l[f+2224>>2],l[f+1924>>2]=b,Kb(f+2240|0,f+1920|0,a),s=l[4+(n=f+2248|0)>>2],l[(b=f+1912|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+2244>>2],l[f+1904>>2]=l[f+2240>>2],l[f+1908>>2]=b,Kb(f+2800|0,f+1904|0,i),n=l[k+12>>2],l[(b=f+1896|0)>>2]=l[k+8>>2],l[b+4>>2]=n,b=l[k+4>>2],l[f+1888>>2]=l[k>>2],l[f+1892>>2]=b,Nb(f+2208|0,f+1888|0),o=l[4+(n=f+2216|0)>>2],l[(b=f+1880|0)>>2]=l[n>>2],l[b+4>>2]=o,b=l[f+2212>>2],l[f+1872>>2]=l[f+2208>>2],l[f+1876>>2]=b,b=a;a:if(!((0|a)>=(0|Zb(f+1872|0))))for(;;){if(u=l[4+(o=f+2808|0)>>2],l[(s=f+1864|0)>>2]=l[o>>2],l[s+4>>2]=u,s=l[f+2804>>2],l[f+1856>>2]=l[f+2800>>2],l[f+1860>>2]=s,Nb(f+2192|0,f+1856|0),o=l[k+12>>2],l[(s=f+1848|0)>>2]=l[k+8>>2],l[s+4>>2]=o,s=l[k+4>>2],l[f+1840>>2]=l[k>>2],l[f+1844>>2]=s,Nb(f+2144|0,f+1840|0),u=l[4+(o=f+2152|0)>>2],l[(s=f+1832|0)>>2]=l[o>>2],l[s+4>>2]=u,s=l[f+2148>>2],l[f+1824>>2]=l[f+2144>>2],l[f+1828>>2]=s,Kb(f+2160|0,f+1824|0,b),u=l[4+(o=f+2168|0)>>2],l[(s=f+1816|0)>>2]=l[o>>2],l[s+4>>2]=u,s=l[f+2164>>2],l[f+1808>>2]=l[f+2160>>2],l[f+1812>>2]=s,Kb(f+2176|0,f+1808|0,i),u=l[4+(o=f+2200|0)>>2],l[(s=f+1800|0)>>2]=l[o>>2],l[s+4>>2]=u,u=l[4+(o=f+2184|0)>>2],l[(s=f+1784|0)>>2]=l[o>>2],l[s+4>>2]=u,s=l[f+2196>>2],l[f+1792>>2]=l[f+2192>>2],l[f+1796>>2]=s,s=l[f+2180>>2],l[f+1776>>2]=l[f+2176>>2],l[f+1780>>2]=s,!gn(f+1792|0,f+1776|0))break a;if(o=l[k+12>>2],l[(s=f+1768|0)>>2]=l[k+8>>2],l[s+4>>2]=o,s=l[k+4>>2],l[f+1760>>2]=l[k>>2],l[f+1764>>2]=s,Nb(f+2208|0,f+1760|0),o=l[n+4>>2],l[(s=f+1752|0)>>2]=l[n>>2],l[s+4>>2]=o,s=l[f+2212>>2],l[f+1744>>2]=l[f+2208>>2],l[f+1748>>2]=s,!((0|(b=b+1|0))<(0|Zb(f+1744|0))))break}if((0|t)!=(0|c)){if(c=l[r+12>>2],l[(n=f+1736|0)>>2]=l[r+8>>2],l[n+4>>2]=c,n=l[r+4>>2],l[f+1728>>2]=l[r>>2],l[f+1732>>2]=n,Nb(f+2128|0,f+1728|0),o=l[4+(s=c=f+2808|0)>>2],l[(n=f+1720|0)>>2]=l[s>>2],l[n+4>>2]=o,n=l[f+2804>>2],l[f+1712>>2]=l[f+2800>>2],l[f+1716>>2]=n,Nb(f+2112|0,f+1712|0),o=l[4+(s=f+2136|0)>>2],l[(n=f+1704|0)>>2]=l[s>>2],l[n+4>>2]=o,o=l[4+(s=f+2120|0)>>2],l[(n=f+1688|0)>>2]=l[s>>2],l[n+4>>2]=o,n=l[f+2132>>2],l[f+1696>>2]=l[f+2128>>2],l[f+1700>>2]=n,n=l[f+2116>>2],l[f+1680>>2]=l[f+2112>>2],l[f+1684>>2]=n,rk(f+2784|0,f+1696|0,f+1680|0),u=l[4+(n=f+2792|0)>>2],l[(s=f+1672|0)>>2]=l[n>>2],l[s+4>>2]=u,s=l[f+2788>>2],l[f+1664>>2]=l[f+2784>>2],l[f+1668>>2]=s,!(15&v[f+1664|0])){b=l[4+(i=f+2808|0)>>2],l[(a=f+1432|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2804>>2],l[f+1424>>2]=l[f+2800>>2],l[f+1428>>2]=a,zb(f+1424|0),i=l[r+12>>2],l[(a=f+1416|0)>>2]=l[r+8>>2],l[a+4>>2]=i,a=l[r+4>>2],l[f+1408>>2]=l[r>>2],l[f+1412>>2]=a,zb(f+1408|0),i=l[4+(a=f+2792|0)>>2],l[r+8>>2]=l[a>>2],l[r+12>>2]=i,a=l[f+2788>>2],l[r>>2]=l[f+2784>>2],l[r+4>>2]=a;break e}if(o=l[n+4>>2],l[(s=f+1656|0)>>2]=l[n>>2],l[s+4>>2]=o,s=l[f+2788>>2],l[f+1648>>2]=l[f+2784>>2],l[f+1652>>2]=s,1!=(15&v[f+1648|0])){if(o=l[k+12>>2],l[(s=f+1640|0)>>2]=l[k+8>>2],l[s+4>>2]=o,s=l[k+4>>2],l[f+1632>>2]=l[k>>2],l[f+1636>>2]=s,Nb(f+2080|0,f+1632|0),u=l[4+(o=f+2088|0)>>2],l[(s=f+1624|0)>>2]=l[o>>2],l[s+4>>2]=u,s=l[f+2084>>2],l[f+1616>>2]=l[f+2080>>2],l[f+1620>>2]=s,eb(f+2096|0,f+1616|0,a,b),s=l[n+4>>2],l[(a=f+1608|0)>>2]=l[n>>2],l[a+4>>2]=s,s=l[4+(n=f+2104|0)>>2],l[(a=f+1592|0)>>2]=l[n>>2],l[a+4>>2]=s,a=l[f+2788>>2],l[f+1600>>2]=l[f+2784>>2],l[f+1604>>2]=a,a=l[f+2100>>2],l[f+1584>>2]=l[f+2096>>2],l[f+1588>>2]=a,_e(f+2768|0,f+1600|0,f+1584|0,t),o=l[4+(a=f+2776|0)>>2],l[(n=f+1576|0)>>2]=l[a>>2],l[n+4>>2]=o,n=l[f+2772>>2],l[f+1568>>2]=l[f+2768>>2],l[f+1572>>2]=n,!(15&v[f+1568|0]))break r;s=l[r+12>>2],l[(n=f+1560|0)>>2]=l[r+8>>2],l[n+4>>2]=s,n=l[r>>2],s=l[r+4>>2],u=l[c+4>>2],l[(o=f+1544|0)>>2]=l[c>>2],l[o+4>>2]=u,o=l[a+4>>2],l[(c=f+1528|0)>>2]=l[a>>2],l[c+4>>2]=o,l[f+1552>>2]=n,l[f+1556>>2]=s,a=l[f+2804>>2],l[f+1536>>2]=l[f+2800>>2],l[f+1540>>2]=a,a=l[f+2772>>2],l[f+1520>>2]=l[f+2768>>2],l[f+1524>>2]=a,Fe(f+2752|0,f+1552|0,f+1536|0,f+1520|0),n=l[4+(a=f+2760|0)>>2],l[r+8>>2]=l[a>>2],l[r+12>>2]=n,a=l[f+2756>>2],l[r>>2]=l[f+2752>>2],l[r+4>>2]=a}else s=l[c+4>>2],l[(a=f+1480|0)>>2]=l[c>>2],l[a+4>>2]=s,a=l[f+2804>>2],l[f+1472>>2]=l[f+2800>>2],l[f+1476>>2]=a,zb(f+1472|0),c=l[n+4>>2],l[(a=f+1464|0)>>2]=l[n>>2],l[a+4>>2]=c,a=l[f+2788>>2],l[f+1456>>2]=l[f+2784>>2],l[f+1460>>2]=a,zb(f+1456|0);if(n=l[r+12>>2],l[(a=f+1448|0)>>2]=l[r+8>>2],l[a+4>>2]=n,a=l[r+4>>2],l[f+1440>>2]=l[r>>2],l[f+1444>>2]=a,!(15&v[f+1440|0]))break e}else s=l[4+(a=f+2344|0)>>2],l[(n=f+1400|0)>>2]=l[a>>2],l[n+4>>2]=s,s=l[4+(c=f+2808|0)>>2],l[(n=f+1384|0)>>2]=l[c>>2],l[n+4>>2]=s,n=l[f+2340>>2],l[f+1392>>2]=l[f+2336>>2],l[f+1396>>2]=n,n=l[f+2804>>2],l[f+1376>>2]=l[f+2800>>2],l[f+1380>>2]=n,Vb(f+2784|0,f+1392|0,f+1376|0),c=l[4+(n=f+2792|0)>>2],l[a>>2]=l[n>>2],l[a+4>>2]=c,a=l[f+2788>>2],l[f+2336>>2]=l[f+2784>>2],l[f+2340>>2]=a;if(n=l[k+12>>2],l[(a=f+1368|0)>>2]=l[k+8>>2],l[a+4>>2]=n,a=l[k+4>>2],l[f+1360>>2]=l[k>>2],l[f+1364>>2]=a,Nb(f+2320|0,f+1360|0),n=l[d+4>>2],l[(a=f+1352|0)>>2]=l[d>>2],l[a+4>>2]=n,a=l[f+2324>>2],l[f+1344>>2]=l[f+2320>>2],l[f+1348>>2]=a,(0|(a=b))<(0|Zb(f+1344|0)))continue;break e}break}P(21666,16044,366,44222),M()}b=l[4+(i=f+2808|0)>>2],l[(a=f+1512|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2804>>2],l[f+1504>>2]=l[f+2800>>2],l[f+1508>>2]=a,zb(f+1504|0),i=l[r+12>>2],l[(a=f+1496|0)>>2]=l[r+8>>2],l[a+4>>2]=i,a=l[r+4>>2],l[f+1488>>2]=l[r>>2],l[f+1492>>2]=a,zb(f+1488|0),i=l[4+(a=f+2776|0)>>2],l[r+8>>2]=l[a>>2],l[r+12>>2]=i,a=l[f+2772>>2],l[r>>2]=l[f+2768>>2],l[r+4>>2]=a}i=l[k+12>>2],l[(a=f+1336|0)>>2]=l[k+8>>2],l[a+4>>2]=i,a=l[k+4>>2],l[f+1328>>2]=l[k>>2],l[f+1332>>2]=a,zb(f+1328|0),i=l[r+12>>2],l[(a=f+1320|0)>>2]=l[r+8>>2],l[a+4>>2]=i,a=l[r+4>>2],l[f+1312>>2]=l[r>>2],l[f+1316>>2]=a;e:{r:{a:{i:{f:{if(15&v[f+1312|0]){if(k=l[4+(a=f+2344|0)>>2],l[(i=f+2376|0)>>2]=l[a>>2],l[i+4>>2]=k,i=l[f+2340>>2],l[f+2368>>2]=l[f+2336>>2],l[f+2372>>2]=i,k=l[r+12>>2],l[(i=f+2360|0)>>2]=l[r+8>>2],l[i+4>>2]=k,b=l[r+4>>2],l[f+2352>>2]=l[r>>2],l[f+2356>>2]=b,k=l[a+4>>2],l[(b=f+1304|0)>>2]=l[a>>2],l[b+4>>2]=k,a=l[f+2340>>2],l[f+1296>>2]=l[f+2336>>2],l[f+1300>>2]=a,6==(15&v[f+1296|0])){if(b=l[i+4>>2],l[(a=f+1288|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2356>>2],l[f+1280>>2]=l[f+2352>>2],l[f+1284>>2]=a,15&v[f+1280|0]){if(b=l[4+(i=s=f+2360|0)>>2],l[(a=f+1272|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2356>>2],l[f+1264>>2]=l[f+2352>>2],l[f+1268>>2]=a,1==(15&v[f+1264|0]))break r;if(b=l[4+(i=f+2376|0)>>2],l[(a=f+1256|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2372>>2],l[f+1248>>2]=l[f+2368>>2],l[f+1252>>2]=a,Nb(f+2800|0,f+1248|0),b=l[4+(i=f+2808|0)>>2],l[(a=f+1240|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2804>>2],l[f+1232>>2]=l[f+2800>>2],l[f+1236>>2]=a,!Zb(f+1232|0))break r;if(k=l[4+(a=f+2360|0)>>2],l[(i=f+1224|0)>>2]=l[a>>2],l[i+4>>2]=k,i=l[f+2356>>2],l[f+1216>>2]=l[f+2352>>2],l[f+1220>>2]=i,6!=(15&v[f+1216|0]))break f;if(rn(f+2784|0),rn(f+2768|0),rn(f+2752|0),rn(f+2736|0),rn(f+2720|0),i=l[4+(a=f+2376|0)>>2],l[f+936>>2]=l[a>>2],l[f+940>>2]=i,a=l[f+2372>>2],l[f+928>>2]=l[f+2368>>2],l[f+932>>2]=a,Nb(f+2704|0,f+928|0),i=l[4+(a=f+2712|0)>>2],l[f+920>>2]=l[a>>2],l[f+924>>2]=i,a=l[f+2708>>2],l[f+912>>2]=l[f+2704>>2],l[f+916>>2]=a,(0|(n=Zb(f+912|0)))>=1)for(b=0;;){i=l[4+(a=f+2376|0)>>2],l[f+904>>2]=l[a>>2],l[f+908>>2]=i,a=l[f+2372>>2],l[f+896>>2]=l[f+2368>>2],l[f+900>>2]=a,Nb(f+2656|0,f+896|0),i=l[4+(a=f+2664|0)>>2],l[f+888>>2]=l[a>>2],l[f+892>>2]=i,a=l[f+2660>>2],l[f+880>>2]=l[f+2656>>2],l[f+884>>2]=a,Kb(f+2672|0,f+880|0,b),k=l[4+(i=f+2680|0)>>2],a=f+2696|0,d=l[i>>2],l[a>>2]=d,l[a+4>>2]=k,l[f+872>>2]=d,l[f+876>>2]=k,k=l[f+2676>>2],c=l[f+2672>>2],l[f+2688>>2]=c,l[f+2692>>2]=k,l[f+864>>2]=c,l[f+868>>2]=k;k:{b:{if(4==(15&v[f+864|0])){if(k=l[a+4>>2],l[f+616>>2]=l[a>>2],l[f+620>>2]=k,k=l[f+2692>>2],l[f+608>>2]=l[f+2688>>2],l[f+612>>2]=k,!(Wb(f+608|0)<0))break b;d=l[4+(k=f+2792|0)>>2],l[f+568>>2]=l[k>>2],l[f+572>>2]=d,c=l[a+4>>2],l[f+552>>2]=l[a>>2],l[f+556>>2]=c,a=l[f+2788>>2],l[f+560>>2]=l[f+2784>>2],l[f+564>>2]=a,a=l[f+2692>>2],l[f+544>>2]=l[f+2688>>2],l[f+548>>2]=a,Vb(f+2672|0,f+560|0,f+544|0),a=l[i+4>>2],l[k>>2]=l[i>>2],l[k+4>>2]=a,a=l[f+2676>>2],l[f+2784>>2]=l[f+2672>>2],l[f+2788>>2]=a;break k}if(k=l[a+4>>2],l[f+856>>2]=l[a>>2],l[f+860>>2]=k,k=l[f+2692>>2],l[f+848>>2]=l[f+2688>>2],l[f+852>>2]=k,7==(15&v[f+848|0])){if(c=l[4+(k=f+2360|0)>>2],l[f+760>>2]=l[k>>2],l[f+764>>2]=c,k=l[f+2356>>2],l[f+752>>2]=l[f+2352>>2],l[f+756>>2]=k,Nb(f+2640|0,f+752|0),c=l[4+(k=f+2648|0)>>2],l[f+744>>2]=l[k>>2],l[f+748>>2]=c,k=l[a+4>>2],l[f+728>>2]=l[a>>2],l[f+732>>2]=k,a=l[f+2644>>2],l[f+736>>2]=l[f+2640>>2],l[f+740>>2]=a,a=l[f+2692>>2],l[f+720>>2]=l[f+2688>>2],l[f+724>>2]=a,!ek(f+736|0,f+720|0,f+2576|0,f+2560|0))break i;h=+l[f+2576>>2],l[(a=f+2624|0)>>2]=4,l[a+4>>2]=0,m[a+8>>3]=h,c=l[4+(a=f+2744|0)>>2],l[f+712>>2]=l[a>>2],l[f+716>>2]=c,c=l[4+(k=f+2632|0)>>2],l[f+696>>2]=l[k>>2],l[f+700>>2]=c,k=l[f+2740>>2],l[f+704>>2]=l[f+2736>>2],l[f+708>>2]=k,k=l[f+2628>>2],l[f+688>>2]=l[f+2624>>2],l[f+692>>2]=k,Vb(f+2672|0,f+704|0,f+688|0),k=l[i+4>>2],l[a>>2]=l[i>>2],l[a+4>>2]=k,a=l[f+2676>>2],l[f+2736>>2]=l[f+2672>>2],l[f+2740>>2]=a,h=+l[f+2560>>2],l[(a=f+2608|0)>>2]=4,l[a+4>>2]=0,m[a+8>>3]=h,c=l[4+(a=f+2728|0)>>2],l[f+680>>2]=l[a>>2],l[f+684>>2]=c,c=l[4+(k=f+2616|0)>>2],l[f+664>>2]=l[k>>2],l[f+668>>2]=c,k=l[f+2724>>2],l[f+672>>2]=l[f+2720>>2],l[f+676>>2]=k,k=l[f+2612>>2],l[f+656>>2]=l[f+2608>>2],l[f+660>>2]=k,Vb(f+2672|0,f+672|0,f+656|0),k=l[i+4>>2],l[a>>2]=l[i>>2],l[a+4>>2]=k,a=l[f+2676>>2],l[f+2720>>2]=l[f+2672>>2],l[f+2724>>2]=a;break k}b=l[4+(a=f+2760|0)>>2],l[f+840>>2]=l[a>>2],l[f+844>>2]=b,i=l[f+2756>>2],l[f+832>>2]=l[f+2752>>2],l[f+836>>2]=i,zb(f+832|0),k=l[4+(i=f+2696|0)>>2],l[f+824>>2]=l[i>>2],l[f+828>>2]=k,b=l[f+2692>>2],l[f+816>>2]=l[f+2688>>2],l[f+820>>2]=b,l[f+800>>2]=Xb(15&v[f+816|0]),Yb(f+2592|0,21879,f+800|0),k=l[4+(b=f+2600|0)>>2],l[f+792>>2]=l[b>>2],l[f+796>>2]=k,b=l[f+2596>>2],l[f+784>>2]=l[f+2592>>2],l[f+788>>2]=b,Hb(f+2672|0,f+784|0),k=l[4+(b=f+2680|0)>>2],l[a>>2]=l[b>>2],l[a+4>>2]=k,a=l[i+4>>2],l[f+776>>2]=l[i>>2],l[f+780>>2]=a,a=l[f+2676>>2],l[f+2752>>2]=l[f+2672>>2],l[f+2756>>2]=a,a=l[f+2692>>2],l[f+768>>2]=l[f+2688>>2],l[f+772>>2]=a,zb(f+768|0);break a}d=l[4+(k=f+2776|0)>>2],l[f+600>>2]=l[k>>2],l[f+604>>2]=d,c=l[a+4>>2],l[f+584>>2]=l[a>>2],l[f+588>>2]=c,a=l[f+2772>>2],l[f+592>>2]=l[f+2768>>2],l[f+596>>2]=a,a=l[f+2692>>2],l[f+576>>2]=l[f+2688>>2],l[f+580>>2]=a,Vb(f+2672|0,f+592|0,f+576|0),a=l[i+4>>2],l[k>>2]=l[i>>2],l[k+4>>2]=a,a=l[f+2676>>2],l[f+2768>>2]=l[f+2672>>2],l[f+2772>>2]=a}if((0|n)==(0|(b=b+1|0)))break}if(i=l[4+(a=n=f+2360|0)>>2],l[f+536>>2]=l[a>>2],l[f+540>>2]=i,a=l[f+2356>>2],l[f+528>>2]=l[f+2352>>2],l[f+532>>2]=a,Nb(f+2688|0,f+528|0),i=l[4+(a=f+2696|0)>>2],l[f+520>>2]=l[a>>2],l[f+524>>2]=i,a=l[f+2692>>2],l[f+512>>2]=l[f+2688>>2],l[f+516>>2]=a,p=Zb(f+512|0),a=l[n+4>>2],l[f+504>>2]=l[n>>2],l[f+508>>2]=a,a=l[f+2356>>2],l[f+496>>2]=l[f+2352>>2],l[f+500>>2]=a,Nb(f+2672|0,f+496|0),i=l[4+(a=f+2680|0)>>2],l[f+488>>2]=l[a>>2],l[f+492>>2]=i,a=l[f+2676>>2],l[f+480>>2]=l[f+2672>>2],l[f+484>>2]=a,b=0,(0|(w=Zb(f+480|0)))<=0)break a;for(c=0,i=0;;){for(a=l[n+4>>2],l[f+472>>2]=l[n>>2],l[f+476>>2]=a,a=l[f+2356>>2],l[f+464>>2]=l[f+2352>>2],l[f+468>>2]=a,Nb(f+2560|0,f+464|0),k=l[4+(a=f+2568|0)>>2],l[f+456>>2]=l[a>>2],l[f+460>>2]=k,a=l[f+2564>>2],l[f+448>>2]=l[f+2560>>2],l[f+452>>2]=a,Kb(f+2576|0,f+448|0,b),t=l[4+(k=o=f+2584|0)>>2],l[(a=d=f+2600|0)>>2]=l[k>>2],l[a+4>>2]=t,a=l[f+2580>>2],l[f+2592>>2]=l[f+2576>>2],l[f+2596>>2]=a,a=0;u=l[4+(k=f+2792|0)>>2],l[f+440>>2]=l[k>>2],l[f+444>>2]=u,t=l[f+2788>>2],l[f+432>>2]=l[f+2784>>2],l[f+436>>2]=t,Nb(f+2544|0,f+432|0),u=l[4+(t=f+2552|0)>>2],l[f+424>>2]=l[t>>2],l[f+428>>2]=u,t=l[f+2548>>2],l[f+416>>2]=l[f+2544>>2],l[f+420>>2]=t,!((0|c)>=(0|Zb(f+416|0)))&&(t=l[k+4>>2],l[f+408>>2]=l[k>>2],l[f+412>>2]=t,k=l[f+2788>>2],l[f+400>>2]=l[f+2784>>2],l[f+404>>2]=k,Nb(f+2512|0,f+400|0),t=l[4+(k=f+2520|0)>>2],l[f+392>>2]=l[k>>2],l[f+396>>2]=t,k=l[f+2516>>2],l[f+384>>2]=l[f+2512>>2],l[f+388>>2]=k,Kb(f+2528|0,f+384|0,c),t=l[4+(k=f+2536|0)>>2],l[f+376>>2]=l[k>>2],l[f+380>>2]=t,k=l[f+2532>>2],l[f+368>>2]=l[f+2528>>2],l[f+372>>2]=k,h=Wb(f+368|0),a=(0|(k=(k=g(h)<2147483648?~~h:-2147483648)+p|0))==(0|b)?1:a,c=(k=(0|b)>=(0|k))+c|0,k););for(;u=l[4+(k=f+2776|0)>>2],l[f+360>>2]=l[k>>2],l[f+364>>2]=u,t=l[f+2772>>2],l[f+352>>2]=l[f+2768>>2],l[f+356>>2]=t,Nb(f+2496|0,f+352|0),u=l[4+(t=f+2504|0)>>2],l[f+344>>2]=l[t>>2],l[f+348>>2]=u,t=l[f+2500>>2],l[f+336>>2]=l[f+2496>>2],l[f+340>>2]=t,!((0|i)>=(0|Zb(f+336|0)))&&(t=l[k+4>>2],l[f+328>>2]=l[k>>2],l[f+332>>2]=t,k=l[f+2772>>2],l[f+320>>2]=l[f+2768>>2],l[f+324>>2]=k,Nb(f+2464|0,f+320|0),t=l[4+(k=f+2472|0)>>2],l[f+312>>2]=l[k>>2],l[f+316>>2]=t,k=l[f+2468>>2],l[f+304>>2]=l[f+2464>>2],l[f+308>>2]=k,Kb(f+2480|0,f+304|0,i),t=l[4+(k=f+2488|0)>>2],l[f+296>>2]=l[k>>2],l[f+300>>2]=t,k=l[f+2484>>2],l[f+288>>2]=l[f+2480>>2],l[f+292>>2]=k,h=Wb(f+288|0),a=(0|(t=g(h)<2147483648?~~h:-2147483648))==(0|b)?1:a,i=(k=(0|b)>=(0|t))+i|0,k););k:{b:{if(!a)for(a=0;;){if(u=l[4+(k=f+2744|0)>>2],l[f+280>>2]=l[k>>2],l[f+284>>2]=u,t=l[f+2740>>2],l[f+272>>2]=l[f+2736>>2],l[f+276>>2]=t,Nb(f+2448|0,f+272|0),u=l[4+(t=f+2456|0)>>2],l[f+264>>2]=l[t>>2],l[f+268>>2]=u,t=l[f+2452>>2],l[f+256>>2]=l[f+2448>>2],l[f+260>>2]=t,(0|a)>=(0|Zb(f+256|0)))break b;if(t=l[k+4>>2],l[f+216>>2]=l[k>>2],l[f+220>>2]=t,k=l[f+2740>>2],l[f+208>>2]=l[f+2736>>2],l[f+212>>2]=k,Nb(f+2416|0,f+208|0),t=l[4+(k=f+2424|0)>>2],l[f+200>>2]=l[k>>2],l[f+204>>2]=t,k=l[f+2420>>2],l[f+192>>2]=l[f+2416>>2],l[f+196>>2]=k,Kb(f+2432|0,f+192|0,a),t=l[4+(k=f+2440|0)>>2],l[f+184>>2]=l[k>>2],l[f+188>>2]=t,k=l[f+2436>>2],l[f+176>>2]=l[f+2432>>2],l[f+180>>2]=k,t=0,k=b,h=Wb(f+176|0),(0|k)>=(0|(u=g(h)<2147483648?~~h:-2147483648))&&(t=l[4+(k=f+2728|0)>>2],l[f+168>>2]=l[k>>2],l[f+172>>2]=t,k=l[f+2724>>2],l[f+160>>2]=l[f+2720>>2],l[f+164>>2]=k,Nb(f+2384|0,f+160|0),t=l[4+(k=f+2392|0)>>2],l[f+152>>2]=l[k>>2],l[f+156>>2]=t,k=l[f+2388>>2],l[f+144>>2]=l[f+2384>>2],l[f+148>>2]=k,Kb(f+2400|0,f+144|0,a),t=l[4+(k=f+2408|0)>>2],l[f+136>>2]=l[k>>2],l[f+140>>2]=t,k=l[f+2404>>2],l[f+128>>2]=l[f+2400>>2],l[f+132>>2]=k,k=b,h=Wb(f+128|0),t=(0|k)<(0|(t=g(h)<2147483648?~~h:-2147483648))),a=a+1|0,t)break}a=l[d+4>>2],l[f+120>>2]=l[d>>2],l[f+124>>2]=a,a=l[f+2596>>2],l[f+112>>2]=l[f+2592>>2],l[f+116>>2]=a,zb(f+112|0);break k}t=l[4+(a=f+2760|0)>>2],l[f+248>>2]=l[a>>2],l[f+252>>2]=t,k=l[d+4>>2],l[f+232>>2]=l[d>>2],l[f+236>>2]=k,k=l[f+2756>>2],l[f+240>>2]=l[f+2752>>2],l[f+244>>2]=k,k=l[f+2596>>2],l[f+224>>2]=l[f+2592>>2],l[f+228>>2]=k,Vb(f+2576|0,f+240|0,f+224|0),k=l[o+4>>2],l[a>>2]=l[o>>2],l[a+4>>2]=k,a=l[f+2580>>2],l[f+2752>>2]=l[f+2576>>2],l[f+2756>>2]=a}if((0|w)==(0|(b=b+1|0)))break}break a}P(17181,16044,219,44238),M()}P(20245,16044,218,44238),M()}i=l[4+(a=f+2344|0)>>2],l[f+8>>2]=l[a>>2],l[f+12>>2]=i,a=l[f+2340>>2],l[f>>2]=l[f+2336>>2],l[f+4>>2]=a,zb(f);break e}if(b=l[a+4>>2],l[(i=f+1208|0)>>2]=l[a>>2],l[i+4>>2]=b,a=l[f+2356>>2],l[f+1200>>2]=l[f+2352>>2],l[f+1204>>2]=a,7==(15&v[f+1200|0])){if(k=l[4+(a=f+2376|0)>>2],l[(i=f+1128|0)>>2]=l[a>>2],l[i+4>>2]=k,i=l[f+2372>>2],l[f+1120>>2]=l[f+2368>>2],l[f+1124>>2]=i,Nb(f+2784|0,f+1120|0),k=l[4+(b=f+2792|0)>>2],l[(i=f+1112|0)>>2]=l[b>>2],l[i+4>>2]=k,i=l[f+2788>>2],l[f+1104>>2]=l[f+2784>>2],l[f+1108>>2]=i,(0|(c=Zb(f+1104|0)))<1)break r;for(b=0;;){if(k=l[a+4>>2],l[(i=f+1096|0)>>2]=l[a>>2],l[i+4>>2]=k,i=l[f+2372>>2],l[f+1088>>2]=l[f+2368>>2],l[f+1092>>2]=i,Nb(f+2736|0,f+1088|0),n=l[4+(k=f+2744|0)>>2],l[(i=f+1080|0)>>2]=l[k>>2],l[i+4>>2]=n,i=l[f+2740>>2],l[f+1072>>2]=l[f+2736>>2],l[f+1076>>2]=i,Kb(f+2752|0,f+1072|0,b),n=l[4+(k=f+2760|0)>>2],i=f+2776|0,t=l[k>>2],l[i>>2]=t,l[i+4>>2]=n,l[(d=f+1064|0)>>2]=t,l[d+4>>2]=n,n=l[f+2756>>2],d=l[f+2752>>2],l[f+2768>>2]=d,l[f+2772>>2]=n,l[f+1056>>2]=d,l[f+1060>>2]=n,5!=(15&v[f+1056|0])){k=l[4+(a=f+2360|0)>>2],l[(i=f+1048|0)>>2]=l[a>>2],l[i+4>>2]=k,i=l[f+2356>>2],l[f+1040>>2]=l[f+2352>>2],l[f+1044>>2]=i,zb(f+1040|0),n=l[4+(k=i=f+2776|0)>>2],l[(b=f+1032|0)>>2]=l[k>>2],l[b+4>>2]=n,b=l[f+2772>>2],l[f+1024>>2]=l[f+2768>>2],l[f+1028>>2]=b,l[f+1008>>2]=Xb(15&v[f+1024|0]),Yb(f+2720|0,22104,f+1008|0),k=l[4+(b=f+2728|0)>>2],l[f+1e3>>2]=l[b>>2],l[f+1004>>2]=k,b=l[f+2724>>2],l[f+992>>2]=l[f+2720>>2],l[f+996>>2]=b,Hb(f+2752|0,f+992|0),k=l[4+(b=f+2760|0)>>2],l[a>>2]=l[b>>2],l[a+4>>2]=k,a=l[i+4>>2],l[f+984>>2]=l[i>>2],l[f+988>>2]=a,a=l[f+2756>>2],l[f+2352>>2]=l[f+2752>>2],l[f+2356>>2]=a,a=l[f+2772>>2],l[f+976>>2]=l[f+2768>>2],l[f+980>>2]=a,zb(f+976|0);break r}if(t=l[4+(n=f+2360|0)>>2],l[f+968>>2]=l[n>>2],l[f+972>>2]=t,d=l[i+4>>2],l[f+952>>2]=l[i>>2],l[f+956>>2]=d,i=l[f+2356>>2],l[f+960>>2]=l[f+2352>>2],l[f+964>>2]=i,i=l[f+2772>>2],l[f+944>>2]=l[f+2768>>2],l[f+948>>2]=i,xe(f+2752|0,f+960|0,f+944|0),i=l[k+4>>2],l[n>>2]=l[k>>2],l[n+4>>2]=i,i=l[f+2756>>2],l[f+2352>>2]=l[f+2752>>2],l[f+2356>>2]=i,(0|c)==(0|(b=b+1|0)))break}break r}k=l[4+(a=f+2360|0)>>2],l[(i=f+1192|0)>>2]=l[a>>2],l[i+4>>2]=k,i=l[f+2356>>2],l[f+1184>>2]=l[f+2352>>2],l[f+1188>>2]=i,l[f+1168>>2]=Xb(15&v[f+1184|0]),Yb(f+2768|0,22359,f+1168|0),k=l[4+(b=f+2776|0)>>2],l[(i=f+1160|0)>>2]=l[b>>2],l[i+4>>2]=k,i=l[f+2772>>2],l[f+1152>>2]=l[f+2768>>2],l[f+1156>>2]=i,Hb(f+2784|0,f+1152|0),b=l[a+4>>2],l[(i=f+1144|0)>>2]=l[a>>2],l[i+4>>2]=b,i=l[f+2356>>2],l[f+1136>>2]=l[f+2352>>2],l[f+1140>>2]=i,zb(f+1136|0),b=l[4+(i=f+2792|0)>>2],l[a>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2788>>2],l[f+2352>>2]=l[f+2784>>2],l[f+2356>>2]=a;break r}b=l[4+(a=f+2760|0)>>2],l[f+648>>2]=l[a>>2],l[f+652>>2]=b,i=l[f+2756>>2],l[f+640>>2]=l[f+2752>>2],l[f+644>>2]=i,zb(f+640|0),Yb(f+2592|0,14031,0),b=l[4+(i=f+2600|0)>>2],l[f+632>>2]=l[i>>2],l[f+636>>2]=b,i=l[f+2596>>2],l[f+624>>2]=l[f+2592>>2],l[f+628>>2]=i,Hb(f+2672|0,f+624|0),b=l[4+(i=f+2680|0)>>2],l[a>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2676>>2],l[f+2752>>2]=l[f+2672>>2],l[f+2756>>2]=a}i=l[4+(a=f+2792|0)>>2],l[f+104>>2]=l[a>>2],l[f+108>>2]=i,a=l[f+2788>>2],l[f+96>>2]=l[f+2784>>2],l[f+100>>2]=a,zb(f+96|0),i=l[4+(a=f+2776|0)>>2],l[f+88>>2]=l[a>>2],l[f+92>>2]=i,a=l[f+2772>>2],l[f+80>>2]=l[f+2768>>2],l[f+84>>2]=a,zb(f+80|0),i=l[4+(a=f+2744|0)>>2],l[f+72>>2]=l[a>>2],l[f+76>>2]=i,a=l[f+2740>>2],l[f+64>>2]=l[f+2736>>2],l[f+68>>2]=a,zb(f- -64|0),i=l[4+(a=f+2728|0)>>2],l[f+56>>2]=l[a>>2],l[f+60>>2]=i,a=l[f+2724>>2],l[f+48>>2]=l[f+2720>>2],l[f+52>>2]=a,zb(f+48|0),b=l[4+(a=f+2360|0)>>2],l[f+40>>2]=l[a>>2],l[f+44>>2]=b,i=l[f+2356>>2],l[f+32>>2]=l[f+2352>>2],l[f+36>>2]=i,zb(f+32|0),b=l[4+(i=f+2760|0)>>2],l[a>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2756>>2],l[f+2352>>2]=l[f+2752>>2],l[f+2356>>2]=a}i=l[4+(a=f+2376|0)>>2],l[f+24>>2]=l[a>>2],l[f+28>>2]=i,a=l[f+2372>>2],l[f+16>>2]=l[f+2368>>2],l[f+20>>2]=a,zb(f+16|0),b=l[s+4>>2],l[(a=f+2760|0)>>2]=l[s>>2],l[a+4>>2]=b,i=l[f+2356>>2],l[f+2752>>2]=l[f+2352>>2],l[f+2756>>2]=i,i=l[a+4>>2],l[r+8>>2]=l[a>>2],l[r+12>>2]=i,a=l[f+2756>>2],l[r>>2]=l[f+2752>>2],l[r+4>>2]=a}a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,ne=f+2816|0}function De(e,r,a){var i,f=0,k=0;ne=i=ne-400|0,f=l[a+12>>2],l[i+280>>2]=l[a+8>>2],l[i+284>>2]=f,f=l[a+4>>2],l[i+272>>2]=l[a>>2],l[i+276>>2]=f,6==(15&v[i+272|0])?(f=l[r+12>>2],l[i+216>>2]=l[r+8>>2],l[i+220>>2]=f,f=l[r+4>>2],l[i+208>>2]=l[r>>2],l[i+212>>2]=f,15&v[i+208|0]?(f=l[a+12>>2],l[i+200>>2]=l[a+8>>2],l[i+204>>2]=f,f=l[a+4>>2],l[i+192>>2]=l[a>>2],l[i+196>>2]=f,Nb(i+368|0,i+192|0),f=l[i+380>>2],l[i+184>>2]=l[i+376>>2],l[i+188>>2]=f,f=l[i+372>>2],l[i+176>>2]=l[i+368>>2],l[i+180>>2]=f,Zb(i+176|0)?(f=l[a+12>>2],l[i+168>>2]=l[a+8>>2],l[i+172>>2]=f,f=l[a+4>>2],l[i+160>>2]=l[a>>2],l[i+164>>2]=f,Nb(i+336|0,i+160|0),f=l[i+348>>2],l[i+152>>2]=l[i+344>>2],l[i+156>>2]=f,f=l[i+340>>2],l[i+144>>2]=l[i+336>>2],l[i+148>>2]=f,Kb(i+352|0,i+144|0,0),f=l[a+12>>2],l[i+136>>2]=l[a+8>>2],l[i+140>>2]=f,f=l[a+4>>2],l[i+128>>2]=l[a>>2],l[i+132>>2]=f,Nb(i+304|0,i+128|0),f=l[i+316>>2],l[i+120>>2]=l[i+312>>2],l[i+124>>2]=f,f=l[i+308>>2],l[i+112>>2]=l[i+304>>2],l[i+116>>2]=f,f=Zb(i+112|0),k=l[a+12>>2],l[i+104>>2]=l[a+8>>2],l[i+108>>2]=k,k=l[a+4>>2],l[i+96>>2]=l[a>>2],l[i+100>>2]=k,eb(i+320|0,i+96|0,1,f),a=l[r+12>>2],l[i+88>>2]=l[r+8>>2],l[i+92>>2]=a,a=l[r>>2],r=l[r+4>>2],f=l[i+364>>2],l[i+72>>2]=l[i+360>>2],l[i+76>>2]=f,l[i+80>>2]=a,l[i+84>>2]=r,r=l[i+356>>2],l[i+64>>2]=l[i+352>>2],l[i+68>>2]=r,rk(i+288|0,i+80|0,i- -64|0),r=l[i+300>>2],l[i+56>>2]=l[i+296>>2],l[i+60>>2]=r,r=l[i+332>>2],l[i+40>>2]=l[i+328>>2],l[i+44>>2]=r,r=l[i+292>>2],l[i+48>>2]=l[i+288>>2],l[i+52>>2]=r,r=l[i+324>>2],l[i+32>>2]=l[i+320>>2],l[i+36>>2]=r,De(e,i+48|0,i+32|0)):(f=l[a+12>>2],l[i+24>>2]=l[a+8>>2],l[i+28>>2]=f,f=l[a+4>>2],l[i+16>>2]=l[a>>2],l[i+20>>2]=f,zb(i+16|0),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a)):(f=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,zb(i),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a)):(f=l[r+12>>2],l[i+264>>2]=l[r+8>>2],l[i+268>>2]=f,f=l[r+4>>2],l[i+256>>2]=l[r>>2],l[i+260>>2]=f,zb(i+256|0),r=l[a+12>>2],l[i+248>>2]=l[a+8>>2],l[i+252>>2]=r,r=l[a+4>>2],l[i+240>>2]=l[a>>2],l[i+244>>2]=r,zb(i+240|0),jb(i+384|0,18205),r=l[i+396>>2],l[i+232>>2]=l[i+392>>2],l[i+236>>2]=r,r=l[i+388>>2],l[i+224>>2]=l[i+384>>2],l[i+228>>2]=r,Hb(e,i+224|0)),ne=i+400|0}function Se(e,r,a,i){var f,k=0,b=0;ne=f=ne-592|0,k=l[a+12>>2],l[f+424>>2]=l[a+8>>2],l[f+428>>2]=k,k=l[a+4>>2],l[f+416>>2]=l[a>>2],l[f+420>>2]=k,6==(15&v[f+416|0])?(k=l[r+12>>2],l[f+344>>2]=l[r+8>>2],l[f+348>>2]=k,k=l[r+4>>2],l[f+336>>2]=l[r>>2],l[f+340>>2]=k,15&v[f+336|0]?(k=l[a+12>>2],l[f+328>>2]=l[a+8>>2],l[f+332>>2]=k,k=l[a+4>>2],l[f+320>>2]=l[a>>2],l[f+324>>2]=k,Nb(f+560|0,f+320|0),k=l[f+572>>2],l[f+312>>2]=l[f+568>>2],l[f+316>>2]=k,k=l[f+564>>2],l[f+304>>2]=l[f+560>>2],l[f+308>>2]=k,Zb(f+304|0)?(k=l[a+12>>2],l[f+296>>2]=l[a+8>>2],l[f+300>>2]=k,k=l[a+4>>2],l[f+288>>2]=l[a>>2],l[f+292>>2]=k,Nb(f+528|0,f+288|0),k=l[f+540>>2],l[f+280>>2]=l[f+536>>2],l[f+284>>2]=k,k=l[f+532>>2],l[f+272>>2]=l[f+528>>2],l[f+276>>2]=k,Kb(f+544|0,f+272|0,0),k=l[a+12>>2],l[f+264>>2]=l[a+8>>2],l[f+268>>2]=k,k=l[a+4>>2],l[f+256>>2]=l[a>>2],l[f+260>>2]=k,Nb(f+496|0,f+256|0),k=l[f+508>>2],l[f+248>>2]=l[f+504>>2],l[f+252>>2]=k,k=l[f+500>>2],l[f+240>>2]=l[f+496>>2],l[f+244>>2]=k,k=Zb(f+240|0),b=l[a+12>>2],l[f+232>>2]=l[a+8>>2],l[f+236>>2]=b,b=l[a+4>>2],l[f+224>>2]=l[a>>2],l[f+228>>2]=b,eb(f+512|0,f+224|0,1,k),a=l[r+12>>2],l[f+216>>2]=l[r+8>>2],l[f+220>>2]=a,a=l[r+4>>2],l[f+208>>2]=l[r>>2],l[f+212>>2]=a,Nb(f+448|0,f+208|0),a=l[f+556>>2],l[f+200>>2]=l[f+552>>2],l[f+204>>2]=a,a=l[f+548>>2],l[f+192>>2]=l[f+544>>2],l[f+196>>2]=a,Nb(f+432|0,f+192|0),a=l[f+460>>2],l[f+184>>2]=l[f+456>>2],l[f+188>>2]=a,a=l[f+444>>2],l[f+168>>2]=l[f+440>>2],l[f+172>>2]=a,a=l[f+452>>2],l[f+176>>2]=l[f+448>>2],l[f+180>>2]=a,a=l[f+436>>2],l[f+160>>2]=l[f+432>>2],l[f+164>>2]=a,rk(f+464|0,f+176|0,f+160|0),a=l[f+476>>2],l[f+152>>2]=l[f+472>>2],l[f+156>>2]=a,a=l[f+524>>2],l[f+136>>2]=l[f+520>>2],l[f+140>>2]=a,a=l[f+516>>2],l[f+128>>2]=l[f+512>>2],l[f+132>>2]=a,a=l[f+468>>2],l[f+144>>2]=l[f+464>>2],l[f+148>>2]=a,a=l[i+12>>2],l[f+120>>2]=l[i+8>>2],l[f+124>>2]=a,a=l[i+4>>2],l[f+112>>2]=l[i>>2],l[f+116>>2]=a,Se(f+480|0,f+144|0,f+128|0,f+112|0),a=l[r+12>>2],l[f+104>>2]=l[r+8>>2],l[f+108>>2]=a,a=l[r>>2],r=l[r+4>>2],i=l[f+556>>2],l[f+88>>2]=l[f+552>>2],l[f+92>>2]=i,i=l[f+492>>2],l[f+72>>2]=l[f+488>>2],l[f+76>>2]=i,l[f+96>>2]=a,l[f+100>>2]=r,r=l[f+548>>2],l[f+80>>2]=l[f+544>>2],l[f+84>>2]=r,r=l[f+484>>2],l[f+64>>2]=l[f+480>>2],l[f+68>>2]=r,Fe(e,f+96|0,f+80|0,f- -64|0)):(k=l[a+12>>2],l[f+56>>2]=l[a+8>>2],l[f+60>>2]=k,k=l[a+4>>2],l[f+48>>2]=l[a>>2],l[f+52>>2]=k,zb(f+48|0),a=l[r+12>>2],l[f+40>>2]=l[r+8>>2],l[f+44>>2]=a,a=l[r+4>>2],l[f+32>>2]=l[r>>2],l[f+36>>2]=a,zb(f+32|0),r=l[i+12>>2],l[e+8>>2]=l[i+8>>2],l[e+12>>2]=r,r=l[i+4>>2],l[e>>2]=l[i>>2],l[e+4>>2]=r)):(k=l[i+12>>2],l[f+24>>2]=l[i+8>>2],l[f+28>>2]=k,k=l[i+4>>2],l[f+16>>2]=l[i>>2],l[f+20>>2]=k,zb(f+16|0),i=l[a+12>>2],l[f+8>>2]=l[a+8>>2],l[f+12>>2]=i,i=l[a+4>>2],l[f>>2]=l[a>>2],l[f+4>>2]=i,zb(f),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a)):(k=l[i+12>>2],l[f+408>>2]=l[i+8>>2],l[f+412>>2]=k,k=l[i+4>>2],l[f+400>>2]=l[i>>2],l[f+404>>2]=k,zb(f+400|0),i=l[r+12>>2],l[f+392>>2]=l[r+8>>2],l[f+396>>2]=i,i=l[r+4>>2],l[f+384>>2]=l[r>>2],l[f+388>>2]=i,zb(f+384|0),r=l[a+12>>2],l[f+376>>2]=l[a+8>>2],l[f+380>>2]=r,r=l[a+4>>2],l[f+368>>2]=l[a>>2],l[f+372>>2]=r,zb(f+368|0),jb(f+576|0,18205),r=l[f+588>>2],l[f+360>>2]=l[f+584>>2],l[f+364>>2]=r,r=l[f+580>>2],l[f+352>>2]=l[f+576>>2],l[f+356>>2]=r,Hb(e,f+352|0)),ne=f+592|0}function Fe(e,r,a,i){var f,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0;ne=f=ne-1024|0,k=l[i+12>>2],l[f+800>>2]=l[i+8>>2],l[f+804>>2]=k,k=l[i+4>>2],l[f+792>>2]=l[i>>2],l[f+796>>2]=k;e:{r:if(15&v[f+792|0])if(k=l[r+12>>2],l[f+784>>2]=l[r+8>>2],l[f+788>>2]=k,k=l[r+4>>2],l[f+776>>2]=l[r>>2],l[f+780>>2]=k,k=15&v[f+776|0],b=l[a+12>>2],l[f+768>>2]=l[a+8>>2],l[f+772>>2]=b,b=l[a+4>>2],l[f+760>>2]=l[a>>2],l[f+764>>2]=b,5!=(15&v[f+760|0])||(b=l[r+12>>2],l[f+752>>2]=l[r+8>>2],l[f+756>>2]=b,b=l[r+4>>2],l[f+744>>2]=l[r>>2],l[f+748>>2]=b,7!=(15&v[f+744|0])&&1!=(0|k)))if(b=l[a+12>>2],l[f+736>>2]=l[a+8>>2],l[f+740>>2]=b,b=l[a+4>>2],l[f+728>>2]=l[a>>2],l[f+732>>2]=b,4!=(15&v[f+728|0])||(b=l[r+12>>2],l[f+720>>2]=l[r+8>>2],l[f+724>>2]=b,b=l[r+4>>2],l[f+712>>2]=l[r>>2],l[f+716>>2]=b,6!=(15&v[f+712|0])&&1!=(0|k)))if(b=l[a+12>>2],l[f+704>>2]=l[a+8>>2],l[f+708>>2]=b,b=l[a+4>>2],l[f+696>>2]=l[a>>2],l[f+700>>2]=b,7!=(15&v[f+696|0])||(b=l[r+12>>2],l[f+688>>2]=l[r+8>>2],l[f+692>>2]=b,b=l[r+4>>2],l[f+680>>2]=l[r>>2],l[f+684>>2]=b,6!=(15&v[f+680|0])&&1!=(0|k)))k=l[a+12>>2],l[f+672>>2]=l[a+8>>2],l[f+676>>2]=k,k=l[a+4>>2],l[f+664>>2]=l[a>>2],l[f+668>>2]=k,k=Xb(15&v[f+664|0]),b=l[r+12>>2],l[f+656>>2]=l[r+8>>2],l[f+660>>2]=b,b=l[r+4>>2],l[f+648>>2]=l[r>>2],l[f+652>>2]=b,l[f+644>>2]=Xb(15&v[f+648|0]),l[f+640>>2]=k,Yb(f+808|0,16893,f+640|0),k=l[f+820>>2],l[f+632>>2]=l[f+816>>2],l[f+636>>2]=k,k=l[f+812>>2],l[f+624>>2]=l[f+808>>2],l[f+628>>2]=k,Hb(f+1008|0,f+624|0),k=l[r+12>>2],l[f+616>>2]=l[r+8>>2],l[f+620>>2]=k,k=l[r+4>>2],l[f+608>>2]=l[r>>2],l[f+612>>2]=k,zb(f+608|0),k=l[a+12>>2],l[f+600>>2]=l[a+8>>2],l[f+604>>2]=k,k=l[a+4>>2],l[f+592>>2]=l[a>>2],l[f+596>>2]=k,zb(f+592|0),a=l[i+12>>2],l[f+584>>2]=l[i+8>>2],l[f+588>>2]=a,a=l[i+4>>2],l[f+576>>2]=l[i>>2],l[f+580>>2]=a,zb(f+576|0),a=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=a,a=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=a;else{if(1==(0|k)&&(rn(f+1008|0),k=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=k,k=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=k),k=l[r+12>>2],l[f+568>>2]=l[r+8>>2],l[f+572>>2]=k,k=l[r+4>>2],l[f+560>>2]=l[r>>2],l[f+564>>2]=k,Nb(f+984|0,f+560|0),k=l[f+996>>2],l[f+552>>2]=l[f+992>>2],l[f+556>>2]=k,k=l[f+988>>2],l[f+544>>2]=l[f+984>>2],l[f+548>>2]=k,k=l[a+12>>2],l[f+536>>2]=l[a+8>>2],l[f+540>>2]=k,k=l[a+4>>2],l[f+528>>2]=l[a>>2],l[f+532>>2]=k,ek(f+544|0,f+528|0,f+1004|0,f+1e3|0)){if(a=l[i+12>>2],l[f+520>>2]=l[i+8>>2],l[f+524>>2]=a,a=l[i+4>>2],l[f+512>>2]=l[i>>2],l[f+516>>2]=a,6==(15&v[f+512|0])){if(a=l[r+12>>2],l[f+456>>2]=l[r+8>>2],l[f+460>>2]=a,a=l[r+4>>2],l[f+448>>2]=l[r>>2],l[f+452>>2]=a,Nb(f+968|0,f+448|0),a=l[f+980>>2],l[f+440>>2]=l[f+976>>2],l[f+444>>2]=a,a=l[f+972>>2],l[f+432>>2]=l[f+968>>2],l[f+436>>2]=a,a=Zb(f+432|0),(0|(t=l[f+1004>>2]))<0)break e;if((0|(k=l[f+1e3>>2]))<(0|t)|(0|k)>(0|a))break e;b=l[i+12>>2],l[f+424>>2]=l[i+8>>2],l[f+428>>2]=b,b=l[i+4>>2],l[f+416>>2]=l[i>>2],l[f+420>>2]=b,Nb(f+952|0,f+416|0),b=l[f+964>>2],l[f+408>>2]=l[f+960>>2],l[f+412>>2]=b,b=l[f+956>>2],l[f+400>>2]=l[f+952>>2],l[f+404>>2]=b,s=k-t|0,b=Zb(f+400|0);a:if((0|s)<(0|b)){if((0|a)<=(0|k))break a;for(s=b-s|0;n=l[r+12>>2],l[f+312>>2]=l[r+8>>2],l[f+316>>2]=n,n=l[r+4>>2],l[f+304>>2]=l[r>>2],l[f+308>>2]=n,Nb(f+920|0,f+304|0),n=l[f+932>>2],l[f+296>>2]=l[f+928>>2],l[f+300>>2]=n,n=l[f+924>>2],l[f+288>>2]=l[f+920>>2],l[f+292>>2]=n,Kb(f+936|0,f+288|0,a=a+-1|0),n=l[r+12>>2],l[f+280>>2]=l[r+8>>2],l[f+284>>2]=n,n=l[r>>2],c=l[r+4>>2],o=l[f+948>>2],l[f+264>>2]=l[f+944>>2],l[f+268>>2]=o,l[f+272>>2]=n,l[f+276>>2]=c,n=l[f+940>>2],l[f+256>>2]=l[f+936>>2],l[f+260>>2]=n,Dn(f+1008|0,f+272|0,a+s|0,f+256|0),n=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=n,n=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=n,(0|a)>(0|k););}else if(!((0|s)<=(0|b))){if(s=s-b|0,(0|k)<(0|a))for(;n=l[r+12>>2],l[f+392>>2]=l[r+8>>2],l[f+396>>2]=n,n=l[r+4>>2],l[f+384>>2]=l[r>>2],l[f+388>>2]=n,Nb(f+888|0,f+384|0),n=l[f+900>>2],l[f+376>>2]=l[f+896>>2],l[f+380>>2]=n,n=l[f+892>>2],l[f+368>>2]=l[f+888>>2],l[f+372>>2]=n,Kb(f+904|0,f+368|0,k),n=l[r+12>>2],l[f+360>>2]=l[r+8>>2],l[f+364>>2]=n,n=l[r>>2],c=l[r+4>>2],o=l[f+916>>2],l[f+344>>2]=l[f+912>>2],l[f+348>>2]=o,l[f+352>>2]=n,l[f+356>>2]=c,n=l[f+908>>2],l[f+336>>2]=l[f+904>>2],l[f+340>>2]=n,Dn(f+1008|0,f+352|0,k-s|0,f+336|0),n=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=n,n=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=n,(0|(k=k+1|0))!=(0|a););k=l[r+12>>2],l[f+328>>2]=l[r+8>>2],l[f+332>>2]=k,k=l[r+4>>2],l[f+320>>2]=l[r>>2],l[f+324>>2]=k,eb(f+1008|0,f+320|0,0,a-s|0),a=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=a,a=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=a}if((0|b)>=1)for(a=0;k=l[i+12>>2],l[f+248>>2]=l[i+8>>2],l[f+252>>2]=k,k=l[i+4>>2],l[f+240>>2]=l[i>>2],l[f+244>>2]=k,Nb(f+856|0,f+240|0),k=l[f+868>>2],l[f+232>>2]=l[f+864>>2],l[f+236>>2]=k,k=l[f+860>>2],l[f+224>>2]=l[f+856>>2],l[f+228>>2]=k,Kb(f+872|0,f+224|0,a),k=l[r+12>>2],l[f+216>>2]=l[r+8>>2],l[f+220>>2]=k,k=l[r>>2],s=l[r+4>>2],n=l[f+884>>2],l[f+200>>2]=l[f+880>>2],l[f+204>>2]=n,l[f+208>>2]=k,l[f+212>>2]=s,k=l[f+876>>2],l[f+192>>2]=l[f+872>>2],l[f+196>>2]=k,Dn(f+1008|0,f+208|0,a+t|0,f+192|0),k=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=k,k=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=k,(0|b)!=(0|(a=a+1|0)););a=l[i+12>>2],l[f+184>>2]=l[i+8>>2],l[f+188>>2]=a,a=l[i+4>>2],l[f+176>>2]=l[i>>2],l[f+180>>2]=a,zb(f+176|0);break r}a=l[r+12>>2],l[f+504>>2]=l[r+8>>2],l[f+508>>2]=a,a=l[r+4>>2],l[f+496>>2]=l[r>>2],l[f+500>>2]=a,zb(f+496|0),a=l[i+12>>2],l[f+488>>2]=l[i+8>>2],l[f+492>>2]=a,a=l[i+4>>2],l[f+480>>2]=l[i>>2],l[f+484>>2]=a,zb(f+480|0),Yb(f+840|0,16456,0),a=l[f+852>>2],l[f+472>>2]=l[f+848>>2],l[f+476>>2]=a,a=l[f+844>>2],l[f+464>>2]=l[f+840>>2],l[f+468>>2]=a,Hb(f+1008|0,f+464|0),a=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=a,a=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=a;break r}a=l[r+12>>2],l[f+168>>2]=l[r+8>>2],l[f+172>>2]=a,a=l[r+4>>2],l[f+160>>2]=l[r>>2],l[f+164>>2]=a,zb(f+160|0),a=l[i+12>>2],l[f+152>>2]=l[i+8>>2],l[f+156>>2]=a,a=l[i+4>>2],l[f+144>>2]=l[i>>2],l[f+148>>2]=a,zb(f+144|0),Yb(f+824|0,14031,0),a=l[f+836>>2],l[f+136>>2]=l[f+832>>2],l[f+140>>2]=a,a=l[f+828>>2],l[f+128>>2]=l[f+824>>2],l[f+132>>2]=a,Hb(f+1008|0,f+128|0),a=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=a,a=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=a}else 1==(0|k)&&(rn(f+1008|0),k=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=k,k=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=k),k=l[a+12>>2],l[f+120>>2]=l[a+8>>2],l[f+124>>2]=k,k=l[a+4>>2],l[f+112>>2]=l[a>>2],l[f+116>>2]=k,u=Wb(f+112|0),a=l[r+12>>2],l[f+104>>2]=l[r+8>>2],l[f+108>>2]=a,a=l[r+4>>2],l[f+96>>2]=l[r>>2],l[f+100>>2]=a,a=l[i+12>>2],l[f+88>>2]=l[i+8>>2],l[f+92>>2]=a,a=l[i+4>>2],l[f+80>>2]=l[i>>2],l[f+84>>2]=a,Dn(a=f+1008|0,i=f+96|0,k=g(u)<2147483648?~~u:-2147483648,f+80|0),a=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=a,a=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=a;else 1==(0|k)&&(mn(f+1008|0),k=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=k,k=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=k),k=l[r+12>>2],l[f+72>>2]=l[r+8>>2],l[f+76>>2]=k,k=l[r+4>>2],l[f+64>>2]=l[r>>2],l[f+68>>2]=k,k=l[a+12>>2],l[f+56>>2]=l[a+8>>2],l[f+60>>2]=k,k=l[a+4>>2],l[f+48>>2]=l[a>>2],l[f+52>>2]=k,a=l[i+12>>2],l[f+40>>2]=l[i+8>>2],l[f+44>>2]=a,a=l[i+4>>2],l[f+32>>2]=l[i>>2],l[f+36>>2]=a,en(f+1008|0,f- -64|0,f+48|0,f+32|0),a=l[f+1020>>2],l[r+8>>2]=l[f+1016>>2],l[r+12>>2]=a,a=l[f+1012>>2],l[r>>2]=l[f+1008>>2],l[r+4>>2]=a;else k=l[r+12>>2],l[f+24>>2]=l[r+8>>2],l[f+28>>2]=k,k=l[r+4>>2],l[f+16>>2]=l[r>>2],l[f+20>>2]=k,zb(f+16|0),r=l[a+12>>2],l[f+8>>2]=l[a+8>>2],l[f+12>>2]=r,r=l[a+4>>2],l[f>>2]=l[a>>2],l[f+4>>2]=r,zb(f),r=i;return a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,void(ne=f+1024|0)}P(15637,16044,145,44164),M()}function Me(e,r,a){var i,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0,p=0,g=0,y=0,E=0,_=0;ne=i=ne-320|0;e:{r:{if(7==(15&v[0|r])){if(7!=(15&v[0|a]))break r;for(o=l[a+8>>2],u=l[a+4>>2],s=-1;;){if((0|(s=s+1|0))>=(0|u)){s=-2;break e}a:if(!((c=(15&v[16+(w(s,40)+o|0)|0])-1|0)>>>0>4))switch(c-1|0){case 3:break e;case 0:case 1:case 2:break a;default:continue}break}P(23734,17172,1225,43704),M()}P(22732,17172,1162,43644),M()}P(23065,17172,1163,43644),M()}e:{r:{if(-2!=(0|s))for(y=i+240|1,E=i+256|1,_=i+288|1,p=c=i+304|1;;){if(f=0,!(n=-1==(0|s))){if(!((0|u)>(0|s)&&(0|s)>=0))break e;f=8+(w(s,40)+o|0)|0}if(d=v[f+8|0],t=v[f+12|0]|v[f+13|0]<<8|v[f+14|0]<<16|v[f+15|0]<<24,k[i+275|0]=t,k[i+276|0]=t>>>8,k[i+277|0]=t>>>16,k[i+278|0]=t>>>24,l[i+272>>2]=v[f+9|0]|v[f+10|0]<<8|v[f+11|0]<<16|v[f+12|0]<<24,5!=(15&d))break r;if(g=v[f+20|0]|v[f+21|0]<<8|v[f+22|0]<<16|v[f+23|0]<<24,t=v[f+16|0]|v[f+17|0]<<8|v[f+18|0]<<16|v[f+19|0]<<24,l[t>>2]=l[t>>2]+1,f=v[i+275|0]|v[i+276|0]<<8|v[i+277|0]<<16|v[i+278|0]<<24,k[i+227|0]=f,k[i+228|0]=f>>>8,k[i+229|0]=f>>>16,k[i+230|0]=f>>>24,l[i+224>>2]=l[i+272>>2],k[i+304|0]=d,f=p,b=v[i+227|0]|v[i+228|0]<<8|v[i+229|0]<<16|v[i+230|0]<<24,k[f+3|0]=b,k[f+4|0]=b>>>8,k[f+5|0]=b>>>16,k[f+6|0]=b>>>24,f=c,b=l[i+224>>2],k[0|f]=b,k[f+1|0]=b>>>8,k[f+2|0]=b>>>16,k[f+3|0]=b>>>24,l[i+316>>2]=g,l[i+312>>2]=t,n)f=0;else{if((0|u)<=(0|s))break e;f=8+(w(s,40)+o|0)|0}n=v[f+24|0],b=v[f+28|0]|v[f+29|0]<<8|v[f+30|0]<<16|v[f+31|0]<<24,k[i+275|0]=b,k[i+276|0]=b>>>8,k[i+277|0]=b>>>16,k[i+278|0]=b>>>24,l[i+272>>2]=v[f+25|0]|v[f+26|0]<<8|v[f+27|0]<<16|v[f+28|0]<<24,h=v[f+36|0]|v[f+37|0]<<8|v[f+38|0]<<16|v[f+39|0]<<24,b=v[f+32|0]|v[f+33|0]<<8|v[f+34|0]<<16|v[f+35|0]<<24;a:if(!((m=15&n)>>>0>7)){i:switch(m-1|0){default:if(!b)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[b>>2]=l[b>>2]+1}f=v[i+275|0]|v[i+276|0]<<8|v[i+277|0]<<16|v[i+278|0]<<24,k[i+227|0]=f,k[i+228|0]=f>>>8,k[i+229|0]=f>>>16,k[i+230|0]=f>>>24,l[i+224>>2]=l[i+272>>2],k[i+288|0]=n,f=_,n=v[i+227|0]|v[i+228|0]<<8|v[i+229|0]<<16|v[i+230|0]<<24,k[f+3|0]=n,k[f+4|0]=n>>>8,k[f+5|0]=n>>>16,k[f+6|0]=n>>>24,n=l[i+224>>2],k[0|f]=n,k[f+1|0]=n>>>8,k[f+2|0]=n>>>16,k[f+3|0]=n>>>24,l[i+300>>2]=h,l[i+296>>2]=b,n=v[0|r],f=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[i+275|0]=f,k[i+276|0]=f>>>8,k[i+277|0]=f>>>16,k[i+278|0]=f>>>24,l[i+272>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,h=l[r+12>>2],b=l[r+8>>2];a:if(!((f=15&n)>>>0>7)){i:switch(f-1|0){default:if(!b)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[b>>2]=l[b>>2]+1}if(k[i+256|0]=n,f=E,n=v[i+275|0]|v[i+276|0]<<8|v[i+277|0]<<16|v[i+278|0]<<24,k[f+3|0]=n,k[f+4|0]=n>>>8,k[f+5|0]=n>>>16,k[f+6|0]=n>>>24,n=l[i+272>>2],k[0|f]=n,k[f+1|0]=n>>>8,k[f+2|0]=n>>>16,k[f+3|0]=n>>>24,l[i+268>>2]=h,l[i+264>>2]=b,f=v[(f=p)+3|0]|v[f+4|0]<<8|v[f+5|0]<<16|v[f+6|0]<<24,k[i+275|0]=f,k[i+276|0]=f>>>8,k[i+277|0]=f>>>16,k[i+278|0]=f>>>24,f=c,l[i+272>>2]=v[0|f]|v[f+1|0]<<8|v[f+2|0]<<16|v[f+3|0]<<24,l[t>>2]=l[t>>2]+1,k[i+240|0]=d,f=y,b=v[i+275|0]|v[i+276|0]<<8|v[i+277|0]<<16|v[i+278|0]<<24,k[f+3|0]=b,k[f+4|0]=b>>>8,k[f+5|0]=b>>>16,k[f+6|0]=b>>>24,b=l[i+272>>2],k[0|f]=b,k[f+1|0]=b>>>8,k[f+2|0]=b>>>16,k[f+3|0]=b>>>24,f=l[i+268>>2],l[i+200>>2]=l[i+264>>2],l[i+204>>2]=f,l[i+252>>2]=g,l[i+248>>2]=t,f=l[i+252>>2],l[i+184>>2]=l[i+248>>2],l[i+188>>2]=f,f=l[i+260>>2],l[i+192>>2]=l[i+256>>2],l[i+196>>2]=f,f=l[i+244>>2],l[i+176>>2]=l[i+240>>2],l[i+180>>2]=f,dn(i+272|0,i+192|0,i+176|0),7!=(0|m)|7!=(15&v[i+272|0])?(f=l[i+284>>2],l[i+168>>2]=l[i+280>>2],l[i+172>>2]=f,f=l[i+276>>2],l[i+160>>2]=l[i+272>>2],l[i+164>>2]=f,zb(i+160|0),f=l[r+12>>2],l[i+152>>2]=l[r+8>>2],l[i+156>>2]=f,f=l[r>>2],t=l[r+4>>2],b=l[i+316>>2],l[i+136>>2]=l[i+312>>2],l[i+140>>2]=b,b=l[i+300>>2],l[i+120>>2]=l[i+296>>2],l[i+124>>2]=b,l[i+144>>2]=f,l[i+148>>2]=t,f=l[i+308>>2],l[i+128>>2]=l[i+304>>2],l[i+132>>2]=f,f=l[i+292>>2],l[i+112>>2]=l[i+288>>2],l[i+116>>2]=f,en(i+224|0,i+144|0,i+128|0,i+112|0)):(f=l[i+284>>2],l[i+104>>2]=l[i+280>>2],l[i+108>>2]=f,f=l[i+300>>2],l[i+88>>2]=l[i+296>>2],l[i+92>>2]=f,f=l[i+276>>2],l[i+96>>2]=l[i+272>>2],l[i+100>>2]=f,f=l[i+292>>2],l[i+80>>2]=l[i+288>>2],l[i+84>>2]=f,Me(i+208|0,i+96|0,i+80|0),f=l[r+12>>2],l[i+72>>2]=l[r+8>>2],l[i+76>>2]=f,f=l[r>>2],t=l[r+4>>2],b=l[i+316>>2],l[i+56>>2]=l[i+312>>2],l[i+60>>2]=b,b=l[i+220>>2],l[i+40>>2]=l[i+216>>2],l[i+44>>2]=b,l[i+64>>2]=f,l[i+68>>2]=t,f=l[i+308>>2],l[i+48>>2]=l[i+304>>2],l[i+52>>2]=f,f=l[i+212>>2],l[i+32>>2]=l[i+208>>2],l[i+36>>2]=f,en(i+224|0,i- -64|0,i+48|0,i+32|0)),f=l[i+236>>2],l[r+8>>2]=l[i+232>>2],l[r+12>>2]=f,f=l[i+228>>2],l[r>>2]=l[i+224>>2],l[r+4>>2]=f,f=l[a+12>>2],l[i+24>>2]=l[a+8>>2],l[i+28>>2]=f,f=l[a+4>>2],l[i+16>>2]=l[a>>2],l[i+20>>2]=f,-2==(0|(s=jn(i+16|0,s))))break}return c=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=c,c=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=c,zb(i),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,void(ne=i+320|0)}P(24023,17172,1231,43724),M()}P(28228,17172,925,44064),M()}function Ae(e,r,a){var i,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0;ne=i=ne-144|0;e:{r:{if(7==(15&v[0|r])){if(7!=(15&v[0|a]))break r;for(u=l[a+8>>2],d=l[a+4>>2],t=-1;;){if((0|(t=t+1|0))>=(0|d)){t=-2;break e}a:if(!((o=(15&v[16+(w(t,40)+u|0)|0])-1|0)>>>0>4))switch(o-1|0){case 3:break e;case 0:case 1:case 2:break a;default:continue}break}P(23734,17172,1225,43704),M()}P(22732,17172,1153,43628),M()}P(22066,17172,1210,43689),M()}e:{r:{if(-2!=(0|t))for(m=i+112|1,o=h=i+128|1;;){if(b=0,!(n=-1==(0|t))){if(!((0|d)>(0|t)&&(0|t)>=0))break e;b=8+(w(t,40)+u|0)|0}if(f=v[b+8|0],s=v[b+12|0]|v[b+13|0]<<8|v[b+14|0]<<16|v[b+15|0]<<24,k[i+91|0]=s,k[i+92|0]=s>>>8,k[i+93|0]=s>>>16,k[i+94|0]=s>>>24,l[i+88>>2]=v[b+9|0]|v[b+10|0]<<8|v[b+11|0]<<16|v[b+12|0]<<24,5!=(15&f))break r;if(s=v[b+20|0]|v[b+21|0]<<8|v[b+22|0]<<16|v[b+23|0]<<24,b=v[b+16|0]|v[b+17|0]<<8|v[b+18|0]<<16|v[b+19|0]<<24,l[b>>2]=l[b>>2]+1,c=v[i+91|0]|v[i+92|0]<<8|v[i+93|0]<<16|v[i+94|0]<<24,k[i+107|0]=c,k[i+108|0]=c>>>8,k[i+109|0]=c>>>16,k[i+110|0]=c>>>24,l[i+104>>2]=l[i+88>>2],k[i+128|0]=f,f=o,c=v[i+107|0]|v[i+108|0]<<8|v[i+109|0]<<16|v[i+110|0]<<24,k[f+3|0]=c,k[f+4|0]=c>>>8,k[f+5|0]=c>>>16,k[f+6|0]=c>>>24,f=h,c=l[i+104>>2],k[0|f]=c,k[f+1|0]=c>>>8,k[f+2|0]=c>>>16,k[f+3|0]=c>>>24,l[i+140>>2]=s,l[i+136>>2]=b,n)f=0;else{if((0|d)<=(0|t))break e;f=8+(w(t,40)+u|0)|0}n=v[f+24|0],s=v[f+28|0]|v[f+29|0]<<8|v[f+30|0]<<16|v[f+31|0]<<24,k[i+91|0]=s,k[i+92|0]=s>>>8,k[i+93|0]=s>>>16,k[i+94|0]=s>>>24,l[i+88>>2]=v[f+25|0]|v[f+26|0]<<8|v[f+27|0]<<16|v[f+28|0]<<24,s=v[f+36|0]|v[f+37|0]<<8|v[f+38|0]<<16|v[f+39|0]<<24,b=v[f+32|0]|v[f+33|0]<<8|v[f+34|0]<<16|v[f+35|0]<<24;a:if(!((f=15&n)>>>0>7)){i:switch(f-1|0){default:if(!b)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[b>>2]=l[b>>2]+1}if(f=v[i+91|0]|v[i+92|0]<<8|v[i+93|0]<<16|v[i+94|0]<<24,k[i+107|0]=f,k[i+108|0]=f>>>8,k[i+109|0]=f>>>16,k[i+110|0]=f>>>24,l[i+104>>2]=l[i+88>>2],k[i+112|0]=n,f=m,n=v[i+107|0]|v[i+108|0]<<8|v[i+109|0]<<16|v[i+110|0]<<24,k[f+3|0]=n,k[f+4|0]=n>>>8,k[f+5|0]=n>>>16,k[f+6|0]=n>>>24,n=l[i+104>>2],k[0|f]=n,k[f+1|0]=n>>>8,k[f+2|0]=n>>>16,k[f+3|0]=n>>>24,l[i+124>>2]=s,l[i+120>>2]=b,f=l[r+12>>2],l[i+80>>2]=l[r+8>>2],l[i+84>>2]=f,b=l[r>>2],n=l[r+4>>2],f=l[i+140>>2],l[(s=i- -64|0)>>2]=l[i+136>>2],l[s+4>>2]=f,f=l[i+124>>2],l[i+48>>2]=l[i+120>>2],l[i+52>>2]=f,l[i+72>>2]=b,l[i+76>>2]=n,f=l[i+132>>2],l[i+56>>2]=l[i+128>>2],l[i+60>>2]=f,f=l[i+116>>2],l[i+40>>2]=l[i+112>>2],l[i+44>>2]=f,en(i+88|0,i+72|0,i+56|0,i+40|0),f=l[i+100>>2],l[r+8>>2]=l[i+96>>2],l[r+12>>2]=f,f=l[i+92>>2],l[r>>2]=l[i+88>>2],l[r+4>>2]=f,f=l[a+12>>2],l[i+32>>2]=l[a+8>>2],l[i+36>>2]=f,f=l[a+4>>2],l[i+24>>2]=l[a>>2],l[i+28>>2]=f,-2==(0|(t=jn(i+24|0,t))))break}return o=l[a+12>>2],l[i+16>>2]=l[a+8>>2],l[i+20>>2]=o,o=l[a+4>>2],l[i+8>>2]=l[a>>2],l[i+12>>2]=o,zb(i+8|0),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,void(ne=i+144|0)}P(24023,17172,1231,43724),M()}P(28228,17172,925,44064),M()}function xe(e,r,a){var i,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0;ne=i=ne-112|0;e:{r:{a:{i:{f:{k:{b:{if(7==(15&v[0|r])){if(5!=(15&v[0|a]))break b;if(f=l[a+12>>2],l[i+88>>2]=l[a+8>>2],l[i+92>>2]=f,f=l[a+4>>2],k=l[a>>2],l[i+80>>2]=k,l[i+84>>2]=f,5!=(15&k))break k;if(f=l[r+12>>2],l[i+72>>2]=l[r+8>>2],l[i+76>>2]=f,f=l[r+4>>2],l[i+64>>2]=l[r>>2],l[i+68>>2]=f,Pe(i+96|0,i- -64|0),f=l[i+108>>2],l[r+8>>2]=l[i+104>>2],l[r+12>>2]=f,f=l[i+100>>2],l[r>>2]=l[i+96>>2],l[r+4>>2]=f,f=l[i+92>>2],l[i+104>>2]=l[i+88>>2],l[i+108>>2]=f,f=l[i+84>>2],l[i+96>>2]=l[i+80>>2],l[i+100>>2]=f,7!=(15&v[0|r]))break f;if(s=l[r+4>>2],t=l[r+8>>2],f=l[i+108>>2],l[i+56>>2]=l[i+104>>2],l[i+60>>2]=f,f=l[i+100>>2],l[i+48>>2]=l[i+96>>2],l[i+52>>2]=f,f=Rk(i+48|0),k=l[i+92>>2],l[i+40>>2]=l[i+88>>2],l[i+44>>2]=k,k=l[i+84>>2],l[i+32>>2]=l[i+80>>2],l[i+36>>2]=k,d=Rk(i+32|0),k=8+((w(s,40)+t|0)+((f&(s<<1)-1)<<2)|0)|0,-1==(0|(n=l[k>>2])))break r;if((0|n)<0|(0|s)<=(0|n))break e;for(h=(c=l[i+88>>2])+16|0;;){if(f=8+(b=w(n,40)+t|0)|0,l[b+12>>2]==(0|d)){if(5!=(15&v[b+16|0]))break i;if(o=l[c+8>>2]>>>1,u=v[b+24|0]|v[b+25|0]<<8|v[b+26|0]<<16|v[b+27|0]<<24,(0|o)==l[u+8>>2]>>>1&&!pn(h,u+16|0,o)){if(l[k>>2]=l[f>>2],5!=(15&v[b+16|0]))break a;f=v[b+24|0]|v[b+25|0]<<8|v[b+26|0]<<16|v[b+27|0]<<24,k=l[f>>2]+-1|0,l[f>>2]=k,k||Lb(f),f=l[10947],l[b+24>>2]=l[10946],l[b+28>>2]=f,f=l[10945],l[b+16>>2]=l[10944],l[b+20>>2]=f,f=w(n,40)+t|0,k=l[f+44>>2],l[i+24>>2]=l[f+40>>2],l[i+28>>2]=k,k=l[f+36>>2],l[i+16>>2]=l[f+32>>2],l[i+20>>2]=k,zb(i+16|0);break r}}if(-1==(0|(n=l[f>>2])))break r;if(!((0|n)>=0&&(k=f,(0|s)>(0|n))))break}break e}P(22066,17172,1138,43594),M()}P(22324,17172,1139,43594),M()}P(22324,17172,1050,44030),M()}P(26604,17172,902,43961),M()}P(28746,17172,607,44115),M()}P(25781,17172,444,43888),M()}return f=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,zb(i),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,void(ne=i+112|0)}P(28228,17172,925,44064),M()}function Pe(e,r){var a,i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0;ne=a=ne-32|0;e:{r:{a:{i:{f:{if(7==(15&v[0|r])){if(u=l[r+8>>2],(0|(f=l[u>>2]))<=0)break e;if(1==(0|f)){f=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=f,f=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=f;break r}if((0|(t=l[r+4>>2]))<1)break f;if(Ui(t)>>>0>=2)break f;for(c=Bb(8|w(t,48)),l[c>>2]=1,h=c+8|0,b=l[10944],o=l[10945],n=l[10946],s=l[10947];f=h+w(i,40)|0,l[f>>2]=i+-1,l[f+8>>2]=b,l[f+12>>2]=o,l[f+16>>2]=n,l[f+20>>2]=s,l[f+4>>2]=0,l[f+24>>2]=b,l[f+28>>2]=o,l[f+32>>2]=n,l[f+36>>2]=s,(0|t)!=(0|(i=i+1|0)););for(o=0,l[c+4>>2]=0,f=t<<1,wn(8+(w(t,40)+c|0)|0,255,((0|f)>1?f:1)<<2),l[c+4>>2]=l[u+4>>2];;){if((0|t)<=(0|o))break i;if(h=b=(f=w(o,40))+c|0,f=i=f+u|0,d=l[4+(s=i+40|0)>>2],l[(n=b+40|0)>>2]=l[s>>2],l[n+4>>2]=d,n=l[i+36>>2],l[b+32>>2]=l[i+32>>2],l[b+36>>2]=n,n=l[i+28>>2],l[b+24>>2]=l[i+24>>2],l[b+28>>2]=n,n=l[i+20>>2],l[b+16>>2]=l[i+16>>2],l[b+20>>2]=n,n=l[i+12>>2],l[b+8>>2]=l[i+8>>2],l[b+12>>2]=n,1!=(0|(s=15&(d=v[i+16|0])))){n=v[i+20|0]|v[i+21|0]<<8|v[i+22|0]<<16|v[i+23|0]<<24,k[a+27|0]=n,k[a+28|0]=n>>>8,k[a+29|0]=n>>>16,k[a+30|0]=n>>>24,l[a+24>>2]=v[i+17|0]|v[i+18|0]<<8|v[i+19|0]<<16|v[i+20|0]<<24,n=v[i+24|0]|v[i+25|0]<<8|v[i+26|0]<<16|v[i+27|0]<<24,m=v[i+28|0]|v[i+29|0]<<8|v[i+30|0]<<16|v[i+31|0]<<24;k:if(!(s>>>0>7)){b:switch(s-1|0){default:if(!n)break k;break;case 0:case 1:case 2:case 3:break k;case 4:case 5:case 6:}l[n>>2]=l[n>>2]+1}s=v[a+27|0]|v[a+28|0]<<8|v[a+29|0]<<16|v[a+30|0]<<24,k[a+19|0]=s,k[a+20|0]=s>>>8,k[a+21|0]=s>>>16,k[a+22|0]=s>>>24,l[a+16>>2]=l[a+24>>2],k[b+16|0]=d,s=l[a+16>>2],k[b+17|0]=s,k[b+18|0]=s>>>8,k[b+19|0]=s>>>16,k[b+20|0]=s>>>24,s=v[a+19|0]|v[a+20|0]<<8|v[a+21|0]<<16|v[a+22|0]<<24,k[b+20|0]=s,k[b+21|0]=s>>>8,k[b+22|0]=s>>>16,k[b+23|0]=s>>>24,l[b+24>>2]=n,l[b+28>>2]=m,s=v[i+32|0],n=v[i+36|0]|v[i+37|0]<<8|v[i+38|0]<<16|v[i+39|0]<<24,k[a+27|0]=n,k[a+28|0]=n>>>8,k[a+29|0]=n>>>16,k[a+30|0]=n>>>24,l[a+24>>2]=v[i+33|0]|v[i+34|0]<<8|v[i+35|0]<<16|v[i+36|0]<<24,n=v[i+44|0]|v[i+45|0]<<8|v[i+46|0]<<16|v[i+47|0]<<24,f=v[f+40|0]|v[f+41|0]<<8|v[f+42|0]<<16|v[f+43|0]<<24;k:if(!((i=15&s)>>>0>7)){b:switch(i-1|0){default:if(!f)break k;break;case 0:case 1:case 2:case 3:break k;case 4:case 5:case 6:}l[f>>2]=l[f>>2]+1}i=v[a+27|0]|v[a+28|0]<<8|v[a+29|0]<<16|v[a+30|0]<<24,k[a+19|0]=i,k[a+20|0]=i>>>8,k[a+21|0]=i>>>16,k[a+22|0]=i>>>24,l[a+16>>2]=l[a+24>>2],k[b+32|0]=s,i=l[a+16>>2],k[b+33|0]=i,k[b+34|0]=i>>>8,k[b+35|0]=i>>>16,k[b+36|0]=i>>>24,i=v[a+19|0]|v[a+20|0]<<8|v[a+21|0]<<16|v[a+22|0]<<24,k[b+36|0]=i,k[b+37|0]=i>>>8,k[b+38|0]=i>>>16,k[b+39|0]=i>>>24,l[h+40>>2]=f,l[b+44>>2]=n}if((0|(o=o+1|0))==(0|t))break}break a}P(22066,17172,1001,43993),M()}P(26339,17172,880,43930),M()}P(28228,17172,925,44064),M()}if(qb(8+((f=w(t,40))+c|0)|0,8+(f+u|0)|0,t<<3),f=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=f,f=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=f,Ie(a),(0|(r=l[c>>2]))<=0)break e;1!=(0|r)&&(P(27298,17172,1022,43993),M()),l[e+8>>2]=c,l[e+4>>2]=t,l[e>>2]=7}return void(ne=a+32|0)}P(25425,17172,36,43824),M()}function Te(e,r){var a,i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0;ne=a=ne-144|0;e:{if(5==(15&(f=v[0|r]))){if(i=l[r+12>>2],n=l[r+8>>2],l[n>>2]=l[n>>2]+1,k[a+128|0]=f,t=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,f=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,l[a+140>>2]=i,l[a+136>>2]=n,k[a+132|0]=t,k[a+133|0]=t>>>8,k[a+134|0]=t>>>16,k[a+135|0]=t>>>24,k[a+129|0]=f,k[a+130|0]=f>>>8,k[a+131|0]=f>>>16,k[a+132|0]=f>>>24,f=l[n+8>>2],i=l[a+140>>2],l[a+72>>2]=l[a+136>>2],l[a+76>>2]=i,i=l[a+132>>2],l[a+64>>2]=l[a+128>>2],l[a+68>>2]=i,zb(a- -64|0),l[e>>2]=6,l[e+4>>2]=0,i=Bb(16+((f>>>=1)<<4)|0),l[i+8>>2]=f,l[i>>2]=1,l[i+4>>2]=0,l[e+8>>2]=i,c=Vk(i=n+16|0,d=i+f|0,a+84|0))for(s=a+128|1,t=n=a+88|1;;){m[a+112>>3]=l[a+84>>2],l[a+104>>2]=4,l[a+108>>2]=0,i=l[e+12>>2],f=l[e+8>>2],l[a+96>>2]=f,l[a+100>>2]=i,b=l[e+4>>2],i=l[e>>2],l[a+88>>2]=i,l[a+92>>2]=b,b=n,l[a+128>>2]=v[0|b]|v[b+1|0]<<8|v[b+2|0]<<16|v[b+3|0]<<24,b=v[(b=t)+3|0]|v[b+4|0]<<8|v[b+5|0]<<16|v[b+6|0]<<24,k[a+131|0]=b,k[a+132|0]=b>>>8,k[a+133|0]=b>>>16,k[a+134|0]=b>>>24,b=l[a+100>>2];r:if(!((u=15&i)>>>0>7)){a:switch(u-1|0){default:if(!f)break r;break;case 0:case 1:case 2:case 3:break r;case 4:case 5:case 6:}l[f>>2]=l[f>>2]+1}if(o=v[a+131|0]|v[a+132|0]<<8|v[a+133|0]<<16|v[a+134|0]<<24,k[a+123|0]=o,k[a+124|0]=o>>>8,k[a+125|0]=o>>>16,k[a+126|0]=o>>>24,l[a+120>>2]=l[a+128>>2],k[a+128|0]=i,i=v[a+123|0]|v[a+124|0]<<8|v[a+125|0]<<16|v[a+126|0]<<24,k[s+3|0]=i,k[s+4|0]=i>>>8,k[s+5|0]=i>>>16,k[s+6|0]=i>>>24,i=l[a+120>>2],k[0|s]=i,k[s+1|0]=i>>>8,k[s+2|0]=i>>>16,k[s+3|0]=i>>>24,l[a+140>>2]=b,l[a+136>>2]=f,6!=(0|u))break e;if(i=l[a+140>>2],l[a+56>>2]=l[a+136>>2],l[a+60>>2]=i,i=l[a+132>>2],l[a+48>>2]=l[a+128>>2],l[a+52>>2]=i,f=l[a+132>>2],zb(a+48|0),i=l[a+100>>2],l[a+40>>2]=l[a+96>>2],l[a+44>>2]=i,i=l[a+116>>2],l[a+24>>2]=l[a+112>>2],l[a+28>>2]=i,i=l[a+92>>2],l[a+32>>2]=l[a+88>>2],l[a+36>>2]=i,i=l[a+108>>2],l[a+16>>2]=l[a+104>>2],l[a+20>>2]=i,Dn(e,a+32|0,f,a+16|0),!(c=Vk(c,d,a+84|0)))break}return e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a),void(ne=a+144|0)}P(19611,17172,704,43469),M()}P(18173,17172,326,43311),M()}function Re(e){var r,a=0,i=0,f=0,b=0;if(ne=r=ne-48|0,5==(15&(a=v[0|e]))){for(b=l[e+12>>2],f=l[e+8>>2],l[f>>2]=l[f>>2]+1,k[r+32|0]=a,i=v[e+4|0]|v[e+5|0]<<8|v[e+6|0]<<16|v[e+7|0]<<24,a=v[e+1|0]|v[e+2|0]<<8|v[e+3|0]<<16|v[e+4|0]<<24,l[r+44>>2]=b,l[r+40>>2]=f,k[r+36|0]=i,k[r+37|0]=i>>>8,k[r+38|0]=i>>>16,k[r+39|0]=i>>>24,k[r+33|0]=a,k[r+34|0]=a>>>8,k[r+35|0]=a>>>16,k[r+36|0]=a>>>24,b=l[f+8>>2],a=l[r+44>>2],l[r+24>>2]=l[r+40>>2],l[r+28>>2]=a,a=l[r+36>>2],l[r+16>>2]=l[r+32>>2],l[r+20>>2]=a,zb(r+16|0),a=0,l[r+32>>2]=0,b=(i=f+16|0)+(b>>>1)|0;f=a,a=a+1|0,i=Vk(i,b,r+32|0););return a=l[e+12>>2],l[r+8>>2]=l[e+8>>2],l[r+12>>2]=a,a=l[e+4>>2],l[r>>2]=l[e>>2],l[r+4>>2]=a,zb(r),ne=r+48|0,f}P(19611,17172,641,43407),M()}function Oe(e,r){var a;l[e>>2]=6,l[e+4>>2]=0,a=Bb(16+(r<<4)|0),l[a+8>>2]=r,l[a>>2]=1,l[a+4>>2]=0,l[e+8>>2]=a}function Ie(e){var r,a=0,i=0,f=0,k=0,b=0;ne=r=ne-16|0;e:{if(7==(15&v[0|e])){if(f=l[e+8>>2],i=l[f>>2]+-1|0,l[f>>2]=i,!i){if(i=0,(0|(k=l[e+4>>2]))>0)for(;;){if(e=w(i,40)+f|0,1!=(0|(a=15&v[e+16|0]))){if(5!=(0|a))break e;a=v[e+24|0]|v[e+25|0]<<8|v[e+26|0]<<16|v[e+27|0]<<24,b=l[a>>2]+-1|0,l[a>>2]=b,b||Lb(a),a=l[e+44>>2],l[r+8>>2]=l[e+40>>2],l[r+12>>2]=a,a=l[e+36>>2],l[r>>2]=l[e+32>>2],l[r+4>>2]=a,zb(r)}if(!((0|(i=i+1|0))<(0|k)))break}Lb(f)}return void(ne=r+16|0)}P(26604,17172,968,44099),M()}P(25781,17172,444,43888),M()}function ze(e,r,a){var i=0;l[e+112>>2]&&(P(26552,14305,1238,43117),M()),l[e+112>>2]=1,i=l[r+4>>2],l[e+120>>2]=l[r>>2],l[e+124>>2]=i,i=l[r+12>>2],l[e+128>>2]=l[r+8>>2],l[e+132>>2]=i,r=l[a+4>>2],l[e+136>>2]=l[a>>2],l[e+140>>2]=r,r=l[a+12>>2],l[e+144>>2]=l[a+8>>2],l[e+148>>2]=r}function Ne(e,r){!function e(r,a){var i=0,f=0,k=0,b=0,n=0,s=0;if(ne=i=ne-384|0,l[a+12>>2]>=1){if(l[i+260>>2]=14281,l[i+256>>2]=r,tn(1031,i+256|0),f=l[a+60>>2],l[i+248>>2]=l[a+56>>2],l[i+252>>2]=f,f=l[a+52>>2],l[i+240>>2]=l[a+48>>2],l[i+244>>2]=f,Nb(i+352|0,i+240|0),jb(i+336|0,14775),f=l[i+364>>2],l[i+232>>2]=l[i+360>>2],l[i+236>>2]=f,f=l[i+348>>2],l[i+216>>2]=l[i+344>>2],l[i+220>>2]=f,f=l[i+356>>2],l[i+224>>2]=l[i+352>>2],l[i+228>>2]=f,f=l[i+340>>2],l[i+208>>2]=l[i+336>>2],l[i+212>>2]=f,dn(i+368|0,i+224|0,i+208|0),l[a+12>>2]>=1)for(;b&&tn(15089,0),f=l[i+380>>2],l[i+200>>2]=l[i+376>>2],l[i+204>>2]=f,f=l[i+372>>2],l[i+192>>2]=l[i+368>>2],l[i+196>>2]=f,Nb(i+304|0,i+192|0),f=l[i+316>>2],l[i+184>>2]=l[i+312>>2],l[i+188>>2]=f,f=l[i+308>>2],l[i+176>>2]=l[i+304>>2],l[i+180>>2]=f,Kb(i+320|0,i+176|0,b),f=l[i+332>>2],l[i+168>>2]=l[i+328>>2],l[i+172>>2]=f,f=l[i+324>>2],l[i+160>>2]=l[i+320>>2],l[i+164>>2]=f,l[i+144>>2]=Gb(i+160|0),tn(15538,i+144|0),f=l[i+332>>2],l[i+136>>2]=l[i+328>>2],l[i+140>>2]=f,f=l[i+324>>2],l[i+128>>2]=l[i+320>>2],l[i+132>>2]=f,zb(i+128|0),(0|(b=b+1|0))<l[a+12>>2];);b=l[i+380>>2],l[i+120>>2]=l[i+376>>2],l[i+124>>2]=b,b=l[i+372>>2],l[i+112>>2]=l[i+368>>2],l[i+116>>2]=b,zb(i+112|0),_k(35344)}if(l[a+4>>2]>=1)for(;l[i+100>>2]=14281,l[i+96>>2]=r,tn(30302,i+96|0),Sa(a,(b=k<<1)+l[a>>2]|0),Ab(10),n=b+l[a>>2]|0,f=d[n>>1],b=l[12+(f>>>0<41?w(f,24)+34336|0:35320)>>2],(f=f+-27|0)>>>0>2|!(f-1)||(b=(d[n+2>>1]<<1)+b|0),(0|(k=b+k|0))<l[a+4>>2];);if(l[a+40>>2]>=1)for(f=r+2|0,b=0;n=l[l[a+36>>2]+(b<<2)>>2],s=l[(k=n)+60>>2],l[i+88>>2]=l[k+56>>2],l[i+92>>2]=s,s=l[k+52>>2],l[i+80>>2]=l[k+48>>2],l[i+84>>2]=s,Nb(i+288|0,i+80|0),jb(i+272|0,16329),k=l[i+300>>2],l[i+72>>2]=l[i+296>>2],l[i+76>>2]=k,k=l[i+284>>2],l[i+56>>2]=l[i+280>>2],l[i+60>>2]=k,k=l[i+292>>2],l[i+64>>2]=l[i+288>>2],l[i+68>>2]=k,k=l[i+276>>2],l[i+48>>2]=l[i+272>>2],l[i+52>>2]=k,dn(i+368|0,i- -64|0,i+48|0),k=l[i+380>>2],l[i+40>>2]=l[i+376>>2],l[i+44>>2]=k,k=l[i+372>>2],l[i+32>>2]=l[i+368>>2],l[i+36>>2]=k,k=Gb(i+32|0),l[i+28>>2]=b,l[i+24>>2]=k,l[i+20>>2]=14281,l[i+16>>2]=r,tn(16733,i+16|0),k=l[i+380>>2],l[i+8>>2]=l[i+376>>2],l[i+12>>2]=k,k=l[i+372>>2],l[i>>2]=l[i+368>>2],l[i+4>>2]=k,zb(i),e(f,n),(0|(b=b+1|0))<l[a+40>>2];);ne=i+384|0}(r,l[e+8>>2])}function je(e,r){var a,i=0;ne=a=ne-96|0,jb(a+48|0,25744),i=l[a+60>>2],l[a+72>>2]=l[a+56>>2],l[a+76>>2]=i,i=l[a+52>>2],l[a+64>>2]=l[a+48>>2],l[a+68>>2]=i,i=l[r+164>>2],l[a+40>>2]=l[r+160>>2],l[a+44>>2]=i,i=l[r+156>>2],l[a+32>>2]=l[r+152>>2],l[a+36>>2]=i,Nb(a+80|0,a+32|0),r=l[a+92>>2],l[a+24>>2]=l[a+88>>2],l[a+28>>2]=r,r=l[a+76>>2],l[a+8>>2]=l[a+72>>2],l[a+12>>2]=r,r=l[a+84>>2],l[a+16>>2]=l[a+80>>2],l[a+20>>2]=r,r=l[a+68>>2],l[a>>2]=l[a+64>>2],l[a+4>>2]=r,dn(e,a+16|0,a),ne=a+96|0}function Ue(e){var r,a;ne=a=ne-16|0,(r=l[e>>2])&&(l[e>>2]=0,ha(r),Af(l[r+8>>2]),l[r+8>>2]=0,e=l[r+164>>2],l[a+8>>2]=l[r+160>>2],l[a+12>>2]=e,e=l[r+156>>2],l[a>>2]=l[r+152>>2],l[a+4>>2]=e,zb(a),Lb(r)),ne=a+16|0}function Be(e,r,a){var i,f=0,k=0,b=0,n=0;if(ne=i=ne+-64|0,l[82342]=l[e>>2],ha(e),f=l[e+8>>2],l[i+44>>2]=-1,l[i+40>>2]=f,f=l[i+44>>2],l[i+24>>2]=l[i+40>>2],l[i+28>>2]=f,f=Le(e,i+24|0,0,0),l[f+8>>2]=0,l[f+12>>2]=0,f=l[r+12>>2],l[i+56>>2]=l[r+8>>2],l[i+60>>2]=f,f=l[r+4>>2],l[i+48>>2]=l[r>>2],l[i+52>>2]=f,f=l[r+12>>2],l[i+16>>2]=l[r+8>>2],l[i+20>>2]=f,f=l[r+4>>2],l[i+8>>2]=l[r>>2],l[i+12>>2]=f,15&v[i+8|0])return n=l[e+56>>2],(0|(f=l[e+48>>2]+-24|0))>=(0|(r=l[e+44>>2]))?r=l[e+40>>2]:(k=583-(r<<1)&-8,nn((b=an((r+l[e+40>>2]|0)-8|0,k))+(k-(r=8-r|0)|0)|0,b,r),l[e+44>>2]=8-k,r=k+b|0,l[e+40>>2]=r),l[e+48>>2]=f,l[(r=r+f|0)-4>>2]=n,l[e+56>>2]=f,f=l[i+60>>2],l[r+8>>2]=l[i+56>>2],l[r+12>>2]=f,f=l[i+52>>2],l[r>>2]=l[i+48>>2],l[r+4>>2]=f,r=l[l[e+8>>2]>>2],l[i+32>>2]=l[e+56>>2],l[i+36>>2]=l[e+52>>2],f=l[i+36>>2],l[i>>2]=l[i+32>>2],l[i+4>>2]=f,Ln(e,r,i),l[e+104>>2]=1,l[e+100>>2]=3&a,void(ne=i- -64|0);P(13971,14305,164,43031),M()}function Ce(){var e,r=0,a=0;return ne=e=ne-16|0,(r=Cb(184))?(l[r+108>>2]=0,l[r+8>>2]=0,l[r+48>>2]=0,l[r+52>>2]=0,l[r+40>>2]=0,l[r+44>>2]=8,l[r+56>>2]=0,l[r+60>>2]=0,a=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=a,a=l[10945],l[e>>2]=l[10944],l[e+4>>2]=a,a=l[e+12>>2],l[r+32>>2]=l[e+8>>2],l[r+36>>2]=a,a=l[e+4>>2],l[r+24>>2]=l[e>>2],l[r+28>>2]=a,l[r+112>>2]=0,l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0,a=l[e+12>>2],l[r+128>>2]=l[e+8>>2],l[r+132>>2]=a,a=l[e+4>>2],l[r+120>>2]=l[e>>2],l[r+124>>2]=a,l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0,a=l[e+12>>2],l[r+144>>2]=l[e+8>>2],l[r+148>>2]=a,a=l[e+4>>2],l[r+136>>2]=l[e>>2],l[r+140>>2]=a,l[r+16>>2]=l[75398],l[r+12>>2]=4,mn(e),a=l[e+12>>2],l[r+160>>2]=l[e+8>>2],l[r+164>>2]=a,a=l[e+4>>2],l[r+152>>2]=l[e>>2],l[r+156>>2]=a,a=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=a,a=l[10945],l[e>>2]=l[10944],l[e+4>>2]=a,a=l[e+12>>2],l[r+72>>2]=l[e+8>>2],l[r+76>>2]=a,a=l[e+4>>2],l[r+64>>2]=l[e>>2],l[r+68>>2]=a,a=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=a,a=l[10945],l[e>>2]=l[10944],l[e+4>>2]=a,a=l[e+12>>2],l[r+88>>2]=l[e+8>>2],l[r+92>>2]=a,a=l[e+4>>2],l[r+80>>2]=l[e>>2],l[r+84>>2]=a):r=0,ne=e+16|0,r}function Le(e,r,a,i){var f,k,b=0,n=0,s=0,t=0,c=0,o=0,u=0,v=0,h=0;ne=k=ne-16|0,o=l[e+52>>2],n=l[r>>2],s=31+(l[n+8>>2]+l[n+12>>2]<<4)&-8,(0|(f=l[e+48>>2]-s|0))>=(0|(b=l[e+44>>2]))?b=l[e+40>>2]:(nn((s=an(c=(b+l[e+40>>2]|0)-8|0,b=519+((t=8-b|0)+s<<1)&-8))+(b-t|0)|0,s,t),l[e+44>>2]=8-b,b=b+s|0,l[e+40>>2]=b),l[e+48>>2]=f,l[(c=b+f|0)>>2]=n,l[c+-4>>2]=o,l[c+4>>2]=l[r+4>>2];e:{r:{a:{i:{if(l[n+12>>2]==(0|i)){if(s=c+16|0,(0|i)<1)break e;for(;;){if(t=d[2+(n=(u<<2)+a|0)>>1],o=l[e+40>>2],b=l[e+52>>2],v=d[n>>1])for(h=o+4|0,n=0;b=l[b+h>>2],(0|v)!=(0|(n=n+1|0)););if(n=b+o|0,4096&t){if(t&=61439,n=l[n>>2],(0|t)>=l[n+40>>2])break i;n=l[l[n+36>>2]+(t<<2)>>2]}else{if(l[l[n>>2]+12>>2]<=(0|t))break a;t=l[20+(b=n+(t<<4)|0)>>2],n=l[b+16>>2],b=t}if(l[s>>2]=n,l[s+4>>2]=b,s=s+16|0,(0|(u=u+1|0))==(0|i))break}break r}P(28947,14305,137,43190),M()}P(28160,14305,117,43177),M()}P(28667,14305,126,43177),M()}n=l[r>>2]}if(l[n+8>>2]>=1)for(b=0;l[(r=k)>>2]=0,l[r+4>>2]=0,l[r+8>>2]=0,l[r+12>>2]=0,a=l[r+12>>2],l[s+8>>2]=l[r+8>>2],l[s+12>>2]=a,a=l[r+4>>2],l[s>>2]=l[r>>2],l[s+4>>2]=a,s=s+16|0,(0|(b=b+1|0))<l[n+8>>2];);return l[e+52>>2]=f,ne=k+16|0,c}function He(e,r,a){e|=0,r|=0;var i=0,f=0,k=0;ne=r=ne-336|0,i=l[12+(a|=0)>>2],l[r+176>>2]=l[a+8>>2],l[r+180>>2]=i,i=l[a+4>>2],l[r+168>>2]=l[a>>2],l[r+172>>2]=i,4==(15&v[r+168|0])?(l[r+312>>2]=0,l[r+304>>2]=0,l[r+308>>2]=0,l[r+296>>2]=0,l[r+300>>2]=0,l[r+288>>2]=0,l[r+292>>2]=0,l[r+280>>2]=0,l[r+284>>2]=0,l[r+272>>2]=0,l[r+276>>2]=0,i=l[a+12>>2],l[r+128>>2]=l[a+8>>2],l[r+132>>2]=i,i=l[a+4>>2],l[r+120>>2]=l[a>>2],l[r+124>>2]=i,i=r,f=Wb(r+120|0),k=g(f)<2147483648?~~f:-2147483648,l[i+268>>2]=k,i=l[a+12>>2],l[r+112>>2]=l[a+8>>2],l[r+116>>2]=i,i=l[a+4>>2],l[r+104>>2]=l[a>>2],l[r+108>>2]=i,zb(r+104|0),(i=0|L(r+268|0,r+272|0))?(Ea(r+232|0,i),i=l[r+244>>2],l[a+8>>2]=l[r+240>>2],l[a+12>>2]=i,i=l[r+236>>2],l[a>>2]=l[r+232>>2],l[a+4>>2]=i,i=l[a+12>>2],l[r+96>>2]=l[a+8>>2],l[r+100>>2]=i,i=l[a+4>>2],l[r+88>>2]=l[a>>2],l[r+92>>2]=i,Nb(r+184|0,r+88|0),i=l[r+196>>2],l[r+80>>2]=l[r+192>>2],l[r+84>>2]=i,i=l[r+188>>2],l[r+72>>2]=l[r+184>>2],l[r+76>>2]=i,Kb(r+200|0,r+72|0,5),k=l[r+212>>2],l[(i=r- -64|0)>>2]=l[r+208>>2],l[i+4>>2]=k,i=l[r+204>>2],l[r+56>>2]=l[r+200>>2],l[r+60>>2]=i,f=f-D(f)+Wb(r+56|0),l[r+216>>2]=4,l[r+220>>2]=0,m[r+224>>3]=f,i=l[a+12>>2],l[r+48>>2]=l[a+8>>2],l[r+52>>2]=i,i=l[a>>2],a=l[a+4>>2],k=l[r+228>>2],l[r+32>>2]=l[r+224>>2],l[r+36>>2]=k,l[r+40>>2]=i,l[r+44>>2]=a,a=l[r+220>>2],l[r+24>>2]=l[r+216>>2],l[r+28>>2]=a,Dn(e,r+40|0,5,r+24|0)):(jb(r+248|0,42933),a=l[r+260>>2],l[r+16>>2]=l[r+256>>2],l[r+20>>2]=a,a=l[r+252>>2],l[r+8>>2]=l[r+248>>2],l[r+12>>2]=a,Hb(e,r+8|0))):(jb(r+320|0,42888),i=l[r+332>>2],l[r+280>>2]=l[r+328>>2],l[r+284>>2]=i,i=l[r+324>>2],l[r+272>>2]=l[r+320>>2],l[r+276>>2]=i,i=l[a+12>>2],l[r+160>>2]=l[a+8>>2],l[r+164>>2]=i,i=l[a+4>>2],l[r+152>>2]=l[a>>2],l[r+156>>2]=i,zb(r+152|0),a=l[r+284>>2],l[r+144>>2]=l[r+280>>2],l[r+148>>2]=a,a=l[r+276>>2],l[r+136>>2]=l[r+272>>2],l[r+140>>2]=a,Hb(e,r+136|0)),ne=r+336|0}function qe(e,r,a){e|=0,r|=0;var i=0,f=0,k=0;ne=r=ne-336|0,i=l[12+(a|=0)>>2],l[r+176>>2]=l[a+8>>2],l[r+180>>2]=i,i=l[a+4>>2],l[r+168>>2]=l[a>>2],l[r+172>>2]=i,4==(15&v[r+168|0])?(l[r+312>>2]=0,l[r+304>>2]=0,l[r+308>>2]=0,l[r+296>>2]=0,l[r+300>>2]=0,l[r+288>>2]=0,l[r+292>>2]=0,l[r+280>>2]=0,l[r+284>>2]=0,l[r+272>>2]=0,l[r+276>>2]=0,i=l[a+12>>2],l[r+128>>2]=l[a+8>>2],l[r+132>>2]=i,i=l[a+4>>2],l[r+120>>2]=l[a>>2],l[r+124>>2]=i,i=r,f=Wb(r+120|0),k=g(f)<2147483648?~~f:-2147483648,l[i+268>>2]=k,i=l[a+12>>2],l[r+112>>2]=l[a+8>>2],l[r+116>>2]=i,i=l[a+4>>2],l[r+104>>2]=l[a>>2],l[r+108>>2]=i,zb(r+104|0),(i=0|H(r+268|0,r+272|0))?(Ea(r+232|0,i),i=l[r+244>>2],l[a+8>>2]=l[r+240>>2],l[a+12>>2]=i,i=l[r+236>>2],l[a>>2]=l[r+232>>2],l[a+4>>2]=i,i=l[a+12>>2],l[r+96>>2]=l[a+8>>2],l[r+100>>2]=i,i=l[a+4>>2],l[r+88>>2]=l[a>>2],l[r+92>>2]=i,Nb(r+184|0,r+88|0),i=l[r+196>>2],l[r+80>>2]=l[r+192>>2],l[r+84>>2]=i,i=l[r+188>>2],l[r+72>>2]=l[r+184>>2],l[r+76>>2]=i,Kb(r+200|0,r+72|0,5),k=l[r+212>>2],l[(i=r- -64|0)>>2]=l[r+208>>2],l[i+4>>2]=k,i=l[r+204>>2],l[r+56>>2]=l[r+200>>2],l[r+60>>2]=i,f=f-D(f)+Wb(r+56|0),l[r+216>>2]=4,l[r+220>>2]=0,m[r+224>>3]=f,i=l[a+12>>2],l[r+48>>2]=l[a+8>>2],l[r+52>>2]=i,i=l[a>>2],a=l[a+4>>2],k=l[r+228>>2],l[r+32>>2]=l[r+224>>2],l[r+36>>2]=k,l[r+40>>2]=i,l[r+44>>2]=a,a=l[r+220>>2],l[r+24>>2]=l[r+216>>2],l[r+28>>2]=a,Dn(e,r+40|0,5,r+24|0)):(jb(r+248|0,42824),a=l[r+260>>2],l[r+16>>2]=l[r+256>>2],l[r+20>>2]=a,a=l[r+252>>2],l[r+8>>2]=l[r+248>>2],l[r+12>>2]=a,Hb(e,r+8|0))):(jb(r+320|0,42788),i=l[r+332>>2],l[r+280>>2]=l[r+328>>2],l[r+284>>2]=i,i=l[r+324>>2],l[r+272>>2]=l[r+320>>2],l[r+276>>2]=i,i=l[a+12>>2],l[r+160>>2]=l[a+8>>2],l[r+164>>2]=i,i=l[a+4>>2],l[r+152>>2]=l[a>>2],l[r+156>>2]=i,zb(r+152|0),a=l[r+284>>2],l[r+144>>2]=l[r+280>>2],l[r+148>>2]=a,a=l[r+276>>2],l[r+136>>2]=l[r+272>>2],l[r+140>>2]=a,Hb(e,r+136|0)),ne=r+336|0}function Ye(e){var r,a,i=0;return ne=r=ne-32|0,!(a=l[e>>2])|l[e+4>>2]!=(0|a)|l[a+8>>2]||(e=l[a+36>>2],l[r+24>>2]=l[a+32>>2],l[r+28>>2]=e,e=l[a+28>>2],l[r+16>>2]=l[a+24>>2],l[r+20>>2]=e,4==(15&v[r+16|0])&&(e=l[a+36>>2],l[r+8>>2]=l[a+32>>2],l[r+12>>2]=e,e=l[a+28>>2],l[r>>2]=l[a+24>>2],l[r+4>>2]=e,t(+Wb(r)),e=0|b(1),i=!b(0)&2146435072==(2147483647&e))),ne=r+32|0,i}function We(e,r,a,i){e|=0,r|=0,i|=0;var f=0,k=0,b=0,n=0;ne=r=ne-288|0,f=l[12+(a|=0)>>2],l[r+200>>2]=l[a+8>>2],l[r+204>>2]=f,f=l[a+4>>2],l[r+192>>2]=l[a>>2],l[r+196>>2]=f,5==(15&v[r+192|0])&&(f=l[i+12>>2],l[r+184>>2]=l[i+8>>2],l[r+188>>2]=f,f=l[i+4>>2],l[r+176>>2]=l[i>>2],l[r+180>>2]=f,5==(15&v[r+176|0]))?(f=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=f,f=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=f,b=Gb(r+112|0),f=l[i+12>>2],l[r+104>>2]=l[i+8>>2],l[r+108>>2]=f,f=l[i+4>>2],l[r+96>>2]=l[i>>2],l[r+100>>2]=f,n=Gb(r+96|0),f=l[a+12>>2],l[r+88>>2]=l[a+8>>2],l[r+92>>2]=f,f=l[a+4>>2],l[r+80>>2]=l[a>>2],l[r+84>>2]=f,Nb(r+224|0,r+80|0),f=l[r+236>>2],l[r+72>>2]=l[r+232>>2],l[r+76>>2]=f,f=l[r+228>>2],l[r+64>>2]=l[r+224>>2],l[r+68>>2]=f,f=vn(r- -64|0),k=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=k,k=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=k,Nb(r+208|0,r+48|0),k=l[r+220>>2],l[r+40>>2]=l[r+216>>2],l[r+44>>2]=k,k=l[r+212>>2],l[r+32>>2]=l[r+208>>2],l[r+36>>2]=k,f>>>0>=(k=vn(r+32|0))>>>0&&!pn((f-k|0)+b|0,n,k)?(f=l[10939],l[r+264>>2]=l[10938],l[r+268>>2]=f,f=l[10937],l[r+256>>2]=l[10936],l[r+260>>2]=f):(f=l[10943],l[r+264>>2]=l[10942],l[r+268>>2]=f,f=l[10941],l[r+256>>2]=l[10940],l[r+260>>2]=f),f=l[r+268>>2],l[r+280>>2]=l[r+264>>2],l[r+284>>2]=f,f=l[r+260>>2],l[r+272>>2]=l[r+256>>2],l[r+276>>2]=f,f=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,zb(r+16|0),a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,zb(r),a=l[r+284>>2],l[e+8>>2]=l[r+280>>2],l[e+12>>2]=a,a=l[r+276>>2],l[e>>2]=l[r+272>>2],l[e+4>>2]=a):(jb(r+240|0,40182),f=l[r+252>>2],l[r+280>>2]=l[r+248>>2],l[r+284>>2]=f,f=l[r+244>>2],l[r+272>>2]=l[r+240>>2],l[r+276>>2]=f,f=l[i+12>>2],l[r+264>>2]=l[i+8>>2],l[r+268>>2]=f,f=l[i+4>>2],l[r+256>>2]=l[i>>2],l[r+260>>2]=f,i=l[a+12>>2],l[r+168>>2]=l[a+8>>2],l[r+172>>2]=i,i=l[a+4>>2],l[r+160>>2]=l[a>>2],l[r+164>>2]=i,zb(r+160|0),a=l[r+268>>2],l[r+152>>2]=l[r+264>>2],l[r+156>>2]=a,a=l[r+260>>2],l[r+144>>2]=l[r+256>>2],l[r+148>>2]=a,zb(r+144|0),a=l[r+284>>2],l[r+136>>2]=l[r+280>>2],l[r+140>>2]=a,a=l[r+276>>2],l[r+128>>2]=l[r+272>>2],l[r+132>>2]=a,Hb(e,r+128|0)),ne=r+288|0}function Ge(e,r,a,i){e|=0,r|=0,i|=0;var f=0,k=0,b=0;ne=r=ne-288|0,f=l[12+(a|=0)>>2],l[r+200>>2]=l[a+8>>2],l[r+204>>2]=f,f=l[a+4>>2],l[r+192>>2]=l[a>>2],l[r+196>>2]=f,5==(15&v[r+192|0])&&(f=l[i+12>>2],l[r+184>>2]=l[i+8>>2],l[r+188>>2]=f,f=l[i+4>>2],l[r+176>>2]=l[i>>2],l[r+180>>2]=f,5==(15&v[r+176|0]))?(f=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=f,f=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=f,Nb(r+224|0,r+112|0),f=l[r+236>>2],l[r+104>>2]=l[r+232>>2],l[r+108>>2]=f,f=l[r+228>>2],l[r+96>>2]=l[r+224>>2],l[r+100>>2]=f,f=vn(r+96|0),k=l[i+12>>2],l[r+88>>2]=l[i+8>>2],l[r+92>>2]=k,k=l[i+4>>2],l[r+80>>2]=l[i>>2],l[r+84>>2]=k,Nb(r+208|0,r+80|0),k=l[r+220>>2],l[r+72>>2]=l[r+216>>2],l[r+76>>2]=k,k=l[r+212>>2],l[r+64>>2]=l[r+208>>2],l[r+68>>2]=k,(0|(k=vn(r- -64|0)))>(0|f)||(f=l[a+12>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=f,f=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=f,f=Gb(r+48|0),b=l[i+12>>2],l[r+40>>2]=l[i+8>>2],l[r+44>>2]=b,b=l[i+4>>2],l[r+32>>2]=l[i>>2],l[r+36>>2]=b,pn(f,Gb(r+32|0),k))?(f=l[10943],l[r+264>>2]=l[10942],l[r+268>>2]=f,f=l[10941],l[r+256>>2]=l[10940],l[r+260>>2]=f):(f=l[10939],l[r+264>>2]=l[10938],l[r+268>>2]=f,f=l[10937],l[r+256>>2]=l[10936],l[r+260>>2]=f),f=l[r+268>>2],l[r+280>>2]=l[r+264>>2],l[r+284>>2]=f,f=l[r+260>>2],l[r+272>>2]=l[r+256>>2],l[r+276>>2]=f,f=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,zb(r+16|0),a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,zb(r),a=l[r+284>>2],l[e+8>>2]=l[r+280>>2],l[e+12>>2]=a,a=l[r+276>>2],l[e>>2]=l[r+272>>2],l[e+4>>2]=a):(jb(r+240|0,40124),f=l[r+252>>2],l[r+280>>2]=l[r+248>>2],l[r+284>>2]=f,f=l[r+244>>2],l[r+272>>2]=l[r+240>>2],l[r+276>>2]=f,f=l[i+12>>2],l[r+264>>2]=l[i+8>>2],l[r+268>>2]=f,f=l[i+4>>2],l[r+256>>2]=l[i>>2],l[r+260>>2]=f,i=l[a+12>>2],l[r+168>>2]=l[a+8>>2],l[r+172>>2]=i,i=l[a+4>>2],l[r+160>>2]=l[a>>2],l[r+164>>2]=i,zb(r+160|0),a=l[r+268>>2],l[r+152>>2]=l[r+264>>2],l[r+156>>2]=a,a=l[r+260>>2],l[r+144>>2]=l[r+256>>2],l[r+148>>2]=a,zb(r+144|0),a=l[r+284>>2],l[r+136>>2]=l[r+280>>2],l[r+140>>2]=a,a=l[r+276>>2],l[r+128>>2]=l[r+272>>2],l[r+132>>2]=a,Hb(e,r+128|0)),ne=r+288|0}function Xe(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,b=0,n=0;ne=r=ne-400|0,b=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=b,b=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=b,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,k=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,n=k,k=Wb(r+32|0),k=Ik(n,a=g(k)<2147483648?~~k:-2147483648),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=k,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0}function Je(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=ji(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0}function Ve(e,r){var a,i=0,f=0,k=0;ne=a=ne-992|0,l[a+648>>2]=0,l[a+652>>2]=0;e:{if((i=dk(15242))&&(jb(a+976|0,i),i=l[a+988>>2],l[a+640>>2]=l[a+984>>2],l[a+644>>2]=i,i=l[a+980>>2],l[a+632>>2]=l[a+976>>2],l[a+636>>2]=i,Un(a+896|0,a+632|0,15595),i=l[a+908>>2],l[a+624>>2]=l[a+904>>2],l[a+628>>2]=i,i=l[a+900>>2],l[a+616>>2]=l[a+896>>2],l[a+620>>2]=i,Vi(a+960|0,Gb(a+616|0),1),i=l[a+972>>2],l[a+608>>2]=l[a+968>>2],l[a+612>>2]=i,i=l[a+964>>2],l[a+600>>2]=l[a+960>>2],l[a+604>>2]=i,15&v[a+600|0]?(i=l[a+972>>2],l[a+592>>2]=l[a+968>>2],l[a+596>>2]=i,i=l[a+964>>2],l[a+584>>2]=l[a+960>>2],l[a+588>>2]=i,(i=Vf(f=df(e,15985,i=Gb(a+584|0),on(i)),a+952|0))||(k=l[a+956>>2],l[a+576>>2]=l[a+952>>2],l[a+580>>2]=k,k=l[r+4>>2],l[a+568>>2]=l[r>>2],l[a+572>>2]=k,Cn(a+944|0,a+576|0,a+568|0,128),k=l[a+948>>2],l[r>>2]=l[a+944>>2],l[r+4>>2]=k),hb(f)):i=0,f=l[a+908>>2],l[a+560>>2]=l[a+904>>2],l[a+564>>2]=f,f=l[a+900>>2],l[a+552>>2]=l[a+896>>2],l[a+556>>2]=f,zb(a+552|0),f=l[a+972>>2],l[a+544>>2]=l[a+968>>2],l[a+548>>2]=f,f=l[a+964>>2],l[a+536>>2]=l[a+960>>2],l[a+540>>2]=f,zb(a+536|0),i))e=l[r+4>>2],l[a+528>>2]=l[r>>2],l[a+532>>2]=e,sn(a+528|0);else{if(Vf(e=df(e,15985,1077,12893),a+896|0))break e;i=l[a+900>>2],l[a+520>>2]=l[a+896>>2],l[a+524>>2]=i,i=l[a+652>>2],l[a+512>>2]=l[a+648>>2],l[a+516>>2]=i,Cn(a+976|0,a+520|0,a+512|0,128),i=l[a+980>>2],l[a+648>>2]=l[a+976>>2],l[a+652>>2]=i,hb(e),e=l[a+652>>2],l[a+656>>2]=l[a+648>>2],l[a+660>>2]=e,l[a+952>>2]=0,l[a+956>>2]=0,l[a+896>>2]=16377,ln(e=a+896|4,18),l[a+908>>2]=16756,i=l[10943],l[a+984>>2]=l[10942],l[a+988>>2]=i,i=l[10941],l[a+976>>2]=l[10940],l[a+980>>2]=i,i=l[a+988>>2],l[a+504>>2]=l[a+984>>2],l[a+508>>2]=i,i=l[a+980>>2],l[a+496>>2]=l[a+976>>2],l[a+500>>2]=i,un(a+944|0,a+496|0),i=l[10939],l[a+968>>2]=l[10938],l[a+972>>2]=i,i=l[10937],l[a+960>>2]=l[10936],l[a+964>>2]=i,i=l[a+972>>2],l[a+488>>2]=l[a+968>>2],l[a+492>>2]=i,i=l[a+964>>2],l[a+480>>2]=l[a+960>>2],l[a+484>>2]=i,un(a+936|0,a+480|0),i=l[a+948>>2],l[a+472>>2]=l[a+944>>2],l[a+476>>2]=i,i=l[a+940>>2],l[a+464>>2]=l[a+936>>2],l[a+468>>2]=i,Pb(a+912|0,a+472|0,a+464|0),i=l[a+896>>2],l[a+880>>2]=0,l[a+884>>2]=0,f=l[a+884>>2],l[a+456>>2]=l[a+880>>2],l[a+460>>2]=f,f=l[a+904>>2],l[a+448>>2]=l[a+900>>2],l[a+452>>2]=f,Qk(a+888|0,i,a+456|0,a+448|0),i=l[a+956>>2],l[a+440>>2]=l[a+952>>2],l[a+444>>2]=i,i=l[a+892>>2],l[a+432>>2]=l[a+888>>2],l[a+436>>2]=i,$b(a+928|0,a+440|0,a+432|0),i=l[a+932>>2],l[a+952>>2]=l[a+928>>2],l[a+956>>2]=i,i=l[a+908>>2],l[a+880>>2]=0,l[a+884>>2]=0,f=l[a+884>>2],l[a+424>>2]=l[a+880>>2],l[a+428>>2]=f,f=l[a+916>>2],l[a+416>>2]=l[a+912>>2],l[a+420>>2]=f,Qk(a+888|0,i,a+424|0,a+416|0),i=l[a+956>>2],l[a+408>>2]=l[a+952>>2],l[a+412>>2]=i,i=l[a+892>>2],l[a+400>>2]=l[a+888>>2],l[a+404>>2]=i,$b(a+928|0,a+408|0,a+400|0),i=l[a+932>>2],l[a+952>>2]=l[a+928>>2],l[a+956>>2]=i,l[a+896>>2]=17116,ln(a+872|0,24),l[a+856>>2]=0,l[a+860>>2]=0,i=l[a+860>>2],l[a+392>>2]=l[a+856>>2],l[a+396>>2]=i,Nk(a+864|0,17476,a+392|0),i=l[a+876>>2],l[a+384>>2]=l[a+872>>2],l[a+388>>2]=i,i=l[a+868>>2],l[a+376>>2]=l[a+864>>2],l[a+380>>2]=i,$b(a+928|0,a+384|0,a+376|0),ln(a+848|0,25),i=l[a+932>>2],l[a+368>>2]=l[a+928>>2],l[a+372>>2]=i,i=l[a+852>>2],l[a+360>>2]=l[a+848>>2],l[a+364>>2]=i,$b(e,a+368|0,a+360|0),e=l[a+896>>2],Wf(a+824|0,17476),i=l[a+828>>2],l[a+352>>2]=l[a+824>>2],l[a+356>>2]=i,i=l[a+904>>2],l[a+344>>2]=l[a+900>>2],l[a+348>>2]=i,Qk(a+832|0,e,a+352|0,a+344|0),e=l[a+956>>2],l[a+336>>2]=l[a+952>>2],l[a+340>>2]=e,e=l[a+836>>2],l[a+328>>2]=l[a+832>>2],l[a+332>>2]=e,$b(a+840|0,a+336|0,a+328|0),e=l[a+844>>2],l[a+952>>2]=l[a+840>>2],l[a+956>>2]=e,Hn(a+896|0,17774),Hn(a+840|0,18120),ln(a+760|0,1),l[a+744>>2]=0,l[a+748>>2]=0,e=l[a+748>>2],l[a+320>>2]=l[a+744>>2],l[a+324>>2]=e,Nk(a+752|0,18494,a+320|0),e=l[a+764>>2],l[a+312>>2]=l[a+760>>2],l[a+316>>2]=e,e=l[a+756>>2],l[a+304>>2]=l[a+752>>2],l[a+308>>2]=e,$b(a+768|0,a+312|0,a+304|0),e=l[a+772>>2],l[a+296>>2]=l[a+768>>2],l[a+300>>2]=e,e=l[a+844>>2],l[a+288>>2]=l[a+840>>2],l[a+292>>2]=e,$b(a+776|0,a+296|0,a+288|0),l[a+728>>2]=0,l[a+732>>2]=0,e=l[a+732>>2],l[a+280>>2]=l[a+728>>2],l[a+284>>2]=e,Nk(a+736|0,18861,a+280|0),e=l[a+780>>2],l[a+272>>2]=l[a+776>>2],l[a+276>>2]=e,e=l[a+740>>2],l[a+264>>2]=l[a+736>>2],l[a+268>>2]=e,$b(a+784|0,a+272|0,a+264|0),ln(a+720|0,1),e=l[a+788>>2],l[a+256>>2]=l[a+784>>2],l[a+260>>2]=e,e=l[a+724>>2],l[a+248>>2]=l[a+720>>2],l[a+252>>2]=e,$b(a+792|0,a+256|0,a+248|0),e=l[a+844>>2],l[a+240>>2]=l[a+840>>2],l[a+244>>2]=e,Gk(a+712|0,6,a+240|0),e=l[a+796>>2],l[a+232>>2]=l[a+792>>2],l[a+236>>2]=e,e=l[a+716>>2],l[a+224>>2]=l[a+712>>2],l[a+228>>2]=e,$b(a+800|0,a+232|0,a+224|0),e=l[a+804>>2],l[a+216>>2]=l[a+800>>2],l[a+220>>2]=e,e=l[a+900>>2],l[a+208>>2]=l[a+896>>2],l[a+212>>2]=e,$b(a+808|0,a+216|0,a+208|0),e=l[a+900>>2],l[a+200>>2]=l[a+896>>2],l[a+204>>2]=e,Gk(a+704|0,21,a+200|0),e=l[a+812>>2],l[a+192>>2]=l[a+808>>2],l[a+196>>2]=e,e=l[a+708>>2],l[a+184>>2]=l[a+704>>2],l[a+188>>2]=e,$b(a+816|0,a+192|0,a+184|0),Wf(a+672|0,18494),Wf(a+664|0,18861),e=l[a+676>>2],l[a+176>>2]=l[a+672>>2],l[a+180>>2]=e,e=l[a+668>>2],l[a+168>>2]=l[a+664>>2],l[a+172>>2]=e,$b(a+680|0,a+176|0,a+168|0),e=l[a+684>>2],l[a+160>>2]=l[a+680>>2],l[a+164>>2]=e,e=l[a+820>>2],l[a+152>>2]=l[a+816>>2],l[a+156>>2]=e,Qk(a+688|0,19243,a+160|0,a+152|0),e=l[a+956>>2],l[a+144>>2]=l[a+952>>2],l[a+148>>2]=e,e=l[a+692>>2],l[a+136>>2]=l[a+688>>2],l[a+140>>2]=e,$b(a+696|0,a+144|0,a+136|0),e=l[a+700>>2],i=l[a+696>>2],l[a+952>>2]=i,l[a+956>>2]=e,l[a+128>>2]=i,l[a+132>>2]=e,e=l[a+660>>2],l[a+120>>2]=l[a+656>>2],l[a+124>>2]=e,Cn(a+896|0,a+128|0,a+120|0,128),e=l[a+900>>2],i=l[a+896>>2],l[a+648>>2]=i,l[a+652>>2]=e,l[a+112>>2]=i,l[a+116>>2]=e,function(e,r){var a=0,i=0,f=0,k=0;for(ne=i=ne-32|0;a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=33,l[a>>2]=0,l[a+4>>2]=0,l[a+76>>2]=0,l[a+80>>2]=0,l[a+68>>2]=-1,l[a+72>>2]=-1,l[a+60>>2]=0,l[a+64>>2]=0,l[a+52>>2]=-1,l[a+56>>2]=-1,l[a+48>>2]=0,l[a+84>>2]=0,l[a+88>>2]=0,f=w(k,12)+36272|0,l[a+40>>2]=f,l[a+64>>2]=En(l[f+4>>2]),l[i+20>>2]=a,l[i+16>>2]=a,a=l[i+20>>2],l[i+8>>2]=l[i+16>>2],l[i+12>>2]=a,a=l[r+4>>2],l[i>>2]=l[r>>2],l[i+4>>2]=a,Cn(i+24|0,i+8|0,i,128),f=l[i+28>>2],a=l[i+24>>2],l[r>>2]=a,l[r+4>>2]=f,125!=(0|(k=k+1|0)););l[e>>2]=a,l[e+4>>2]=f,ne=i+32|0}(a+896|0,a+112|0),e=l[a+900>>2],i=l[a+896>>2],l[a+648>>2]=i,l[a+652>>2]=e,l[a+928>>2]=i,l[a+932>>2]=e,l[a+104>>2]=i,l[a+108>>2]=e,function(e,r){var a=0,i=0;if(ne=a=ne-144|0,mn(a+128|0),r=l[r>>2])for(;32==(-2&l[r+8>>2])&&(!(i=l[r+64>>2])|95==v[0|i]||(l[a+68>>2]=l[r+68>>2],l[a+64>>2]=i,Yb(a+96|0,19574,a- -64|0),i=l[10947],l[a+88>>2]=l[10946],l[a+92>>2]=i,i=l[10945],l[a+80>>2]=l[10944],l[a+84>>2]=i,i=l[a+140>>2],l[a+56>>2]=l[a+136>>2],l[a+60>>2]=i,i=l[a+108>>2],l[a+40>>2]=l[a+104>>2],l[a+44>>2]=i,i=l[a+92>>2],l[a+24>>2]=l[a+88>>2],l[a+28>>2]=i,i=l[a+132>>2],l[a+48>>2]=l[a+128>>2],l[a+52>>2]=i,i=l[a+100>>2],l[a+32>>2]=l[a+96>>2],l[a+36>>2]=i,i=l[a+84>>2],l[a+16>>2]=l[a+80>>2],l[a+20>>2]=i,en(a+112|0,a+48|0,a+32|0,a+16|0),i=l[a+124>>2],l[a+136>>2]=l[a+120>>2],l[a+140>>2]=i,i=l[a+116>>2],l[a+128>>2]=l[a+112>>2],l[a+132>>2]=i)),r=l[r>>2];);r=l[a+140>>2],l[a+8>>2]=l[a+136>>2],l[a+12>>2]=r,r=l[a+132>>2],l[a>>2]=l[a+128>>2],l[a+4>>2]=r,ye(e,a),ne=a+144|0}(a+976|0,a+104|0),jb(a+960|0,43002),e=l[a+988>>2],l[a+96>>2]=l[a+984>>2],l[a+100>>2]=e,e=l[a+972>>2],l[a+80>>2]=l[a+968>>2],l[a+84>>2]=e,e=l[a+980>>2],l[a+88>>2]=l[a+976>>2],l[a+92>>2]=e,e=l[a+964>>2],l[a+72>>2]=l[a+960>>2],l[a+76>>2]=e,Vb(a+896|0,a+88|0,a+72|0),l[a+944>>2]=0,l[a+948>>2]=0,i=l[a+908>>2],l[(e=a- -64|0)>>2]=l[a+904>>2],l[e+4>>2]=i,e=l[a+900>>2],l[a+56>>2]=l[a+896>>2],l[a+60>>2]=e,un(a+936|0,a+56|0),e=l[a+948>>2],l[a+48>>2]=l[a+944>>2],l[a+52>>2]=e,e=l[a+940>>2],l[a+40>>2]=l[a+936>>2],l[a+44>>2]=e,Qk(a+952|0,43016,a+48|0,a+40|0),e=l[a+932>>2],l[a+32>>2]=l[a+928>>2],l[a+36>>2]=e,e=l[a+956>>2],l[a+24>>2]=l[a+952>>2],l[a+28>>2]=e,$b(a+888|0,a+32|0,a+24|0),e=l[a+892>>2],i=l[a+888>>2],l[a+648>>2]=i,l[a+652>>2]=e,l[a+16>>2]=i,l[a+20>>2]=e,e=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=e,Cn(a+896|0,a+16|0,a+8|0,128),e=l[a+900>>2],l[r>>2]=l[a+896>>2],l[r+4>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,de(a+896|0,a),e=l[a+900>>2],l[r>>2]=l[a+896>>2],l[r+4>>2]=e,i=0}return ne=a+992|0,i}hb(e),P(14296,14830,1782,36250),M()}function Ke(e){var r,a=0;ne=r=ne-16|0,t(+e),a=0|b(1),b(0);e:if((a&=2147483647)>>>0<=1072243195){if(a>>>0<1044381696)break e;e=Aa(e,0,0)}else a>>>0>=2146435072?e-=e:(a=ok(e,r),e=Aa(m[r>>3],m[r+8>>3],1&a));return ne=r+16|0,e}function Ze(e,r,a,i){var f,k,b=0,n=0,s=0;if(ne=f=ne-176|0,k=Bb(64),l[k+12>>2]=0,l[k+44>>2]=0,b=Bb(24),l[k+32>>2]=b,s=l[e+4>>2],l[f+104>>2]=l[e>>2],l[f+108>>2]=s,s=function e(r){var a=0,i=0,f=0,k=0;if(ne=a=ne-16|0,r=l[r>>2])for(;f=l[r+8>>2],k=l[r+80>>2],l[a+8>>2]=l[r+76>>2],l[a+12>>2]=k,i=(e(a+8|0)+i|0)+(33==(0|f))|0,r=l[r>>2];);return ne=a+16|0,i}(f+104|0),l[b+4>>2]=0,n=gb(12,s),b=l[k+32>>2],l[b>>2]=n,rn(f+160|0),n=l[f+172>>2],l[b+16>>2]=l[f+168>>2],l[b+20>>2]=n,n=l[f+164>>2],l[b+8>>2]=l[f+160>>2],l[b+12>>2]=n,mn(f+144|0),jb(f+128|0,24989),b=l[10947],l[f+120>>2]=l[10946],l[f+124>>2]=b,b=l[10945],l[f+112>>2]=l[10944],l[f+116>>2]=b,b=l[f+156>>2],l[f+96>>2]=l[f+152>>2],l[f+100>>2]=b,b=l[f+140>>2],l[f+80>>2]=l[f+136>>2],l[f+84>>2]=b,n=l[f+124>>2],l[(b=f- -64|0)>>2]=l[f+120>>2],l[b+4>>2]=n,b=l[f+148>>2],l[f+88>>2]=l[f+144>>2],l[f+92>>2]=b,b=l[f+132>>2],l[f+72>>2]=l[f+128>>2],l[f+76>>2]=b,b=l[f+116>>2],l[f+56>>2]=l[f+112>>2],l[f+60>>2]=b,en(f+160|0,f+88|0,f+72|0,f+56|0),b=l[f+172>>2],l[k+56>>2]=l[f+168>>2],l[k+60>>2]=b,b=l[f+164>>2],l[k+48>>2]=l[f+160>>2],l[k+52>>2]=b,l[f+160>>2]=0,l[f+164>>2]=0,l[f+168>>2]=0,l[f+172>>2]=0,b=l[e+4>>2],l[f+48>>2]=l[e>>2],l[f+52>>2]=b,e=l[i+12>>2],l[f+40>>2]=l[i+8>>2],l[f+44>>2]=e,e=l[i+4>>2],l[f+32>>2]=l[i>>2],l[f+36>>2]=e,e=function e(r,a,i,f,k){var b=0,n=0,s=0,t=0,c=0,o=0,h=0,m=0,p=0,g=0,y=0;ne=b=ne-704|0,l[r+40>>2]=0,n=l[f+12>>2],l[b+456>>2]=l[f+8>>2],l[b+460>>2]=n,n=l[f+4>>2],l[b+448>>2]=l[f>>2],l[b+452>>2]=n,p=function e(r,a,i){var f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0,d=0,h=0,m=0,p=0,g=0,y=0;ne=f=ne-480|0;e:{r:{if(b=l[r>>2])for(;;){(k=l[b>>2])?(l[k+4>>2]=0,l[r>>2]=k,l[b>>2]=0):(l[r>>2]=0,l[r+4>>2]=0);a:{i:{k=l[b+8>>2];f:if(!(l[b+60>>2]|!(4&v[9+(k>>>0<41?w(k,24)+34336|0:35320)|0]))){k:{b:{if(6==l[b+8>>2]){if(!fn(l[b+64>>2],30989)){if(l[b+8>>2]=0,n=v[(k=i)+12|0]|v[k+13|0]<<8|v[k+14|0]<<16|v[k+15|0]<<24,t=v[k+8|0]|v[k+9|0]<<8|v[k+10|0]<<16|v[k+11|0]<<24,l[f+392>>2]=t,l[f+396>>2]=n,s=v[0|k]|v[k+1|0]<<8|v[k+2|0]<<16|v[k+3|0]<<24,k=v[k+4|0]|v[k+5|0]<<8|v[k+6|0]<<16|v[k+7|0]<<24,l[f+160>>2]=t,l[f+164>>2]=n,l[f+384>>2]=s,l[f+388>>2]=k,l[f+152>>2]=s,l[f+156>>2]=k,15&v[f+152|0]){k=l[f+396>>2],l[f+144>>2]=l[f+392>>2],l[f+148>>2]=k,k=l[f+388>>2],l[f+136>>2]=l[f+384>>2],l[f+140>>2]=k,Nb(f+448|0,f+136|0);break k}if(mn(f+464|0),k=l[82973]){if(o=0,!(k=l[k>>2]))break b;for(;(n=hn(k,61))?(Uk(f+416|0,k,n-k|0),jb(f+400|0,n+1|0),k=l[f+476>>2],l[f+128>>2]=l[f+472>>2],l[f+132>>2]=k,k=l[f+428>>2],l[f+112>>2]=l[f+424>>2],l[f+116>>2]=k,k=l[f+412>>2],l[f+96>>2]=l[f+408>>2],l[f+100>>2]=k,k=l[f+468>>2],l[f+120>>2]=l[f+464>>2],l[f+124>>2]=k,k=l[f+420>>2],l[f+104>>2]=l[f+416>>2],l[f+108>>2]=k,k=l[f+404>>2],l[f+88>>2]=l[f+400>>2],l[f+92>>2]=k,en(f+448|0,f+120|0,f+104|0,f+88|0)):(jb(f+432|0,k),k=l[f+476>>2],l[f+80>>2]=l[f+472>>2],l[f+84>>2]=k,n=l[f+444>>2],l[(k=f- -64|0)>>2]=l[f+440>>2],l[k+4>>2]=n,k=l[f+468>>2],l[f+72>>2]=l[f+464>>2],l[f+76>>2]=k,k=l[f+436>>2],l[f+56>>2]=l[f+432>>2],l[f+60>>2]=k,xe(f+448|0,f+72|0,f+56|0)),k=l[f+460>>2],l[f+472>>2]=l[f+456>>2],l[f+476>>2]=k,k=l[f+452>>2],l[f+464>>2]=l[f+448>>2],l[f+468>>2]=k,o=o+1|0,k=l[l[82973]+(o<<2)>>2];);break b}k=l[f+476>>2],l[f+456>>2]=l[f+472>>2],l[f+460>>2]=k,k=l[f+468>>2],l[f+448>>2]=l[f+464>>2],l[f+452>>2]=k;break k}if(k=l[a+12>>2],l[f+296>>2]=l[a+8>>2],l[f+300>>2]=k,k=l[a+4>>2],l[f+288>>2]=l[a>>2],l[f+292>>2]=k,Nb(f+368|0,f+288|0),jb(f+352|0,l[b+64>>2]),k=l[f+380>>2],l[f+280>>2]=l[f+376>>2],l[f+284>>2]=k,k=l[f+364>>2],l[f+264>>2]=l[f+360>>2],l[f+268>>2]=k,k=l[f+372>>2],l[f+272>>2]=l[f+368>>2],l[f+276>>2]=k,k=l[f+356>>2],l[f+256>>2]=l[f+352>>2],l[f+260>>2]=k,kk(f+272|0,f+256|0)){l[b+8>>2]=0,k=l[a+12>>2],l[f+248>>2]=l[a+8>>2],l[f+252>>2]=k,k=l[a+4>>2],l[f+240>>2]=l[a>>2],l[f+244>>2]=k,Nb(f+336|0,f+240|0),jb(f+320|0,l[b+64>>2]),k=l[f+348>>2],l[f+232>>2]=l[f+344>>2],l[f+236>>2]=k,k=l[f+332>>2],l[f+216>>2]=l[f+328>>2],l[f+220>>2]=k,k=l[f+340>>2],l[f+224>>2]=l[f+336>>2],l[f+228>>2]=k,k=l[f+324>>2],l[f+208>>2]=l[f+320>>2],l[f+212>>2]=k,dn(f+464|0,f+224|0,f+208|0),k=l[f+476>>2],l[b+32>>2]=l[f+472>>2],l[b+36>>2]=k,k=l[f+468>>2],l[b+24>>2]=l[f+464>>2],l[b+28>>2]=k;break f}if(l[b+60>>2])break f}n:{s:{if(n=l[b+64>>2],42!=v[0|n]|(v[n+1|0]+-49&255)>>>0>2|v[n+2|0])if(t=l[b+48>>2],6!=l[b+8>>2]){if(s=0,k=v[b+84|0]|v[b+85|0]<<8|v[b+86|0]<<16|v[b+87|0]<<24)for(;;){if(30!=(0|(h=l[k+8>>2]))&&h+-32>>>0>=2)break s;if(s=s+1|0,!(k=l[k>>2]))break}k=l[b+56>>2],l[f+200>>2]=l[b+52>>2],l[f+204>>2]=k,l[f+192>>2]=n,l[f+196>>2]=s,_n(t,f+200|0,33257,f+192|0)}else k=l[b+56>>2],l[f+184>>2]=l[b+52>>2],l[f+188>>2]=k,l[f+176>>2]=n,_n(t,f+184|0,31948,f+176|0);else k=l[b+48>>2],n=l[b+56>>2],l[f+168>>2]=l[b+52>>2],l[f+172>>2]=n,_n(k,f+168|0,31769,0);if(p=p+1|0,!d)break i;if(l[d>>2])break r;if(l[b+4>>2])break n;l[d>>2]=b,l[b+4>>2]=d;break a}P(27444,14282,302,35726),M()}break e}k=l[f+476>>2],l[f+48>>2]=l[f+472>>2],l[f+52>>2]=k,k=l[f+468>>2],l[f+40>>2]=l[f+464>>2],l[f+44>>2]=k,Nb(f+448|0,f+40|0)}k=l[f+460>>2],l[b+32>>2]=l[f+456>>2],l[b+36>>2]=k,k=l[f+452>>2],l[b+24>>2]=l[f+448>>2],l[b+28>>2]=k,k=l[b+36>>2],l[i+8>>2]=l[b+32>>2],l[i+12>>2]=k,k=l[b+28>>2],l[i>>2]=l[b+24>>2],l[i+4>>2]=k}f:{k:{b:{if(27==l[b+8>>2]){n:{s:{t:{c:{o:{u:{l:{v:{d:{h:{m:if(c=l[b+60>>2],!((k=l[c+8>>2]+-30|0)>>>0>3)){w:switch(k-1|0){case 0:break m;case 2:break w;default:break h}if(k=l[b+84>>2])break d;o=0,t=0,n=0;break v}P(27444,14282,1163,35990),M()}if(g=0,n=0,t=0,s=0,h=0,o=0,!(k=l[b+84>>2]))break s;for(;;){if((c=l[k>>2])?(l[c+4>>2]=0,l[b+84>>2]=c,l[k>>2]=0):(l[b+84>>2]=0,l[b+88>>2]=0),c=l[k+8>>2],!(128&v[8+(c>>>0<41?w(c,24)+34336|0:35320)|0]))break l;l[f+468>>2]=k,l[f+464>>2]=k;h:{m:{w:{if((c=l[k+8>>2]+-31|0)>>>0<=1){if(c-1)break w;break m}P(33538,14282,1171,35990),M()}if(!s){s=k,h=k;break h}if(l[s>>2])break r;if(l[k+4>>2])break e;l[s>>2]=k,l[k+4>>2]=s,s=k;break h}if(n){if(l[n>>2])break r;if(l[k+4>>2])break e;l[n>>2]=k,l[k+4>>2]=n}else t=k;if(n=l[f+468>>2],l[f+8>>2]=l[f+464>>2],l[f+12>>2]=n,Gk(f+312|0,31,f+8|0),m=l[f+312>>2])if(c=l[f+316>>2],s){if(l[s>>2])break r;if(l[m+4>>2])break e;l[s>>2]=m,l[m+4>>2]=s,n=k,s=c}else n=k,s=c,h=m;else n=k}if(o=o+1|0,!(k=l[b+84>>2]))break}break t}for(o=0,t=0,n=0;;){if((s=l[k>>2])?(l[s+4>>2]=0,l[b+84>>2]=s,l[k>>2]=0):(l[b+84>>2]=0,l[b+88>>2]=0),32!=l[k+8>>2])break u;s=l[k+80>>2],l[f+464>>2]=l[k+76>>2],l[f+468>>2]=s,l[k+76>>2]=0,l[k+80>>2]=0,Wk(k),k=l[a+12>>2],l[f+32>>2]=l[a+8>>2],l[f+36>>2]=k,k=l[a+4>>2],l[f+24>>2]=l[a>>2],l[f+28>>2]=k,h=e(f+464|0,f+24|0,i),k=l[f+468>>2],l[f+16>>2]=l[f+464>>2],l[f+20>>2]=k,yn(f+304|0,f+16|0),k=l[f+308>>2],s=l[f+304>>2];d:{if(t){if(!k)break d;if(l[k>>2])break r;if(l[t+4>>2])break e;l[k>>2]=t,l[t+4>>2]=k}else n=k;t=s}if(p=h+p|0,o=o+1|0,!(k=l[b+84>>2]))break}if(27!=l[b+8>>2])break o}if(l[b+8>>2]=26,u[b+16>>1]=o+1,k=l[b+60>>2],33!=l[k+8>>2])break c;g=l[l[k+40>>2]+8>>2]+-1|0;break n}P(33378,14282,1168,35990),M()}P(33597,14282,1196,35990),M()}P(33741,14282,1205,35990),M()}P(29950,14282,1208,35990),M()}c=l[b+60>>2]}if(l[b+84>>2]=h,u[b+16>>1]=o,l[b+88>>2]=s,32==l[c+8>>2]&&(k=l[c+84>>2]))for(;;){if(30!=l[k+8>>2])break b;if(g=g+1|0,!(k=l[k>>2]))break}}if((0|o)!=(0|g))break k;if(t)if(d){if(l[d>>2])break r;if(l[t+4>>2])break e;l[d>>2]=t,l[t+4>>2]=d}else y=t;else n=d}else n=d;if(!n)break i;if(l[n>>2])break r;if(l[b+4>>2])break f;l[n>>2]=b,l[b+4>>2]=n;break a}P(27219,14282,1187,35990),M()}P(36010,14282,1215,35990),M()}break e}y=b}if(d=b,!(b=l[r>>2]))break}return l[r>>2]=y,l[r+4>>2]=d,ne=f+480|0,p}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}(a,b+448|0,k);e:{r:{a:{i:{f:{k:{b:{if(1==l[8755]){s=Bb(104),l[s+76>>2]=0,l[s+80>>2]=0,l[s+68>>2]=-1,l[s+72>>2]=-1,l[s+60>>2]=0,l[s+64>>2]=0,l[s+96>>2]=-1,l[s+8>>2]=28,l[s>>2]=0,l[s+4>>2]=0,l[s+52>>2]=-1,l[s+56>>2]=-1,l[s+48>>2]=0,l[s+84>>2]=0,l[s+88>>2]=0,t=l[a+4>>2],n=l[a>>2];n:{if(s){if(!t){t=s;break n}if(l[t>>2])break b;l[t>>2]=s,l[s+4>>2]=t,t=s}s=n}if(l[a+4>>2]=t,l[a>>2]=s,rn(b+688|0),!s)break e;for(;;){if((0|s)!=(0|t)&&!l[s>>2])break k;if(n=l[s+8>>2],n=l[12+(n>>>0<41?w(n,24)+34336|0:35320)>>2],27==(0|(m=l[s+8>>2]))&&(c=l[s+84>>2]))for(;n=n+2|0,c=l[c>>2];);if(l[s+92>>2]=r,o=n+o|0,l[s+96>>2]=o,30==(-2&m))break f;if(!(4&v[8+(m>>>0<41?w(m,24)+34336|0:35320)|0])|l[s+60>>2]!=(0|s)||(u[s+16>>1]=h,jb(b+656|0,l[s+64>>2]),n=l[b+700>>2],l[b+440>>2]=l[b+696>>2],l[b+444>>2]=n,n=l[b+668>>2],l[b+424>>2]=l[b+664>>2],l[b+428>>2]=n,n=l[b+692>>2],l[b+432>>2]=l[b+688>>2],l[b+436>>2]=n,n=l[b+660>>2],l[b+416>>2]=l[b+656>>2],l[b+420>>2]=n,Vb(b+672|0,b+432|0,b+416|0),n=l[b+684>>2],l[b+696>>2]=l[b+680>>2],l[b+700>>2]=n,n=l[b+676>>2],l[b+688>>2]=l[b+672>>2],l[b+692>>2]=n,h=h+1|0),(n=l[s+8>>2]+-32|0)>>>0<=1){if(n-1){if(l[s+60>>2]!=(0|s))break i;n=l[r+40>>2],l[r+40>>2]=n+1}else{if(l[s+60>>2]!=(0|s))break a;c=l[r+32>>2],n=l[c+4>>2],l[c+4>>2]=n+1,jb(b+640|0,l[s+64>>2]),m=l[c+20>>2],l[b+408>>2]=l[c+16>>2],l[b+412>>2]=m,m=l[c+8>>2],g=l[c+12>>2],y=l[b+652>>2],l[b+392>>2]=l[b+648>>2],l[b+396>>2]=y,l[b+400>>2]=m,l[b+404>>2]=g,m=l[b+644>>2],l[b+384>>2]=l[b+640>>2],l[b+388>>2]=m,Vb(b+672|0,b+400|0,b+384|0),m=l[b+684>>2],l[c+16>>2]=l[b+680>>2],l[c+20>>2]=m,m=l[b+676>>2],l[c+8>>2]=l[b+672>>2],l[c+12>>2]=m,m=l[s+40>>2],g=l[m+4>>2],c=l[l[r+32>>2]>>2]+w(n,12)|0,l[c>>2]=l[m>>2],l[c+4>>2]=g,l[c+8>>2]=l[m+8>>2]}u[s+16>>1]=n}if(!(s=l[s>>2]))break}break r}P(1044,14282,141,35388),M()}P(25534,14282,237,35660),M()}P(28141,14282,1232,35769),M()}P(28411,14282,1243,35769),M()}P(28638,14282,1252,35769),M()}P(28638,14282,1256,35769),M()}(0|o)<=65535||(l[b+368>>2]=o,n=l[8844],l[b+376>>2]=l[8843],l[b+380>>2]=n,_n(i,b+376|0,28894,b+368|0),p=p+1|0)}l[r+4>>2]=o,jb(b+624|0,29246),n=l[r+60>>2],l[b+360>>2]=l[r+56>>2],l[b+364>>2]=n,n=l[r+48>>2],s=l[r+52>>2],t=l[b+636>>2],l[b+344>>2]=l[b+632>>2],l[b+348>>2]=t,t=l[b+700>>2],l[b+328>>2]=l[b+696>>2],l[b+332>>2]=t,l[b+352>>2]=n,l[b+356>>2]=s,n=l[b+628>>2],l[b+336>>2]=l[b+624>>2],l[b+340>>2]=n,n=l[b+692>>2],l[b+320>>2]=l[b+688>>2],l[b+324>>2]=n,en(b+672|0,b+352|0,b+336|0,b+320|0),n=l[b+684>>2],l[r+56>>2]=l[b+680>>2],l[r+60>>2]=n,n=l[b+676>>2],l[r+48>>2]=l[b+672>>2],l[r+52>>2]=n,n=l[r+40>>2];e:if(n){if(l[r+36>>2]=gb(4,n),!(o=l[a>>2]))break e;for(;;){if(32==l[o+8>>2]){s=Bb(64),l[l[r+36>>2]+(d[o+16>>1]<<2)>>2]=s,n=l[r+32>>2],l[s+44>>2]=r,l[s+32>>2]=n,l[s+12>>2]=0,mn(b+608|0),jb(b+592|0,24989),jb(b+576|0,l[o+64>>2]),n=l[b+620>>2],l[b+312>>2]=l[b+616>>2],l[b+316>>2]=n,n=l[b+604>>2],l[b+296>>2]=l[b+600>>2],l[b+300>>2]=n,n=l[b+588>>2],l[b+280>>2]=l[b+584>>2],l[b+284>>2]=n,n=l[b+612>>2],l[b+304>>2]=l[b+608>>2],l[b+308>>2]=n,n=l[b+596>>2],l[b+288>>2]=l[b+592>>2],l[b+292>>2]=n,n=l[b+580>>2],l[b+272>>2]=l[b+576>>2],l[b+276>>2]=n,en(b+672|0,b+304|0,b+288|0,b+272|0),n=l[b+684>>2],l[s+56>>2]=l[b+680>>2],l[s+60>>2]=n,n=l[b+676>>2],l[s+48>>2]=l[b+672>>2],l[s+52>>2]=n,rn(b+672|0);r:if(n=l[o+84>>2]){a:{for(;;){if(30==l[n+8>>2]){if(l[n+60>>2]!=(0|n))break a;if(t=l[s+12>>2],l[s+12>>2]=t+1,l[n+92>>2]=s,u[n+16>>1]=t,jb(b+544|0,l[n+64>>2]),t=l[b+684>>2],l[b+264>>2]=l[b+680>>2],l[b+268>>2]=t,t=l[b+556>>2],l[b+248>>2]=l[b+552>>2],l[b+252>>2]=t,t=l[b+676>>2],l[b+256>>2]=l[b+672>>2],l[b+260>>2]=t,t=l[b+548>>2],l[b+240>>2]=l[b+544>>2],l[b+244>>2]=t,Vb(b+560|0,b+256|0,b+240|0),t=l[b+572>>2],l[b+680>>2]=l[b+568>>2],l[b+684>>2]=t,t=l[b+564>>2],l[b+672>>2]=l[b+560>>2],l[b+676>>2]=t,n=l[n>>2])continue;break r}break}P(29419,14282,1284,35769),M()}P(29591,14282,1285,35769),M()}jb(b+528|0,29759),n=l[s+60>>2],l[b+232>>2]=l[s+56>>2],l[b+236>>2]=n,n=l[s+48>>2],t=l[s+52>>2],h=l[b+540>>2],l[b+216>>2]=l[b+536>>2],l[b+220>>2]=h,h=l[b+684>>2],l[b+200>>2]=l[b+680>>2],l[b+204>>2]=h,l[b+224>>2]=n,l[b+228>>2]=t,n=l[b+532>>2],l[b+208>>2]=l[b+528>>2],l[b+212>>2]=n,n=l[b+676>>2],l[b+192>>2]=l[b+672>>2],l[b+196>>2]=n,en(b+560|0,b+224|0,b+208|0,b+192|0),n=l[b+572>>2],l[s+56>>2]=l[b+568>>2],l[s+60>>2]=n,n=l[b+564>>2],l[s+48>>2]=l[b+560>>2],l[s+52>>2]=n,n=l[o+80>>2],l[b+184>>2]=l[o+76>>2],l[b+188>>2]=n,n=l[f+12>>2],l[b+176>>2]=l[f+8>>2],l[b+180>>2]=n,n=l[f+4>>2],l[b+168>>2]=l[f>>2],l[b+172>>2]=n,n=e(s,b+184|0,i,b+168|0,k),l[o+76>>2]=0,l[o+80>>2]=0,p=n+p|0}if(!(o=l[o>>2]))break}}else l[r+36>>2]=0;k=gb(2,l[r+4>>2]),l[r>>2]=k,rn(b+672|0),s=-1;e:{r:{a:{i:{f:{k:{b:{n:{if(!p){if(h=l[a>>2],n=0,!h)break n;for(f=0;;){i=l[h+8>>2],n=i>>>0<41?w(i,24)+34336|0:35320,c=l[n+12>>2];s:if(c){t=k+(f<<1)|0,o=l[h+8>>2],u[t>>1]=o,i=f+1|0;t:if(!((o=o+-26|0)>>>0>5)){c:switch(o-1|0){case 3:case 4:P(28411,14282,1308,35769),M();default:if(n=l[h+60>>2],33!=l[n+8>>2])break b;if(l[h+84>>2])break k;u[k+(i<<1)>>1]=d[h+16>>1],u[t+4>>1]=d[n+16>>1],f=f+3|0;break s;case 1:case 2:break t;case 0:}if(o=l[h+60>>2],m=l[o+8>>2],(n=m+-30|0)-1|0&&n>>>0<=2||(P(30306,14282,1316,35769),M()),u[k+(i<<1)>>1]=d[h+16>>1],!o)break e;if(!(i=l[o+92>>2]))break e;g=f+2|0,c=0,n=r;c:{for(;;){if((0|i)==(0|n))break c;if(c=c+1|0,!(n=l[n+44>>2]))break}break r}if(u[k+(g<<1)>>1]=c,u[t+6>>1]=d[o+16>>1]|(32==(0|m))<<12,f=f+4|0,!(i=l[h+84>>2]))break s;for(;;){if(31!=l[i+8>>2])break f;if(t=l[i+60>>2],32!=l[t+8>>2])break f;if(!t)break e;if(c=0,n=r,!(o=l[t+92>>2]))break e;c:{for(;;){if((0|n)==(0|o))break c;if(c=c+1|0,!(n=l[n+44>>2]))break}break r}if(u[(n=k+(f<<1)|0)>>1]=c,u[n+2>>1]=4096|d[t+16>>1],f=f+2|0,!(i=l[i>>2]))break}break s}t:{if(6==(6&(n=l[n+8>>2]))){if(n=l[b+684>>2],l[b+80>>2]=l[b+680>>2],l[b+84>>2]=n,n=l[b+676>>2],l[b+72>>2]=l[b+672>>2],l[b+76>>2]=n,Nb(b+512|0,b+72|0),c=l[b+524>>2],l[(n=b- -64|0)>>2]=l[b+520>>2],l[n+4>>2]=c,n=l[b+516>>2],l[b+56>>2]=l[b+512>>2],l[b+60>>2]=n,u[k+(i<<1)>>1]=Zb(b+56|0),i=l[h+36>>2],l[b+48>>2]=l[h+32>>2],l[b+52>>2]=i,i=l[h+28>>2],l[b+40>>2]=l[h+24>>2],l[b+44>>2]=i,Nb(b+496|0,b+40|0),i=l[b+684>>2],l[b+32>>2]=l[b+680>>2],l[b+36>>2]=i,i=l[b+508>>2],l[b+16>>2]=l[b+504>>2],l[b+20>>2]=i,i=l[b+676>>2],l[b+24>>2]=l[b+672>>2],l[b+28>>2]=i,i=l[b+500>>2],l[b+8>>2]=l[b+496>>2],l[b+12>>2]=i,Vb(b+560|0,b+24|0,b+8|0),i=l[b+572>>2],l[b+680>>2]=l[b+568>>2],l[b+684>>2]=i,i=l[b+564>>2],l[b+672>>2]=l[b+560>>2],l[b+676>>2]=i,!(i=l[h+60>>2]))break e;if(!(o=l[i+92>>2]))break e;for(m=f+2|0,c=0,n=r;;){if((0|n)==(0|o))break t;if(c=c+1|0,!(n=l[n+44>>2]))break}break r}if(2&n){n=l[b+684>>2],l[b+160>>2]=l[b+680>>2],l[b+164>>2]=n,n=l[b+676>>2],l[b+152>>2]=l[b+672>>2],l[b+156>>2]=n,Nb(b+480|0,b+152|0),n=l[b+492>>2],l[b+144>>2]=l[b+488>>2],l[b+148>>2]=n,n=l[b+484>>2],l[b+136>>2]=l[b+480>>2],l[b+140>>2]=n,u[k+(i<<1)>>1]=Zb(b+136|0),i=l[h+36>>2],l[b+128>>2]=l[h+32>>2],l[b+132>>2]=i,i=l[h+28>>2],l[b+120>>2]=l[h+24>>2],l[b+124>>2]=i,Nb(b+464|0,b+120|0),i=l[b+684>>2],l[b+112>>2]=l[b+680>>2],l[b+116>>2]=i,i=l[b+476>>2],l[b+96>>2]=l[b+472>>2],l[b+100>>2]=i,i=l[b+676>>2],l[b+104>>2]=l[b+672>>2],l[b+108>>2]=i,i=l[b+468>>2],l[b+88>>2]=l[b+464>>2],l[b+92>>2]=i,Vb(b+560|0,b+104|0,b+88|0),i=l[b+572>>2],l[b+680>>2]=l[b+568>>2],l[b+684>>2]=i,i=l[b+564>>2],l[b+672>>2]=l[b+560>>2],l[b+676>>2]=i,f=f+2|0;break s}if(4&n){if(!(o=l[h+60>>2]))break e;if(c=0,n=r,!(m=l[o+92>>2]))break e;c:{for(;;){if((0|n)==(0|m))break c;if(c=c+1|0,!(n=l[n+44>>2]))break}break r}u[k+(i<<1)>>1]=c,i=d[o+16>>1],u[t+4>>1]=i,s=(0|s)<(0|i)?i:s,f=f+3|0;break s}if(8&n){if(-1==(0|(n=l[l[h+20>>2]+96>>2])))break i;if((0|n)<=(0|i))break a;f=f+2|0,u[k+(i<<1)>>1]=n-f;break s}if(f=i,(0|c)<2)break s;P(30826,14282,1347,35769),M()}u[k+(m<<1)>>1]=c,u[t+6>>1]=d[i+16>>1],f=f+4|0}if(!(h=l[h>>2]))break}}n=l[a>>2]}if(a=l[b+676>>2],l[r+16>>2]=l[b+672>>2],l[r+20>>2]=a,a=l[b+684>>2],l[r+24>>2]=l[b+680>>2],l[r+28>>2]=a,l[r+8>>2]=s+2,n)for(;r=l[n>>2],Wk(n),n=r;);return ne=b+704|0,p}P(29950,14282,1310,35769),M()}P(30077,14282,1311,35769),M()}P(35777,14282,1322,35769),M()}P(30524,14282,1342,35769),M()}P(30670,14282,1343,35769),M()}P(33860,14282,1096,36236),M()}P(36126,14282,1091,36236),M()}(k,f+48|0,a,f+32|0,f+160|0),a=l[i+12>>2],l[f+24>>2]=l[i+8>>2],l[f+28>>2]=a,a=l[i+4>>2],l[f+16>>2]=l[i>>2],l[f+20>>2]=a,zb(f+16|0),a=l[f+172>>2],l[f+8>>2]=l[f+168>>2],l[f+12>>2]=a,a=l[f+164>>2],l[f>>2]=l[f+160>>2],l[f+4>>2]=a,zb(f),l[l[k+32>>2]+4>>2]==(0|s))return(0|e)>=1?(Af(k),l[r>>2]=0):l[r>>2]=k,ne=f+176|0,e;P(25193,14282,1370,35646),M()}function $e(e,r,a){var i=0,f=0;e:{r:{a:if(!(3&(e^r))){i=0!=(0|a);i:if(!(!a|!(3&r)))for(;;){if(i=v[0|r],k[0|e]=i,!i)break e;if(e=e+1|0,r=r+1|0,i=0!=(0|(a=a+-1|0)),!a)break i;if(!(3&r))break}if(!i)break r;if(!v[0|r])break e;if(!(a>>>0<4)){for(i=3&a;;){if((-1^(f=l[r>>2]))&f+-16843009&-2139062144)break a;if(l[e>>2]=f,e=e+4|0,r=r+4|0,!((a=a+-4|0)>>>0>3))break}a=i}}if(a)for(;;){if(i=v[0|r],k[0|e]=i,!i)break e;if(e=e+1|0,r=r+1|0,!(a=a+-1|0))break}}a=0}wn(e,0,a)}function Qe(e,r){var a=0,i=0;e:{if(i=255&r){if(3&e)for(;;){if(!(a=v[0|e])|(0|a)==(255&r))break e;if(!(3&(e=e+1|0)))break}a=l[e>>2];r:if(!((-1^a)&a+-16843009&-2139062144))for(i=w(i,16843009);;){if((-1^(a^=i))&a+-16843009&-2139062144)break r;if(a=l[e+4>>2],e=e+4|0,a+-16843009&(-1^a)&-2139062144)break}for(;(i=v[0|(a=e)])&&(e=a+1|0,(0|i)!=(255&r)););return a}return on(e)+e|0}return e}function er(e,r){var a,i=0,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0;ne=a=ne-1056|0,l[(f=a+1048|0)>>2]=0,l[f+4>>2]=0,l[(f=a+1040|0)>>2]=0,l[f+4>>2]=0,l[a+1032>>2]=0,l[a+1036>>2]=0,l[a+1024>>2]=0,l[a+1028>>2]=0;e:{r:{a:{i:{if(i=v[0|r]){for(;;){if(!v[e+b|0])break r;if(b=b+1|0,l[((f=255&i)<<2)+a>>2]=b,l[(f=(a+1024|0)+(f>>>3&28)|0)>>2]=l[f>>2]|1<<(31&i),!(i=v[r+b|0]))break}if(f=1,t=-1,b>>>0>1)break i}else t=-1,f=1;n=-1,k=1;break a}for(c=1,i=1;;){n=v[(i+t|0)+r|0],s=v[r+f|0];i:if((0|n)!=(0|s))n>>>0>s>>>0?(c=f-t|0,k=f,i=1):(t=k,k=k+1|0,c=1,i=1);else{if((0|i)==(0|c)){k=k+c|0,i=1;break i}i=i+1|0}if(!((f=i+k|0)>>>0<b>>>0))break}if(k=1,n=-1,b>>>0<=1)f=c;else{for(f=0,s=1,i=1;;){u=v[(i+n|0)+r|0],o=v[r+k|0];i:if((0|u)!=(0|o))u>>>0<o>>>0?(s=k-n|0,f=k,i=1):(n=f,f=f+1|0,s=1,i=1);else{if((0|i)==(0|s)){f=f+s|0,i=1;break i}i=i+1|0}if(!((k=f+i|0)>>>0<b>>>0))break}f=c,k=s}}for(i=f,pn(r,(s=(f=n+1>>>0>t+1>>>0)?k:i)+r|0,u=(o=f?n:t)+1|0)?(d=b-(s=(o>>>0>(f=(-1^o)+b|0)>>>0?o:f)+1|0)|0,c=0):c=d=b-s|0,m=b+-1|0,h=63|b,n=0,f=e;;){if(!(e-f>>>0>=b>>>0))if(i=rf(e,0,h)){if(e=i,i-f>>>0<b>>>0)break r}else e=e+h|0;k=v[f+m|0],i=b;a:{if(l[(a+1024|0)+(k>>>3&28)>>2]>>>(31&k)&1)if(i=b-l[(k<<2)+a>>2]|0)i=c&&n&&i>>>0<s>>>0?d:i;else{i:{if(t=v[(k=(i=u)>>>0>n>>>0?i:n)+r|0])for(;;){if(v[f+k|0]!=(255&t))break i;if(!(t=v[(k=k+1|0)+r|0]))break}for(;;){if(i>>>0<=n>>>0)break e;if(v[(i=i+-1|0)+r|0]!=v[f+i|0])break}i=s,n=c;break a}i=k-o|0}n=0}f=f+i|0}}f=0}return ne=a+1056|0,f}function rr(e,r,a){var i,f=0,k=0,b=0,n=0;ne=i=ne-176|0,l[i+88>>2]=0,l[i+92>>2]=0,l[i+80>>2]=0,l[i+84>>2]=0,l[i+160>>2]=0,l[i+164>>2]=0,l[i+168>>2]=0,l[i+172>>2]=0,Qk(i+136|0,21586,i+88|0,i+80|0);e:{r:{a:{if(4&v[34489]){if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=6,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,l[f+64>>2]=En(r),l[i+164>>2]=f,l[i+160>>2]=f,l[i+72>>2]=0,l[i+76>>2]=0,l[i+168>>2]=0,l[i+172>>2]=0,f=l[i+164>>2],l[i+64>>2]=l[i+160>>2],l[i+68>>2]=f,Qk(i+128|0,21586,i+72|0,i- -64|0),b=l[i+140>>2],f=l[i+136>>2],n=l[i+128>>2])if(k=l[i+132>>2],b){if(l[b>>2])break a;if(l[n+4>>2])break r;l[b>>2]=n,l[n+4>>2]=b}else f=n;else k=b;if(4&v[34993]){if(b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=27,l[b>>2]=0,l[b+4>>2]=0,l[b+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+64>>2]=En(24207),l[i+148>>2]=b,l[i+144>>2]=b,l[b+84>>2]=f,l[b+88>>2]=k,1!=l[8815])break e;if(b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=38,l[(f=b)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,1!=l[8617])break e;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=5,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,1!=l[8695])break e;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=18,l[k>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,l[i+104>>2]=k,l[i+108>>2]=k,4&v[34993]){if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=27,l[k>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+64>>2]=En(24818),l[i+100>>2]=k,l[i+96>>2]=k,l[k+84>>2]=0,l[k+88>>2]=0,k=l[i+148>>2],l[i+56>>2]=l[i+144>>2],l[i+60>>2]=k,k=l[i+108>>2],l[i+48>>2]=l[i+104>>2],l[i+52>>2]=k,k=l[i+100>>2],l[i+40>>2]=l[i+96>>2],l[i+44>>2]=k,zf(i+112|0,i+56|0,i+48|0,i+40|0),k=l[a+4>>2],l[i+32>>2]=l[a>>2],l[i+36>>2]=k,a=l[i+116>>2],l[i+24>>2]=l[i+112>>2],l[i+28>>2]=a,Pf(i+120|0,i+32|0,i+24|0),k=l[i+120>>2])if(a=l[i+124>>2],f){if(l[f>>2])break a;if(l[k+4>>2])break r;l[f>>2]=k,l[k+4>>2]=f}else f=k;else a=f;if(l[i+156>>2]=a,l[i+152>>2]=f,1!=l[8593])break e;if(a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=1,l[(f=a)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,b)if(a){if(l[b+4>>2])break r;l[a>>2]=b,l[b+4>>2]=a,f=b,b=a}else f=b;else f=b=a;if(4&v[34537]){if(a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=8,l[a>>2]=0,l[a+4>>2]=0,l[a+76>>2]=0,l[a+80>>2]=0,l[a+68>>2]=-1,l[a+72>>2]=-1,l[a+60>>2]=0,l[a+64>>2]=0,l[a+52>>2]=-1,l[a+56>>2]=-1,l[a+48>>2]=0,l[a+84>>2]=0,l[a+88>>2]=0,l[a+64>>2]=En(r),l[i+164>>2]=a,l[i+160>>2]=a,r=l[i+156>>2],l[i+8>>2]=l[i+152>>2],l[i+12>>2]=r,r=l[i+164>>2],l[i+16>>2]=l[i+160>>2],l[i+20>>2]=r,Cn(i+168|0,i+16|0,i+8|0,2052),n=l[i+172>>2],k=l[i+168>>2],l[(a=e)>>2]=b,l[a+4>>2]=f,k){if(f){if(l[f>>2])break a;if(l[k+4>>2])break r;l[f>>2]=k,l[k+4>>2]=f}else l[e>>2]=k;l[e+4>>2]=n}return void(ne=i+176|0)}}}}P(17730,14282,211,35526),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}P(1044,14282,141,35388),M()}function ar(e){var r,a=0,i=0,f=0;if(f=14505,l[24+(a=r=ne-32|0)>>2]=0,l[a+28>>2]=0,l[a+16>>2]=0,l[a+20>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,l[a>>2]=0,l[a+4>>2]=0,!(i=v[14505]))return 0;if(!v[14506]){for(f=e;f=(a=f)+1|0,v[0|a]==(0|i););return a-e|0}for(;l[(a=(i>>>3&28)+r|0)>>2]=l[a>>2]|1<<(31&i),i=v[f+1|0],f=f+1|0,i;);i=v[0|(a=e)];e:if(i)for(f=e;;){if(!(l[(i>>>3&28)+r>>2]>>>(31&i)&1)){a=f;break e}if(i=v[f+1|0],f=a=f+1|0,!i)break}return a-e|0}function ir(e,r,a,i){var f=0,k=0;if(!i)return e;e:{if(!(r>>>0<i>>>0)){if(!(f=rf(e,v[0|a],r))|1==(0|i))break e;if(!((e=(e-f|0)+r|0)>>>0<i>>>0)){if((r=i+-2|0)>>>0<=2){r:switch(r-1|0){default:return function(e,r,a){var i=0;if(i=r+-1|0)for(r=e+1|0,a=v[a+1|0]|v[0|a]<<8,e=v[e+1|0]|v[0|e]<<8;;){if((0|(e&=65535))==(0|a))return r+-1|0;if(e=v[r+1|0]|e<<8,r=r+1|0,!(i=i+-1|0))break}return 0}(f,e,a);case 0:return function(e,r,a){var i=0;if(r=r+-2|0)for(i=v[a+1|0]<<16|v[0|a]<<24|v[a+2|0]<<8,a=e+2|0,e=v[e+1|0]<<16|v[0|e]<<24|v[e+2|0]<<8;;){if((0|e)==(0|i))return a+-2|0;if(e=(v[a+1|0]|e)<<8,a=a+1|0,!(r=r+-1|0))break}return 0}(f,e,a);case 1:}return function(e,r,a){var i=0;if(i=r+-3|0)for(a=(r=v[0|a]|v[a+1|0]<<8|v[a+2|0]<<16|v[a+3|0]<<24)<<24|r<<8&16711680|r>>>8&65280|r>>>24,r=e+3|0,e=(e=v[0|e]|v[e+1|0]<<8|v[e+2|0]<<16|v[e+3|0]<<24)<<24|e<<8&16711680|e>>>8&65280|e>>>24;;){if((0|e)==(0|a))return r+-3|0;if(e=v[r+1|0]|e<<8,r=r+1|0,!(i=i+-1|0))break}return 0}(f,e,a)}k=function(e,r,a,i){var f,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0;ne=f=ne-1056|0,l[(k=f+1048|0)>>2]=0,l[k+4>>2]=0,l[(k=f+1040|0)>>2]=0,l[k+4>>2]=0,l[f+1032>>2]=0,l[f+1036>>2]=0,l[f+1024>>2]=0,l[f+1028>>2]=0;r:{a:{if(i){for(;k=v[a+b|0],b=b+1|0,l[(k<<2)+f>>2]=b,l[(n=(f+1024|0)+(k>>>3&28)|0)>>2]=l[n>>2]|1<<(31&k),(0|i)!=(0|b););if(k=1,c=-1,i>>>0>1)break a}else c=-1,k=1;s=-1,n=1;break r}for(n=0,t=1,b=1;;){s=v[(b+c|0)+a|0],o=v[a+k|0];a:if((0|s)!=(0|o))s>>>0>o>>>0?(t=k-c|0,n=k,b=1):(c=n,n=n+1|0,t=1,b=1);else{if((0|b)==(0|t)){n=n+t|0,b=1;break a}b=b+1|0}if(!((k=b+n|0)>>>0<i>>>0))break}if(n=1,s=-1,i>>>0<=1)k=t;else{for(k=0,o=1,b=1;;){u=v[(b+s|0)+a|0],d=v[a+n|0];a:if((0|u)!=(0|d))u>>>0<d>>>0?(o=n-s|0,k=n,b=1):(s=k,k=k+1|0,o=1,b=1);else{if((0|b)==(0|o)){k=k+o|0,b=1;break a}b=b+1|0}if(!((n=b+k|0)>>>0<i>>>0))break}k=t,n=o}}b=k,pn(a,(t=(k=s+1>>>0>c+1>>>0)?n:b)+a|0,o=(u=k?s:c)+1|0)?(t=(u>>>0>(k=(-1^u)+i|0)>>>0?u:k)+1|0,n=0):n=i-t|0,ne=f+1056|0,k=0;r:if(!(r-e>>>0<i>>>0)){for(d=i-t|0,h=i+-1|0,b=0;;){s=b,c=i,k=v[e+h|0],b=0;a:if(l[(f+1024|0)+(k>>>3&28)>>2]>>>(31&k)&1){if(k=i-l[(k<<2)+f>>2]|0)c=n&&s&&k>>>0<t>>>0?d:k;else{i:{if((k=(b=o)>>>0>s>>>0?b:s)>>>0<i>>>0)for(;;){if(v[a+k|0]!=v[e+k|0])break i;if(!((k=k+1|0)>>>0<i>>>0))break}for(;;){if(k=e,b>>>0<=s>>>0)break r;if(v[(b=b+-1|0)+a|0]!=v[e+b|0])break}c=t,b=n;break a}c=k-u|0}b=0}if(!(r-(e=e+c|0)>>>0>=i>>>0))break}k=0}return k}(f,e+f|0,a,i)}}return k}return f}function fr(e){for(var r,a=0,i=0,f=0,b=0,n=0;e=(a=e)+1|0,32==(0|(i=k[0|a]))|i+-9>>>0<5;);i=k[0|a];e:if(!((r=i+-43|0)>>>0>2)){r:switch(r-1|0){case 1:b=1;break;case 0:break e}i=k[0|e],a=e,n=b}if(i+-48>>>0<10)for(;f=48+(w(f,10)-k[0|a]|0)|0,e=k[a+1|0],a=a+1|0,e+-48>>>0<10;);return n?f:0-f|0}function kr(e,r,a,i,f){var k,c,o,u=0,v=0,d=0,h=0,m=0,w=0,p=0,g=0;if(ne=k=ne-48|0,t(+e),c=0|b(1),o=0|b(0),2146435072==(0|(u=2147483647&c))&o>>>0<=0|u>>>0<2146435072&&function(e,r,a,i){var f,k=0;f=65535&i;e:{if(32767!=(0|(i=i>>>16&32767))){if(k=4,i)break e;return e|a|r|f?3:2}k=!(e|a|r|f)}return k}(r,a,i,f))if(vk(k+32|0,e),xa(m=l[k+32>>2],w=l[k+36>>2],p=l[k+40>>2],g=l[k+44>>2],r,a,i,f)){v=1,u=(u=f>>>31)?-2147483648:0;e:if(0!=e)if(t(+e),d=0|b(1),h=0|b(0),(0|xa(m,w,p,g,r,a,i,f))<=-1){if(u=d+-1|0,(r=h+-1|0)>>>0<4294967295&&(u=u+1|0),v=r,(0|c)<-1||(0|c)<=-1&&!(o>>>0>4294967295))break e;u=d,(r=h+1|0)>>>0<1&&(u=u+1|0),v=r}else u=d,(r=h+1|0)>>>0<1&&(u=u+1|0),v=r,(0|c)<-1||(0|c)<=-1&&!(o>>>0>4294967295)||(u=d+-1|0,(r=h+-1|0)>>>0<4294967295&&(u=u+1|0),v=r);n(0,0|v),n(1,0|u),e=+s()}else e=uk(r,a,i,f);else vk(k+16|0,e),function(e,r,a,i,f,k,b,n,s){var t,c=0,o=0,u=0,v=0,d=0,h=0,m=0,w=0,p=0,g=0;ne=t=ne-112|0,u=n,v=2147483647&s,o=a+-1|0,(c=r+-1|0)>>>0<4294967295&&(o=o+1|0),d=c,w=-1==(0|c)&-1==(0|o),c=h=2147483647&f,m=i,(d=i+(o=(0|a)==(0|o)&d>>>0<r>>>0|o>>>0<a>>>0)|0)>>>0<o>>>0&&(c=c+1|0),c=c+-1|0;e:{if((-1==(0|(o=d+-1|0))&2147418111==(0|(c=o>>>0<4294967295?c+1|0:c))?w:2147418111==(0|c)&o>>>0>4294967295|c>>>0>2147418111)||(o=b+-1|0,(c=k+-1|0)>>>0<4294967295&&(o=o+1|0),d=c,w=-1!=(0|c)|-1!=(0|o),c=v,(d=(o=(0|b)==(0|o)&d>>>0<k>>>0|o>>>0<b>>>0)+u|0)>>>0<o>>>0&&(c=c+1|0),c=c+-1|0,!(-1==(0|(o=d+-1|0))&2147418111==(0|(c=o>>>0<4294967295?c+1|0:c))?w:2147418111==(0|c)&o>>>0<4294967295|c>>>0<2147418111))){if(!(!m&2147418112==(0|h)?!(r|a):2147418112==(0|h)&m>>>0<0|h>>>0<2147418112)){n=i,s=32768|f,k=r,b=a;break e}if(!(!u&2147418112==(0|v)?!(k|b):2147418112==(0|v)&u>>>0<0|v>>>0<2147418112)){s|=32768;break e}if(!(r|m|2147418112^h|a)){c=i,n=(i=!(r^k|i^n|a^b|f^s^-2147483648))?0:c,s=i?2147450880:f,k=i?0:r,b=i?0:a;break e}if(!(k|u|2147418112^v|b))break e;if(!(r|m|a|h)){if(k|u|b|v)break e;k&=r,b&=a,n&=i,s&=f;break e}if(!(k|u|b|v)){k=r,b=a,n=i,s=f;break e}}h=(c=(0|u)==(0|m)&(0|v)==(0|h)?(0|a)==(0|b)&k>>>0>r>>>0|b>>>0>a>>>0:(0|v)==(0|h)&u>>>0>m>>>0|v>>>0>h>>>0)?k:r,o=c?b:a,m=u=c?s:f,d=p=c?n:i,u&=65535,g=s=c?f:s,f=c?i:n,w=s>>>16&32767,(v=m>>>16&32767)||(n=(i=!(u|d))<<6,s=y(i?h:d)+32|0,Wn(t+96|0,h,o,d,u,(i=n+(32==(0|(i=y(i?o:u)))?s:i)|0)-15|0),d=l[t+104>>2],u=l[t+108>>2],h=l[t+96>>2],v=16-i|0,o=l[t+100>>2]),k=c?r:k,b=c?a:b,r=f,a=65535&g,w?(i=r,r=a):(s=r,n=(i=!(r|a))<<6,c=y(i?k:r)+32|0,Wn(t+80|0,k,b,s,a,(r=n+(32==(0|(r=y(i?b:a)))?c:r)|0)-15|0),w=16-r|0,k=l[t+80>>2],b=l[t+84>>2],i=l[t+88>>2],r=l[t+92>>2]),n=(a=i)<<3|b>>>29,s=524288|(c=r<<3|a>>>29),c=(r=d)<<3|o>>>29,d=i=u<<3|r>>>29,p^=f,u=m^g,f=r=b<<3|(a=k)>>>29,i=a<<=3,(k=v-w|0)&&(k>>>0>127?(n=0,s=0,r=0,i=1):(Wn(t- -64|0,a,f,n,s,128-k|0),lk(t+48|0,a,f,n,s,k),n=l[t+56>>2],s=l[t+60>>2],r=l[t+52>>2],i=l[t+48>>2]|0!=(l[t+64>>2]|l[t+72>>2])|0!=(l[t+68>>2]|l[t+76>>2]))),b=r,f=c,d|=524288,k=(a=h)<<3,a=r=o<<3|a>>>29;r:if((0|u)<-1||(0|u)<=-1&&!(p>>>0>4294967295)){if(c=k,o=i,!((r=k-i|0)|(k=(u=f-n|0)-(i=(0|a)==(0|b)&k>>>0<i>>>0|a>>>0<b>>>0)|0)|(a=a-((c>>>0<o>>>0)+b|0)|0)|(b=(d-((f>>>0<n>>>0)+s|0)|0)-(u>>>0<i>>>0)|0))){k=0,b=0,n=0,s=0;break e}if(524287==(0|b)&k>>>0>4294967295|b>>>0>524287)break r;n=r,f=(i=!(k|b))<<6,s=y(i?r:k)+32|0,Wn(t+32|0,n,a,k,b,r=(r=f+(32==(0|(r=y(i?a:b)))?s:r)|0)-12|0),v=v-r|0,k=l[t+40>>2],b=l[t+44>>2],r=l[t+32>>2],a=l[t+36>>2]}else c=a+b|0,(a=(r=i)+k|0)>>>0<r>>>0&&(c=c+1|0),r=a,b=(0|b)==(0|(a=c))&r>>>0<i>>>0|a>>>0<b>>>0,o=s+d|0,(i=f+n|0)>>>0<f>>>0&&(o=o+1|0),k=i,f=b+i|0,i=o,i=f>>>0<k>>>0?i+1|0:i,k=f,b=i,1048576&i&&(r=1&r|(1&a)<<31|r>>>1,a=k<<31|a>>>1,v=v+1|0,k=(1&b)<<31|k>>>1,b>>>=1);n=0,s=-2147483648&m,(0|v)>=32767?(s|=2147418112,k=0,b=0):(f=0,(0|v)>0?f=v:(Wn(t+16|0,r,a,k,b,v+127|0),lk(t,r,a,k,b,1-v|0),r=l[t>>2]|0!=(l[t+16>>2]|l[t+24>>2])|0!=(l[t+20>>2]|l[t+28>>2]),a=l[t+4>>2],k=l[t+8>>2],b=l[t+12>>2]),c=a>>>3,a=(7&a)<<29|r>>>3,c=o=c|k<<29,(i=(r=(u=7&r)>>>0>4)+a|0)>>>0<r>>>0&&(c=c+1|0),v=i,r=i,r=(0|o)==(0|(i=c))&r>>>0<a>>>0|i>>>0<o>>>0,c=f<<16,f=a=n|(7&b)<<29|k>>>3,a=a+r|0,r=(k=s|b>>>3&65535)|c,o=r=a>>>0<f>>>0?r+1|0:r,n=f=a,i=(f=0)+i|0,(k=(a=(k=4==(0|u))?1&v:0)+v|0)>>>0<a>>>0&&(i=i+1|0),b=i,(a=n+(r=(0|f)==(0|i)&(r=k)>>>0<a>>>0|i>>>0<f>>>0)|0)>>>0<r>>>0&&(o=o+1|0),n=a,s=o)}l[e>>2]=k,l[e+4>>2]=b,l[e+8>>2]=n,l[e+12>>2]=s,ne=t+112|0}(k,l[k+16>>2],l[k+20>>2],l[k+24>>2],l[k+28>>2],r,a,i,f),e=uk(l[k>>2],l[k+4>>2],l[k+8>>2],l[k+12>>2]);return ne=k+48|0,e}function br(e,r){var a,i=0,f=0,k=0,b=0;ne=a=ne-208|0,jb(a+144|0,24372),i=l[a+156>>2],l[a+200>>2]=l[a+152>>2],l[a+204>>2]=i,i=l[a+148>>2],l[a+192>>2]=l[a+144>>2],l[a+196>>2]=i;e:{r:{a:{i:{f:{if(2&v[34344]){if(i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=0,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,f=l[a+204>>2],l[i+32>>2]=l[a+200>>2],l[i+36>>2]=f,f=l[a+196>>2],l[i+24>>2]=l[a+192>>2],l[i+28>>2]=f,l[a+188>>2]=i,l[a+184>>2]=i,l[a+80>>2]=0,l[a+84>>2]=0,l[a+192>>2]=0,l[a+196>>2]=0,i=l[a+188>>2],l[a+72>>2]=l[a+184>>2],l[a+76>>2]=i,Qk(a+160|0,21586,a+80|0,a+72|0),l[a+64>>2]=0,l[a+68>>2]=0,l[a+56>>2]=0,l[a+60>>2]=0,l[a+184>>2]=0,l[a+188>>2]=0,l[a+192>>2]=0,l[a+196>>2]=0,Qk(a+136|0,21586,a- -64|0,a+56|0),i=l[a+164>>2],b=l[a+160>>2],k=l[a+136>>2])if(f=l[a+140>>2],i){if(l[i>>2])break r;if(l[k+4>>2])break f;l[i>>2]=k,l[k+4>>2]=i}else b=k;else f=i;if(!(4&v[34993]))break e;if(i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=27,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+64>>2]=En(24207),l[a+172>>2]=i,l[a+168>>2]=i,l[i+84>>2]=b,l[i+88>>2]=f,jb(a+96|0,24591),i=l[a+108>>2],l[a+200>>2]=l[a+104>>2],l[a+204>>2]=i,i=l[a+100>>2],l[a+192>>2]=l[a+96>>2],l[a+196>>2]=i,!(2&v[34344]))break a;if(f=Bb(104),l[(i=f)+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+96>>2]=-1,l[i+8>>2]=0,l[i>>2]=0,l[i+4>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,k=l[(i=a)+196>>2],l[f+24>>2]=l[i+192>>2],l[f+28>>2]=k,k=l[i+204>>2],l[f+32>>2]=l[i+200>>2],l[f+36>>2]=k,l[i+116>>2]=f,l[i+112>>2]=f,f=l[i+116>>2],l[i+48>>2]=l[i+112>>2],l[i+52>>2]=f,yn(i+120|0,i+48|0),b=l[i+120>>2],1!=l[8647])break i;if(k=l[i+124>>2],f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=10,l[(i=f)>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,l[a+128>>2]=b,l[a+132>>2]=k,i){if(k){if(l[k>>2])break r;l[k>>2]=f,l[f+4>>2]=k}else l[a+128>>2]=f;l[a+132>>2]=f}if(i=l[a+172>>2],l[a+40>>2]=l[a+168>>2],l[a+44>>2]=i,i=l[a+132>>2],l[a+32>>2]=l[a+128>>2],l[a+36>>2]=i,Ga(a+176|0,a+40|0,a+32|0),!(4&v[34993]))break e;return i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=27,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+64>>2]=En(24818),l[a+92>>2]=i,l[a+88>>2]=i,l[i+84>>2]=0,l[i+88>>2]=0,i=l[a+92>>2],l[a+16>>2]=l[a+88>>2],l[a+20>>2]=i,i=l[a+180>>2],l[a+24>>2]=l[a+176>>2],l[a+28>>2]=i,i=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=i,zf(e,a+24|0,a+16|0,a+8|0),void(ne=a+208|0)}break a}P(25731,14282,238,35660),M()}P(1044,14282,141,35388),M()}P(14782,14282,147,35402),M()}P(25534,14282,237,35660),M()}P(17730,14282,211,35526),M()}function nr(e,r,a){var i,f,k,c,o,u,v,d=0,h=0,w=0,p=0;return ne=i=ne-32|0,t(+e),d=0|b(1),b(0),w=2146435072!=(2146435072&d),t(+r),d=0|b(1),b(0),2146435072!=(2146435072&d)&&w?(t(+a),d=0|b(1),b(0),2146435072!=(2146435072&d)&&(0!=r&&0!=e?0!=a?(h=Sb(e,i+28|0),r=Sb(r,i+24|0),e=Sb(a,i+20|0),(0|(d=(l[i+24>>2]+l[i+28>>2]|0)-l[i+20>>2]|0))<=-54||((0|d)<=106?e=Ik(e,0-d|0):(t(2.2250738585072014e-308),d=0|b(1),p=0|b(0),t(+e),w=0|b(1),b(0),n(0,0|p),n(1,2147483647&d|-2147483648&w),e=+s()),u=0,v=0,u=134217729*(k=h),v=134217729*(c=r),v=(o=(u+=k-u)*(v+=c-v))+(u=(k-=u)*v+u*(c-=v)),m[(f=i)>>3]=v,m[f+8>>3]=k*c+(u+(o-v)),a=m[i+8>>3],mk(i,h=m[i>>3],e),d=l[i+24>>2]+l[i+28>>2]|0,0!=(r=m[i>>3])?(e=function(e,r){var a,i=0,f=0,k=0,c=0;return ne=a=ne-16|0,mk(a,e,r),e=m[a>>3],0!=(r=m[a+8>>3])&&(t(+e),i=0|b(1),1&(k=0|b(0))||(c=i,t(+r),f=0|b(1),b(0),f=1+(k-(i=(i^f)>>>30)|0)|0,i=c-(k>>>0<i>>>0)|0,n(0,0|f),n(1,0|(f>>>0<1?i+1|0:i)),e=+s())),ne=a+16|0,e}(m[i+8>>3],a),a=(wk(r)+d|0)>=-1022?Ik(r+e,d):function(e,r,a){var i,f=0,k=0,c=0,o=0;return ne=i=ne-16|0,mk(i,e,r),e=m[i>>3],0!=(r=m[i+8>>3])&&(t(+e),c=0|b(1),(1&(f=0|b(0)))!=((0-((k=c)>>>20&2047)|0)!=(0|a)|0)&&(o=f,t(+r),f=0|b(1),b(0),k=1+(o-(f=(f^k)>>>30&2)|0)|0,f=c-(o>>>0<f>>>0)|0,n(0,0|k),n(1,0|(k>>>0<1?f+1|0:f)),e=+s())),e=Ik(e,a),ne=i+16|0,e}(r,e,d)):(m[i>>3]=e,a=h+m[i>>3]+Ik(a,d)))):a=e*r:a=e*r+a)):a=e*r+a,ne=i+32|0,a}function sr(e){var r=0,a=0;return r=d[e>>1],a=l[12+(r>>>0<41?w(r,24)+34336|0:35320)>>2],(r=r+-27|0)>>>0>2|!(r-1)||(a=(d[e+2>>1]<<1)+a|0),a}function tr(e){var r,a=0;e*=.5,e-=D(e),a=g(r=4*(e+=e))<2147483648?~~r:-2147483648,e=3.141592653589793*(e+ +p(p(0|(a=(a+1|0)/2|0))*p(-.5)));e:{r:{a:{if((a=a+-1|0)>>>0<=2)switch(a-1|0){case 1:break e;case 0:break r;default:break a}return Pn(e,0,0)}return xn(e,0)}return Pn(-e,0,0)}return-xn(e,0)}function cr(e,r){var a;return ne=a=ne-16|0,e=function(e,r,a){var i,f=0,k=0,c=0,o=0,u=0,v=0,d=0,h=0,m=0,w=0,p=0,g=0,y=0,E=0;if(l[a>>2]=0,t(+r),i=0|b(1),!((w=0|b(0))|2147483647&i&&(t(+r),f=0|b(1),k=0|b(0),c=f,t(+e),f=0|b(1),p=0|b(0),m=f,2047!=(0|(u=f>>>20&2047))&&2146435072==(0|(f=2147483647&c))&k>>>0<1|f>>>0<2146435072)))return(e*=r)/e;e:if(2147483647&m|p){if(d=i>>>20&2047,u)k=p,c=1048575&m|1048576;else{if(u=0,c=m<<12|(k=p)>>>20,k<<=12,(0|(f=c))>0||(0|f)>=0&&!(k>>>0<0))for(;u=u+-1|0,c=f<<1|k>>>31,k<<=1,(0|(f=c))>-1||(0|f)>=-1&&!(k>>>0<=4294967295););f=m,o=p,k=31&(c=1-u|0),32<=(63&c)>>>0?(c=o<<k,k=0):(c=(1<<k)-1&o>>>32-k|f<<k,k=o<<k)}if(f=c,d)c=1048575&i|1048576,o=w;else{if(d=0,v=(o=w)<<12,o=c=i<<12|o>>>20,(0|c)>0||(0|c)>=0&&!(v>>>0<0))for(;d=d+-1|0,c=o<<1|v>>>31,v<<=1,o=c,(0|c)>-1||(0|c)>=-1&&!(v>>>0<=4294967295););c=i,v=w,o=31&(g=1-d|0),32<=(63&g)>>>0?(c=v<<o,o=0):(c=(1<<o)-1&v>>>32-o|c<<o,o=v<<o)}g=c;r:{a:{i:if((0|u)>=(0|d)){if(v=k-o|0,k=(h=(0|(c=f-((k>>>0<o>>>0)+g|0)|0))>-1?1:(0|c)>=-1?v>>>0<=4294967295?0:1:0)?v:k,f=h?c:f,h=c>>>31^1,(0|u)>(0|d)){for(;v=(c=f<<1|k>>>31)-(((k<<=1)>>>0<(f=o)>>>0)+g|0)|0,E=f=k-f|0,k=(f=(0|v)>-1?1:(0|v)>=-1?f>>>0<=4294967295?0:1:0)?E:k,f=f?v:c,h=1^(h<<1|v>>>31),(0|(u=u+-1|0))>(0|d););u=d}if(!(f|k)){u=-60,k=0,f=0;break a}if(1048575==(0|f)&k>>>0>4294967295|f>>>0>1048575)break i;for(;u=u+-1|0,v=524288==(0|f)&k>>>0<0|f>>>0<524288,f=f<<1|k>>>31,k=c=k<<1,v;);}else if((u+1|0)!=(0|d))break e;if(!((0|u)<1)){f=f+-1048576|0,f=k>>>0<0?f+1|0:f,f|=u<<20;break r}}c=f,o=k,k=31&(f=1-u|0),32<=(63&f)>>>0?(f=0,k=c>>>k):(f=c>>>k,k=((1<<k)-1&c)<<32-k|o>>>k)}e=(0|i)<0||(0|i)<=0&&!(w>>>0>=0)?-r:r,n(0,0|k),n(1,0|f),r=+s();r:{if((0|u)!=(0|d)){if((u+1|0)!=(0|d))break r;if(!((y=r+r)>e)&&!(1&h)|y!=e)break r}h=h+1|0,r-=e}c=a,f=a=2147483647&h,o=0-a|0,a=i^m,l[c>>2]=(0|a)>-1||(0|a)>=-1&&!((p^w)>>>0<=4294967295)?f:o,e=(0|m)<0||(0|m)<=0&&!(p>>>0>=0)?-r:r}return e}(e,r,a+12|0),ne=a+16|0,e}function or(e,r){e:{if(e){if(r>>>0<=127)break e;if(l[l[82325]>>2]){if(r>>>0<=2047)return k[e+1|0]=63&r|128,k[0|e]=r>>>6|192,2;if(!(57344!=(-8192&r)&&r>>>0>=55296))return k[e+2|0]=63&r|128,k[0|e]=r>>>12|224,k[e+1|0]=r>>>6&63|128,3;if(r+-65536>>>0<=1048575)return k[e+3|0]=63&r|128,k[0|e]=r>>>18|240,k[e+2|0]=r>>>6&63|128,k[e+1|0]=r>>>12&63|128,4}else if(57216==(-128&r))break e;l[82952]=25,e=-1}else e=1;return e}return k[0|e]=r,1}function ur(e,r,a){var i,f=0,k=0,b=0,n=0,s=0;ne=i=ne-144|0;e:{r:{a:{if(1==l[8593]){if(n=Bb(104),l[(b=n)+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+96>>2]=-1,l[b+8>>2]=1,l[b>>2]=0,l[b+4>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0,f=l[r>>2])if(b=l[r+4>>2],n){if(l[f+4>>2])break a;l[n>>2]=f,l[f+4>>2]=n}else n=f;else b=n;if(1==l[8617]){if(r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=5,l[(f=r)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[10939],l[i+104>>2]=l[10938],l[i+108>>2]=f,f=l[10937],l[i+96>>2]=l[10936],l[i+100>>2]=f,f=l[i+108>>2],l[i+136>>2]=l[i+104>>2],l[i+140>>2]=f,f=l[i+100>>2],l[i+128>>2]=l[i+96>>2],l[i+132>>2]=f,!(2&v[34344]))break r;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=0,l[(f=k)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,s=l[i+140>>2],l[f+32>>2]=l[i+136>>2],l[f+36>>2]=s,s=l[i+132>>2],l[f+24>>2]=l[i+128>>2],l[f+28>>2]=s,l[(f=i)+112>>2]=r,l[f+116>>2]=r,k){if(r){if(l[r>>2])break e;l[r>>2]=k,l[k+4>>2]=r}else l[i+112>>2]=k;l[i+116>>2]=k}if(1==l[8617]){if(r=Bb(104),l[(f=r)+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+96>>2]=-1,l[f+8>>2]=5,l[f>>2]=0,l[f+4>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[a>>2])if(a=l[a+4>>2],r){if(l[f+4>>2])break a;l[r>>2]=f,l[f+4>>2]=r}else r=f;else a=r;if(f=l[10939],l[i+64>>2]=l[10938],l[i+68>>2]=f,f=l[10937],l[i+56>>2]=l[10936],l[i+60>>2]=f,k=l[4+(f=i- -64|0)>>2],l[i+136>>2]=l[f>>2],l[i+140>>2]=k,f=l[i+60>>2],l[i+128>>2]=l[i+56>>2],l[i+132>>2]=f,!(2&v[34344]))break r;if(k=Bb(104),l[(f=k)+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+96>>2]=-1,l[f+8>>2]=0,l[f>>2]=0,l[f+4>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[i+132>>2],l[k+24>>2]=l[i+128>>2],l[k+28>>2]=f,f=l[i+140>>2],l[k+32>>2]=l[i+136>>2],l[k+36>>2]=f,l[i+72>>2]=k,l[i+76>>2]=k,f=l[10943],l[i+40>>2]=l[10942],l[i+44>>2]=f,f=l[10941],l[i+32>>2]=l[10940],l[i+36>>2]=f,f=l[i+44>>2],l[i+136>>2]=l[i+40>>2],l[i+140>>2]=f,f=l[i+36>>2],l[i+128>>2]=l[i+32>>2],l[i+132>>2]=f,!(2&v[34344]))break r;if(k=Bb(104),l[(f=k)+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+96>>2]=-1,l[f+8>>2]=0,l[f>>2]=0,l[f+4>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[i+132>>2],l[k+24>>2]=l[i+128>>2],l[k+28>>2]=f,f=l[i+140>>2],l[k+32>>2]=l[i+136>>2],l[k+36>>2]=f,l[i+52>>2]=k,l[i+48>>2]=k,f=l[i+76>>2],l[i+24>>2]=l[i+72>>2],l[i+28>>2]=f,f=l[i+52>>2],l[i+16>>2]=l[i+48>>2],l[i+20>>2]=f,Pb(i+80|0,i+24|0,i+16|0),l[(f=i)+88>>2]=r,l[f+92>>2]=a,r=l[f+80>>2]){if(f=l[i+84>>2],a){if(l[a>>2])break e;if(l[r+4>>2])break a;l[a>>2]=r,l[r+4>>2]=a}else l[i+88>>2]=r;l[i+92>>2]=f}if(r=l[i+116>>2],l[i+8>>2]=l[i+112>>2],l[i+12>>2]=r,r=l[i+92>>2],l[i>>2]=l[i+88>>2],l[i+4>>2]=r,Pb(i+120|0,i+8|0,i),k=l[i+124>>2],f=l[i+120>>2],l[(a=e)>>2]=n,l[a+4>>2]=b,f){if(b){if(l[b>>2])break e;if(l[f+4>>2])break a;l[b>>2]=f,l[f+4>>2]=b}else l[e>>2]=f;l[e+4>>2]=k}return void(ne=i+144|0)}}}P(1044,14282,141,35388),M()}P(25731,14282,238,35660),M()}P(14782,14282,147,35402),M()}P(25534,14282,237,35660),M()}function lr(e){var r=0,a=0,i=0;e:{r:{for(;;){if(v[r+301600|0]!=(0|e)){if(a=87,87!=(0|(r=r+1|0)))continue;break r}break}if(a=r,!r){e=301696;break e}}for(r=301696;i=v[0|r],r=e=r+1|0,i||(r=e,a=a+-1|0););}return e}function vr(e,r,a,i){if(e|r)for(;k[0|(a=a+-1|0)]=v[301536+(15&e)|0]|i,(e=(15&r)<<28|e>>>4)|(r>>>=4););return a}function dr(e,r,a){if(e|r)for(;k[0|(a=a+-1|0)]=7&e|48,(e=(7&r)<<29|e>>>3)|(r>>>=3););return a}function hr(e,r){var a,i=0,f=0;ne=a=ne-4320|0;e:if(e){if(l[a+4>>2]=2656256,l[a>>2]=e,e=0,(i=0|I(5,0|a))>>>0>=4294963201&&(l[82952]=0-i,i=-1),!((0|i)<0)){Pa(a+4112|0,i);r:{if(!((0|(f=function(e,r){var a;return ne=a=ne-16|0,l[a+8>>2]=4095,l[a+4>>2]=r,l[a>>2]=e,(e=0|Z(85,0|a))>>>0>=4294963201&&(l[82952]=0-e,e=-1),ne=a+16|0,e}(a+4112|0,a+16|0)))<0||(k[f+(a+16|0)|0]=0,ii(i,a+4232|0),(0|(f=Bf(a+16|0,a+4144|0)))<0))){if(l[a+4312>>2]==l[a+4224>>2]&l[a+4316>>2]==l[a+4228>>2]&&l[a+4232>>2]==l[a+4144>>2])break r;f||(l[82952]=32)}R(0|i);break e}R(0|i),e=r?xf(r,a+16|0):En(a+16|0)}}else l[82952]=28,e=0;return ne=a+4320|0,e}function mr(e,r,a,i,f){var k,b=0,n=0,s=0,t=0,c=0;ne=k=ne-96|0,Hn(k+88|0,22012);e:{r:{a:{i:{f:{if(1==l[8599]){if(b=Bb(104),l[b+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+96>>2]=-1,l[b+8>>2]=2,l[b>>2]=0,l[b+4>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0,s=l[r>>2])if(n=l[r+4>>2],b){if(l[s+4>>2])break r;l[b>>2]=s,l[s+4>>2]=b}else b=s;else n=b;if(r=l[k+92>>2],l[k+40>>2]=l[k+88>>2],l[k+44>>2]=r,Gk(k- -64|0,7,k+40|0),s=l[k+68>>2],c=l[k+64>>2],t=l[f>>2])if(r=l[f+4>>2],s){if(l[s>>2])break e;if(l[t+4>>2])break r;l[s>>2]=t,l[t+4>>2]=s}else c=t;else r=s;if(f=l[k+92>>2],l[k+32>>2]=l[k+88>>2],l[k+36>>2]=f,Gk(k+56|0,8,k+32|0),l[k+72>>2]=c,l[k+76>>2]=r,f=l[k+56>>2]){if(s=l[k+60>>2],r){if(l[r>>2])break e;if(l[f+4>>2])break r;l[r>>2]=f,l[f+4>>2]=r}else l[k+72>>2]=f;l[k+76>>2]=s}if(r=l[a+4>>2],l[k+24>>2]=l[a>>2],l[k+28>>2]=r,r=l[k+76>>2],l[k+16>>2]=l[k+72>>2],l[k+20>>2]=r,Wr(k+80|0,k+24|0,k+16|0),r=l[k+80>>2])if(a=l[k+84>>2],n){if(l[n>>2])break e;if(l[r+4>>2])break r;l[n>>2]=r,l[r+4>>2]=n}else b=r;else a=n;if(1!=l[8695])break a;r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=18,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0;k:{if(r){if(!a){a=r;break k}if(l[a>>2])break e;l[a>>2]=r,l[r+4>>2]=a,a=r}r=b}if(1!=l[8593])break a;if(n=Bb(104),l[(f=n)+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+96>>2]=-1,l[f+8>>2]=1,l[f>>2]=0,l[f+4>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[i>>2])if(b=l[i+4>>2],n){if(l[f+4>>2])break r;l[n>>2]=f,l[f+4>>2]=n}else n=f;else b=n;if(f=l[k+88>>2])if(i=l[k+92>>2],b){if(l[b>>2])break e;if(l[f+4>>2])break r;l[b>>2]=f,l[f+4>>2]=b}else n=f;else i=b;if(!(8&v[34680]))break f;if(!a)break i;if(b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=14,l[b>>2]=0,l[b+4>>2]=0,l[b+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+20>>2]=a,l[b+84>>2]=0,l[b+88>>2]=0,b)if(i){if(l[i>>2])break e;l[i>>2]=b,l[b+4>>2]=i}else n=b;else b=i;if(r)if(b){if(l[b>>2])break e;if(l[r+4>>2])break r;l[b>>2]=r,l[r+4>>2]=b}else n=r;else a=b;if(r=l[k+92>>2],l[k+8>>2]=l[k+88>>2],l[k+12>>2]=r,Gk(k+48|0,7,k+8|0),b=l[k+52>>2],f=l[k+48>>2],l[(i=e)>>2]=n,l[i+4>>2]=a,f){if(a){if(l[a>>2])break e;if(l[f+4>>2])break r;l[a>>2]=f,l[f+4>>2]=a}else l[e>>2]=f;l[e+4>>2]=b}return void(ne=k+96|0)}break a}P(16334,14282,190,35477),M()}P(16744,14282,191,35477),M()}P(1044,14282,141,35388),M()}P(25731,14282,238,35660),M()}P(25534,14282,237,35660),M()}function wr(e,r,a,i){if((0|i)>=1)for(;r=(0|f[l[e>>2]](r))+r|0,(0|(i=i+-1|0))>0;);return r>>>0>a>>>0?0:r}function pr(e,r){var a,i=0,f=0,k=0,b=0,n=0,s=0;ne=a=ne-256|0,b=l[r+4>>2],k=l[r>>2],rn(a+224|0);e:{r:{a:{i:{f:{k:{if(k){for(i=k,n=1;;){if(14!=(0|(f=l[i+8>>2])))if(f|!n)16==(0|f)&&(f=l[i+20>>2])&&!l[f+8>>2]||(n=0);else{if(f=l[i>>2],16!=l[f+8>>2]&&f)break k;f=l[i+36>>2],l[a+136>>2]=l[i+32>>2],l[a+140>>2]=f,f=l[i+28>>2],l[a+128>>2]=l[i+24>>2],l[a+132>>2]=f,Nb(a+192|0,a+128|0),f=l[a+236>>2],l[a+120>>2]=l[a+232>>2],l[a+124>>2]=f,f=l[a+204>>2],l[a+104>>2]=l[a+200>>2],l[a+108>>2]=f,f=l[a+228>>2],l[a+112>>2]=l[a+224>>2],l[a+116>>2]=f,f=l[a+196>>2],l[a+96>>2]=l[a+192>>2],l[a+100>>2]=f,Vb(a+240|0,a+112|0,a+96|0),f=l[a+252>>2],l[a+232>>2]=l[a+248>>2],l[a+236>>2]=f,f=l[a+244>>2],l[a+224>>2]=l[a+240>>2],l[a+228>>2]=f}else{if(!(f=l[i+20>>2])|16!=l[f+8>>2])break k;if(f=l[a+236>>2],l[a+88>>2]=l[a+232>>2],l[a+92>>2]=f,f=l[a+228>>2],l[a+80>>2]=l[a+224>>2],l[a+84>>2]=f,Nb(a+208|0,a+80|0),f=l[a+220>>2],l[a+72>>2]=l[a+216>>2],l[a+76>>2]=f,f=l[a+212>>2],l[a+64>>2]=l[a+208>>2],l[a+68>>2]=f,(0|Zb(a- -64|0))>0)break k;s=s+1|0}if(!(i=l[i>>2]))break}if(!n)break k}if(!(l[b+8>>2]&&b||(i=l[a+236>>2],l[a+56>>2]=l[a+232>>2],l[a+60>>2]=i,i=l[a+228>>2],l[a+48>>2]=l[a+224>>2],l[a+52>>2]=i,Nb(a+176|0,a+48|0),i=l[a+188>>2],l[a+40>>2]=l[a+184>>2],l[a+44>>2]=i,i=l[a+180>>2],l[a+32>>2]=l[a+176>>2],l[a+36>>2]=i,(0|Zb(a+32|0))!=(s+1|0)))){if(k)for(;i=l[k>>2],Wk(k),k=i,i;);if(i=l[a+236>>2],l[a+248>>2]=l[a+232>>2],l[a+252>>2]=i,i=l[a+228>>2],l[a+240>>2]=l[a+224>>2],l[a+244>>2]=i,!(2&v[34344]))break i;i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=0,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,k=l[a+244>>2],l[i+24>>2]=l[a+240>>2],l[i+28>>2]=k,k=l[a+252>>2],l[i+32>>2]=l[a+248>>2],l[i+36>>2]=k;break f}}i=l[a+236>>2],l[a+24>>2]=l[a+232>>2],l[a+28>>2]=i,i=l[a+228>>2],l[a+16>>2]=l[a+224>>2],l[a+20>>2]=i,zb(a+16|0),i=0}f:{k:{if(i)l[e+4>>2]=i,l[e>>2]=i;else{if(Hn(a+224|0,21829),1!=l[8593])break a;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=1,l[k>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,rn(a+160|0),i=l[a+172>>2],l[a+248>>2]=l[a+168>>2],l[a+252>>2]=i,i=l[a+164>>2],l[a+240>>2]=l[a+160>>2],l[a+244>>2]=i,!(2&v[34344]))break i;if(i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=0,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,n=l[a+244>>2],l[i+24>>2]=l[a+240>>2],l[i+28>>2]=n,n=l[a+252>>2],l[i+32>>2]=l[a+248>>2],l[i+36>>2]=n,i)if(k){if(l[k>>2])break r;l[k>>2]=i,l[i+4>>2]=k}else k=i;else i=k;if(b=l[a+224>>2])if(n=l[a+228>>2],i){if(l[i>>2])break r;if(l[b+4>>2])break e;l[i>>2]=b,l[b+4>>2]=i}else k=b;else n=i;if(i=l[a+228>>2],l[a+8>>2]=l[a+224>>2],l[a+12>>2]=i,Gk(a+152|0,19,a+8|0),1!=l[8695])break a;if(i=Bb(104),l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+96>>2]=-1,l[i+8>>2]=18,l[i>>2]=0,l[i+4>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,b=l[a+156>>2],s=l[a+152>>2],i)if(b){if(l[b>>2])break r;l[b>>2]=i,l[i+4>>2]=b}else s=i;else i=b;if(!(8&v[34680]))break k;if(!i)break f;if(b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=14,l[(f=b)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+20>>2]=i,l[f+84>>2]=0,l[f+88>>2]=0,f)if(n){if(l[n>>2])break r;l[n>>2]=b,l[b+4>>2]=n}else k=b;else b=n;if(f=l[r>>2])if(n=l[r+4>>2],b){if(l[b>>2])break r;if(l[f+4>>2])break e;l[b>>2]=f,l[f+4>>2]=b}else k=f;else n=b;if(s)if(n){if(l[n>>2])break r;if(l[s+4>>2])break e;l[n>>2]=s,l[s+4>>2]=n}else k=s;else i=n;if(r=l[a+228>>2],l[a>>2]=l[a+224>>2],l[a+4>>2]=r,Gk(a+144|0,7,a),s=l[a+148>>2],b=l[a+144>>2],l[(n=e)>>2]=k,l[n+4>>2]=i,b){if(i){if(l[i>>2])break r;if(l[b+4>>2])break e;l[i>>2]=b,l[b+4>>2]=i}else l[e>>2]=b;l[e+4>>2]=s}}return void(ne=a+256|0)}P(16334,14282,190,35477),M()}P(16744,14282,191,35477),M()}P(14782,14282,147,35402),M()}P(1044,14282,141,35388),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function gr(e,r,a,i,k,b){var n,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0,w=0;ne=n=ne-48|0;e:{if(b){if(t=function(e,r){var a=0,i=0,f=0;l[e+4>>2]=r,r=(0|r)>10?r:10,i=l[e>>2];r:{a:{if(!i){if(i=Cb(a=r<<2),l[e+8>>2]=i,f=Cb(a),l[e+12>>2]=f,a=-5,!i)break r;if(f)break a;break r}if((0|i)>=(0|r))break r;if(a=r<<2,l[e+8>>2]=Ub(l[e+8>>2],a),i=Ub(l[e+12>>2],a),l[e+12>>2]=i,a=-5,!i|!l[e+8>>2])break r}l[e>>2]=r,a=0}return a}(b,l[e+12>>2]+1|0))break e;if(l[b+4>>2]>=1)for(o=l[b+8>>2],t=l[b+12>>2];l[(c=s<<2)+t>>2]=-1,l[o+c>>2]=-1,(0|(s=s+1|0))<l[b+4>>2];);(s=l[b+16>>2])&&(nf(s),l[b+16>>2]=0)}if(t=-1,!(i>>>0<r>>>0|i>>>0>a>>>0)){r:{a:{i:{f:{k:{b:{n:{s:{if(!(r>>>0>=a>>>0)&&(u=l[e+84>>2])){if(4&u)break b;if(1&u){if(k>>>0<=i>>>0)break s;if((0|r)!=(0|i))break e;o=i+1|0,s=i;break k}if(c=a,8&u)break n;if(16&u){if(s=Xr(l[e+56>>2],r,a,1),c=(u=0|f[l[l[e+56>>2]+16>>2]](s,a))?s:a,s>>>0>r>>>0&s>>>0>=i>>>0)break n;if(o=k,s=i,!u)break n;break k}if(o=k,s=i,32768&u)break b;break k}if(o=k,s=i,(0|r)!=(0|a))break k;if(l[e+80>>2])break e;if(r=14255,l[n+36>>2]=14255,l[n+28>>2]=b,l[n+24>>2]=0,l[n+40>>2]=-1,l[n+16>>2]=0,l[n+32>>2]=l[e+16>>2]+(l[e+12>>2]<<1),-1==(0|(t=lb(e,14255,14255,14255,14255,0,n+16|0))))break f;if((0|t)<0)break i;if(o=14255,16&v[e+60|0])break f;break r}if(o=r,k>>>0>(s=r)>>>0)break e;break k}if(a-r>>>0<(u=l[e+88>>2])>>>0)break e;if(k>>>0>i>>>0){if(c-i>>>0<=(s=l[e+92>>2])>>>0?s=i:(s=c-s|0)>>>0>=a>>>0||(c=l[e+56>>2],s=(o=0|f[l[c+56>>2]](r,s))>>>0<s>>>0?(0|f[l[c>>2]](o))+o|0:o,u=l[e+88>>2]),s>>>0<=(o=1+(a-k|0)>>>0<u>>>0?1+(a-u|0)|0:k)>>>0)break k;break e}if(c=o=c-k>>>0>(s=l[e+92>>2])>>>0?c-s|0:k,a-(s=i)>>>0<u>>>0&&(s=0|f[l[l[e+56>>2]+56>>2]](r,a-u|0)),c>>>0<=s>>>0)break k;break e}o=k>>>0>i>>>0?i+1|0:i,s=i}if(l[n+40>>2]=-1,l[n+36>>2]=i,l[n+28>>2]=b,l[n+24>>2]=0,t=0,l[n+16>>2]=0,l[n+32>>2]=l[e+16>>2]+(l[e+12>>2]<<1),o>>>0>s>>>0){if(s>>>0>r>>>0&&(i=l[e+56>>2],t=s>>>0>r>>>0?0|f[l[i+56>>2]](r,s+-1|0):0),l[e+76>>2]){c=l[e+376>>2];k:if((u=c+1|0)>>>0<=1){if(i=o,!(u-1))break k;i=a}else i=(i=o+c|0)>>>0>a>>>0?a:i;if((a-s|0)<l[e+80>>2])break f;if(-1!=(0|c))for(;;){if(!oi(e,r,a,s,i,n+12|0,n+8|0,n+4|0))break f;if(t=(u=s>>>0<(c=l[n+12>>2])>>>0)?l[n+4>>2]:t,(s=u?c:s)>>>0<=(c=l[n+8>>2])>>>0)for(;;){if(-1!=(0|(t=lb(e,r,a,k,s,t,n+16|0)))){if((0|t)<0)break i;if(!(16&v[e+60|0]))break a}if(t=s,!((s=(0|f[l[l[e+56>>2]>>2]](s))+s|0)>>>0<=c>>>0))break}if(!(s>>>0<o>>>0))break f}if(!oi(e,r,a,s,i,n+12|0,n+8|0,0))break f;if(64&v[e+85|0]){for(;;){if(i=s,-1!=(0|(t=lb(e,r,a,k,s,t,n+16|0)))){if((0|t)<0)break i;if(!(16&v[e+60|0])){o=i;break r}}s=(0|f[l[l[e+56>>2]>>2]](i))+i|0;k:if(24&v[e+85|0])t=i;else if(c=0|f[l[l[e+56>>2]+16>>2]](i,a),s>>>0>=o>>>0)t=i;else if(t=i,!c)for(;;){if(t=s,i=0|f[l[l[e+56>>2]>>2]](s),c=0|f[l[l[e+56>>2]+16>>2]](s,a),(s=i+s|0)>>>0>=o>>>0)break k;if(c)break}if(!(s>>>0<o>>>0))break}break f}}for(;;){if(-1!=(0|(t=lb(e,r,a,k,s,t,n+16|0)))){if((0|t)<0)break i;if(!(16&v[e+60|0])){o=s;break r}}if(t=s,!((s=(0|f[l[l[e+56>>2]>>2]](s))+s|0)>>>0<o>>>0))break}if((0|s)!=(0|o))break f;if(-1==(0|(t=lb(e,r,a,k,o,t,n+16|0))))break f;if((0|t)<0)break i;if(16&v[e+60|0])break f;break r}if(i>>>0<a>>>0&&(i=(0|f[l[l[e+56>>2]>>2]](i))+i|0),l[e+76>>2]){if(k=a,o>>>0<a>>>0&&(k=0|f[l[l[e+56>>2]+56>>2]](r,o)),-1!=(0|(t=l[e+376>>2]))){if(!((0|(u=a-o|0))<(0|(c=l[e+80>>2])))){if((0|Jr(e,r,a,(t=s+t|0)>>>0>a>>>0?a:t,o,k,n+12|0,n+8|0))<1)break f;for(;;){if((s=s>>>0>(t=l[n+8>>2])>>>0?t:s)>>>0>=(u=l[n+12>>2])>>>0)for(;;){if(c=l[e+56>>2],-1!=(0|(t=lb(t=e,d=r,h=a,m=i,w=s,c=s>>>0>r>>>0?0|f[l[c+56>>2]](r,s+-1|0):0,n+16|0)))){if((0|t)<=-1)break i;if(!(16&v[e+60|0]))break a}if(!((s=c)>>>0>=u>>>0))break}if(s>>>0<o>>>0)break f;if(!((0|Jr(e,r,a,(t=l[e+376>>2]+s|0)>>>0>a>>>0?a:t,o,k,n+12|0,n+8|0))>=1))break}break f}}else u=a-o|0,c=l[e+80>>2];if((0|u)<(0|c))break f;h=e,m=r,w=a;k:if((c=t+1|0)>>>0<=1){if(d=s,!(c-1))break k;d=a}else d=a,(t=s+t|0)>>>0>a>>>0||(d=0|f[l[l[e+56>>2]+56>>2]](s,t));if((0|Jr(h,m,w,d,o,k,n+12|0,n+8|0))<1)break f}for(;;){if(k=l[e+56>>2],-1!=(0|(t=lb(t=e,c=r,d=a,h=i,m=s,k=s>>>0>r>>>0?0|f[l[k+56>>2]](r,s+-1|0):0,n+16|0)))){if((0|t)<0)break i;if(!(16&v[e+60|0]))break a}if(!((s=k)>>>0>=o>>>0))break}}if(t=-1,!(!(16&v[e+60|0])|l[n+40>>2]<0)){o=l[n+44>>2];break r}}if((r=l[n+16>>2])&&Lb(r),!b|!(32&l[e+60>>2]))break e;if(l[b+4>>2]>=1)for(e=l[b+8>>2],r=l[b+12>>2],s=0;l[(a=s<<2)+r>>2]=-1,l[e+a>>2]=-1,(0|(s=s+1|0))<l[b+4>>2];);if(!(e=l[b+16>>2]))break e;nf(e),l[b+16>>2]=0;break e}o=s}(e=l[n+16>>2])&&Lb(e),t=o-r|0}}return ne=n+48|0,t}function yr(e,r){var a,i=0,f=0,k=0;ne=a=ne-240|0,mn(a+208|0),f=l[10947],l[a+200>>2]=l[10946],l[a+204>>2]=f,f=l[10945],l[a+192>>2]=l[10944],l[a+196>>2]=f,f=l[10947],l[a+184>>2]=l[10946],l[a+188>>2]=f,f=l[10945],l[a+176>>2]=l[10944],l[a+180>>2]=f;e:{r:{a:{if(f=l[r>>2]){for(;;){if((i=l[f+8>>2]+-4|0)>>>0>18)break a;i:{f:switch(i-1|0){default:i=l[f+36>>2],l[a+152>>2]=l[f+32>>2],l[a+156>>2]=i,i=l[f+28>>2],l[a+144>>2]=l[f+24>>2],l[a+148>>2]=i,Nb(a+224|0,a+144|0),i=l[a+236>>2],l[a+200>>2]=l[a+232>>2],l[a+204>>2]=i,i=l[a+228>>2],l[a+192>>2]=l[a+224>>2],l[a+196>>2]=i;break i;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:break a;case 17:}if(!(i=l[f>>2])|l[i+8>>2])break a;if(!(k=l[i>>2])|23!=l[k+8>>2])break a;k=l[i+36>>2],l[a+168>>2]=l[i+32>>2],l[a+172>>2]=k,k=l[i+28>>2],l[a+160>>2]=l[i+24>>2],l[a+164>>2]=k,Nb(a+224|0,a+160|0),i=l[a+236>>2],l[a+200>>2]=l[a+232>>2],l[a+204>>2]=i,i=l[a+228>>2],l[a+192>>2]=l[a+224>>2],l[a+196>>2]=i,f=l[l[f>>2]>>2]}if(!(f=l[f>>2]))break a;if((i=l[f+8>>2]+-4|0)>>>0>18)break a;i:{f:switch(i-1|0){default:i=l[f+36>>2],l[a+120>>2]=l[f+32>>2],l[a+124>>2]=i,i=l[f+28>>2],l[a+112>>2]=l[f+24>>2],l[a+116>>2]=i,Nb(a+224|0,a+112|0),i=l[a+236>>2],l[a+184>>2]=l[a+232>>2],l[a+188>>2]=i,i=l[a+228>>2],l[a+176>>2]=l[a+224>>2],l[a+180>>2]=i;break i;case 17:break f;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:break a}if(!(i=l[f>>2])|l[i+8>>2])break a;if(!(k=l[i>>2])|23!=l[k+8>>2])break a;k=l[i+36>>2],l[a+136>>2]=l[i+32>>2],l[a+140>>2]=k,k=l[i+28>>2],l[a+128>>2]=l[i+24>>2],l[a+132>>2]=k,Nb(a+224|0,a+128|0),i=l[a+236>>2],l[a+184>>2]=l[a+232>>2],l[a+188>>2]=i,i=l[a+228>>2],l[a+176>>2]=l[a+224>>2],l[a+180>>2]=i,f=l[l[f>>2]>>2]}if(!(f=l[f>>2])|20!=l[f+8>>2])break a;if(i=l[a+204>>2],l[a+104>>2]=l[a+200>>2],l[a+108>>2]=i,i=l[a+196>>2],l[a+96>>2]=l[a+192>>2],l[a+100>>2]=i,5!=(15&v[a+96|0]))break a;if(i=l[a+220>>2],l[a+88>>2]=l[a+216>>2],l[a+92>>2]=i,i=l[a+204>>2],l[a+72>>2]=l[a+200>>2],l[a+76>>2]=i,i=l[a+188>>2],l[a+56>>2]=l[a+184>>2],l[a+60>>2]=i,i=l[a+212>>2],l[a+80>>2]=l[a+208>>2],l[a+84>>2]=i,i=l[a+196>>2],l[a+64>>2]=l[a+192>>2],l[a+68>>2]=i,i=l[a+180>>2],l[a+48>>2]=l[a+176>>2],l[a+52>>2]=i,en(a+224|0,a+80|0,a- -64|0,a+48|0),i=l[a+236>>2],l[a+216>>2]=l[a+232>>2],l[a+220>>2]=i,i=l[a+228>>2],l[a+208>>2]=l[a+224>>2],l[a+212>>2]=i,i=l[10947],l[a+232>>2]=l[10946],l[a+236>>2]=i,i=l[10945],l[a+224>>2]=l[10944],l[a+228>>2]=i,i=l[a+236>>2],l[a+200>>2]=l[a+232>>2],l[a+204>>2]=i,i=l[a+228>>2],l[a+192>>2]=l[a+224>>2],l[a+196>>2]=i,i=l[10947],l[a+232>>2]=l[10946],l[a+236>>2]=i,i=l[10945],l[a+224>>2]=l[10944],l[a+228>>2]=i,i=l[a+236>>2],l[a+184>>2]=l[a+232>>2],l[a+188>>2]=i,i=l[a+228>>2],l[a+176>>2]=l[a+224>>2],l[a+180>>2]=i,!(f=l[f>>2]))break}if(f=l[r>>2])for(;r=l[f>>2],Wk(f),f=r,r;);}if(r=l[a+220>>2],l[a+232>>2]=l[a+216>>2],l[a+236>>2]=r,r=l[a+212>>2],l[a+224>>2]=l[a+208>>2],l[a+228>>2]=r,!(2&v[34344]))break r;r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=0,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,f=l[a+228>>2],l[r+24>>2]=l[a+224>>2],l[r+28>>2]=f,f=l[a+236>>2],l[r+32>>2]=l[a+232>>2],l[r+36>>2]=f,l[e+4>>2]=r,l[e>>2]=r;break e}r=l[a+220>>2],l[a+40>>2]=l[a+216>>2],l[a+44>>2]=r,r=l[a+212>>2],l[a+32>>2]=l[a+208>>2],l[a+36>>2]=r,zb(a+32|0),r=l[a+204>>2],l[a+24>>2]=l[a+200>>2],l[a+28>>2]=r,r=l[a+196>>2],l[a+16>>2]=l[a+192>>2],l[a+20>>2]=r,zb(a+16|0),r=l[a+188>>2],l[a+8>>2]=l[a+184>>2],l[a+12>>2]=r,r=l[a+180>>2],l[a>>2]=l[a+176>>2],l[a+4>>2]=r,zb(a),l[e>>2]=0,l[e+4>>2]=0;break e}P(14782,14282,147,35402),M()}ne=a+240|0}function Er(e,r,a){var i=0,f=0,b=0,n=0,s=0,t=0;e:if(r>>>0<256&&(0|e)<=1)t=v[8+((r>>>3)+a|0)|0]>>>(7&r)&1;else{if(!(e=l[a+40>>2]))break e;if(n=(i=l[e>>2])+4|0,e=0,i=l[i>>2])for(b=i;s=(f=e+b|0)>>>1,(e=(f=h[(f<<2|4)+n>>2]<r>>>0)?s+1|0:e)>>>0<(b=f?b:s)>>>0;);if(e>>>0>=i>>>0)break e;t=h[(e<<3)+n>>2]<=r>>>0}return 1&k[a+4|0]^t}function _r(e,r,a,i,b){var n,s,t=0,c=0;if(t=Cb(384),l[e>>2]=t,!t)return-5;s=l[78165],n=wn(t,0,384);e:{r:{if(!v[329520]){if(k[329520]=1,t=-23,l[82164]&&(f[l[82165]]()||(c=0|f[l[82164]]())),c)break r;9!=(0|(t=l[78160]))&&f[t](14210)}if(t=-403,384!=(384&i)&&(t=l[78169],l[n+380>>2]=0,l[n+364>>2]=0,l[n+368>>2]=0,l[n+100>>2]=0,l[n+64>>2]=312664,l[n+56>>2]=328592,l[n+8>>2]=0,l[n+72>>2]=0,l[n+76>>2]=0,l[n>>2]=0,l[n+4>>2]=0,l[n+68>>2]=s,t|=i,l[n+60>>2]=64&i?-9&t:t,t=function(e,r,a,i){var b=0,n=0,s=0,t=0,c=0,o=0,d=0;ne=b=ne-608|0,l[b+132>>2]=0,i&&(l[i+4>>2]=0);a:{if(!l[e+8>>2]){if((0|(n=(0|(n=a-r|0))<1?20:n<<1))<=0)l[e>>2]=0,n=0;else if(t=Cb(n),l[e>>2]=t,!t){r=-5;break a}l[e+8>>2]=n}l[e+48>>2]=0,l[e+52>>2]=0,l[e+20>>2]=0,l[e+12>>2]=0,l[e+16>>2]=0,l[e+4>>2]=0;i:if(!(r=function(e,r,a,i,k){var b=0,n=0;return ne=b=ne-48|0,(n=l[i+72>>2])&&Lf(n,10,0),l[k+52>>2]=0,l[k+40>>2]=0,l[k+44>>2]=0,l[k+16>>2]=0,l[k+20>>2]=0,l[k+60>>2]=0,l[k+64>>2]=0,l[k+24>>2]=0,l[k+28>>2]=0,l[k+68>>2]=0,l[k+72>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,l[k+92>>2]=0,l[k+96>>2]=0,l[k+100>>2]=0,l[k+104>>2]=0,l[k+108>>2]=0,l[k>>2]=l[i+60>>2],l[k+4>>2]=l[i+68>>2],l[k+8>>2]=l[i+56>>2],n=l[i+64>>2],l[k+48>>2]=i,l[k+36>>2]=a,l[k+32>>2]=r,l[k+12>>2]=n,l[e>>2]=0,f[l[l[k+8>>2]+72>>2]](r,a)?(l[b+4>>2]=r,(0|(r=An(b+8|0,b+4|0,a,k)))>=0&&(e=lf(e,b+8|0,0,b+4|0,a,k),r=e>>31&e),l[i+12>>2]=l[k+60>>2]):r=-400,ne=b+48|0,r}(b+132|0,r,a,e,b+16|0))&&(r=l[b+80>>2],1&k[e+61|0]|!(128&v[l[b+28>>2]+8|0])|(0|r)<1||!(r=(0|r)==l[b+76>>2]?function e(r){var a=0,i=0;i=l[r>>2]+-4|0;f:{k:if(!(i>>>0>5)){b:switch(i-1|0){case 3:case 4:for(;;){if(a=e(l[r+4>>2]))break k;if(!(r=l[r+8>>2]))break}a=0;break k;case 0:a=e(l[r+8>>2]);break k;case 1:a=e(l[r+20>>2]);break k;default:if(i=-209,8&v[r+5|0])break k;break f;case 2:}(r=l[r+8>>2])&&(a=e(r))}i=a}return i}(l[b+132>>2]):Fr(b+132|0,e,b+16|0)))){f:{a=e,r=l[b+68>>2];k:{if((0|r)>=1){if(!(n=Cb(r<<3))){r=-5;break i}if(l[b+8>>2]=n,l[b+4>>2]=r,l[b>>2]=0,l[b+72>>2]=b,r=function e(r,a){var i=0,f=0,b=0,n=0;ne=b=ne-16|0,i=l[r>>2]+-5|0;b:if(i>>>0>5)i=0;else{n:{s:{t:switch(i-1|0){case 2:case 3:for(;;){if(i=e(l[r+4>>2],a))break b;if(!(r=l[r+8>>2]))break}i=0;break b;default:i=e(l[r+8>>2],a);break b;case 0:i=e(l[r+20>>2],a);break b;case 4:if(n=l[a+104>>2],f=l[r+8>>2]){if(!(!(128&v[l[a+12>>2]+8|0])|l[a+64>>2]<1||(i=-209,1&k[a+1|0])))break b;if((0|f)<=l[a+60>>2])break n;i=-218,f=l[r+12>>2],l[a+44>>2]=l[r+16>>2],l[a+40>>2]=f;break b}if((0|(f=function(e,r,a,i){var f=0;ne=f=ne-16|0,e=l[e+72>>2],l[f+4>>2]=0;c:if(e)if(l[f+12>>2]=a,l[f+8>>2]=r,Hf(e,f+8|0,f+4|0),r=l[f+4>>2])if((e=l[r+8>>2])>>>0<=1){if(e-1)break c;l[i>>2]=r+16,e=1}else l[i>>2]=l[r+20>>2];else e=-217;else e=-217;return ne=f+16|0,e}(l[a+48>>2],l[r+12>>2],l[r+16>>2],b+12|0)))<1)i=-217;else if(i=-220,1==(0|f))break s;f=l[r+12>>2],l[a+44>>2]=l[r+16>>2],l[a+40>>2]=f;break b;case 1:}if((f=Bi(l[r+4>>2]+-1024|0,22))>>>0>7){i=0;break b}if(i=0,!(1<<f&139))break b;i=e(l[r+8>>2],a);break b}f=l[l[b+12>>2]>>2],l[r+8>>2]=f}i=l[(f<<2)+(n||a+72|0)>>2],l[r+20>>2]=i,i?(l[i+4>>2]=256|l[i+4>>2],i=l[r+8>>2],l[a+20>>2]=l[a+20>>2]|((0|i)<32?1<<i:1),l[r+24>>2]=l[a+56>>2],i=0):(i=-217,f=l[r+12>>2],l[a+44>>2]=l[r+16>>2],l[a+40>>2]=f)}return ne=b+16|0,i}(l[b+132>>2],b+16|0))break k;if((0|(r=function e(r){var a=0,i=0,f=0;b:{for(;;){n:{if(7!=(0|(a=l[r>>2]))){if((a=a+-5|0)>>>0>4)break b;s:switch(a-1|0){case 2:case 3:for(a=0;;){if(i=1,1!=(0|(f=e(l[r+4>>2])))&&(i=a,(0|f)<0))break b;if(f=a=i,!(r=l[r+8>>2]))break}break b;case 1:break b;case 0:break n}if(1!=(0|(f=e(l[r+8>>2])))|l[r+16>>2])break b;f=1,l[r+36>>2]=1;break b}if((a=Bi(l[r+4>>2]+-1024|0,22))>>>0>7|!(1<<a&139))break b;r=l[r+8>>2];continue}break}return 256==(384&(a=l[r+4>>2]))&&(l[r+4>>2]=8|a,a=function e(r){var a=0,i=0;n:{s:{for(;;){if((a=l[r>>2]+-5|0)>>>0>5)break n;t:switch(a-1|0){case 2:case 3:for(;i=e(l[r+4>>2])|i,r=l[r+8>>2];);break n;case 1:if((a=Bi(l[r+4>>2]+-1024|0,22))>>>0>7|!(1<<a&139))break n;default:r=l[r+8>>2];continue;case 0:break s;case 4:}break}if(!(a=e(l[r+20>>2])))break n;l[r+4>>2]=128|l[r+4>>2],i=a;break n}if(!(16&(a=l[r+4>>2])||(i=1,8&a)))return l[r+4>>2]=16|a,a=e(l[r+20>>2]),l[r+4>>2]=-17&l[r+4>>2],a}return i}(l[r+20>>2]),i=l[r+4>>2],a&&(i|=128,l[r+4>>2]=i),l[r+4>>2]=-9&i),e(l[r+20>>2])|l[r+4>>2]>>>8&1}return f}(l[b+132>>2])))<0)break k;if(r=function e(r,a){for(var i=0;;){if((i=l[r>>2]+-5|0)>>>0>4)return 0;b:{n:{s:{t:switch(i-1|0){case 2:case 3:for(;;){if(i=e(l[r+4>>2],a))break s;if(!(r=l[r+8>>2]))break}return 0;default:r=l[r+8>>2];continue;case 1:if((i=Bi(l[r+4>>2]+-1024|0,22))>>>0>7)return 0;if(!(1<<i&139))return 0;r=l[r+8>>2];continue;case 0:}if(!(128&(i=l[r+4>>2])))break b;if(l[r+4>>2]=8|i,(0|vb(l[r+20>>2],a,1))<=0)break n;i=-221}return i}l[r+4>>2]=-9&l[r+4>>2]}r=l[r+20>>2]}}(l[b+132>>2],b+16|0))break k;r=l[b+68>>2]}else r=0;if(l[a+28>>2]=r,!((r=bb(l[b+132>>2],e,0,b+16|0))||(r=l[b+32>>2],l[e+32>>2]=r,l[e+36>>2]=r|l[b+36>>2],a=l[b+40>>2],l[e+104>>2]=0,l[e+76>>2]=0,l[e+80>>2]=0,l[e+84>>2]=0,l[e+88>>2]=0,l[e+92>>2]=0,l[e+96>>2]=0,a|=r,r=l[e+60>>2],l[e+40>>2]=48&r?-1:a,(a=l[e+100>>2])&&(Lb(a),l[e+100>>2]=0,r=l[e+60>>2]),a=l[b+132>>2],n=l[e+56>>2],l[b+148>>2]=r,l[b+144>>2]=n,l[b+152>>2]=l[e+68>>2],l[b+136>>2]=0,l[b+140>>2]=0,l[b+156>>2]=b+16,r=function e(r,a,i){var b=0,n=0,s=0,t=0,c=0,o=0,d=0,m=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,M=0;ne=s=ne-496|0,l[a+68>>2]=0,l[a+72>>2]=0,l[a+120>>2]=0,l[a+124>>2]=0,k[a+89|0]=0,k[a+90|0]=0,k[a+91|0]=0,k[a+92|0]=0,k[a+93|0]=0,k[a+94|0]=0,k[a+95|0]=0,k[a+96|0]=0,l[a+84>>2]=0,l[a+88>>2]=0,l[a+76>>2]=0,l[a+80>>2]=0,l[a+128>>2]=0,l[a+132>>2]=0,l[a+136>>2]=0,l[a+140>>2]=0,k[a+141|0]=0,k[a+142|0]=0,k[a+143|0]=0,k[a+144|0]=0,k[a+145|0]=0,k[a+146|0]=0,k[a+147|0]=0,k[a+148|0]=0,E=wn(a+172|0,0,276),k[a+37|0]=0,k[a+38|0]=0,k[a+39|0]=0,k[a+40|0]=0,k[a+41|0]=0,k[a+42|0]=0,k[a+43|0]=0,k[a+44|0]=0,l[a+32>>2]=0,l[a+36>>2]=0,l[a+24>>2]=0,l[a+28>>2]=0,l[a+16>>2]=0,l[a+20>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,l[a>>2]=0,l[a+4>>2]=0,l[a+16>>2]=l[i>>2],l[a+20>>2]=l[i+4>>2],l[a+120>>2]=l[i>>2],l[a+124>>2]=l[i+4>>2],l[a+172>>2]=l[i>>2],l[a+176>>2]=l[i+4>>2],b=l[r>>2];b:if(b>>>0>10)o=-6;else{c=a+120|0,_=a+68|0;n:switch(b-1|0){case 7:for(b=l[i+12>>2],l[s+480>>2]=l[i+8>>2],l[s+484>>2]=b,b=l[i+20>>2],l[s+488>>2]=l[i+16>>2],l[s+492>>2]=b,b=l[i+4>>2],l[s+472>>2]=l[i>>2],l[s+476>>2]=b,F=a+16|0,M=s+84|0,d=s+60|0,D=s+188|0,t=p=s+32|0;;){if(o=e(l[r+4>>2],s+16|0,s+472|0))break b;if(b=l[s+16>>2],n=l[s+472>>2],l[s+472>>2]=n>>>0>(-1^b)>>>0?-1:-1==(0|n)?-1:-1==(0|b)?-1:b+n|0,g=l[s+20>>2],b=l[s+476>>2],l[s+476>>2]=b>>>0>(-1^g)>>>0?-1:-1==(0|b)?-1:-1==(0|g)?-1:g+b|0,o=l[i+8>>2],b=l[a+12>>2],S=l[s+28>>2]|(g?2048&b:b),b=S,y=l[a+4>>2],n=l[a+8>>2]|(y?0:l[s+24>>2]),l[a+8>>2]=n,l[a+12>>2]=b,(0|(m=l[s+56>>2]))<1|y||(b=l[s+44>>2]|(g?2048&S:S),l[s+40>>2]=l[s+40>>2]|n,l[s+44>>2]=b),y|l[s+192>>2]|l[s+204>>2]<1||(l[s+196>>2]=n|l[s+196>>2]),b=l[a+84>>2],n=l[a+32>>2],g&&(l[a+32>>2]=0,l[a+84>>2]=0),!((0|m)<1))if(n){n=l[a+40>>2];s:{if(!(l[a+36>>2]|!l[s+52>>2])){if((0|n)>=(0|m))break s;l[a+36>>2]=1}for(g=60+(s+m|0)|0,b=d;;){if(((y=0|f[l[o>>2]](b))+n|0)<=24){t:if(!(b>>>0>=g>>>0||(m=0,(0|y)<1)))for(;;){if(k[44+(a+n|0)|0]=v[0|b],n=n+1|0,(b=b+1|0)>>>0>=g>>>0)break t;if(!((0|(m=m+1|0))<(0|y)))break}if(b>>>0<g>>>0)continue}break}l[a+40>>2]=n,b=(0|b)==(0|g)?l[s+48>>2]:0,l[a+32>>2]=b,b=b?l[s+44>>2]|2048&l[a+28>>2]:0,l[a+24>>2]=l[a+24>>2],l[a+28>>2]=b}l[p>>2]=0,l[p+4>>2]=0,k[(b=t)+21|0]=0,k[b+22|0]=0,k[b+23|0]=0,k[b+24|0]=0,k[b+25|0]=0,k[b+26|0]=0,k[b+27|0]=0,k[b+28|0]=0,l[p+16>>2]=0,l[p+20>>2]=0,l[p+8>>2]=0,l[p+12>>2]=0}else if(b){n=l[a+92>>2];s:{if(!(l[a+88>>2]|!l[s+52>>2])){if((0|n)>=(0|m))break s;l[a+88>>2]=1}for(g=60+(s+m|0)|0,b=d;;){if(((y=0|f[l[o>>2]](b))+n|0)<=24){t:if(!(b>>>0>=g>>>0||(m=0,(0|y)<1)))for(;;){if(k[96+(a+n|0)|0]=v[0|b],n=n+1|0,(b=b+1|0)>>>0>=g>>>0)break t;if(!((0|(m=m+1|0))<(0|y)))break}if(b>>>0<g>>>0)continue}break}l[a+92>>2]=n,b=(0|b)==(0|g)?l[s+48>>2]:0,l[a+84>>2]=b,b=b?l[s+44>>2]|2048&l[a+80>>2]:0,l[a+76>>2]=l[a+76>>2],l[a+80>>2]=b}l[p>>2]=0,l[p+4>>2]=0,k[(b=t)+21|0]=0,k[b+22|0]=0,k[b+23|0]=0,k[b+24|0]=0,k[b+25|0]=0,k[b+26|0]=0,k[b+27|0]=0,k[b+28|0]=0,l[p+16>>2]=0,l[p+20>>2]=0,l[p+8>>2]=0,l[p+12>>2]=0}cf(o,_,p),cf(o,_,M),n=l[a+144>>2];s:if((0|n)>=1){if(!(b=l[s+20>>2]))break s;if((0|n)>(0|b)&&(l[a+144>>2]=b),!l[a+124>>2]){cf(o,F,c);break s}cf(o,_,c)}else l[s+160>>2]<1||(b=l[s+140>>2],l[c>>2]=l[s+136>>2],l[c+4>>2]=b,l[c+48>>2]=l[s+184>>2],b=l[s+180>>2],l[c+40>>2]=l[s+176>>2],l[c+44>>2]=b,b=l[s+172>>2],l[c+32>>2]=l[s+168>>2],l[c+36>>2]=b,b=l[s+164>>2],l[c+24>>2]=l[s+160>>2],l[c+28>>2]=b,b=l[s+156>>2],l[c+16>>2]=l[s+152>>2],l[c+20>>2]=b,b=l[s+148>>2],l[c+8>>2]=l[s+144>>2],l[c+12>>2]=b);if((b=l[s+204>>2])&&((n=l[a+188>>2])?(0|(o=32768/(0|b)|0))<1||((0|(n=32768/(0|n)|0))<1||(m=0,g=l[a+176>>2],b=0,-1!=(0|g)&&(g=g-l[E>>2]|0,b=1,g>>>0>99||(b=u[59136+(g<<1)>>1])),b=w(b,n),-1!=(0|(n=l[s+192>>2]))&&(m=1,(n=n-l[s+188>>2]|0)>>>0>99||(m=u[59136+(n<<1)>>1])),(0|(n=w(o,m)))>(0|b)||!((0|n)<(0|b)|h[s+188>>2]>=h[E>>2])))&&qb(E,D,276):qb(E,D,276)),b=l[s+16>>2],n=l[a>>2],l[a>>2]=n>>>0>(-1^b)>>>0?-1:-1==(0|n)?-1:-1==(0|b)?-1:b+n|0,b=l[s+20>>2],n=l[a+4>>2],l[a+4>>2]=n>>>0>(-1^b)>>>0?-1:-1==(0|n)?-1:-1==(0|b)?-1:b+n|0,!(r=l[r+8>>2]))break}o=0;break b;case 5:if((b=l[r+8>>2]+-1|0)>>>0>3)break b;s:switch(b-1|0){case 0:b=l[i+12>>2],l[i+12>>2]=l[r+16>>2],o=e(l[r+20>>2],a,i),l[i+12>>2]=b;break b;default:if(b=l[r+40>>2],l[r+40>>2]=b+1,(0|b)>=5){b=0,1&(d=l[r+4>>2])&&(b=l[r+28>>2]),l[a+4>>2]=2&d?l[r+32>>2]:-1,l[a>>2]=b;break b}if(o=e(l[r+20>>2],a,i),b=l[a+8>>2],!(192&v[a+13|0]||49152&b))break b;i=l[l[i+20>>2]+28>>2],r=l[r+12>>2];t:{if((0|r)<=31){if(i>>>r&1)break t;break b}if(!(1&i))break b}l[a+8>>2]=-49153&b;break b;case 1:break b;case 2:}o=e(l[r+20>>2],a,i);break b;case 4:if(o=e(l[r+8>>2],s+16|0,i))break b;s:{t:{c:{o:{u:{l:{v:{if(!(n=l[r+12>>2])){if(b=l[r+16>>2],n=0,-1!=(0|b))break o;if(!l[r+20>>2]|l[i+4>>2]|3!=l[l[r+8>>2]>>2])break l;if(r=l[a+8>>2],!(4&v[i+12|0]))break v;l[a+8>>2]=32768|r;break l}if((0|n)<=0){b=l[r+16>>2];break u}if(t=qb(a,s+16|0,448),!(l[s+56>>2]<1)&&(c=l[s+48>>2])){d=2,b=l[r+12>>2];d:if(!((0|b)<2))for(n=l[t+40>>2],E=s+60|0,p=2;;){if((0|n)>23){d=p;break d}g=l[i+8>>2],m=l[s+56>>2];h:{if(!(l[t+36>>2]|!l[s+52>>2])){if((0|n)>=(0|m))break h;l[t+36>>2]=1}if(d=60+(s+m|0)|0,b=E,(0|m)>0){for(;;){if(((c=0|f[l[g>>2]](b))+n|0)<=24){m:if(!(b>>>0>=d>>>0||(m=0,(0|c)<1)))for(;;){if(k[44+(n+t|0)|0]=v[0|b],n=n+1|0,(b=b+1|0)>>>0>=d>>>0)break m;if(!((0|(m=m+1|0))<(0|c)))break}if(b>>>0<d>>>0)continue}break}c=l[s+48>>2]}l[t+40>>2]=n,b=(0|b)==(0|d)?c:0,l[t+32>>2]=b,b=b?l[s+44>>2]|2048&l[t+28>>2]:0,l[t+24>>2]=l[t+24>>2],l[t+28>>2]=b,b=l[r+12>>2]}if(m=(0|p)<(0|b),p=d=p+1|0,!m)break}(0|d)>=(0|b)||(l[t+32>>2]=0)}if(b=l[r+16>>2],n=l[r+12>>2],(0|b)!=(0|n)&&(l[t+84>>2]=0,l[t+32>>2]=0),(0|n)>=2){l[t+84>>2]=0;break u}if(n)break u;n=0;break o}l[a+8>>2]=16384|r}n=0,m=l[s+20>>2];break c}r=l[s+16>>2],n=4294967295/(n>>>0)>>>0>r>>>0?w(r,n):-1}if(m=l[s+20>>2],(r=b+1|0)>>>0>1)break t;if(!(r-1))break s}b=m?-1:0;break s}b=4294967295/(b>>>0)>>>0>m>>>0?w(b,m):-1}l[a+4>>2]=b,l[a>>2]=n;break b;case 9:if(128&v[r+4|0]){l[a>>2]=0,l[a+4>>2]=-1;break b}b=l[i+12>>2],l[i+12>>2]=l[l[r+20>>2]+16>>2],o=e(l[r+20>>2],a,i),l[i+12>>2]=b;break b;case 3:if(128&v[r+4|0]){l[a>>2]=0,l[a+4>>2]=-1;break b}if(b=l[r+36>>2],n=b||r+12|0,b=l[i+20>>2],d=l[b+104>>2],t=d||b+72|0,o=$k(l[(l[n>>2]<<2)+t>>2],s+16|0,b))break b;if(o=Tn(l[t+(l[n>>2]<<2)>>2],s+472|0,l[i+20>>2]))break b;b=1;s:{if(l[r+8>>2]>1)for(;;){if(o=$k(l[t+(l[(d=n+(b<<2)|0)>>2]<<2)>>2],s+12|0,l[i+20>>2]))break b;if(o=Tn(l[t+(l[d>>2]<<2)>>2],s+8|0,l[i+20>>2]))break b;if(o=l[s+16>>2],d=l[s+12>>2],o>>>0>d>>>0&&(l[s+16>>2]=d,o=d),c=l[s+472>>2],d=l[s+8>>2],c>>>0<d>>>0&&(l[s+472>>2]=d,c=d),!((0|(b=b+1|0))<l[r+8>>2]))break s}c=l[s+472>>2],o=l[s+16>>2]}l[a+4>>2]=c,l[a>>2]=o,o=0;break b;case 6:s:{t:{b=l[r+4>>2];c:{if((0|b)<=1023){if((r=b+-1|0)>>>0>31)break b;if(11&(r=1<<r))break c;if(!(-2147450752&r))break b;break s}if(1024==(0|b))break t;if(2048==(0|b))break s;if(4096!=(0|b))break b}l[a+8>>2]=b;break b}if(o=e(l[r+8>>2],s+16|0,i))break b;d=i=c;t:{if(l[s+56>>2]>=1)r=s+32|0;else{if(l[s+108>>2]<1)break t;r=s+84|0}b=l[r+4>>2],l[d>>2]=l[r>>2],l[i+4>>2]=b,l[c+48>>2]=l[r+48>>2],i=l[r+44>>2],l[c+40>>2]=l[r+40>>2],l[c+44>>2]=i,i=l[r+36>>2],l[c+32>>2]=l[r+32>>2],l[c+36>>2]=i,i=l[r+28>>2],l[c+24>>2]=l[r+24>>2],l[c+28>>2]=i,i=l[r+20>>2],l[c+16>>2]=l[r+16>>2],l[c+20>>2]=i,i=l[r+12>>2],l[c+8>>2]=l[r+8>>2],l[c+12>>2]=i}if(l[a+136>>2]=0,l[s+204>>2]<1)break b;qb(E,s+188|0,276);break b}l[a+12>>2]=b;break b;case 2:r=l[i+8>>2],i=l[r+12>>2],l[a+4>>2]=l[r+8>>2],l[a>>2]=i;break b;case 1:m=1;s:{t:{if(n=l[i+8>>2],1==(0|(t=l[n+8>>2]))){if(12!=l[r+4>>2])break s;if(b=0,l[r+8>>2])break t;for(;;){if(f[l[n+48>>2]](b,12)&&(v[192+(r=a+b|0)|0]||(n=l[i+8>>2],k[r+192|0]=1,r=a,d=4,b<<24>>24<0||!(255&b)&&(d=20,l[n+12>>2]>1)||(d=u[59344+(b<<1)>>1]),l[r+188>>2]=d+l[a+188>>2])),256==(0|(b=b+1|0)))break s;n=l[i+8>>2]}}m=l[n+12>>2];break s}for(;;){if(f[l[n+48>>2]](b,12)||v[192+(r=a+b|0)|0]||(n=l[i+8>>2],k[r+192|0]=1,r=a,d=4,b<<24>>24<0||!(255&b)&&(d=20,l[n+12>>2]>1)||(d=u[59344+(b<<1)>>1]),l[r+188>>2]=d+l[a+188>>2]),256==(0|(b=b+1|0)))break s;n=l[i+8>>2]}}l[a+4>>2]=t,l[a>>2]=m;break b;case 0:if(!(l[r+40>>2]||1&(n=l[r+4>>2]))){for(o=r+8|0,b=0;;){t=1&n;s:{t:{if(v[o+(b>>>3)|0]>>>(7&b)&1){if(!t)break t;break s}if(!t)break s}v[192+(t=a+b|0)|0]||(c=l[i+8>>2],k[t+192|0]=1,t=a,p=4,b<<24>>24<0||!(255&b)&&(p=20,l[c+12>>2]>1)||(p=u[59344+(b<<1)>>1]),d=p+d|0,l[t+188>>2]=d)}if(256==(0|(b=b+1|0)))break;n=l[r+4>>2]}l[a>>2]=1,l[a+4>>2]=1,o=0;break b}r=l[i+8>>2],i=l[r+12>>2],l[a+4>>2]=l[r+8>>2],l[a>>2]=i;break b;default:if(t=l[r+8>>2],b=l[r+4>>2],d=t-b|0,2&(c=l[r+12>>2])){if(o=l[i+8>>2],4&c)b=w(ci(o,b,t),l[l[i+8>>2]+8>>2]);else{s:if(!(b>>>0>=t>>>0))for(;;){if(((c=0|f[l[o>>2]](b))+n|0)>24)break s;t:if(!(b>>>0>=t>>>0||(m=0,(0|c)<1)))for(;;){if(k[44+(a+n|0)|0]=v[0|b],n=n+1|0,(b=b+1|0)>>>0>=t>>>0)break t;if(!((0|(m=m+1|0))<(0|c)))break}if((0|n)>23)break s;if(!(b>>>0<t>>>0))break}if(l[a+40>>2]=n,l[a+36>>2]=1,!((0|(b=d))<1)){if(b=l[r+8>>2],o=4,t=l[i+16>>2],i=l[i+8>>2],n=l[r+4>>2],r=v[0|n],v[192+(c=r+a|0)|0]||(k[c+192|0]=1,(0|(c=r<<24>>24))<0||!c&&(o=20,l[i+12>>2]>1)||(o=u[59344+(r<<1)>>1]),l[a+188>>2]=l[a+188>>2]+o),(0|(o=0|f[l[i+40>>2]](-1073741825&t,n,b,s+16|0)))<0)break b;if(o)for(b=0;f[l[i+28>>2]](l[8+((s+16|0)+w(b,20)|0)>>2],s+472|0),n=v[s+472|0],v[192+(r=n+a|0)|0]||(k[r+192|0]=1,r=a,t=4,(0|(c=n<<24>>24))<0||!c&&(t=20,l[i+12>>2]>1)||(t=u[59344+(n<<1)>>1]),l[r+188>>2]=t+l[a+188>>2]),(0|o)!=(0|(b=b+1|0)););b=d}}l[a+4>>2]=b,l[a>>2]=d,n=l[a+40>>2]}else{s:if(!(b>>>0>=t>>>0))for(c=l[i+8>>2];;){if(((o=0|f[l[c>>2]](b))+n|0)>24)break s;t:if(!(b>>>0>=t>>>0||(m=0,(0|o)<1)))for(;;){if(k[44+(a+n|0)|0]=v[0|b],n=n+1|0,(b=b+1|0)>>>0>=t>>>0)break t;if(!((0|(m=m+1|0))<(0|o)))break}if((0|n)>23)break s;if(!(b>>>0<t>>>0))break}l[a+40>>2]=n,(0|d)<1||(b=4,r=v[l[r+4>>2]],v[192+(t=r+a|0)|0]||(i=l[i+8>>2],k[t+192|0]=1,(0|(t=r<<24>>24))<0||!t&&(b=20,l[i+12>>2]>1)||(b=u[59344+(r<<1)>>1]),l[a+188>>2]=l[a+188>>2]+b)),l[a+4>>2]=d,l[a>>2]=d}if(o=0,(0|n)!=(0|d))break b;l[a+32>>2]=1;break b;case 8:}for(n=a+16|0,p=s+136|0,g=s+84|0,D=s+32|0,d=r;;){if(o=e(l[d+4>>2],s+16|0,i))break b;if((0|r)!=(0|d)){if(l[a+8>>2]=l[a+8>>2]&l[s+24>>2],l[a+12>>2]=l[a+12>>2]&l[s+28>>2],Vr(n,D,i),Vr(_,g,i),Vr(c,p,i),l[a+188>>2])if(l[s+204>>2]&&(t=l[a+176>>2],b=l[s+188>>2],t>>>0>=b>>>0)){for(o=l[i+8>>2],h[E>>2]>b>>>0&&(l[E>>2]=b),b=l[s+192>>2],t>>>0<b>>>0&&(l[a+176>>2]=b),m=0,b=0;;){t=a+b|0;n:{if(v[208+(b+s|0)|0])k[t+192|0]=1;else if(!v[t+192|0])break n;t=4,b>>>0>127||!b&&(t=20,l[o+12>>2]>1)||(t=u[59344+(b<<1)>>1]),m=t+m|0}if(256==(0|(b=b+1|0)))break}l[a+188>>2]=m,l[a+180>>2]=l[a+180>>2]&l[s+196>>2],l[a+184>>2]=l[a+184>>2]&l[s+200>>2]}else wn(E,0,276);b=l[s+16>>2],h[a>>2]>b>>>0&&(l[a>>2]=b),b=l[s+20>>2],h[a+4>>2]>=b>>>0||(l[a+4>>2]=b)}else qb(a,s+16|0,448);if(!(d=l[d+8>>2]))break}o=0}return ne=s+496|0,o}(a,b+160|0,b+136|0)))){a=l[b+168>>2],r=l[b+172>>2],l[e+84>>2]=(6144&a?20485:53253)&a|2072&r,24&r&&(l[e+88>>2]=l[b+160>>2],l[e+92>>2]=l[b+164>>2]),d=e;b:{n:{s:{t:{c:{o:{u:{if(!(l[b+252>>2]<1&&l[b+200>>2]<=0)){if(cf(l[e+56>>2],b+176|0,b+228|0),(0|(r=l[b+348>>2]))<=0)a=l[b+200>>2];else if(a=l[b+200>>2],!((0|(t=200/(r>>>0)|0))<1)){if((0|(s=w(w(l[b+196>>2]?1:2,a),20)))<1)break u;if(n=0,c=l[b+180>>2],r=0,-1!=(0|c)&&(c=c-l[b+176>>2]|0,r=1,c>>>0>99||(r=u[59136+(c<<1)>>1])),r=w(r,s),-1!=(0|(s=l[b+336>>2]))&&(n=1,(s=s-l[b+332>>2]|0)>>>0>99||(n=u[59136+(s<<1)>>1])),(0|(n=w(n,t)))>(0|r))break u;if(!((0|n)<(0|r))&&h[b+332>>2]<h[b+176>>2])break u}if(r=0,!a)break b;if(l[b+196>>2]){if(n=Cb(a),l[e+100>>2]=n,!n){r=-5;break b}l[e+104>>2]=qb(n,b+204|0,a)+a,a=4;break n}if(!((0|a)>=1&&(n=Cb(a+1|0)))){l[e+100>>2]=0,r=-5;break b}if(s=a,a=qb(n,b+204|0,a),k[0|(n=s+a|0)]=0,l[e+104>>2]=n,l[e+100>>2]=a,c=0|f[l[l[e+56>>2]+60>>2]](a,n),(0|(n=l[b+200>>2]))<=2&&(a=1,!c|2!=(0|n)))break n;if(o=l[e+104>>2],t=l[e+100>>2],(0|(s=o-t|0))<=255){if(wn(e+108|0,s,256),(0|(n=s+-1|0))<1)break s;for(s=o+(-1^t)|0,a=0;k[108+(v[a+t|0]+e|0)|0]=n-a,(0|s)!=(0|(a=a+1|0)););break s}if(!(n=l[e+364>>2])&&(n=Cb(1024),l[e+364>>2]=n,!n)){r=-5;break b}for(a=0;l[(a<<2)+n>>2]=s,256!=(0|(a=a+1|0)););break t}if(l[b+348>>2]<1)break o}qb(e+108|0,b+352|0,256),l[e+76>>2]=5,r=l[b+332>>2],l[e+372>>2]=r,l[e+376>>2]=l[b+336>>2],-1!=(0|r)&&(l[e+80>>2]=r+1),a=l[e+96>>2]|2&l[b+340>>2],r=l[b+344>>2],d=e+96|0;break c}if(a=l[e+96>>2]|2&a,l[e+96>>2]=a,l[b+164>>2])break f;d=e+96|0}l[d>>2]=32&r|a;break f}if(!((0|(s=s+-1|0))<1))for(o=o+(-1^t)|0,a=0;l[(v[a+t|0]<<2)+n>>2]=s-a,(0|o)!=(0|(a=a+1|0)););}a=c?2:3}l[d+76>>2]=a,a=l[b+176>>2],l[e+372>>2]=a,l[e+376>>2]=l[b+180>>2],-1!=(0|a)&&(l[e+80>>2]=(a+l[e+104>>2]|0)-l[e+100>>2])}if(l[e+96>>2]=32&l[b+188>>2]|l[e+96>>2]|2&l[b+184>>2],!r)break f}}if(l[b+68>>2]<1)break i;if(!(e=l[b+8>>2]))break i;Lb(e);break i}(r=l[b+120>>2])&&(Lb(r),l[b+120>>2]=0),r=Pk(l[b+132>>2],e);f:if(r)l[b+68>>2]<1||(e=l[b+8>>2])&&Lb(e);else{r=l[e+8>>2],n=l[e+4>>2];k:{if(r>>>0>=(a=n+1|0)>>>0)r=l[e>>2];else{for(;(r<<=1)>>>0<a>>>0;);if(l[e+8>>2]=r,r=Ub(l[e>>2],r),l[e>>2]=r,!r){r=-5;break k}n=l[e+4>>2]}k[r+n|0]=1,r=0,h[e+4>>2]>=a>>>0||(l[e+4>>2]=a)}if(l[b+68>>2]>=1){r=0;k:if(!(l[b>>2]<1))for(t=0;;){if(s=l[b+8>>2]+(t<<3)|0,a=l[s+4>>2],!(2&v[a+5|0])){r=-11;break k}if(n=l[a+24>>2],a=l[e+8>>2],c=l[s>>2],a>>>0>=(s=c+4|0)>>>0)a=l[e>>2];else{for(;(a<<=1)>>>0<s>>>0;);if(l[e+8>>2]=a,a=Ub(l[e>>2],a),l[e>>2]=a,!a){r=-5;break k}}if(k[0|(a=a+c|0)]=n,k[a+1|0]=n>>>8,k[a+2|0]=n>>>16,k[a+3|0]=n>>>24,h[e+4>>2]<s>>>0&&(l[e+4>>2]=s),!((0|(t=t+1|0))<l[b>>2]))break}if((a=l[b+8>>2])&&Lb(a),r)break i;r=0}if(l[e+40>>2]||l[e+16>>2]){l[e+44>>2]=2;break f}if(l[e+36>>2]){l[e+44>>2]=1;break f}l[e+44>>2]=0}kn(l[b+132>>2]);break a}!(e=l[b+56>>2])|!i||(a=l[b+24>>2],l[i+4>>2]=e,l[i>>2]=a,l[i+8>>2]=l[b+60>>2]),kn(l[b+132>>2]),(e=l[b+120>>2])&&Lb(e)}return ne=b+608|0,r}(l[e>>2],r,a,b),r=0,!t))break e}(r=l[e>>2])&&($r(r),Lb(r)),l[e>>2]=0,r=t}return r}function Dr(e,r,a){var i=0,f=0,k=0;e:{r:{a:{i:{f:{k:{if(8&v[34728]){if(i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=16,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+20>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,!(8&v[34680]))break k;if(!i)break f;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=14,l[(f=k)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+20>>2]=i,l[f+84>>2]=0,l[f+88>>2]=0,f=l[r>>2])if(r=l[r+4>>2],k){if(l[f+4>>2])break r;l[k>>2]=f,l[f+4>>2]=k}else k=f;else r=k;if(r){if(l[r>>2])break e;if(l[i+4>>2])break r;l[r>>2]=i,l[i+4>>2]=r}else k=i;if(r=l[a+4>>2],a=l[a>>2],l[(f=e)>>2]=k,l[f+4>>2]=i,a){if(l[i>>2])break e;if(l[a+4>>2])break r;l[i>>2]=a,l[a+4>>2]=i,l[e+4>>2]=r}else r=i;if(e=l[i+8>>2],!(8&v[8+(e>>>0<41?w(e,24)+34336|0:35320)|0]))break i;if(!r)break a;return void(l[i+20>>2]=r)}P(16334,14282,198,35491),M()}P(16334,14282,190,35477),M()}P(16744,14282,191,35477),M()}P(17424,14282,205,35510),M()}P(16744,14282,206,35510),M()}P(25731,14282,238,35660),M()}P(25534,14282,237,35660),M()}function Sr(e,r,a){var i,f=0,k=0,b=0;ne=i=ne+-64|0,r=ub(l[e+8>>2],r,i+12|0,0);e:if(!((b=r+2|0)>>>0>2)){r=-122;r:switch(b-1|0){case 1:l[e+12>>2]=l[i+12>>2],r=0;break e;case 0:break e}if(64&v[l[a+12>>2]+8|0]){if(a=l[e+4>>2],r=l[e+8>>2],b=l[r+4>>2],l[i+56>>2]=l[e+40>>2],k=l[4+(f=e+32|0)>>2],l[i+48>>2]=l[f>>2],l[i+52>>2]=k,k=l[4+(f=e+24|0)>>2],l[i+40>>2]=l[f>>2],l[i+44>>2]=k,k=l[4+(f=e+16|0)>>2],l[i+32>>2]=l[f>>2],l[i+36>>2]=k,f=l[e+12>>2],l[i+24>>2]=l[e+8>>2],l[i+28>>2]=f,f=l[e+4>>2],l[i+16>>2]=l[e>>2],l[i+20>>2]=f,l[e+40>>2]=l[r+40>>2],f=l[r+36>>2],l[e+32>>2]=l[r+32>>2],l[e+36>>2]=f,f=l[r+28>>2],l[e+24>>2]=l[r+24>>2],l[e+28>>2]=f,f=l[r+20>>2],l[e+16>>2]=l[r+16>>2],l[e+20>>2]=f,f=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=f,f=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=f,l[r+40>>2]=l[i+56>>2],f=l[i+52>>2],l[r+32>>2]=l[i+48>>2],l[r+36>>2]=f,f=l[i+44>>2],l[r+24>>2]=l[i+40>>2],l[r+28>>2]=f,f=l[i+36>>2],l[r+16>>2]=l[i+32>>2],l[r+20>>2]=f,f=l[i+28>>2],l[r+8>>2]=l[i+24>>2],l[r+12>>2]=f,f=l[i+20>>2],l[r>>2]=l[i+16>>2],l[r+4>>2]=f,l[e>>2]|l[e+16>>2]||(f=l[e+4>>2],k=e+20|0,l[e+4>>2]=k,l[e+8>>2]=k+(l[e+8>>2]-f|0)),l[r>>2]|l[r+16>>2]||(f=l[r+4>>2],k=r+20|0,l[r+4>>2]=k,l[r+8>>2]=k+(l[r+8>>2]-f|0)),l[e+4>>2]=r,l[r+8>>2]=b,r=l[e+8>>2])for(;;){if(!(b=Mr(a))){r=-5;break e}if(l[b+8>>2]=l[r+4>>2],l[r+4>>2]=b,!(r=l[r+8>>2]))break}if(r=0,8192==(0|a))for(;l[e>>2]=8,e=l[e+8>>2];);}}return ne=i- -64|0,r}function Fr(e,r,a){var i,f=0,k=0,b=0,n=0,s=0,t=0;if(i=f=ne-16|0,ne=f,k=l[a+60>>2],ne=f=f-(19+(b=k<<2)&-16)|0,(0|k)>=1&&wn(f+4|0,0,b),l[i+12>>2]=0,function e(r,a,i){for(var f=0,k=0;;){e:{r:{if(f=l[r>>2],6!=(0|(k=l[f>>2]))){if((r=k+-5|0)>>>0>4)break e;a:switch(r-1|0){case 2:case 3:for(;e(f+4|0,a,i),f=l[f+8>>2];);break e;case 0:break e;case 1:break r}if(r=l[f+8>>2],e(f+8|0,a,i),a=r,r=l[f+8>>2],(0|a)==(0|r)|5!=l[r>>2])break e;return void _i(f,r)}if(1==l[f+8>>2]){if(4&v[f+5|0]){r=l[i>>2]+1|0,l[i>>2]=r,l[(l[f+12>>2]<<2)+a>>2]=r,l[f+12>>2]=l[i>>2],r=f+20|0;continue}l[r>>2]=l[f+20>>2],l[f+20>>2]=0,kn(f);continue}r=f+20|0;continue}if(r=f+8|0,l[f+8>>2])continue}break}}(e,f,i+12|0),!(e=function e(r,a){for(var i=0,f=0,k=0,b=0,n=0;;){if((i=l[r>>2]+-4|0)>>>0>5)return 0;e:{r:switch(i-1|0){case 3:case 4:for(;;){if(i=e(l[r+4>>2],a))break e;if(!(r=l[r+8>>2]))break}return 0;case 0:r=l[r+8>>2];continue;case 1:r=l[r+20>>2];continue;default:if(i=-209,!(8&v[r+5|0]))break e;if((0|(k=l[r+8>>2]))>=1)for(i=l[r+36>>2],b=i||r+12|0,i=0;(0|(n=l[(l[(i<<2)+b>>2]<<2)+a>>2]))>=1&&(l[(f<<2)+b>>2]=n,f=f+1|0),(0|k)!=(0|(i=i+1|0)););return l[r+8>>2]=f,0;case 2:}if(i=0,r=l[r+8>>2])continue}break}return i}(l[e>>2],f))){if((0|(b=l[a+60>>2]))>=1)for(s=a+72|0,k=1,e=1;l[(t=e<<2)+f>>2]>=1&&(n=l[a+104>>2],l[(n=n||s)+(k<<2)>>2]=l[t+n>>2],k=k+1|0),t=(0|e)<(0|b),e=e+1|0,t;);for(b=l[a+16>>2],k=0,l[a+16>>2]=0,e=1;b>>>e&1&&((0|(s=l[f+(e<<2)>>2]))>31||(k|=1<<s,l[a+16>>2]=k)),32!=(0|(e=e+1|0)););e=l[a+64>>2],l[a+60>>2]=e,l[r+12>>2]=e,(e=l[r+72>>2])&&Lf(e,12,f),e=0}return ne=i+16|0,e}function Mr(e){var r;return(r=Cb(44))&&(l[r+8>>2]=0,l[r+12>>2]=-1,l[r+4>>2]=e,l[r>>2]=7),r}function Ar(e){var r=0;(r=l[e+72>>2])&&(Lf(r,10,0),(r=l[e+72>>2])&&function(e){var r=0,a=0,i=0,f=0;if(r=l[e+12>>2],(0|(i=l[e+4>>2]))>=1)for(;;){if(a=l[(f<<2)+r>>2]){for(;r=l[a+12>>2],Lb(a),a=r;);i=l[e+4>>2],r=l[e+12>>2]}if(!((0|(f=f+1|0))<(0|i)))break}Lb(r),Lb(e)}(r)),l[e+72>>2]=0}function xr(e,r,a){var i,f=0,k=0;ne=i=ne-96|0;e:{if(!(!(k=l[r>>2])|l[r+4>>2]!=(0|k)|36!=l[k+8>>2])){if(!(f=l[a>>2])|l[a+4>>2]!=(0|f))break e;if((a=l[f+8>>2])>>>0>4)break e;r:switch(a-1|0){case 0:case 1:case 2:break e}if(a=l[f+36>>2],l[i+56>>2]=l[f+32>>2],l[i+60>>2]=a,a=l[f+28>>2],l[i+48>>2]=l[f+24>>2],l[i+52>>2]=a,7!=(15&v[i+48|0]))break e;r:{a:if(!((a=l[f+8>>2])>>>0>4))switch(a-1|0){case 0:case 1:case 2:break a;default:break r}P(15967,14282,185,35465),M()}for(a=l[f+36>>2],l[i+40>>2]=l[f+32>>2],l[i+44>>2]=a,a=l[f+28>>2],l[i+32>>2]=l[f+24>>2],l[i+36>>2]=a,Nb(i- -64|0,i+32|0),a=l[i+76>>2],l[i+24>>2]=l[i+72>>2],l[i+28>>2]=a,a=l[i+68>>2],l[i+16>>2]=l[i+64>>2],l[i+20>>2]=a,a=l[k+36>>2],l[i+8>>2]=l[k+32>>2],l[i+12>>2]=a,a=l[k+28>>2],l[i>>2]=l[k+24>>2],l[i+4>>2]=a,Ae(i+80|0,i+16|0,i),a=l[i+92>>2],l[k+32>>2]=l[i+88>>2],l[k+36>>2]=a,a=l[i+84>>2],l[k+24>>2]=l[i+80>>2],l[k+28>>2]=a;a=l[f>>2],Wk(f),f=a,a;);return a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,void(ne=i+96|0)}P(20871,14282,534,35612),M()}P(21251,14282,535,35612),M()}function Pr(e,r,a,i){var f,k,b,n,s,t=0,c=0,o=0,h=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,A=0,x=0,T=0,R=0,O=0,I=0,z=0;ne=f=ne-10752|0,l[(y=k=f+10632|0)>>2]=0,l[y+4>>2]=0,l[f+10624>>2]=0,l[f+10628>>2]=0,l[f+10616>>2]=0,l[f+10620>>2]=0,l[f+5408>>2]=0,l[f+5412>>2]=0,l[f+5244>>2]=f+5248,l[f+5240>>2]=128,x=200,c=T=f+5408|0,R=o=f+7008|0,S=E=f+10208|0,y=-2;e:{r:{a:{i:{for(;;){f:{u[E>>1]=_;k:{b:{n:{s:{t:{c:{o:{if(((t=x<<1)+S|0)-2>>>0<=E>>>0){if(x>>>0>9999)break f;if(!(t=Bb(w(x=t>>>0<1e4?t:1e4,26)+30|0)))break f;if(T=qb((R=qb((t=qb(t,S,(E=1+(g=E-S>>1)|0)<<1))+(15+(c=x<<1)&-16)|0,R,E<<4))+(x<<4)|0,T,E<<3),(f+10208|0)!=(0|S)&&Lb(S),o=(g<<4)+R|0,(t+c|0)-2>>>0<=(E=t+(g<<1)|0)>>>0)break o;c=(g<<3)+T|0,S=t}if(27==(0|_))break i;if(65378==(0|(h=d[48336+(_<<1)>>1])))break c;if(-2==(0|y)&&(y=Tr(f+10624|0,f+10616|0,r,a,i)),(0|y)<1?(y=0,t=0):(t=2,y>>>0>302||(t=v[y+48976|0])),(g=t+(h<<16>>16)|0)>>>0>1972)break c;if((0|t)!=u[49280+(g<<=1)>>1])break c;if((0|(t=u[g+53232>>1]))>0){y=l[f+10628>>2],l[o+16>>2]=l[f+10624>>2],l[o+20>>2]=y,y=l[k+4>>2],l[o+24>>2]=l[k>>2],l[o+28>>2]=y,y=l[f+10620>>2],l[c+8>>2]=l[f+10616>>2],l[c+12>>2]=y,A=A?A+-1|0:0,c=c+8|0,o=o+16|0,y=-2;break k}if(-152==(0|t)){t=y;break n}g=0-t|0;break t}S=t;break i}if(t=y,!(g=v[_+57184|0]))break s}t=v[g+57504|0],F=l[12+(_=(1-t<<4)+o|0)>>2],l[(h=O=f+5400|0)>>2]=l[_+8>>2],l[h+4>>2]=F,h=l[_+4>>2],l[f+5392>>2]=l[_>>2],l[f+5396>>2]=h,F=0-t|0,_=c-(t<<3)|0,t?(l[f+5384>>2]=l[_+8>>2],h=l[c+4>>2]):(h=l[4+((F<<3)+c|0)>>2],l[f+5384>>2]=h),l[f+5388>>2]=h;t:if(!((t=g+-2|0)>>>0>160)){c:switch(t-1|0){default:c=l[4+(t=o+-32|0)>>2],l[f+80>>2]=l[t>>2],l[f+84>>2]=c,c=l[4+(t=o+-16|0)>>2],l[f+72>>2]=l[t>>2],l[f+76>>2]=c,$b(f+5224|0,f+80|0,f+72|0),ln(f+5216|0,34),t=l[f+5228>>2],l[f+64>>2]=l[f+5224>>2],l[f+68>>2]=t,t=l[f+5220>>2],l[f+56>>2]=l[f+5216>>2],l[f+60>>2]=t,$b(f+5232|0,f- -64|0,f+56|0),t=l[f+5236>>2],l[f+48>>2]=l[f+5232>>2],l[f+52>>2]=t,t=l[o+4>>2],l[f+40>>2]=l[o>>2],l[f+44>>2]=t,$b(f+10704|0,f+48|0,f+40|0),t=l[f+10708>>2],l[e>>2]=l[f+10704>>2],l[e+4>>2]=t;break t;case 0:c=l[4+(t=o+-32|0)>>2],l[f+112>>2]=l[t>>2],l[f+116>>2]=c,c=l[4+(t=o+-16|0)>>2],l[f+104>>2]=l[t>>2],l[f+108>>2]=c,$b(f+5208|0,f+112|0,f+104|0),t=l[f+5212>>2],l[f+96>>2]=l[f+5208>>2],l[f+100>>2]=t,t=l[o+4>>2],l[f+88>>2]=l[o>>2],l[f+92>>2]=t,$b(f+10704|0,f+96|0,f+88|0),t=l[f+10708>>2],l[e>>2]=l[f+10704>>2],l[e+4>>2]=t;break t;case 1:l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 2:if(h=l[4+(t=o+-16|0)>>2],l[f+152>>2]=l[t>>2],l[f+156>>2]=h,!Eb(f+152|0)){c=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=c,l[r>>2]=l[r>>2]+1,l[f+128>>2]=15847,c=l[f+10708>>2],l[f+136>>2]=l[f+10704>>2],l[f+140>>2]=c,_n(a,f+136|0,15033,f+128|0),l[(c=f+10704|0)>>2]=0,l[c+4>>2]=0,c=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=c,c=l[t+4>>2],l[f+120>>2]=l[t>>2],l[f+124>>2]=c,sn(f+120|0);break t}c=l[t+4>>2],l[f+144>>2]=l[t>>2],l[f+148>>2]=c,Nr(f+10704|0,f+144|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 3:l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 4:c=l[4+(t=o+-16|0)>>2],l[f+168>>2]=l[t>>2],l[f+172>>2]=c,t=l[o+4>>2],l[f+160>>2]=l[o>>2],l[f+164>>2]=t,$b(f+10704|0,f+168|0,f+160|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 5:l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 6:c=l[4+(t=o+-16|0)>>2],l[f+184>>2]=l[t>>2],l[f+188>>2]=c,t=l[o+4>>2],l[f+176>>2]=l[o>>2],l[f+180>>2]=t,Cn(f+10704|0,f+184|0,f+176|0,128),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 7:c=l[4+(t=o+-16|0)>>2],l[f+200>>2]=l[t>>2],l[f+204>>2]=c,t=l[o+4>>2],l[f+192>>2]=l[o>>2],l[f+196>>2]=t,qi(f+10704|0,f+200|0,f+192|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 8:c=l[4+(t=o+-64|0)>>2],l[f+224>>2]=l[t>>2],l[f+228>>2]=c,c=l[4+(t=o+-32|0)>>2],l[f+216>>2]=l[t>>2],l[f+220>>2]=c,t=l[o+4>>2],l[f+208>>2]=l[o>>2],l[f+212>>2]=t,Di(f+10704|0,f+224|0,f+216|0,f+208|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 9:c=l[4+(t=o+-112|0)>>2],l[f+256>>2]=l[t>>2],l[f+260>>2]=c,c=l[4+(t=o+-80|0)>>2],l[f+248>>2]=l[t>>2],l[f+252>>2]=c,c=l[4+(t=o+-48|0)>>2],l[f+240>>2]=l[t>>2],l[f+244>>2]=c,c=l[4+(t=o+-16|0)>>2],l[f+232>>2]=l[t>>2],l[f+236>>2]=c,mr(f+10704|0,f+256|0,f+248|0,f+240|0,f+232|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 10:c=l[4+(t=o+-144|0)>>2],l[f+296>>2]=l[t>>2],l[f+300>>2]=c,c=l[4+(t=o+-112|0)>>2],l[f+288>>2]=l[t>>2],l[f+292>>2]=c,c=l[4+(t=o+-80|0)>>2],l[f+280>>2]=l[t>>2],l[f+284>>2]=c,c=l[4+(t=o+-48|0)>>2],l[f+272>>2]=l[t>>2],l[f+276>>2]=c,c=l[4+(t=o+-16|0)>>2],l[f+264>>2]=l[t>>2],l[f+268>>2]=c,ai(f+10704|0,f+296|0,f+288|0,f+280|0,f+272|0,f+264|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 11:l[(t=f+5200|0)>>2]=0,l[t+4>>2]=0,c=l[4+(t=o+-112|0)>>2],l[f+336>>2]=l[t>>2],l[f+340>>2]=c,c=l[4+(t=o+-80|0)>>2],l[f+328>>2]=l[t>>2],l[f+332>>2]=c,c=l[4+(t=o+-48|0)>>2],l[f+320>>2]=l[t>>2],l[f+324>>2]=c,c=l[(t=o+-16|0)>>2],t=l[t+4>>2],h=l[f+5204>>2],l[f+304>>2]=l[f+5200>>2],l[f+308>>2]=h,l[f+312>>2]=c,l[f+316>>2]=t,ai(f+10704|0,f+336|0,f+328|0,f+320|0,f+312|0,f+304|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 12:c=l[4+(t=o+-48|0)>>2],l[f+360>>2]=l[t>>2],l[f+364>>2]=c,c=l[4+(t=o+-16|0)>>2],l[f+352>>2]=l[t>>2],l[f+356>>2]=c,t=l[o+4>>2],l[f+344>>2]=l[o>>2],l[f+348>>2]=t,zf(f+10704|0,f+360|0,f+352|0,f+344|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 13:t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+368>>2]=16243,t=l[f+10708>>2],l[f+384>>2]=l[f+10704>>2],l[f+388>>2]=t,_n(a,f+384|0,15033,f+368|0),c=l[4+(t=o+-32|0)>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c;break t;case 14:t=l[o+4>>2],l[f+408>>2]=l[o>>2],l[f+412>>2]=t,br(f+5192|0,f+408|0),c=l[4+(t=o+-32|0)>>2],l[f+400>>2]=l[t>>2],l[f+404>>2]=c,t=l[f+5196>>2],l[f+392>>2]=l[f+5192>>2],l[f+396>>2]=t,Pf(f+10704|0,f+400|0,f+392|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 15:ln(f+5184|0,18),t=l[o+4>>2],l[f+424>>2]=l[o>>2],l[f+428>>2]=t,t=l[f+5188>>2],l[f+416>>2]=l[f+5184>>2],l[f+420>>2]=t,Pf(f+10704|0,f+424|0,f+416|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 16:t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+432>>2]=16634,t=l[f+10708>>2],l[f+448>>2]=l[f+10704>>2],l[f+452>>2]=t,_n(a,f+448|0,15033,f+432|0),c=l[4+(t=o+-32|0)>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c;break t;case 17:h=l[12+(t=o+-32|0)>>2],l[f+544>>2]=l[t+8>>2],l[f+548>>2]=h,h=l[t+4>>2],l[f+536>>2]=l[t>>2],l[f+540>>2]=h,l[f+528>>2]=Gb(f+536|0),Yb(f+10704|0,17036,f+528|0),p=l[4+(c=f+10712|0)>>2],l[f+520>>2]=l[c>>2],l[f+524>>2]=p,h=l[f+10708>>2],l[f+512>>2]=l[f+10704>>2],l[f+516>>2]=h,h=Gb(f+512|0),p=l[o+4>>2],l[f+504>>2]=l[o>>2],l[f+508>>2]=p,rr(f+5176|0,h,f+504|0),h=l[f+5388>>2],l[f+496>>2]=l[f+5384>>2],l[f+500>>2]=h,h=l[f+5180>>2],l[f+488>>2]=l[f+5176>>2],l[f+492>>2]=h,ef(f+10744|0,f+496|0,a,f+488|0),h=l[f+10748>>2],l[f+5392>>2]=l[f+10744>>2],l[f+5396>>2]=h,h=l[t+12>>2],l[f+480>>2]=l[t+8>>2],l[f+484>>2]=h,h=l[t+4>>2],l[f+472>>2]=l[t>>2],l[f+476>>2]=h,zb(f+472|0),t=l[c+4>>2],l[f+464>>2]=l[c>>2],l[f+468>>2]=t,t=l[f+10708>>2],l[f+456>>2]=l[f+10704>>2],l[f+460>>2]=t,zb(f+456|0);break t;case 18:ln(f+5168|0,18),c=l[4+(t=o+-16|0)>>2],l[f+560>>2]=l[t>>2],l[f+564>>2]=c,t=l[f+5172>>2],l[f+552>>2]=l[f+5168>>2],l[f+556>>2]=t,Pf(f+10704|0,f+560|0,f+552|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 19:c=l[4+(t=o+-32|0)>>2],l[f+600>>2]=l[t>>2],l[f+604>>2]=c,Jk(f+5152|0,f+600|0),t=l[o+4>>2],l[f+592>>2]=l[o>>2],l[f+596>>2]=t,Jk(f+5144|0,f+592|0),t=l[f+5156>>2],l[f+584>>2]=l[f+5152>>2],l[f+588>>2]=t,t=l[f+5148>>2],l[f+576>>2]=l[f+5144>>2],l[f+580>>2]=t,$b(f+5160|0,f+584|0,f+576|0),t=l[f+5164>>2],l[f+568>>2]=l[f+5160>>2],l[f+572>>2]=t,Nk(f+10704|0,17359,f+568|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 20:c=l[4+(t=o+-32|0)>>2],l[f+616>>2]=l[t>>2],l[f+620>>2]=c,t=l[o+4>>2],l[f+608>>2]=l[o>>2],l[f+612>>2]=t,ur(f+10704|0,f+616|0,f+608|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 21:c=l[4+(t=o+-32|0)>>2],l[f+632>>2]=l[t>>2],l[f+636>>2]=c,t=l[o+4>>2],l[f+624>>2]=l[o>>2],l[f+628>>2]=t,Ga(f+10704|0,f+632|0,f+624|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 22:c=l[4+(t=o+-32|0)>>2],l[f+648>>2]=l[t>>2],l[f+652>>2]=c,t=l[o+4>>2],l[f+640>>2]=l[o>>2],l[f+644>>2]=t,Qa(f+10704|0,f+648|0,f+640|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 23:t=v[o+4|0]|v[o+5|0]<<8|v[o+6|0]<<16|v[o+7|0]<<24,l[f+10648>>2]=v[0|o]|v[o+1|0]<<8|v[o+2|0]<<16|v[o+3|0]<<24,l[f+10652>>2]=t,c=v[4+(t=o+-32|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,l[f+10640>>2]=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10644>>2]=c,Hn(f+10704|0,29678),ln(f+10728|0,1),t=l[f+10732>>2],l[f+760>>2]=l[f+10728>>2],l[f+764>>2]=t,t=l[f+10652>>2],l[f+752>>2]=l[f+10648>>2],l[f+756>>2]=t,$b(f+10736|0,f+760|0,f+752|0),t=l[f+10740>>2],l[f+744>>2]=l[f+10736>>2],l[f+748>>2]=t,t=l[f+10708>>2],l[f+736>>2]=l[f+10704>>2],l[f+740>>2]=t,$b(f+10744|0,f+744|0,f+736|0),t=l[f+10644>>2],l[f+728>>2]=l[f+10640>>2],l[f+732>>2]=t,Jk(f+10688|0,f+728|0),l[(t=f+10664|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+720>>2]=l[f+10704>>2],l[f+724>>2]=t,Gk(f+10656|0,6,f+720|0),t=l[f+10668>>2],l[f+712>>2]=l[f+10664>>2],l[f+716>>2]=t,t=l[f+10660>>2],l[f+704>>2]=l[f+10656>>2],l[f+708>>2]=t,Qa(f+10672|0,f+712|0,f+704|0),t=l[f+10676>>2],l[f+696>>2]=l[f+10672>>2],l[f+700>>2]=t,Jk(f+10680|0,f+696|0),t=l[f+10692>>2],l[f+688>>2]=l[f+10688>>2],l[f+692>>2]=t,t=l[f+10684>>2],l[f+680>>2]=l[f+10680>>2],l[f+684>>2]=t,$b(f+10696|0,f+688|0,f+680|0),t=l[f+10700>>2],l[f+672>>2]=l[f+10696>>2],l[f+676>>2]=t,Nk(f+10720|0,17657,f+672|0),t=l[f+10748>>2],l[f+664>>2]=l[f+10744>>2],l[f+668>>2]=t,t=l[f+10724>>2],l[f+656>>2]=l[f+10720>>2],l[f+660>>2]=t,$b(f+5136|0,f+664|0,f+656|0),t=l[f+5140>>2],l[f+5392>>2]=l[f+5136>>2],l[f+5396>>2]=t;break t;case 24:c=l[4+(t=o+-32|0)>>2],l[f+800>>2]=l[t>>2],l[f+804>>2]=c,Jk(f+5120|0,f+800|0),t=l[o+4>>2],l[f+792>>2]=l[o>>2],l[f+796>>2]=t,Jk(f+5112|0,f+792|0),t=l[f+5124>>2],l[f+784>>2]=l[f+5120>>2],l[f+788>>2]=t,t=l[f+5116>>2],l[f+776>>2]=l[f+5112>>2],l[f+780>>2]=t,$b(f+5128|0,f+784|0,f+776|0),t=l[f+5132>>2],l[f+768>>2]=l[f+5128>>2],l[f+772>>2]=t,Nk(f+10704|0,17657,f+768|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 25:c=l[4+(t=o+-32|0)>>2],l[f+816>>2]=l[t>>2],l[f+820>>2]=c,t=l[o+4>>2],l[f+808>>2]=l[o>>2],l[f+812>>2]=t,$b(f+10704|0,f+816|0,f+808|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 26:c=l[4+(t=o+-32|0)>>2],l[f+832>>2]=l[t>>2],l[f+836>>2]=c,t=l[o+4>>2],l[f+824>>2]=l[o>>2],l[f+828>>2]=t,Dr(f+10704|0,f+832|0,f+824|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 27:c=l[4+(t=o+-32|0)>>2],l[f+848>>2]=l[t>>2],l[f+852>>2]=c,t=l[o+4>>2],l[f+840>>2]=l[o>>2],l[f+844>>2]=t,Yk(f+10704|0,f+848|0,f+840|0,43),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 28:c=l[4+(t=o+-32|0)>>2],l[f+864>>2]=l[t>>2],l[f+868>>2]=c,t=l[o+4>>2],l[f+856>>2]=l[o>>2],l[f+860>>2]=t,vf(f+10704|0,f+864|0,f+856|0,43),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 29:l[(t=f+5096|0)>>2]=0,l[t+4>>2]=0,t=l[f+5100>>2],l[f+888>>2]=l[f+5096>>2],l[f+892>>2]=t,Nk(f+5104|0,17995,f+888|0),t=l[o+4>>2],l[f+880>>2]=l[o>>2],l[f+884>>2]=t,t=l[f+5108>>2],l[f+872>>2]=l[f+5104>>2],l[f+876>>2]=t,$b(f+10704|0,f+880|0,f+872|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 30:c=l[4+(t=o+-32|0)>>2],l[f+904>>2]=l[t>>2],l[f+908>>2]=c,t=l[o+4>>2],l[f+896>>2]=l[o>>2],l[f+900>>2]=t,Yk(f+10704|0,f+904|0,f+896|0,45),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 31:c=l[4+(t=o+-32|0)>>2],l[f+920>>2]=l[t>>2],l[f+924>>2]=c,t=l[o+4>>2],l[f+912>>2]=l[o>>2],l[f+916>>2]=t,vf(f+10704|0,f+920|0,f+912|0,45),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 32:c=l[4+(t=o+-32|0)>>2],l[f+936>>2]=l[t>>2],l[f+940>>2]=c,t=l[o+4>>2],l[f+928>>2]=l[o>>2],l[f+932>>2]=t,Yk(f+10704|0,f+936|0,f+928|0,42),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 33:c=l[4+(t=o+-32|0)>>2],l[f+952>>2]=l[t>>2],l[f+956>>2]=c,t=l[o+4>>2],l[f+944>>2]=l[o>>2],l[f+948>>2]=t,vf(f+10704|0,f+952|0,f+944|0,42),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 34:if(c=l[4+(t=o+-32|0)>>2],l[f+1e3>>2]=l[t>>2],l[f+1004>>2]=c,t=l[o+4>>2],l[f+992>>2]=l[o>>2],l[f+996>>2]=t,Yk(f+10704|0,f+1e3|0,f+992|0,47),t=l[f+10708>>2],c=l[f+10704>>2],l[f+5392>>2]=c,l[f+5396>>2]=t,l[f+984>>2]=c,l[f+988>>2]=t,!Ye(f+984|0))break t;t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+960>>2]=18360,t=l[f+10708>>2],l[f+976>>2]=l[f+10704>>2],l[f+980>>2]=t,_n(a,f+976|0,15033,f+960|0);break t;case 35:if(c=l[4+(t=o+-32|0)>>2],l[f+1048>>2]=l[t>>2],l[f+1052>>2]=c,t=l[o+4>>2],l[f+1040>>2]=l[o>>2],l[f+1044>>2]=t,Yk(f+10704|0,f+1048|0,f+1040|0,37),t=l[f+10708>>2],c=l[f+10704>>2],l[f+5392>>2]=c,l[f+5396>>2]=t,l[f+1032>>2]=c,l[f+1036>>2]=t,!Ye(f+1032|0))break t;t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+1008>>2]=18795,t=l[f+10708>>2],l[f+1024>>2]=l[f+10704>>2],l[f+1028>>2]=t,_n(a,f+1024|0,15033,f+1008|0);break t;case 36:c=l[4+(t=o+-32|0)>>2],l[f+1064>>2]=l[t>>2],l[f+1068>>2]=c,t=l[o+4>>2],l[f+1056>>2]=l[o>>2],l[f+1060>>2]=t,vf(f+10704|0,f+1064|0,f+1056|0,47),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 37:c=l[4+(t=o+-32|0)>>2],l[f+1080>>2]=l[t>>2],l[f+1084>>2]=c,t=l[o+4>>2],l[f+1072>>2]=l[o>>2],l[f+1076>>2]=t,vf(f+10704|0,f+1080|0,f+1072|0,37),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 38:c=l[4+(t=o+-32|0)>>2],l[f+1096>>2]=l[t>>2],l[f+1100>>2]=c,t=l[o+4>>2],l[f+1088>>2]=l[o>>2],l[f+1092>>2]=t,Yk(f+10704|0,f+1096|0,f+1088|0,265),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 39:c=l[4+(t=o+-32|0)>>2],l[f+1112>>2]=l[t>>2],l[f+1116>>2]=c,t=l[o+4>>2],l[f+1104>>2]=l[o>>2],l[f+1108>>2]=t,Yk(f+10704|0,f+1112|0,f+1104|0,266),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 40:c=l[4+(t=o+-32|0)>>2],l[f+1128>>2]=l[t>>2],l[f+1132>>2]=c,t=l[o+4>>2],l[f+1120>>2]=l[o>>2],l[f+1124>>2]=t,Yk(f+10704|0,f+1128|0,f+1120|0,60),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 41:c=l[4+(t=o+-32|0)>>2],l[f+1144>>2]=l[t>>2],l[f+1148>>2]=c,t=l[o+4>>2],l[f+1136>>2]=l[o>>2],l[f+1140>>2]=t,Yk(f+10704|0,f+1144|0,f+1136|0,62),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 42:c=l[4+(t=o+-32|0)>>2],l[f+1160>>2]=l[t>>2],l[f+1164>>2]=c,t=l[o+4>>2],l[f+1152>>2]=l[o>>2],l[f+1156>>2]=t,Yk(f+10704|0,f+1160|0,f+1152|0,293),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 43:c=l[4+(t=o+-32|0)>>2],l[f+1176>>2]=l[t>>2],l[f+1180>>2]=c,t=l[o+4>>2],l[f+1168>>2]=l[o>>2],l[f+1172>>2]=t,Yk(f+10704|0,f+1176|0,f+1168|0,294),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 44:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 45:c=l[4+(t=o+-16|0)>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c;break t;case 46:if(h=l[4+(t=o+-16|0)>>2],l[f+1280>>2]=l[t>>2],l[f+1284>>2]=h,!Eb(f+1280|0)){c=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=c,l[r>>2]=l[r>>2]+1,l[f+1200>>2]=15847,c=l[f+10708>>2],l[f+1208>>2]=l[f+10704>>2],l[f+1212>>2]=c,_n(a,f+1208|0,15033,f+1200|0),l[(c=f+10704|0)>>2]=0,l[c+4>>2]=0,c=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=c,h=l[4+(c=o+-32|0)>>2],l[f+1192>>2]=l[c>>2],l[f+1196>>2]=h,sn(f+1192|0),c=l[t+4>>2],l[f+1184>>2]=l[t>>2],l[f+1188>>2]=c,sn(f+1184|0);break t}if(c=l[t+4>>2],l[f+1272>>2]=l[t>>2],l[f+1276>>2]=c,7!=(0|zn(f+1272|0))){c=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=c,l[r>>2]=l[r>>2]+1,l[f+1248>>2]=19115,c=l[f+10708>>2],l[f+1264>>2]=l[f+10704>>2],l[f+1268>>2]=c,_n(a,f+1264|0,15033,f+1248|0),l[(c=f+10704|0)>>2]=0,l[c+4>>2]=0,c=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=c,h=l[4+(c=o+-32|0)>>2],l[f+1240>>2]=l[c>>2],l[f+1244>>2]=h,sn(f+1240|0),c=l[t+4>>2],l[f+1232>>2]=l[t>>2],l[f+1236>>2]=c,sn(f+1232|0);break t}h=l[4+(c=o+-32|0)>>2],l[f+1224>>2]=l[c>>2],l[f+1228>>2]=h,c=l[t+4>>2],l[f+1216>>2]=l[t>>2],l[f+1220>>2]=c,xr(f+10704|0,f+1224|0,f+1216|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 47:h=l[4+(t=o+-48|0)>>2],l[f+1360>>2]=l[t>>2],l[f+1364>>2]=h,qn(f+10704|0,f+1360|0),D=l[4+(c=f+10712|0)>>2],l[(h=f+1352|0)>>2]=l[c>>2],l[h+4>>2]=D,h=l[f+10708>>2],l[f+1344>>2]=l[f+10704>>2],l[f+1348>>2]=h,h=Gb(f+1344|0),D=l[o+12>>2],l[(p=f+1336|0)>>2]=l[o+8>>2],l[p+4>>2]=D,p=l[o+4>>2],l[f+1328>>2]=l[o>>2],l[f+1332>>2]=p,aa(f+10744|0,h,Gb(f+1328|0),1),h=l[f+10748>>2],l[f+5392>>2]=l[f+10744>>2],l[f+5396>>2]=h,h=l[t+4>>2],l[f+1320>>2]=l[t>>2],l[f+1324>>2]=h,sn(f+1320|0),h=l[o+12>>2],l[(t=f+1312|0)>>2]=l[o+8>>2],l[t+4>>2]=h,t=l[o+4>>2],l[f+1304>>2]=l[o>>2],l[f+1308>>2]=t,zb(f+1304|0),h=l[c+4>>2],l[(t=f+1296|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+1288>>2]=l[f+10704>>2],l[f+1292>>2]=t,zb(f+1288|0);break t;case 48:h=l[4+(t=o+-32|0)>>2],l[f+1440>>2]=l[t>>2],l[f+1444>>2]=h,qn(f+10704|0,f+1440|0),D=l[4+(c=f+10712|0)>>2],l[(h=f+1432|0)>>2]=l[c>>2],l[h+4>>2]=D,h=l[f+10708>>2],l[f+1424>>2]=l[f+10704>>2],l[f+1428>>2]=h,h=Gb(f+1424|0),D=l[o+12>>2],l[(p=f+1416|0)>>2]=l[o+8>>2],l[p+4>>2]=D,p=l[o+4>>2],l[f+1408>>2]=l[o>>2],l[f+1412>>2]=p,aa(f+10744|0,h,Gb(f+1408|0),0),h=l[f+10748>>2],l[f+5392>>2]=l[f+10744>>2],l[f+5396>>2]=h,h=l[t+4>>2],l[f+1400>>2]=l[t>>2],l[f+1404>>2]=h,sn(f+1400|0),h=l[o+12>>2],l[(t=f+1392|0)>>2]=l[o+8>>2],l[t+4>>2]=h,t=l[o+4>>2],l[f+1384>>2]=l[o>>2],l[f+1388>>2]=t,zb(f+1384|0),h=l[c+4>>2],l[(t=f+1376|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+1368>>2]=l[f+10704>>2],l[f+1372>>2]=t,zb(f+1368|0);break t;case 49:t=l[o+4>>2],l[f+1488>>2]=l[o>>2],l[f+1492>>2]=t,qn(f+10704|0,f+1488|0),p=l[4+(t=f+10712|0)>>2],l[(c=f+1480|0)>>2]=l[t>>2],l[c+4>>2]=p,c=l[f+10708>>2],l[f+1472>>2]=l[f+10704>>2],l[f+1476>>2]=c,aa(f+10744|0,Gb(f+1472|0),0,0),c=l[f+10748>>2],l[f+5392>>2]=l[f+10744>>2],l[f+5396>>2]=c,c=l[o+4>>2],l[f+1464>>2]=l[o>>2],l[f+1468>>2]=c,sn(f+1464|0),h=l[t+4>>2],l[(c=f+1456|0)>>2]=l[t>>2],l[c+4>>2]=h,t=l[f+10708>>2],l[f+1448>>2]=l[f+10704>>2],l[f+1452>>2]=t,zb(f+1448|0);break t;case 50:if(t=l[o+4>>2],l[f+1544>>2]=l[o>>2],l[f+1548>>2]=t,!Eb(f+1544|0)){t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+1520>>2]=19496,t=l[f+10708>>2],l[f+1536>>2]=l[f+10704>>2],l[f+1540>>2]=t,_n(a,f+1536|0,15033,f+1520|0),jb(f+5080|0,19762),h=l[4+(c=f+5088|0)>>2],l[(t=f+1512|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+5084>>2],l[f+1504>>2]=l[f+5080>>2],l[f+1508>>2]=t,un(f+10704|0,f+1504|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t,t=l[o+4>>2],l[f+1496>>2]=l[o>>2],l[f+1500>>2]=t,sn(f+1496|0);break t}t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 51:p=l[12+(t=o+-48|0)>>2],l[(h=f+1592|0)>>2]=l[t+8>>2],l[h+4>>2]=p,h=l[t+4>>2],l[f+1584>>2]=l[t>>2],l[f+1588>>2]=h,c=Gb(f+1584|0),l[(h=f+5072|0)>>2]=0,l[h+4>>2]=0,h=l[f+5076>>2],l[f+1576>>2]=l[f+5072>>2],l[f+1580>>2]=h,p=l[4+(h=o+-16|0)>>2],l[f+1568>>2]=l[h>>2],l[f+1572>>2]=p,Qk(f+10704|0,c,f+1576|0,f+1568|0),c=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=c,h=l[t+12>>2],l[(c=f+1560|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+1552>>2]=l[t>>2],l[f+1556>>2]=c,zb(f+1552|0);break t;case 52:p=l[12+(t=o+-96|0)>>2],l[(h=f+1640|0)>>2]=l[t+8>>2],l[h+4>>2]=p,h=l[t+4>>2],l[f+1632>>2]=l[t>>2],l[f+1636>>2]=h,c=Gb(f+1632|0),p=l[4+(h=o+-64|0)>>2],l[f+1624>>2]=l[h>>2],l[f+1628>>2]=p,p=l[4+(h=o+-16|0)>>2],l[f+1616>>2]=l[h>>2],l[f+1620>>2]=p,Qk(f+10704|0,c,f+1624|0,f+1616|0),c=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=c,h=l[t+12>>2],l[(c=f+1608|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+1600>>2]=l[t>>2],l[f+1604>>2]=c,zb(f+1600|0);break t;case 53:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 54:c=l[4+(t=o+-32|0)>>2],l[f+1656>>2]=l[t>>2],l[f+1660>>2]=c,t=l[o+4>>2],l[f+1648>>2]=l[o>>2],l[f+1652>>2]=t,$b(f+10704|0,f+1656|0,f+1648|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 55:c=l[o+12>>2],l[(t=f+1688|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+1680>>2]=l[o>>2],l[f+1684>>2]=t,b=f+10704|0,n=Gb(f+1680|0),s=void 0,4&v[35185]||(P(17730,14282,211,35526),M()),s=Bb(104),l[s+96>>2]=-1,l[s+8>>2]=35,l[s>>2]=0,l[s+4>>2]=0,l[s+76>>2]=0,l[s+80>>2]=0,l[s+68>>2]=-1,l[s+72>>2]=-1,l[s+60>>2]=0,l[s+64>>2]=0,l[s+52>>2]=-1,l[s+56>>2]=-1,l[s+48>>2]=0,l[s+84>>2]=0,l[s+88>>2]=0,l[s+64>>2]=En(n),l[b+4>>2]=s,l[b>>2]=s,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t,c=l[o+12>>2],l[(t=f+1672|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+1664>>2]=l[o>>2],l[f+1668>>2]=t,zb(f+1664|0);break t;case 56:c=l[o+12>>2],l[(t=f+1720|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+1712>>2]=l[o>>2],l[f+1716>>2]=t,Wf(f+10704|0,Gb(f+1712|0)),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t,c=l[o+12>>2],l[(t=f+1704|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+1696>>2]=l[o>>2],l[f+1700>>2]=t,zb(f+1696|0);break t;case 57:jb(f+10704|0,20058),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 58:c=l[4+(t=o+-16|0)>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c,h=l[12+(t=o+-32|0)>>2],l[(c=f+1736|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+1728>>2]=l[t>>2],l[f+1732>>2]=c,zb(f+1728|0);break t;case 59:h=l[12+(t=o+-16|0)>>2],l[(c=f+5400|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c;break t;case 60:c=l[4+(t=o+-16|0)>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c,h=l[12+(t=o+-32|0)>>2],l[(c=f+1752|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+1744>>2]=l[t>>2],l[f+1748>>2]=c,zb(f+1744|0);break t;case 61:jb(f+5056|0,19762),h=l[4+(c=f+5064|0)>>2],l[(t=f+1768|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+5060>>2],l[f+1760>>2]=l[f+5056>>2],l[f+1764>>2]=t,un(f+10704|0,f+1760|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 62:c=l[o+12>>2],l[(t=f+1800|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+1792>>2]=l[o>>2],l[f+1796>>2]=t,un(f+5048|0,f+1792|0),c=l[4+(t=o+-16|0)>>2],l[f+1784>>2]=l[t>>2],l[f+1788>>2]=c,t=l[f+5052>>2],l[f+1776>>2]=l[f+5048>>2],l[f+1780>>2]=t,Yk(f+10704|0,f+1784|0,f+1776|0,43),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 63:h=l[12+(t=o+-64|0)>>2],l[(c=f+1880|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+1872>>2]=l[t>>2],l[f+1876>>2]=c,Nb(f+5024|0,f+1872|0),c=l[4+(h=f+5032|0)>>2],t=f+10712|0,p=l[h>>2],l[t>>2]=p,l[t+4>>2]=c,h=l[f+5028>>2],D=l[f+5024>>2],l[f+10704>>2]=D,l[f+10708>>2]=h,z=v[0|(t=o+-16|0)]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,t=v[t+4|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,l[(I=f+1864|0)>>2]=p,l[I+4>>2]=c,l[f+1856>>2]=D,l[f+1860>>2]=h,l[f+10720>>2]=z,l[f+10724>>2]=t,un(f+10728|0,f+1856|0),t=l[f+10732>>2],l[f+1848>>2]=l[f+10728>>2],l[f+1852>>2]=t,Jk(f+10736|0,f+1848|0),t=l[f+10740>>2],l[f+1840>>2]=l[f+10736>>2],l[f+1844>>2]=t,Nk(f+10744|0,33450,f+1840|0),t=l[f+10724>>2],l[f+1832>>2]=l[f+10720>>2],l[f+1836>>2]=t,t=l[f+10748>>2],l[f+1824>>2]=l[f+10744>>2],l[f+1828>>2]=t,$b(f+5040|0,f+1832|0,f+1824|0),c=l[4+(t=o+-48|0)>>2],l[f+1816>>2]=l[t>>2],l[f+1820>>2]=c,t=l[f+5044>>2],l[f+1808>>2]=l[f+5040>>2],l[f+1812>>2]=t,Yk(f+10704|0,f+1816|0,f+1808|0,43),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 64:c=l[4+(t=o+-48|0)>>2],l[f+1904>>2]=l[t>>2],l[f+1908>>2]=c,c=l[4+(t=o+-16|0)>>2],l[f+1896>>2]=l[t>>2],l[f+1900>>2]=c,t=l[o+4>>2],l[f+1888>>2]=l[o>>2],l[f+1892>>2]=t,zf(f+10704|0,f+1904|0,f+1896|0,f+1888|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 65:c=l[4+(t=o+-16|0)>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c;break t;case 66:c=l[4+(t=o+-32|0)>>2],l[f+1920>>2]=l[t>>2],l[f+1924>>2]=c,t=l[o+4>>2],l[f+1912>>2]=l[o>>2],l[f+1916>>2]=t,$b(f+10704|0,f+1920|0,f+1912|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 67:l[(t=f+5008|0)>>2]=0,l[t+4>>2]=0,t=l[f+5012>>2],l[f+1944>>2]=l[f+5008>>2],l[f+1948>>2]=t,Nk(f+5016|0,17995,f+1944|0),t=l[o+4>>2],l[f+1936>>2]=l[o>>2],l[f+1940>>2]=t,t=l[f+5020>>2],l[f+1928>>2]=l[f+5016>>2],l[f+1932>>2]=t,$b(f+10704|0,f+1936|0,f+1928|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 68:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 69:l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 70:l[(t=f+5e3|0)>>2]=0,l[t+4>>2]=0,t=l[f+5004>>2],l[f+1952>>2]=l[f+5e3>>2],l[f+1956>>2]=t,Nk(f+10704|0,20308,f+1952|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 71:c=l[o+12>>2],l[(t=f+2072|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+2064>>2]=l[o>>2],l[f+2068>>2]=t,l[f+2048>>2]=Gb(f+2064|0),Yb(f+10704|0,17036,f+2048|0),p=l[4+(t=f+10712|0)>>2],l[(c=f+2040|0)>>2]=l[t>>2],l[c+4>>2]=p,c=l[f+10708>>2],l[f+2032>>2]=l[f+10704>>2],l[f+2036>>2]=c,Qi(f+4984|0,6,Gb(f+2032|0)),l[(c=f+4968|0)>>2]=0,l[c+4>>2]=0,c=l[f+4972>>2],l[f+2024>>2]=l[f+4968>>2],l[f+2028>>2]=c,Nk(f+4976|0,20584,f+2024|0),c=l[f+4988>>2],l[f+2016>>2]=l[f+4984>>2],l[f+2020>>2]=c,c=l[f+4980>>2],l[f+2008>>2]=l[f+4976>>2],l[f+2012>>2]=c,$b(f+4992|0,f+2016|0,f+2008|0),c=l[f+5388>>2],l[f+2e3>>2]=l[f+5384>>2],l[f+2004>>2]=c,c=l[f+4996>>2],l[f+1992>>2]=l[f+4992>>2],l[f+1996>>2]=c,ef(f+10744|0,f+2e3|0,a,f+1992|0),h=l[t+4>>2],l[(c=f+1984|0)>>2]=l[t>>2],l[c+4>>2]=h,t=l[f+10748>>2],l[f+5392>>2]=l[f+10744>>2],l[f+5396>>2]=t,t=l[f+10708>>2],l[f+1976>>2]=l[f+10704>>2],l[f+1980>>2]=t,zb(f+1976|0),c=l[o+12>>2],l[(t=f+1968|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+1960>>2]=l[o>>2],l[f+1964>>2]=t,zb(f+1960|0);break t;case 72:t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+2080>>2]=20796,t=l[f+10708>>2],l[f+2088>>2]=l[f+10704>>2],l[f+2092>>2]=t,_n(a,f+2088|0,15033,f+2080|0),l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 73:h=l[12+(t=o+-16|0)>>2],l[(c=f+2144|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+2136>>2]=l[t>>2],l[f+2140>>2]=c,un(f+4960|0,f+2136|0),c=l[f+4964>>2],h=l[f+4960>>2],l[f+10728>>2]=h,l[f+10732>>2]=c,p=v[0|(t=o+-32|0)]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,t=v[t+4|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,l[f+2128>>2]=h,l[f+2132>>2]=c,l[f+10720>>2]=p,l[f+10724>>2]=t,yn(f+10744|0,f+2128|0),t=l[f+10748>>2],l[f+2120>>2]=l[f+10744>>2],l[f+2124>>2]=t,t=l[f+10724>>2],l[f+2112>>2]=l[f+10720>>2],l[f+2116>>2]=t,$b(f+10704|0,f+2120|0,f+2112|0),ln(f+10736|0,11),t=l[f+10708>>2],l[f+2104>>2]=l[f+10704>>2],l[f+2108>>2]=t,t=l[f+10740>>2],l[f+2096>>2]=l[f+10736>>2],l[f+2100>>2]=t,$b(f+10696|0,f+2104|0,f+2096|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 74:l[(t=f+4952|0)>>2]=0,l[t+4>>2]=0,h=l[12+(t=o+-16|0)>>2],l[(c=f+2200|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+2192>>2]=l[t>>2],l[f+2196>>2]=c,un(f+4944|0,f+2192|0),t=l[f+4956>>2],l[f+10720>>2]=l[f+4952>>2],l[f+10724>>2]=t,t=l[f+4948>>2],c=l[f+4944>>2],l[f+2184>>2]=c,l[f+2188>>2]=t,l[f+10728>>2]=c,l[f+10732>>2]=t,yn(f+10744|0,f+2184|0),t=l[f+10748>>2],l[f+2176>>2]=l[f+10744>>2],l[f+2180>>2]=t,t=l[f+10724>>2],l[f+2168>>2]=l[f+10720>>2],l[f+2172>>2]=t,$b(f+10704|0,f+2176|0,f+2168|0),ln(f+10736|0,11),t=l[f+10708>>2],l[f+2160>>2]=l[f+10704>>2],l[f+2164>>2]=t,t=l[f+10740>>2],l[f+2152>>2]=l[f+10736>>2],l[f+2156>>2]=t,$b(f+10696|0,f+2160|0,f+2152|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 75:c=v[4+(t=o+-16|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,h=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10728>>2]=h,l[f+10732>>2]=c,p=v[4+(t=o+-48|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,l[f+10720>>2]=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10724>>2]=p,l[f+2240>>2]=h,l[f+2244>>2]=c,yn(f+10744|0,f+2240|0),t=l[f+10748>>2],l[f+2232>>2]=l[f+10744>>2],l[f+2236>>2]=t,t=l[f+10724>>2],l[f+2224>>2]=l[f+10720>>2],l[f+2228>>2]=t,$b(f+10704|0,f+2232|0,f+2224|0),ln(f+10736|0,11),t=l[f+10708>>2],l[f+2216>>2]=l[f+10704>>2],l[f+2220>>2]=t,t=l[f+10740>>2],l[f+2208>>2]=l[f+10736>>2],l[f+2212>>2]=t,$b(f+10696|0,f+2216|0,f+2208|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 76:l[(t=f+4936|0)>>2]=0,l[t+4>>2]=0,c=v[4+(t=o+-16|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,t=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10728>>2]=t,l[f+10732>>2]=c,h=l[f+4940>>2],l[f+10720>>2]=l[f+4936>>2],l[f+10724>>2]=h,l[f+2280>>2]=t,l[f+2284>>2]=c,yn(f+10744|0,f+2280|0),t=l[f+10748>>2],l[f+2272>>2]=l[f+10744>>2],l[f+2276>>2]=t,t=l[f+10724>>2],l[f+2264>>2]=l[f+10720>>2],l[f+2268>>2]=t,$b(f+10704|0,f+2272|0,f+2264|0),ln(f+10736|0,11),t=l[f+10708>>2],l[f+2256>>2]=l[f+10704>>2],l[f+2260>>2]=t,t=l[f+10740>>2],l[f+2248>>2]=l[f+10736>>2],l[f+2252>>2]=t,$b(f+10696|0,f+2256|0,f+2248|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 77:c=l[o+12>>2],l[(t=f+2336|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+2328>>2]=l[o>>2],l[f+2332>>2]=t,un(f+4928|0,f+2328|0),c=l[f+4932>>2],h=l[f+4928>>2],l[f+10728>>2]=h,l[f+10732>>2]=c,p=v[0|(t=o+-16|0)]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,t=v[t+4|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,l[f+2320>>2]=h,l[f+2324>>2]=c,l[f+10720>>2]=p,l[f+10724>>2]=t,yn(f+10744|0,f+2320|0),t=l[f+10748>>2],l[f+2312>>2]=l[f+10744>>2],l[f+2316>>2]=t,t=l[f+10724>>2],l[f+2304>>2]=l[f+10720>>2],l[f+2308>>2]=t,$b(f+10704|0,f+2312|0,f+2304|0),ln(f+10736|0,10),t=l[f+10708>>2],l[f+2296>>2]=l[f+10704>>2],l[f+2300>>2]=t,t=l[f+10740>>2],l[f+2288>>2]=l[f+10736>>2],l[f+2292>>2]=t,$b(f+10696|0,f+2296|0,f+2288|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 78:l[(t=f+4920|0)>>2]=0,l[t+4>>2]=0,c=l[o+12>>2],l[(t=f+2392|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+2384>>2]=l[o>>2],l[f+2388>>2]=t,un(f+4912|0,f+2384|0),t=l[f+4924>>2],l[f+10720>>2]=l[f+4920>>2],l[f+10724>>2]=t,t=l[f+4916>>2],c=l[f+4912>>2],l[f+2376>>2]=c,l[f+2380>>2]=t,l[f+10728>>2]=c,l[f+10732>>2]=t,yn(f+10744|0,f+2376|0),t=l[f+10748>>2],l[f+2368>>2]=l[f+10744>>2],l[f+2372>>2]=t,t=l[f+10724>>2],l[f+2360>>2]=l[f+10720>>2],l[f+2364>>2]=t,$b(f+10704|0,f+2368|0,f+2360|0),ln(f+10736|0,10),t=l[f+10708>>2],l[f+2352>>2]=l[f+10704>>2],l[f+2356>>2]=t,t=l[f+10740>>2],l[f+2344>>2]=l[f+10736>>2],l[f+2348>>2]=t,$b(f+10696|0,f+2352|0,f+2344|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 79:c=v[o+4|0]|v[o+5|0]<<8|v[o+6|0]<<16|v[o+7|0]<<24,h=v[0|o]|v[o+1|0]<<8|v[o+2|0]<<16|v[o+3|0]<<24,l[f+10728>>2]=h,l[f+10732>>2]=c,p=v[4+(t=o+-32|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,l[f+10720>>2]=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10724>>2]=p,l[f+2432>>2]=h,l[f+2436>>2]=c,yn(f+10744|0,f+2432|0),t=l[f+10748>>2],l[f+2424>>2]=l[f+10744>>2],l[f+2428>>2]=t,t=l[f+10724>>2],l[f+2416>>2]=l[f+10720>>2],l[f+2420>>2]=t,$b(f+10704|0,f+2424|0,f+2416|0),ln(f+10736|0,10),t=l[f+10708>>2],l[f+2408>>2]=l[f+10704>>2],l[f+2412>>2]=t,t=l[f+10740>>2],l[f+2400>>2]=l[f+10736>>2],l[f+2404>>2]=t,$b(f+10696|0,f+2408|0,f+2400|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 80:l[(t=f+4904|0)>>2]=0,l[t+4>>2]=0,t=v[o+4|0]|v[o+5|0]<<8|v[o+6|0]<<16|v[o+7|0]<<24,c=v[0|o]|v[o+1|0]<<8|v[o+2|0]<<16|v[o+3|0]<<24,l[f+10728>>2]=c,l[f+10732>>2]=t,h=l[f+4908>>2],l[f+10720>>2]=l[f+4904>>2],l[f+10724>>2]=h,l[f+2472>>2]=c,l[f+2476>>2]=t,yn(f+10744|0,f+2472|0),t=l[f+10748>>2],l[f+2464>>2]=l[f+10744>>2],l[f+2468>>2]=t,t=l[f+10724>>2],l[f+2456>>2]=l[f+10720>>2],l[f+2460>>2]=t,$b(f+10704|0,f+2464|0,f+2456|0),ln(f+10736|0,10),t=l[f+10708>>2],l[f+2448>>2]=l[f+10704>>2],l[f+2452>>2]=t,t=l[f+10740>>2],l[f+2440>>2]=l[f+10736>>2],l[f+2444>>2]=t,$b(f+10696|0,f+2448|0,f+2440|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 81:t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+2480>>2]=21103,t=l[f+10708>>2],l[f+2488>>2]=l[f+10704>>2],l[f+2492>>2]=t,_n(a,f+2488|0,15033,f+2480|0),l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 82:h=l[12+(t=o+-16|0)>>2],l[(c=f+2520|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+2512>>2]=l[t>>2],l[f+2516>>2]=c,zb(f+2512|0),t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+2496>>2]=21103,t=l[f+10708>>2],l[f+2504>>2]=l[f+10704>>2],l[f+2508>>2]=t,_n(a,f+2504|0,15033,f+2496|0),l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 83:c=v[4+(t=o+-32|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,h=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10728>>2]=h,l[f+10732>>2]=c,p=v[4+(t=o+-64|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,l[f+10720>>2]=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10724>>2]=p,l[f+2560>>2]=h,l[f+2564>>2]=c,yn(f+10744|0,f+2560|0),t=l[f+10748>>2],l[f+2552>>2]=l[f+10744>>2],l[f+2556>>2]=t,t=l[f+10724>>2],l[f+2544>>2]=l[f+10720>>2],l[f+2548>>2]=t,$b(f+10704|0,f+2552|0,f+2544|0),ln(f+10736|0,11),t=l[f+10708>>2],l[f+2536>>2]=l[f+10704>>2],l[f+2540>>2]=t,t=l[f+10740>>2],l[f+2528>>2]=l[f+10736>>2],l[f+2532>>2]=t,$b(f+10696|0,f+2536|0,f+2528|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 84:c=v[4+(t=o+-16|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,h=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10728>>2]=h,l[f+10732>>2]=c,p=v[4+(t=o+-48|0)|0]|v[t+5|0]<<8|v[t+6|0]<<16|v[t+7|0]<<24,l[f+10720>>2]=v[0|t]|v[t+1|0]<<8|v[t+2|0]<<16|v[t+3|0]<<24,l[f+10724>>2]=p,l[f+2600>>2]=h,l[f+2604>>2]=c,yn(f+10744|0,f+2600|0),t=l[f+10748>>2],l[f+2592>>2]=l[f+10744>>2],l[f+2596>>2]=t,t=l[f+10724>>2],l[f+2584>>2]=l[f+10720>>2],l[f+2588>>2]=t,$b(f+10704|0,f+2592|0,f+2584|0),ln(f+10736|0,10),t=l[f+10708>>2],l[f+2576>>2]=l[f+10704>>2],l[f+2580>>2]=t,t=l[f+10740>>2],l[f+2568>>2]=l[f+10736>>2],l[f+2572>>2]=t,$b(f+10696|0,f+2576|0,f+2568|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 85:ln(f+4896|0,13),c=l[4+(t=o+-48|0)>>2],l[f+2616>>2]=l[t>>2],l[f+2620>>2]=c,t=l[f+4900>>2],l[f+2608>>2]=l[f+4896>>2],l[f+2612>>2]=t,$b(f+10704|0,f+2616|0,f+2608|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 86:ln(f+4888|0,12),c=l[4+(t=o+-32|0)>>2],l[f+2632>>2]=l[t>>2],l[f+2636>>2]=c,t=l[f+4892>>2],l[f+2624>>2]=l[f+4888>>2],l[f+2628>>2]=t,$b(f+10704|0,f+2632|0,f+2624|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 87:c=l[4+(t=o+-96|0)>>2],l[f+2656>>2]=l[t>>2],l[f+2660>>2]=c,c=l[4+(t=o+-64|0)>>2],l[f+2648>>2]=l[t>>2],l[f+2652>>2]=c,c=l[4+(t=o+-32|0)>>2],l[f+2640>>2]=l[t>>2],l[f+2644>>2]=c,Ob(f+10704|0,f+2656|0,f+2648|0,f+2640|0,11),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 88:h=l[10947],l[8+(t=f+4864|0)>>2]=l[10946],l[t+12>>2]=h,c=l[10945],l[t>>2]=l[10944],l[t+4>>2]=c,h=l[4+(c=f+4872|0)>>2],l[(t=f+2696|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4868>>2],l[f+2688>>2]=l[f+4864>>2],l[f+2692>>2]=t,un(f+4880|0,f+2688|0),c=l[4+(t=o+-80|0)>>2],l[f+2680>>2]=l[t>>2],l[f+2684>>2]=c,c=l[(t=o+-48|0)>>2],t=l[t+4>>2],h=l[f+4884>>2],l[f+2664>>2]=l[f+4880>>2],l[f+2668>>2]=h,l[f+2672>>2]=c,l[f+2676>>2]=t,Ob(f+10704|0,f+2680|0,f+2672|0,f+2664|0,11),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 89:h=l[10947],l[8+(t=f+4840|0)>>2]=l[10946],l[t+12>>2]=h,c=l[10945],l[t>>2]=l[10944],l[t+4>>2]=c,h=l[4+(c=f+4848|0)>>2],l[(t=f+2736|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4844>>2],l[f+2728>>2]=l[f+4840>>2],l[f+2732>>2]=t,un(f+4856|0,f+2728|0),c=l[(t=o+-80|0)>>2],t=l[t+4>>2],h=l[f+4860>>2],l[f+2712>>2]=l[f+4856>>2],l[f+2716>>2]=h,l[f+2720>>2]=c,l[f+2724>>2]=t,c=l[4+(t=o+-32|0)>>2],l[f+2704>>2]=l[t>>2],l[f+2708>>2]=c,Ob(f+10704|0,f+2720|0,f+2712|0,f+2704|0,11),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 90:c=l[4+(t=o+-80|0)>>2],l[f+2760>>2]=l[t>>2],l[f+2764>>2]=c,c=l[4+(t=o+-48|0)>>2],l[f+2752>>2]=l[t>>2],l[f+2756>>2]=c,c=l[4+(t=o+-16|0)>>2],l[f+2744>>2]=l[t>>2],l[f+2748>>2]=c,Ob(f+10704|0,f+2760|0,f+2752|0,f+2744|0,10),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 91:h=l[10947],l[8+(t=f+4816|0)>>2]=l[10946],l[t+12>>2]=h,c=l[10945],l[t>>2]=l[10944],l[t+4>>2]=c,h=l[4+(c=f+4824|0)>>2],l[(t=f+2800|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4820>>2],l[f+2792>>2]=l[f+4816>>2],l[f+2796>>2]=t,un(f+4832|0,f+2792|0),c=l[4+(t=o+-64|0)>>2],l[f+2784>>2]=l[t>>2],l[f+2788>>2]=c,c=l[(t=o+-32|0)>>2],t=l[t+4>>2],h=l[f+4836>>2],l[f+2768>>2]=l[f+4832>>2],l[f+2772>>2]=h,l[f+2776>>2]=c,l[f+2780>>2]=t,Ob(f+10704|0,f+2784|0,f+2776|0,f+2768|0,10),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 92:h=l[10947],l[8+(t=f+4792|0)>>2]=l[10946],l[t+12>>2]=h,c=l[10945],l[t>>2]=l[10944],l[t+4>>2]=c,h=l[4+(c=f+4800|0)>>2],l[(t=f+2840|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4796>>2],l[f+2832>>2]=l[f+4792>>2],l[f+2836>>2]=t,un(f+4808|0,f+2832|0),c=l[(t=o+-64|0)>>2],t=l[t+4>>2],h=l[f+4812>>2],l[f+2816>>2]=l[f+4808>>2],l[f+2820>>2]=h,l[f+2824>>2]=c,l[f+2828>>2]=t,c=l[4+(t=o+-16|0)>>2],l[f+2808>>2]=l[t>>2],l[f+2812>>2]=c,Ob(f+10704|0,f+2824|0,f+2816|0,f+2808|0,10),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 93:c=l[o+12>>2],l[(t=f+2856|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+2848>>2]=l[o>>2],l[f+2852>>2]=t,un(f+10704|0,f+2848|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 94:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 95:l[(t=f+4784|0)>>2]=0,l[t+4>>2]=0,t=v[o+12|0]|v[o+13|0]<<8|v[o+14|0]<<16|v[o+15|0]<<24,c=f+10712|0,p=v[o+8|0]|v[o+9|0]<<8|v[o+10|0]<<16|v[o+11|0]<<24,l[c>>2]=p,l[c+4>>2]=t,c=v[0|o]|v[o+1|0]<<8|v[o+2|0]<<16|v[o+3|0]<<24,h=v[o+4|0]|v[o+5|0]<<8|v[o+6|0]<<16|v[o+7|0]<<24,l[(D=f+2904|0)>>2]=p,l[D+4>>2]=t,l[f+10704>>2]=c,l[f+10708>>2]=h,t=l[f+4788>>2],l[f+10720>>2]=l[f+4784>>2],l[f+10724>>2]=t,l[f+2896>>2]=c,l[f+2900>>2]=h,un(f+10728|0,f+2896|0),t=l[f+10732>>2],l[f+2888>>2]=l[f+10728>>2],l[f+2892>>2]=t,Jk(f+10736|0,f+2888|0),t=l[f+10740>>2],l[f+2880>>2]=l[f+10736>>2],l[f+2884>>2]=t,Nk(f+10744|0,33450,f+2880|0),t=l[f+10724>>2],l[f+2872>>2]=l[f+10720>>2],l[f+2876>>2]=t,t=l[f+10748>>2],l[f+2864>>2]=l[f+10744>>2],l[f+2868>>2]=t,$b(f+10696|0,f+2872|0,f+2864|0),t=l[f+10700>>2],l[f+5392>>2]=l[f+10696>>2],l[f+5396>>2]=t;break t;case 96:c=l[4+(t=o+-16|0)>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c;break t;case 97:c=l[4+(t=o+-16|0)>>2],l[f+2912>>2]=l[t>>2],l[f+2916>>2]=c,pr(f+10704|0,f+2912|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 98:rn(f+4768|0),h=l[4+(c=f+4776|0)>>2],l[(t=f+2928|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4772>>2],l[f+2920>>2]=l[f+4768>>2],l[f+2924>>2]=t,un(f+10704|0,f+2920|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 99:if(h=l[4+(t=o+-16|0)>>2],l[f+2992>>2]=l[t>>2],l[f+2996>>2]=h,yr(f+10704|0,f+2992|0),l[f+10704>>2]){t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t}mn(f+4728|0),p=l[4+(h=f+4736|0)>>2],l[(c=f+2984|0)>>2]=l[h>>2],l[c+4>>2]=p,c=l[f+4732>>2],l[f+2976>>2]=l[f+4728>>2],l[f+2980>>2]=c,un(f+4744|0,f+2976|0),c=l[f+4748>>2],l[f+2968>>2]=l[f+4744>>2],l[f+2972>>2]=c,yn(f+4752|0,f+2968|0),c=l[f+4756>>2],l[f+2960>>2]=l[f+4752>>2],l[f+2964>>2]=c,c=l[t+4>>2],l[f+2952>>2]=l[t>>2],l[f+2956>>2]=c,$b(f+4760|0,f+2960|0,f+2952|0),ln(f+4720|0,5),t=l[f+4764>>2],l[f+2944>>2]=l[f+4760>>2],l[f+2948>>2]=t,t=l[f+4724>>2],l[f+2936>>2]=l[f+4720>>2],l[f+2940>>2]=t,$b(f+10744|0,f+2944|0,f+2936|0),t=l[f+10748>>2],l[f+5392>>2]=l[f+10744>>2],l[f+5396>>2]=t;break t;case 100:mn(f+4672|0),jb(f+4656|0,21472),c=l[a+12>>2],l[(t=f+3120|0)>>2]=l[a+8>>2],l[t+4>>2]=c,t=l[a+4>>2],l[f+3112>>2]=l[a>>2],l[f+3116>>2]=t,Nb(f+4640|0,f+3112|0),h=l[4+(c=f+4680|0)>>2],l[(t=f+3104|0)>>2]=l[c>>2],l[t+4>>2]=h,h=l[4+(c=f+4664|0)>>2],l[(t=f+3088|0)>>2]=l[c>>2],l[t+4>>2]=h,h=l[4+(c=f+4648|0)>>2],l[(t=f+3072|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4676>>2],l[f+3096>>2]=l[f+4672>>2],l[f+3100>>2]=t,t=l[f+4660>>2],l[f+3080>>2]=l[f+4656>>2],l[f+3084>>2]=t,t=l[f+4644>>2],l[f+3064>>2]=l[f+4640>>2],l[f+3068>>2]=t,en(f+4688|0,f+3096|0,f+3080|0,f+3064|0),jb(f+4624|0,21771),c=jr(a,l[f+5384>>2])+1|0,l[(t=f+4608|0)>>2]=4,l[t+4>>2]=0,m[t+8>>3]=0|c,h=l[4+(c=f+4696|0)>>2],l[(t=f+3056|0)>>2]=l[c>>2],l[t+4>>2]=h,h=l[4+(c=f+4632|0)>>2],l[(t=f+3040|0)>>2]=l[c>>2],l[t+4>>2]=h,h=l[4+(c=f+4616|0)>>2],l[(t=f+3024|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4692>>2],l[f+3048>>2]=l[f+4688>>2],l[f+3052>>2]=t,t=l[f+4628>>2],l[f+3032>>2]=l[f+4624>>2],l[f+3036>>2]=t,t=l[f+4612>>2],l[f+3016>>2]=l[f+4608>>2],l[f+3020>>2]=t,en(f+4704|0,f+3048|0,f+3032|0,f+3016|0),h=l[4+(c=f+4712|0)>>2],l[(t=f+3008|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4708>>2],l[f+3e3>>2]=l[f+4704>>2],l[f+3004>>2]=t,un(f+10704|0,f+3e3|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 101:c=l[o+12>>2],l[(t=f+3168|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+3160>>2]=l[o>>2],l[f+3164>>2]=t,Qi(f+4600|0,6,Gb(f+3160|0)),t=l[f+5388>>2],l[f+3152>>2]=l[f+5384>>2],l[f+3156>>2]=t,t=l[f+4604>>2],l[f+3144>>2]=l[f+4600>>2],l[f+3148>>2]=t,ef(f+10704|0,f+3152|0,a,f+3144|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t,c=l[o+12>>2],l[(t=f+3136|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+3128>>2]=l[o>>2],l[f+3132>>2]=t,zb(f+3128|0);break t;case 102:c=l[o+12>>2],l[(t=f+3272|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+3264>>2]=l[o>>2],l[f+3268>>2]=t,fn(t=Gb(f+3264|0),21953)?fn(t,22173)?fn(t,22505)?(l[(c=f+4536|0)>>2]=0,l[c+4>>2]=0,c=l[f+4540>>2],l[f+3256>>2]=l[f+4536>>2],l[f+3260>>2]=c,Nk(f+4544|0,t,f+3256|0),t=l[f+5388>>2],l[f+3248>>2]=l[f+5384>>2],l[f+3252>>2]=t,t=l[f+4548>>2],l[f+3240>>2]=l[f+4544>>2],l[f+3244>>2]=t,ef(f+10704|0,f+3248|0,a,f+3240|0)):(h=l[10947],l[8+(t=f+4552|0)>>2]=l[10946],l[t+12>>2]=h,c=l[10945],l[t>>2]=l[10944],l[t+4>>2]=c,h=l[4+(c=f+4560|0)>>2],l[(t=f+3232|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4556>>2],l[f+3224>>2]=l[f+4552>>2],l[f+3228>>2]=t,un(f+10704|0,f+3224|0)):(h=l[10939],l[8+(t=f+4568|0)>>2]=l[10938],l[t+12>>2]=h,c=l[10937],l[t>>2]=l[10936],l[t+4>>2]=c,h=l[4+(c=f+4576|0)>>2],l[(t=f+3216|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4572>>2],l[f+3208>>2]=l[f+4568>>2],l[f+3212>>2]=t,un(f+10704|0,f+3208|0)):(h=l[10943],l[8+(t=f+4584|0)>>2]=l[10942],l[t+12>>2]=h,c=l[10941],l[t>>2]=l[10940],l[t+4>>2]=c,h=l[4+(c=f+4592|0)>>2],l[(t=f+3200|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4588>>2],l[f+3192>>2]=l[f+4584>>2],l[f+3196>>2]=t,un(f+10704|0,f+3192|0)),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t,c=l[o+12>>2],l[(t=f+3184|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+3176>>2]=l[o>>2],l[f+3180>>2]=t,zb(f+3176|0);break t;case 103:D=l[12+(t=o+-48|0)>>2],l[(p=f+3328|0)>>2]=l[t+8>>2],l[p+4>>2]=D,p=l[t+4>>2],l[f+3320>>2]=l[t>>2],l[f+3324>>2]=p,h=Gb(f+3320|0),D=l[4+(p=o+-16|0)>>2],l[f+3312>>2]=l[p>>2],l[f+3316>>2]=D,Nk(f+10704|0,h,f+3312|0),h=l[f+10708>>2],p=l[f+10704>>2],l[f+5392>>2]=p,l[f+5396>>2]=h,D=l[4+(c=c+-24|0)>>2],l[f+3304>>2]=l[c>>2],l[f+3308>>2]=D,l[f+3296>>2]=p,l[f+3300>>2]=h,ef(f+10704|0,f+3304|0,a,f+3296|0),c=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=c,h=l[t+12>>2],l[(c=f+3288|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+3280>>2]=l[t>>2],l[f+3284>>2]=c,zb(f+3280|0);break t;case 104:case 105:l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 106:c=l[4+(t=o+-48|0)>>2],l[f+5392>>2]=l[t>>2],l[f+5396>>2]=c;break t;case 107:l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 108:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 109:c=l[4+(t=o+-32|0)>>2],l[f+3344>>2]=l[t>>2],l[f+3348>>2]=c,t=l[o+4>>2],l[f+3336>>2]=l[o>>2],l[f+3340>>2]=t,$b(f+10704|0,f+3344|0,f+3336|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 110:t=l[o+4>>2],l[f+3352>>2]=l[o>>2],l[f+3356>>2]=t,Jk(f+10704|0,f+3352|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 111:t=l[o+4>>2],l[f+3376>>2]=l[o>>2],l[f+3380>>2]=t,La(f+4528|0,f+3376|0),c=l[4+(t=o+-32|0)>>2],l[f+3368>>2]=l[t>>2],l[f+3372>>2]=c,t=l[f+4532>>2],l[f+3360>>2]=l[f+4528>>2],l[f+3364>>2]=t,$b(f+10704|0,f+3368|0,f+3360|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 112:t=l[o+4>>2],l[f+3384>>2]=l[o>>2],l[f+3388>>2]=t,La(f+10704|0,f+3384|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 113:c=l[4+(t=o+-32|0)>>2],l[f+3400>>2]=l[t>>2],l[f+3404>>2]=c,t=l[o+4>>2],l[f+3392>>2]=l[o>>2],l[f+3396>>2]=t,$b(f+10704|0,f+3400|0,f+3392|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 114:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 115:c=l[o+12>>2],l[(t=f+3432|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+3424>>2]=l[o>>2],l[f+3428>>2]=t,Qi(f+10704|0,8,Gb(f+3424|0)),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t,c=l[o+12>>2],l[(t=f+3416|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+3408>>2]=l[o>>2],l[f+3412>>2]=t,zb(f+3408|0);break t;case 116:ln(f+4520|0,5),c=l[4+(t=o+-16|0)>>2],l[f+3448>>2]=l[t>>2],l[f+3452>>2]=c,t=l[f+4524>>2],l[f+3440>>2]=l[f+4520>>2],l[f+3444>>2]=t,$b(f+10704|0,f+3448|0,f+3440|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 117:ln(f+4512|0,5),c=l[4+(t=o+-16|0)>>2],l[f+3464>>2]=l[t>>2],l[f+3468>>2]=c,t=l[f+4516>>2],l[f+3456>>2]=l[f+4512>>2],l[f+3460>>2]=t,$b(f+10704|0,f+3464|0,f+3456|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 118:l[(t=f+4504|0)>>2]=0,l[t+4>>2]=0,t=l[f+4508>>2],l[f+3480>>2]=l[f+4504>>2],l[f+3484>>2]=t,t=l[o+4>>2],l[f+3472>>2]=l[o>>2],l[f+3476>>2]=t,Ba(f+10704|0,f+3480|0,f+3472|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 119:c=l[4+(t=o+-32|0)>>2],l[f+3496>>2]=l[t>>2],l[f+3500>>2]=c,t=l[o+4>>2],l[f+3488>>2]=l[o>>2],l[f+3492>>2]=t,Ba(f+10704|0,f+3496|0,f+3488|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 120:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 121:c=l[4+(t=o+-32|0)>>2],l[f+3512>>2]=l[t>>2],l[f+3516>>2]=c,t=l[o+4>>2],l[f+3504>>2]=l[o>>2],l[f+3508>>2]=t,$b(f+10704|0,f+3512|0,f+3504|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 122:c=l[o+12>>2],l[(t=f+3560|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+3552>>2]=l[o>>2],l[f+3556>>2]=t,un(f+4496|0,f+3552|0),c=l[o+12>>2],l[(t=f+3544|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+3536>>2]=l[o>>2],l[f+3540>>2]=t,Qi(f+4488|0,8,Gb(f+3536|0)),t=l[f+4500>>2],l[f+3528>>2]=l[f+4496>>2],l[f+3532>>2]=t,t=l[f+4492>>2],l[f+3520>>2]=l[f+4488>>2],l[f+3524>>2]=t,Mb(f+10704|0,f+3528|0,f+3520|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 123:h=l[12+(t=o+-32|0)>>2],l[(c=f+3640|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+3632>>2]=l[t>>2],l[f+3636>>2]=c,un(f+4480|0,f+3632|0),ln(f+4456|0,1),h=l[t+12>>2],l[(c=f+3624|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+3616>>2]=l[t>>2],l[f+3620>>2]=c,Qi(f+4448|0,8,Gb(f+3616|0)),t=l[f+4460>>2],l[f+3608>>2]=l[f+4456>>2],l[f+3612>>2]=t,t=l[f+4452>>2],l[f+3600>>2]=l[f+4448>>2],l[f+3604>>2]=t,$b(f+4464|0,f+3608|0,f+3600|0),t=l[f+4468>>2],l[f+3592>>2]=l[f+4464>>2],l[f+3596>>2]=t,t=l[o+4>>2],l[f+3584>>2]=l[o>>2],l[f+3588>>2]=t,$b(f+4472|0,f+3592|0,f+3584|0),t=l[f+4484>>2],l[f+3576>>2]=l[f+4480>>2],l[f+3580>>2]=t,t=l[f+4476>>2],l[f+3568>>2]=l[f+4472>>2],l[f+3572>>2]=t,Mb(f+10704|0,f+3576|0,f+3568|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 124:h=l[12+(t=o+-32|0)>>2],l[(c=f+3672|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+3664>>2]=l[t>>2],l[f+3668>>2]=c,un(f+4440|0,f+3664|0),t=l[f+4444>>2],l[f+3656>>2]=l[f+4440>>2],l[f+3660>>2]=t,t=l[o+4>>2],l[f+3648>>2]=l[o>>2],l[f+3652>>2]=t,Mb(f+10704|0,f+3656|0,f+3648|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 125:h=l[12+(t=o+-32|0)>>2],l[(c=f+3704|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+3696>>2]=l[t>>2],l[f+3700>>2]=c,un(f+4432|0,f+3696|0),t=l[f+4436>>2],l[f+3688>>2]=l[f+4432>>2],l[f+3692>>2]=t,t=l[o+4>>2],l[f+3680>>2]=l[o>>2],l[f+3684>>2]=t,Mb(f+10704|0,f+3688|0,f+3680|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 126:c=l[4+(t=o+-32|0)>>2],l[f+3720>>2]=l[t>>2],l[f+3724>>2]=c,t=l[o+4>>2],l[f+3712>>2]=l[o>>2],l[f+3716>>2]=t,Mb(f+10704|0,f+3720|0,f+3712|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 127:h=l[4+(t=c=o+-48|0)>>2],l[f+3816>>2]=l[t>>2],l[f+3820>>2]=h,xi(f+10704|0,f+3816|0),D=l[4+(t=f+10712|0)>>2],l[(h=f+3808|0)>>2]=l[t>>2],l[h+4>>2]=D,h=l[f+10708>>2],l[f+3800>>2]=l[f+10704>>2],l[f+3804>>2]=h,15&v[f+3800|0]&&(p=l[t+4>>2],l[(h=f+3792|0)>>2]=l[t>>2],l[h+4>>2]=p,h=l[f+5388>>2],l[f+10744>>2]=l[f+5384>>2],l[f+10748>>2]=h,h=l[f+10708>>2],l[f+3784>>2]=l[f+10704>>2],l[f+3788>>2]=h,h=Gb(f+3784|0),l[r>>2]=l[r>>2]+1,p=af(h,14188),l[f+3760>>2]=h,h=l[f+10748>>2],l[f+3776>>2]=l[f+10744>>2],l[f+3780>>2]=h,_n(a,f+3776|0,p?14584:15033,f+3760|0)),p=l[t+4>>2],l[(h=f+3752|0)>>2]=l[t>>2],l[h+4>>2]=p,t=l[f+10708>>2],l[f+3744>>2]=l[f+10704>>2],l[f+3748>>2]=t,zb(f+3744|0),t=l[c+4>>2],l[f+3736>>2]=l[c>>2],l[f+3740>>2]=t,t=l[o+4>>2],l[f+3728>>2]=l[o>>2],l[f+3732>>2]=t,Mb(f+10744|0,f+3736|0,f+3728|0),t=l[f+10748>>2],l[f+5392>>2]=l[f+10744>>2],l[f+5396>>2]=t;break t;case 128:t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+3824>>2]=22804,t=l[f+10708>>2],l[f+3840>>2]=l[f+10704>>2],l[f+3844>>2]=t,_n(a,f+3840|0,15033,f+3824|0),t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 129:jb(f+10704|0,23137),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 130:jb(f+10704|0,23527),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 131:jb(f+10704|0,23838),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 132:jb(f+10704|0,24132),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 133:jb(f+10704|0,24308),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 134:jb(f+10704|0,24481),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 135:jb(f+10704|0,24730),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 136:jb(f+10704|0,24916),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 137:jb(f+10704|0,25127),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 138:jb(f+10704|0,25305),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 139:jb(f+10704|0,25478),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 140:jb(f+10704|0,25651),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 141:jb(f+10704|0,25846),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 142:jb(f+10704|0,26109),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 143:jb(f+10704|0,26408),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 144:jb(f+10704|0,26671),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 145:jb(f+10704|0,26964),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 146:jb(f+10704|0,27146),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 147:jb(f+10704|0,27363),h=l[4+(c=f+10712|0)>>2],l[(t=f+5400|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 148:l[(t=f+10704|0)>>2]=0,l[t+4>>2]=0,t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 149:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 150:c=l[4+(t=o+-32|0)>>2],l[f+3856>>2]=l[t>>2],l[f+3860>>2]=c,t=l[o+4>>2],l[f+3848>>2]=l[o>>2],l[f+3852>>2]=t,$b(f+10704|0,f+3856|0,f+3848|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 151:t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t;break t;case 152:h=l[12+(t=o+-32|0)>>2],l[(c=f+3888|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+3880>>2]=l[t>>2],l[f+3884>>2]=c,un(f+4424|0,f+3880|0),t=l[f+4428>>2],l[f+3872>>2]=l[f+4424>>2],l[f+3876>>2]=t,t=l[o+4>>2],l[f+3864>>2]=l[o>>2],l[f+3868>>2]=t,yb(f+10704|0,f+3872|0,f+3864|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 153:h=l[12+(t=o+-32|0)>>2],l[(c=f+3920|0)>>2]=l[t+8>>2],l[c+4>>2]=h,c=l[t+4>>2],l[f+3912>>2]=l[t>>2],l[f+3916>>2]=c,un(f+4416|0,f+3912|0),t=l[f+4420>>2],l[f+3904>>2]=l[f+4416>>2],l[f+3908>>2]=t,t=l[o+4>>2],l[f+3896>>2]=l[o>>2],l[f+3900>>2]=t,yb(f+10704|0,f+3904|0,f+3896|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 154:c=l[4+(t=o+-32|0)>>2],l[f+3936>>2]=l[t>>2],l[f+3940>>2]=c,t=l[o+4>>2],l[f+3928>>2]=l[o>>2],l[f+3932>>2]=t,yb(f+10704|0,f+3936|0,f+3928|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 155:ln(f+4384|0,5),ln(f+4376|0,3),t=l[f+4388>>2],l[f+4e3>>2]=l[f+4384>>2],l[f+4004>>2]=t,t=l[f+4380>>2],l[f+3992>>2]=l[f+4376>>2],l[f+3996>>2]=t,$b(f+4392|0,f+4e3|0,f+3992|0),ln(f+4368|0,3),t=l[f+4396>>2],l[f+3984>>2]=l[f+4392>>2],l[f+3988>>2]=t,t=l[f+4372>>2],l[f+3976>>2]=l[f+4368>>2],l[f+3980>>2]=t,$b(f+4400|0,f+3984|0,f+3976|0),ln(f+4360|0,10),t=l[f+4404>>2],l[f+3968>>2]=l[f+4400>>2],l[f+3972>>2]=t,t=l[f+4364>>2],l[f+3960>>2]=l[f+4360>>2],l[f+3964>>2]=t,$b(f+4408|0,f+3968|0,f+3960|0),t=l[o+4>>2],l[f+3952>>2]=l[o>>2],l[f+3956>>2]=t,t=l[f+4412>>2],l[f+3944>>2]=l[f+4408>>2],l[f+3948>>2]=t,yb(f+10704|0,f+3952|0,f+3944|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 156:c=l[o+12>>2],l[(t=f+4064|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+4056>>2]=l[o>>2],l[f+4060>>2]=t,un(f+4352|0,f+4056|0),c=l[o+12>>2],l[(t=f+4048|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+4040>>2]=l[o>>2],l[f+4044>>2]=t,Qi(f+4336|0,6,Gb(f+4040|0)),t=l[f+5388>>2],l[f+4032>>2]=l[f+5384>>2],l[f+4036>>2]=t,t=l[f+4340>>2],l[f+4024>>2]=l[f+4336>>2],l[f+4028>>2]=t,ef(f+4344|0,f+4032|0,a,f+4024|0),t=l[f+4356>>2],l[f+4016>>2]=l[f+4352>>2],l[f+4020>>2]=t,t=l[f+4348>>2],l[f+4008>>2]=l[f+4344>>2],l[f+4012>>2]=t,yb(f+10704|0,f+4016|0,f+4008|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 157:c=l[o+12>>2],l[(t=f+4168|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+4160>>2]=l[o>>2],l[f+4164>>2]=t,Nb(f+4312|0,f+4160|0),h=l[4+(c=f+4320|0)>>2],l[(t=f+4152|0)>>2]=l[c>>2],l[t+4>>2]=h,t=l[f+4316>>2],l[f+4144>>2]=l[f+4312>>2],l[f+4148>>2]=t,un(f+4328|0,f+4144|0),l[(t=f+4296|0)>>2]=0,l[t+4>>2]=0,c=l[o+12>>2],l[(t=f+4136|0)>>2]=l[o+8>>2],l[t+4>>2]=c,t=l[o+4>>2],l[f+4128>>2]=l[o>>2],l[f+4132>>2]=t,un(f+4288|0,f+4128|0),t=l[f+4300>>2],l[f+10720>>2]=l[f+4296>>2],l[f+10724>>2]=t,t=l[f+4292>>2],c=l[f+4288>>2],l[f+4120>>2]=c,l[f+4124>>2]=t,l[f+10728>>2]=c,l[f+10732>>2]=t,yn(f+10744|0,f+4120|0),t=l[f+10748>>2],l[f+4112>>2]=l[f+10744>>2],l[f+4116>>2]=t,t=l[f+10724>>2],l[f+4104>>2]=l[f+10720>>2],l[f+4108>>2]=t,$b(f+10704|0,f+4112|0,f+4104|0),ln(f+10736|0,10),t=l[f+10708>>2],l[f+4096>>2]=l[f+10704>>2],l[f+4100>>2]=t,t=l[f+10740>>2],l[f+4088>>2]=l[f+10736>>2],l[f+4092>>2]=t,$b(f+4304|0,f+4096|0,f+4088|0),t=l[f+4332>>2],l[f+4080>>2]=l[f+4328>>2],l[f+4084>>2]=t,t=l[f+4308>>2],l[f+4072>>2]=l[f+4304>>2],l[f+4076>>2]=t,yb(f+10704|0,f+4080|0,f+4072|0),t=l[f+10708>>2],l[f+5392>>2]=l[f+10704>>2],l[f+5396>>2]=t;break t;case 158:h=l[4+(t=c=o+-48|0)>>2],l[f+4264>>2]=l[t>>2],l[f+4268>>2]=h,xi(f+10704|0,f+4264|0),D=l[4+(t=f+10712|0)>>2],l[(h=f+4256|0)>>2]=l[t>>2],l[h+4>>2]=D,h=l[f+10708>>2],l[f+4248>>2]=l[f+10704>>2],l[f+4252>>2]=h,15&v[f+4248|0]&&(p=l[t+4>>2],l[(h=f+4240|0)>>2]=l[t>>2],l[h+4>>2]=p,h=l[f+5388>>2],l[f+10744>>2]=l[f+5384>>2],l[f+10748>>2]=h,h=l[f+10708>>2],l[f+4232>>2]=l[f+10704>>2],l[f+4236>>2]=h,h=Gb(f+4232|0),l[r>>2]=l[r>>2]+1,p=af(h,14188),l[f+4208>>2]=h,h=l[f+10748>>2],l[f+4224>>2]=l[f+10744>>2],l[f+4228>>2]=h,_n(a,f+4224|0,p?14584:15033,f+4208|0)),p=l[t+4>>2],l[(h=f+4200|0)>>2]=l[t>>2],l[h+4>>2]=p,t=l[f+10708>>2],l[f+4192>>2]=l[f+10704>>2],l[f+4196>>2]=t,zb(f+4192|0),t=l[c+4>>2],l[f+4184>>2]=l[c>>2],l[f+4188>>2]=t,t=l[o+4>>2],l[f+4176>>2]=l[o>>2],l[f+4180>>2]=t,yb(f+10744|0,f+4184|0,f+4176|0),t=l[f+10748>>2],l[f+5392>>2]=l[f+10744>>2],l[f+5396>>2]=t;break t;case 159:}t=l[f+5388>>2],l[f+10704>>2]=l[f+5384>>2],l[f+10708>>2]=t,l[r>>2]=l[r>>2]+1,l[f+4272>>2]=22804,t=l[f+10708>>2],l[f+4280>>2]=l[f+10704>>2],l[f+4284>>2]=t,_n(a,f+4280|0,15033,f+4272|0),t=l[o+4>>2],l[f+5392>>2]=l[o>>2],l[f+5396>>2]=t}if(t=(F<<4)+o|0,o=l[O+4>>2],l[t+24>>2]=l[O>>2],l[t+28>>2]=o,c=l[f+5396>>2],l[(t=o=t+16|0)>>2]=l[f+5392>>2],l[t+4>>2]=c,t=l[f+5388>>2],l[_+8>>2]=l[f+5384>>2],l[_+12>>2]=t,c=_+8|0,_=u[(E=(F<<1)+E|0)>>1],t=v[g+57680|0]+-69<<1,!((g=_+u[t+57856>>1]|0)>>>0>1972)&&d[49280+(g<<=1)>>1]==(65535&_)){t=u[g+53232>>1];break k}t=u[t+57920>>1];break k}if(F=-2,y=-2,-2==(0|t))break b}F=2,F=t>>>0<=302?v[t+48976|0]:F,y=t}b:if(A){if(g=l[f+10616>>2],3==(0|A)){if((0|y)<=0){if(y)break b;y=0;break a}Kf(F,f+10624|0),y=-2}}else{if(g=27592,(t=Ai(f+5240|0,f+5244|0,E,F))>>>0>1||(t-1?(t=0,g=l[f+5244>>2]):((0|(t=l[f+5244>>2]))!=(f+5248|0)&&Lb(t),A=Bb(l[f+5240>>2]),l[f+5244>>2]=A,A?(t=Ai(f+5240|0,f+5244|0,E,F),g=A):(l[f+5240>>2]=128,l[f+5244>>2]=f+5248,t=2))),l[r>>2]=l[r>>2]+1,A=af(g,14188),l[f+16>>2]=g,g=l[f+10620>>2],l[f+32>>2]=l[f+10616>>2],l[f+36>>2]=g,_n(a,f+32|0,A?14584:15033,f+16|0),2==(0|t))break f;g=l[f+10616>>2]}for(;65378==(65535&h)||(0|(t=h<<16>>16))<-1||(0|(t=t+1|0))>1972||1!=d[49280+(t<<=1)>>1]||!((0|(t=u[t+53232>>1]))>0);){if((0|E)==(0|S)){E=S;break i}g=l[c>>2],Kf(v[_+57984|0],o),c=c+-8|0,o=o+-16|0,_=u[(E=E+-2|0)>>1],h=d[48336+(_<<1)>>1]}_=l[f+10628>>2],l[o+16>>2]=l[f+10624>>2],l[o+20>>2]=_,_=l[k+4>>2],l[o+24>>2]=l[k>>2],l[o+28>>2]=_,l[f+5384>>2]=g,l[f+5388>>2]=l[f+10620>>2],_=l[f+5388>>2],l[c+8>>2]=l[f+5384>>2],l[c+12>>2]=_,c=c+8|0,o=o+16|0,A=3,t&=65535}_=t,E=E+2|0;continue}break}l[r>>2]=l[r>>2]+1,l[f>>2]=28324,e=l[f+10620>>2],l[f+8>>2]=l[f+10616>>2],l[f+12>>2]=e,_n(a,f+8|0,15033,f)}if(-2==(0|y))break e;if(e=2,y>>>0>302)break r}e=v[y+48976|0]}Kf(e,f+10624|0)}if((0|E)!=(0|S))for(;Kf(v[u[E>>1]+57984|0],o),o=o+-16|0,(0|S)!=(0|(E=E+-2|0)););(f+10208|0)!=(0|S)&&Lb(S),(0|(e=l[f+5244>>2]))!=(f+5248|0)&&Lb(e),ne=f+10752|0}function Tr(e,r,a,i,f){var b,n,s=0,t=0,c=0;return ne=b=ne-192|0,261!=(0|(n=function(e,r,a){var i,f,b=0,n=0,s=0,t=0,c=0,o=0,m=0,w=0,p=0;ne=s=ne-128|0,l[a+96>>2]=r,l[a+92>>2]=e,l[a+40>>2]||(l[a+40>>2]=1,l[a+44>>2]||(l[a+44>>2]=1),l[a+4>>2]||(l[a+4>>2]=l[75259]),l[a+8>>2]||(l[a+8>>2]=l[75261]),(e=l[a+20>>2])&&(b=l[a+12>>2],r=l[(b<<2)+e>>2])||(ia(a),e=Pi(l[a+4>>2],a),b=l[a+12>>2],l[(r=b<<2)+l[a+20>>2]>>2]=e,e=l[a+20>>2],r=l[r+e>>2]),l[a+28>>2]=l[r+16>>2],r=l[r+8>>2],l[a+80>>2]=r,l[a+36>>2]=r,l[a+4>>2]=l[l[(b<<2)+e>>2]>>2],k[a+24|0]=v[0|r]);e:for(;;){n=l[a+36>>2],k[0|n]=v[a+24|0],e=l[a+44>>2],o=n;r:for(;;){if(r=v[v[0|o]+45440|0],d[45696+(c=e<<1)>>1]&&(l[a+68>>2]=o,l[a+64>>2]=e),b=r,t=r+d[c+46768>>1]|0,u[46016+(t<<1)>>1]!=(0|e))for(;(0|(e=u[47120+(e<<1)>>1]))>=157&&(b=v[r+47472|0]),t=(r=255&b)+d[46768+(e<<1)>>1]|0,d[46016+(t<<1)>>1]!=(65535&e););if(o=o+1|0,e=d[47536+(t<<1)>>1],321==d[46768+(e<<1)>>1])a:for(;;){r=n;i:for(;;)for((e=d[45696+(e<<1)>>1])||(o=l[a+68>>2],e=d[45696+(l[a+64>>2]<<1)>>1]),l[a+80>>2]=r,l[a+32>>2]=o-r,k[a+24|0]=v[0|o],k[0|o]=0,l[a+36>>2]=o,e=e<<16>>16;;){f:{k:{b:{n:{s:{t:{c:{o:{u:{l:{v:{d:{h:{m:{w:{p:{g:{if(e>>>0<=57){b=0;y:switch(e-1|0){default:k[0|o]=v[a+24|0],e=l[a+64>>2],o=l[a+68>>2];continue i;case 2:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=265;break w;case 3:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=268;break w;case 4:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=271;break w;case 5:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=272;break w;case 6:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=270;break w;case 7:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=269;break w;case 8:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=273;break w;case 9:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=274;break w;case 10:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=275;break w;case 11:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=276;break w;case 12:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=280;break w;case 13:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=281;break w;case 14:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=279;break w;case 15:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=277;break w;case 16:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=278;break w;case 17:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=267;break w;case 18:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=282;break w;case 19:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=283;break w;case 20:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=284;break w;case 21:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=285;break w;case 22:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=286;break w;case 23:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=287;break w;case 24:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=288;break w;case 25:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=289;break w;case 26:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=290;break w;case 27:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=291;break w;case 28:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=264;break w;case 29:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=292;break w;case 30:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=293;break w;case 31:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=294;break w;case 32:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=263;break w;case 33:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=295;break w;case 34:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=k[l[a+80>>2]];break w;case 35:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=k[l[a+80>>2]],n=3;E:if(40!=(0|b)){if(123!=(0|b)){if(n=5,91==(0|b))break E;P(20790,20572,173,48286),M()}n=7}if(e=l[a+52>>2],r=l[a+56>>2],(0|e)<(0|r))r=l[a+60>>2];else{if(e=r+25|0,l[a+56>>2]=e,c=e<<2,e=a,r=(r=l[a+60>>2])?an(r,c):Bb(c),l[e+60>>2]=r,!r)break m;e=l[a+52>>2]}l[a+52>>2]=e+1,l[(e<<2)+r>>2]=(l[a+44>>2]+-1|0)/2,l[a+44>>2]=n;break w;case 36:if(r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=258,(e=((l[a+44>>2]+-1|0)/2|0)-1|0)>>>0>3)break w;if(l[48292+(n=e<<2)>>2]!=k[l[a+80>>2]])break w;if(r=l[a+52>>2],e=r+-1|0,l[a+52>>2]=e,(0|r)<=0)break h;b=l[n+48308>>2],l[a+44>>2]=l[l[a+60>>2]+(e<<2)>>2]<<1|1;break w;case 37:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,n=r,r=l[a+32>>2],e=r+e|0,l[n+4>>2]=e,l[a>>2]=e,n=l[a+92>>2],Uk(s+112|0,l[a+80>>2]+1|0,r+-1|0),e=l[s+124>>2],l[n+8>>2]=l[s+120>>2],l[n+12>>2]=e,e=l[s+116>>2],l[n>>2]=l[s+112>>2],l[n+4>>2]=e,b=262;break w;case 38:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,n=r,r=l[a+32>>2],e=r+e|0,l[n+4>>2]=e,l[a>>2]=e,n=l[a+92>>2],wf(s+112|0,l[a+80>>2],r),e=l[s+124>>2],l[n+8>>2]=l[s+120>>2],l[n+12>>2]=e,e=l[s+116>>2],l[n>>2]=l[s+112>>2],l[n+4>>2]=e,b=261;break w;case 39:if(r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,e=l[a+52>>2],r=l[a+56>>2],(0|e)<(0|r))r=l[a+60>>2];else{if(e=r+25|0,l[a+56>>2]=e,n=e<<2,e=a,r=(r=l[a+60>>2])?an(r,n):Bb(n),l[e+60>>2]=r,!r)break d;e=l[a+52>>2]}l[a+52>>2]=e+1,l[(e<<2)+r>>2]=(l[a+44>>2]+-1|0)/2,l[a+44>>2]=11,b=296;break w;case 40:if(r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,e=l[a+52>>2],r=l[a+56>>2],(0|e)<(0|r))r=l[a+60>>2];else{if(e=r+25|0,l[a+56>>2]=e,n=e<<2,e=a,r=(r=l[a+60>>2])?an(r,n):Bb(n),l[e+60>>2]=r,!r)break v;e=l[a+52>>2]}l[a+52>>2]=e+1,l[(e<<2)+r>>2]=(l[a+44>>2]+-1|0)/2,l[a+44>>2]=9,b=298;break w;case 41:if(r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,r=l[a+52>>2],e=r+-1|0,l[a+52>>2]=e,(0|r)<=0)break l;l[a+44>>2]=l[l[a+60>>2]+(e<<2)>>2]<<1|1,b=300;break w;case 42:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,n=r,r=l[a+32>>2],e=r+e|0,l[n+4>>2]=e,l[a>>2]=e,l[s+68>>2]=l[a+80>>2],l[s+64>>2]=r,Yb(s+112|0,14181,s- -64|0),a=l[a+92>>2],e=l[s+124>>2],l[s+56>>2]=l[s+120>>2],l[s+60>>2]=e,e=l[s+116>>2],l[s+48>>2]=l[s+112>>2],l[s+52>>2]=e,r=Gb(s+48|0),e=l[s+124>>2],l[s+40>>2]=l[s+120>>2],l[s+44>>2]=e,e=l[s+116>>2],l[s+32>>2]=l[s+112>>2],l[s+36>>2]=e,Nb(s+80|0,s+32|0),e=l[s+92>>2],l[s+24>>2]=l[s+88>>2],l[s+28>>2]=e,e=l[s+84>>2],l[s+16>>2]=l[s+80>>2],l[s+20>>2]=e,wf(s+96|0,r,vn(s+16|0)),e=l[s+108>>2],l[a+8>>2]=l[s+104>>2],l[a+12>>2]=e,e=l[s+100>>2],l[a>>2]=l[s+96>>2],l[a+4>>2]=e,e=l[s+124>>2],l[s+8>>2]=l[s+120>>2],l[s+12>>2]=e,e=l[s+116>>2],l[s>>2]=l[s+112>>2],l[s+4>>2]=e,zb(s),b=297;break w;case 43:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,n=r,r=l[a+32>>2],e=r+e|0,l[n+4>>2]=e,l[a>>2]=e,n=l[a+92>>2],Uk(s+112|0,l[a+80>>2],r),e=l[s+124>>2],l[n+8>>2]=l[s+120>>2],l[n+12>>2]=e,e=l[s+116>>2],l[n>>2]=l[s+112>>2],l[n+4>>2]=e,b=297;break w;case 44:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=258;break w;case 45:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,r=l[a+92>>2],jb(s+112|0,l[a+80>>2]),e=l[s+124>>2],l[r+8>>2]=l[s+120>>2],l[r+12>>2]=e,e=l[s+116>>2],l[r>>2]=l[s+112>>2],l[r+4>>2]=e,b=259;break w;case 46:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,r=l[a+92>>2],jb(s+112|0,l[a+80>>2]+1|0),e=l[s+124>>2],l[r+8>>2]=l[s+120>>2],l[r+12>>2]=e,e=l[s+116>>2],l[r>>2]=l[s+112>>2],l[r+4>>2]=e,b=260;break w;case 48:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=258;break w;case 49:r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,Tk(14564),M();case 51:case 52:case 53:case 54:case 55:case 56:break w;case 1:break p;case 0:case 47:break g;case 50:}if(p=l[a+80>>2],k[0|o]=v[a+24|0],e=l[a+20>>2]+(l[a+12>>2]<<2)|0,b=l[e>>2],l[b+44>>2]?c=l[a+28>>2]:(c=l[b+16>>2],l[a+28>>2]=c,l[b>>2]=l[a+4>>2],b=l[e>>2],l[b+44>>2]=1),n=l[a+80>>2],w=l[a+36>>2],e=l[b+4>>2],w>>>0<=(t=c+e|0)>>>0){if(o=(r=(-1^p)+o|0)+n|0,l[a+36>>2]=o,e=l[a+44>>2],c=n,(0|r)>=1)for(;;){if(r=1,(b=v[0|c])&&(r=v[b+45440|0]),d[45696+(t=e<<1)>>1]&&(l[a+68>>2]=c,l[a+64>>2]=e),t=(b=255&r)+d[t+46768>>1]|0,u[46016+(t<<1)>>1]!=(0|e))for(;(0|(e=u[47120+(e<<1)>>1]))>=157&&(r=v[b+47472|0]),t=(b=255&r)+d[46768+(e<<1)>>1]|0,d[46016+(t<<1)>>1]!=(65535&e););if(e=d[47536+(t<<1)>>1],!((c=c+1|0)>>>0<o>>>0))break}if(d[45696+(e<<1)>>1]&&(l[a+68>>2]=o,l[a+64>>2]=e),r=e,b=d[46768+(e<<1)>>1]+1|0,u[46016+(b<<1)>>1]!=(0|e))for(;c=d[47120+(r<<1)>>1],b=d[46768+((r=c<<16>>16)<<1)>>1]+1|0,d[46016+(b<<1)>>1]!=(0|c););if(r=n,156==(0|(c=d[47536+(b<<1)>>1])))continue i;o=o+1|0,l[a+36>>2]=o,e=c;continue r}if(w>>>0>t+1>>>0)break u;if(w=w-n|0,!l[b+40>>2]){if(1!=(0|w))break n;break f}if(t=0,m=w+-1|0){for(;k[0|e]=v[0|n],e=e+1|0,n=n+1|0,(0|m)!=(0|(t=t+1|0)););b=l[l[a+20>>2]+(l[a+12>>2]<<2)>>2]}if(2!=l[b+44>>2]){if(e=l[b+12>>2],!(t=e-w|0))for(n=l[a+36>>2];;){if(!l[b+20>>2]){l[b+4>>2]=0;break k}if(t=l[b+4>>2],e=(c=e<<1)||(e>>>3)+e|0,l[b+12>>2]=e,e=an(t,e+2|0),l[b+4>>2]=e,!e)break k;if(n=e+(n-t|0)|0,l[a+36>>2]=n,b=l[l[a+20>>2]+(l[a+12>>2]<<2)>>2],e=l[b+12>>2],t=e-w|0)break}if(t=t>>>0<8192?t:8192,e=0,l[b+24>>2]){for(;;){y:{E:if(i=l[a+4>>2],f=void 0,f=0,c=l[i+76>>2]<0?(f=l[i+4>>2])>>>0<h[i+8>>2]?(l[i+4>>2]=f+1,v[0|f]):Ek(i):((f=l[i+4>>2])>>>0<h[i+8>>2]?(l[i+4>>2]=f+1,i=v[0|f]):i=Ek(i),i),!((n=c+1|0)>>>0>11))switch(n-1|0){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:break E;default:break y}if(k[(m+l[l[l[a+20>>2]+(l[a+12>>2]<<2)>>2]+4>>2]|0)+e|0]=c,(e=e+1|0)>>>0<t>>>0)continue}break}y:if(!((n=c+1|0)>>>0>11)){E:switch(n-1|0){default:if(n=l[a+4>>2],l[n+76>>2],!(n=l[n>>2]>>>5&1))break y;Tk(18331),M();case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:break y;case 10:}k[(m+l[l[l[a+20>>2]+(l[a+12>>2]<<2)>>2]+4>>2]|0)+e|0]=10,e=e+1|0}l[a+28>>2]=e;break c}for(l[82952]=0,e=Nf(m+l[l[l[a+20>>2]+(l[a+12>>2]<<2)>>2]+4>>2]|0,t,l[a+4>>2]);;){if(l[a+28>>2]=e,e)break c;if(e=l[a+4>>2],l[e+76>>2],!(e=l[e>>2]>>>5&1)){e=0;break c}if(27!=l[82952])break o;l[82952]=0,e=l[a+4>>2],l[e>>2]=-49&l[e>>2],e=Nf(m+l[l[l[a+20>>2]+(l[a+12>>2]<<2)>>2]+4>>2]|0,t,l[a+4>>2])}}l[a+28>>2]=0,l[b+16>>2]=0;break t}Tk(14982),M()}r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e;continue e}r=l[a+96>>2],e=l[a>>2],l[r>>2]=e,e=e+l[a+32>>2]|0,l[r+4>>2]=e,l[a>>2]=e,b=266}return ne=s+128|0,b}Tk(19450),M()}Tk(19730),M()}Tk(19450),M()}Tk(19450),M()}Tk(19730),M()}Tk(17601),M()}Tk(18331),M()}if(b=l[l[a+20>>2]+(l[a+12>>2]<<2)>>2],l[b+16>>2]=e,c=0,e)break s}m?(l[b+44>>2]=2,e=0,c=2):(Ir(l[a+4>>2],a),b=l[l[a+20>>2]+(l[a+12>>2]<<2)>>2],e=l[a+28>>2],c=1)}if((t=e+m|0)>>>0<=h[b+12>>2])e=l[b+4>>2];else{if(n=an(l[b+4>>2],(e>>1)+t|0),e=l[a+20>>2]+(l[a+12>>2]<<2)|0,l[l[e>>2]+4>>2]=n,!(e=l[l[e>>2]+4>>2]))break b;t=m+l[a+28>>2]|0}if(l[a+28>>2]=t,k[e+t|0]=0,k[1+(l[a+28>>2]+l[l[l[a+20>>2]+(l[a+12>>2]<<2)>>2]+4>>2]|0)|0]=0,e=l[a+20>>2]+(l[a+12>>2]<<2)|0,n=l[l[e>>2]+4>>2],l[a+80>>2]=n,1==(0|c))break f;if(c>>>0>2)continue e;s:switch(c-1|0){default:if(o=(r=(-1^p)+o|0)+n|0,l[a+36>>2]=o,e=l[a+44>>2],c=n,(0|r)<1)continue r;for(;;){if(r=1,(b=v[0|c])&&(r=v[b+45440|0]),d[45696+(t=e<<1)>>1]&&(l[a+68>>2]=c,l[a+64>>2]=e),t=(b=255&r)+d[t+46768>>1]|0,u[46016+(t<<1)>>1]!=(0|e))for(;(0|(e=u[47120+(e<<1)>>1]))>=157&&(r=v[b+47472|0]),t=(b=255&r)+d[46768+(e<<1)>>1]|0,d[46016+(t<<1)>>1]!=(65535&e););if(e=d[47536+(t<<1)>>1],!((c=c+1|0)>>>0<o>>>0))break}continue r;case 1:break s;case 0:continue e}c=l[a+28>>2],e=l[l[e>>2]+4>>2]}if(o=e+c|0,l[a+36>>2]=o,e=l[a+44>>2],c=r=n,r>>>0>=o>>>0)continue i;for(;;){if(r=1,(b=v[0|c])&&(r=v[b+45440|0]),d[45696+(e<<1)>>1]&&(l[a+68>>2]=c,l[a+64>>2]=e),t=(b=255&r)+d[46768+(e<<1)>>1]|0,u[46016+(t<<1)>>1]!=(0|e))for(;(0|(e=u[47120+(e<<1)>>1]))>=157&&(r=v[b+47472|0]),t=(b=255&r)+d[46768+(e<<1)>>1]|0,d[46016+(t<<1)>>1]!=(65535&e););if(e=d[47536+(t<<1)>>1],(0|o)==(0|(c=c+1|0)))break}continue a}Tk(18749),M()}Tk(17951),M()}l[a+36>>2]=n,l[a+48>>2]=0,e=52+((l[a+44>>2]+-1|0)/2|0)|0}}}}}(e,r,l[f>>2])))&&297!=(0|n)||(s=v[(f=e)+12|0]|v[f+13|0]<<8|v[f+14|0]<<16|v[f+15|0]<<24,t=v[f+8|0]|v[f+9|0]<<8|v[f+10|0]<<16|v[f+11|0]<<24,l[b+184>>2]=t,l[b+188>>2]=s,c=v[0|f]|v[f+1|0]<<8|v[f+2|0]<<16|v[f+3|0]<<24,f=v[f+4|0]|v[f+5|0]<<8|v[f+6|0]<<16|v[f+7|0]<<24,l[b+136>>2]=t,l[b+140>>2]=s,l[b+176>>2]=c,l[b+180>>2]=f,l[b+128>>2]=c,l[b+132>>2]=f,15&v[b+128|0]||(f=l[e+12>>2],l[b+120>>2]=l[e+8>>2],l[b+124>>2]=f,f=l[e+4>>2],l[b+112>>2]=l[e>>2],l[b+116>>2]=f,Nb(b+160|0,b+112|0),f=l[b+172>>2],l[b+104>>2]=l[b+168>>2],l[b+108>>2]=f,f=l[b+164>>2],l[b+96>>2]=l[b+160>>2],l[b+100>>2]=f,Ck(b+176|0,b+96|0),f=l[b+188>>2],l[b+88>>2]=l[b+184>>2],l[b+92>>2]=f,f=l[b+180>>2],l[b+80>>2]=l[b+176>>2],l[b+84>>2]=f,5!=(15&v[b+80|0])?(f=l[r+4>>2],l[b+144>>2]=l[r>>2],l[b+148>>2]=f,l[a>>2]=l[a>>2]+1,l[b+64>>2]=15475,r=l[b+148>>2],l[b+72>>2]=l[b+144>>2],l[b+76>>2]=r,_n(i,b+72|0,15033,b- -64|0)):(f=l[r>>2],r=l[r+4>>2],s=l[b+188>>2],l[b+56>>2]=l[b+184>>2],l[b+60>>2]=s,l[b+144>>2]=f,l[b+148>>2]=r,r=l[b+180>>2],l[b+48>>2]=l[b+176>>2],l[b+52>>2]=r,r=Gb(b+48|0),l[a>>2]=l[a>>2]+1,a=af(r,14188),l[b+32>>2]=r,r=l[b+148>>2],l[b+40>>2]=l[b+144>>2],l[b+44>>2]=r,_n(i,b+40|0,a?14584:15033,b+32|0)),r=l[b+188>>2],l[b+24>>2]=l[b+184>>2],l[b+28>>2]=r,r=l[b+180>>2],l[b+16>>2]=l[b+176>>2],l[b+20>>2]=r,zb(b+16|0),r=l[e+12>>2],l[b+8>>2]=l[e+8>>2],l[b+12>>2]=r,r=l[e+4>>2],l[b>>2]=l[e>>2],l[b+4>>2]=r,zb(b),r=l[10947],l[b+152>>2]=l[10946],l[b+156>>2]=r,r=l[10945],l[b+144>>2]=l[10944],l[b+148>>2]=r,r=l[b+156>>2],l[e+8>>2]=l[b+152>>2],l[e+12>>2]=r,r=l[b+148>>2],l[e>>2]=l[b+144>>2],l[e+4>>2]=r)),ne=b+192|0,n}function Rr(e,r,a){var i=0,f=0,b=0;e:{if(i=Bb(b=r+2|0)){if(r)for(;k[i+f|0]=v[e+f|0],(0|(f=f+1|0))!=(0|r););if(k[0|(e=r+i|0)]=0,k[e+1|0]=0,!(e=function(e,r,a){var i=0,f=0;r:{if(!(r>>>0<2||v[(f=r+-2|0)+e|0]|v[(e+r|0)-1|0])){if(!(i=Bb(48)))break r;l[i+20>>2]=0,l[i+8>>2]=e,l[i+4>>2]=e,l[i+12>>2]=f,l[i+40>>2]=0,l[i+44>>2]=0,l[i+24>>2]=0,l[i+28>>2]=1,l[i+16>>2]=f,l[i>>2]=0,ia(a),r=l[a+20>>2],(0|(e=r?l[(l[a+12>>2]<<2)+r>>2]:0))!=(0|i)&&(e=l[a+12>>2],l[(e<<2)+r>>2]&&(k[l[a+36>>2]]=v[a+24|0],r=l[a+20>>2],e=l[a+12>>2],l[l[(f=r+(e<<2)|0)>>2]+8>>2]=l[a+36>>2],l[l[f>>2]+16>>2]=l[a+28>>2]),l[(e<<=2)+r>>2]=i,r=e+l[a+20>>2]|0,e=l[r>>2],l[a+28>>2]=l[e+16>>2],e=l[e+8>>2],l[a+36>>2]=e,l[a+80>>2]=e,l[a+4>>2]=l[l[r>>2]>>2],k[a+24|0]=v[0|e],l[a+48>>2]=1)}return i}Tk(15802),M()}(i,b,a)))break e;return l[e+20>>2]=1,e}Tk(16199),M()}Tk(16601),M()}function Or(e){var r=0,a=0,i=0;(r=l[e+20>>2])&&(a=r+(l[e+12>>2]<<2)|0,(r=l[a>>2])&&(l[a>>2]=0,l[r+20>>2]&&Lb(l[r+4>>2]),Lb(r),r=l[e+12>>2],l[l[e+20>>2]+(r<<2)>>2]=0,r&&(i=r+-1|0,l[e+12>>2]=i),(r=l[e+20>>2])&&(r=l[(a=r+(i<<2)|0)>>2])&&(l[e+28>>2]=l[r+16>>2],r=l[r+8>>2],l[e+80>>2]=r,l[e+36>>2]=r,l[e+4>>2]=l[l[a>>2]>>2],r=v[0|r],l[e+48>>2]=1,k[e+24|0]=r)))}function Ir(e,r){var a=0,i=0,f=0,b=0,n=0;(a=l[r+20>>2])&&(f=l[r+12>>2],l[(f<<2)+a>>2])||(ia(r),a=Pi(l[r+4>>2],r),f=l[r+12>>2],l[l[r+20>>2]+(f<<2)>>2]=a,a=l[r+20>>2])?(a=l[(f<<2)+a>>2],f=l[82952],a?(l[a+16>>2]=0,k[l[a+4>>2]]=0,k[l[a+4>>2]+1|0]=0,l[a+44>>2]=0,l[a+28>>2]=1,l[a+8>>2]=l[a+4>>2],(0|(n=(b=l[r+20>>2])?l[b+(l[r+12>>2]<<2)>>2]:0))==(0|a)&&(b=b+(l[r+12>>2]<<2)|0,i=l[b>>2],l[r+28>>2]=l[i+16>>2],i=l[i+8>>2],l[r+36>>2]=i,l[r+80>>2]=i,l[r+4>>2]=l[l[b>>2]>>2],k[r+24|0]=v[0|i])):a=0):(f=l[82952],a=0),l[a+40>>2]=1,l[a>>2]=e,n=0,(i=l[r+20>>2])&&(n=l[i+(l[r+12>>2]<<2)>>2]),(0|n)!=(0|a)&&(l[a+32>>2]=1,l[a+36>>2]=0),e?(l[e+76>>2],e=(0|bf(l[e+60>>2]))>0):e=0,l[a+24>>2]=e,l[82952]=f,a=l[r+20>>2]+(l[r+12>>2]<<2)|0,e=l[a>>2],l[r+28>>2]=l[e+16>>2],e=l[e+8>>2],l[r+36>>2]=e,l[r+80>>2]=e,l[r+4>>2]=l[l[a>>2]>>2],k[r+24|0]=v[0|e]}function zr(e,r){var a,i=0,f=0,k=0;if(ne=a=ne-304|0,i=l[r+12>>2],l[a+216>>2]=l[r+8>>2],l[a+220>>2]=i,i=l[r+4>>2],l[a+208>>2]=l[r>>2],l[a+212>>2]=i,5==(15&v[a+208|0]))return f=l[(i=r)+12>>2],l[a+200>>2]=l[i+8>>2],l[a+204>>2]=f,f=l[i+4>>2],l[a+192>>2]=l[i>>2],l[a+196>>2]=f,f=Gb(a+192|0),k=l[i+12>>2],l[e+8>>2]=l[i+8>>2],l[e+12>>2]=k,k=l[i+4>>2],l[e>>2]=l[i>>2],l[e+4>>2]=k,k=l[i+12>>2],l[a+184>>2]=l[i+8>>2],l[a+188>>2]=k,k=l[i+4>>2],l[a+176>>2]=l[i>>2],l[a+180>>2]=k,Nb(a+288|0,a+176|0),i=l[a+300>>2],l[a+168>>2]=l[a+296>>2],l[a+172>>2]=i,i=l[a+292>>2],l[a+160>>2]=l[a+288>>2],l[a+164>>2]=i,(0|vn(a+160|0))<2|126!=v[0|f]|47!=v[f+1|0]||(function(e){var r,a=0;ne=r=ne-48|0,a=dk(15797);e:if(a)jb(r+32|0,a);else{if(a=0|ke(0|K(199,0))){jb(r+32|0,l[a+20>>2]);break e}jb(r+16|0,16168),a=l[r+28>>2],l[r+8>>2]=l[r+24>>2],l[r+12>>2]=a,a=l[r+20>>2],l[r>>2]=l[r+16>>2],l[r+4>>2]=a,Hb(r+32|0,r)}a=l[r+44>>2],l[e+8>>2]=l[r+40>>2],l[e+12>>2]=a,a=l[r+36>>2],l[e>>2]=l[r+32>>2],l[e+4>>2]=a,ne=r+48|0}(a+272|0),i=l[a+284>>2],l[a+152>>2]=l[a+280>>2],l[a+156>>2]=i,i=l[a+276>>2],l[a+144>>2]=l[a+272>>2],l[a+148>>2]=i,15&v[a+144|0]?(i=l[a+284>>2],l[a+136>>2]=l[a+280>>2],l[a+140>>2]=i,i=l[a+276>>2],l[a+128>>2]=l[a+272>>2],l[a+132>>2]=i,i=Gb(a+128|0),l[a+116>>2]=f+2,l[a+112>>2]=i,Yb(a+256|0,14976,a+112|0),i=l[a+268>>2],l[e+8>>2]=l[a+264>>2],l[e+12>>2]=i,i=l[a+260>>2],l[e>>2]=l[a+256>>2],l[e+4>>2]=i,e=l[a+284>>2],l[a+104>>2]=l[a+280>>2],l[a+108>>2]=e,e=l[a+276>>2],l[a+96>>2]=l[a+272>>2],l[a+100>>2]=e,zb(a+96|0)):(i=l[a+284>>2],l[a+88>>2]=l[a+280>>2],l[a+92>>2]=i,i=l[a+276>>2],l[a+80>>2]=l[a+272>>2],l[a+84>>2]=i,Ck(a+256|0,a+80|0),i=l[a+268>>2],l[a+72>>2]=l[a+264>>2],l[a+76>>2]=i,i=l[a+260>>2],l[a+64>>2]=l[a+256>>2],l[a+68>>2]=i,l[a+52>>2]=Gb(a- -64|0),l[a+48>>2]=f,Yb(a+224|0,15402,a+48|0),i=l[a+236>>2],l[a+40>>2]=l[a+232>>2],l[a+44>>2]=i,i=l[a+228>>2],l[a+32>>2]=l[a+224>>2],l[a+36>>2]=i,Hb(a+240|0,a+32|0),i=l[a+252>>2],l[e+8>>2]=l[a+248>>2],l[e+12>>2]=i,i=l[a+244>>2],l[e>>2]=l[a+240>>2],l[e+4>>2]=i,e=l[a+268>>2],l[a+24>>2]=l[a+264>>2],l[a+28>>2]=e,e=l[a+260>>2],l[a+16>>2]=l[a+256>>2],l[a+20>>2]=e,zb(a+16|0)),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a)),void(ne=a+304|0);P(14145,14553,83,45361),M()}function Nr(e,r){var a,i,f=0;ne=a=ne-128|0,i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=37,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0;e:{r:if(!(!(f=l[r>>2])|l[r+4>>2]!=(0|f)||(r=l[f+8>>2])>>>0>4))switch(r-1|0){case 0:case 1:case 2:break r;default:break e}P(15967,14282,185,35465),M()}for(r=l[f+36>>2],l[a+72>>2]=l[f+32>>2],l[a+76>>2]=r,r=l[f+28>>2],l[a+64>>2]=l[f+24>>2],l[a+68>>2]=r,Nb(a+112|0,a- -64|0),r=l[a+124>>2],l[i+32>>2]=l[a+120>>2],l[i+36>>2]=r,r=l[a+116>>2],l[i+24>>2]=l[a+112>>2],l[i+28>>2]=r,r=l[i+36>>2],l[a+56>>2]=l[i+32>>2],l[a+60>>2]=r,r=l[i+28>>2],l[a+48>>2]=l[i+24>>2],l[a+52>>2]=r,7!=(15&v[a+48|0])&&(mn(a+96|0),jb(a+80|0,19815),r=l[a+108>>2],l[a+40>>2]=l[a+104>>2],l[a+44>>2]=r,r=l[a+92>>2],l[a+24>>2]=l[a+88>>2],l[a+28>>2]=r,r=l[a+84>>2],l[a+16>>2]=l[a+80>>2],l[a+20>>2]=r,r=l[a+100>>2],l[a+32>>2]=l[a+96>>2],l[a+36>>2]=r,r=l[i+36>>2],l[a+8>>2]=l[i+32>>2],l[a+12>>2]=r,r=l[i+28>>2],l[a>>2]=l[i+24>>2],l[a+4>>2]=r,en(a+112|0,a+32|0,a+16|0,a),r=l[a+124>>2],l[i+32>>2]=l[a+120>>2],l[i+36>>2]=r,r=l[a+116>>2],l[i+24>>2]=l[a+112>>2],l[i+28>>2]=r);r=l[f>>2],Wk(f),f=r,r;);l[e+4>>2]=i,l[e>>2]=i,ne=a+128|0}function jr(e,r){var a=0,i=0,f=0;e:{if(l[e+20>>2]>(0|r)){for(f=l[e+24>>2],i=1;i=(a=i)+1|0,l[(a<<2)+f>>2]<=(0|r););if((0|a)>l[e+28>>2])break e;return a+-1|0}P(14129,14539,51,45324),M()}P(14957,14539,54,45324),M()}function Ur(e,r,a){var i,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0;if(ne=i=ne-176|0,l[i+160>>2]=0,l[i+164>>2]=0,l[i+152>>2]=0,l[i+156>>2]=0,!(r=Mi(r,i+168|0))){if(bk(i+136|0,e),je(i+120|0,e),r=l[i+148>>2],l[i+88>>2]=l[i+144>>2],l[i+92>>2]=r,r=l[i+132>>2],l[i+72>>2]=l[i+128>>2],l[i+76>>2]=r,r=l[i+140>>2],l[i+80>>2]=l[i+136>>2],l[i+84>>2]=r,r=l[i+124>>2],l[i+64>>2]=l[i+120>>2],l[i+68>>2]=r,r=function e(r,a,i,f,k){var b,n,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0,w=0,p=0,g=0,y=0,E=0,_=0;ne=b=ne-1792|0,ue(b+1688|0,f),s=l[f>>2],f=l[f+4>>2],c=l[4+(o=n=b+1696|0)>>2],l[(t=b+1296|0)>>2]=l[o>>2],l[t+4>>2]=c,l[b+1680>>2]=s,l[b+1684>>2]=f,f=l[b+1692>>2],l[b+1288>>2]=l[b+1688>>2],l[b+1292>>2]=f,Nb(b+1664|0,b+1288|0),t=l[4+(s=b+1672|0)>>2],l[(f=b+1280|0)>>2]=l[s>>2],l[f+4>>2]=t,f=l[b+1668>>2],l[b+1272>>2]=l[b+1664>>2],l[b+1276>>2]=f;e:{r:{if((0|(E=Zb(b+1272|0)))>=1)for(;;){s=l[n+4>>2],l[(f=b+1264|0)>>2]=l[n>>2],l[f+4>>2]=s,f=l[b+1692>>2],l[b+1256>>2]=l[b+1688>>2],l[b+1260>>2]=f,Nb(b+1632|0,b+1256|0),t=l[4+(s=b+1640|0)>>2],l[(f=b+1248|0)>>2]=l[s>>2],l[f+4>>2]=t,f=l[b+1636>>2],l[b+1240>>2]=l[b+1632>>2],l[b+1244>>2]=f,Kb(b+1768|0,b+1240|0,g),s=l[4+(c=o=b+1776|0)>>2],f=b+1656|0,c=l[c>>2],l[f>>2]=c,l[f+4>>2]=s,l[(t=b+1232|0)>>2]=c,l[t+4>>2]=s,s=l[b+1772>>2],t=l[b+1768>>2],l[b+1648>>2]=t,l[b+1652>>2]=s,l[b+1224>>2]=t,l[b+1228>>2]=s,Nb(b+1600|0,b+1224|0),jb(b+1584|0,21464),c=l[4+(t=b+1608|0)>>2],l[(s=b+1216|0)>>2]=l[t>>2],l[s+4>>2]=c,c=l[4+(t=b+1592|0)>>2],l[(s=b+1200|0)>>2]=l[t>>2],l[s+4>>2]=c,s=l[b+1604>>2],l[b+1208>>2]=l[b+1600>>2],l[b+1212>>2]=s,s=l[b+1588>>2],l[b+1192>>2]=l[b+1584>>2],l[b+1196>>2]=s,dn(b+1616|0,b+1208|0,b+1192|0),c=l[4+(t=b+1624|0)>>2],l[(s=b+1184|0)>>2]=l[t>>2],l[s+4>>2]=c,s=l[b+1620>>2],l[b+1176>>2]=l[b+1616>>2],l[b+1180>>2]=s,w=15&v[b+1176|0],t=l[f+4>>2],l[(s=b+1168|0)>>2]=l[f>>2],l[s+4>>2]=t,s=l[b+1652>>2],l[b+1160>>2]=l[b+1648>>2],l[b+1164>>2]=s,Nb(b+1552|0,b+1160|0),jb(b+1536|0,21767),c=l[4+(t=b+1560|0)>>2],l[(s=b+1152|0)>>2]=l[t>>2],l[s+4>>2]=c,c=l[4+(t=b+1544|0)>>2],l[(s=b+1136|0)>>2]=l[t>>2],l[s+4>>2]=c,s=l[b+1556>>2],l[b+1144>>2]=l[b+1552>>2],l[b+1148>>2]=s,s=l[b+1540>>2],l[b+1128>>2]=l[b+1536>>2],l[b+1132>>2]=s,dn(b+1568|0,b+1144|0,b+1128|0),d=l[4+(s=b+1576|0)>>2],l[(t=b+1120|0)>>2]=l[s>>2],l[t+4>>2]=d,t=l[b+1572>>2],l[b+1112>>2]=l[b+1568>>2],l[b+1116>>2]=t,m=15&v[b+1112|0],c=l[s+4>>2],l[(t=b+1104|0)>>2]=l[s>>2],l[t+4>>2]=c,s=l[b+1572>>2],l[b+1096>>2]=l[b+1568>>2],l[b+1100>>2]=s,zb(b+1096|0),t=l[f+4>>2],l[(s=b+1088|0)>>2]=l[f>>2],l[s+4>>2]=t,s=l[b+1652>>2],l[b+1080>>2]=l[b+1648>>2],l[b+1084>>2]=s,Nb(b+1488|0,b+1080|0),jb(b+1472|0,21945),c=l[4+(t=b+1496|0)>>2],l[(s=b+1072|0)>>2]=l[t>>2],l[s+4>>2]=c,c=l[4+(t=b+1480|0)>>2],l[(s=b+1056|0)>>2]=l[t>>2],l[s+4>>2]=c,s=l[b+1492>>2],l[b+1064>>2]=l[b+1488>>2],l[b+1068>>2]=s,s=l[b+1476>>2],l[b+1048>>2]=l[b+1472>>2],l[b+1052>>2]=s,dn(b+1504|0,b+1064|0,b+1048|0),c=l[4+(t=b+1512|0)>>2],l[(s=b+1040|0)>>2]=l[t>>2],l[s+4>>2]=c,s=l[b+1508>>2],l[b+1032>>2]=l[b+1504>>2],l[b+1036>>2]=s,oe(b+1520|0,b+1032|0),t=l[f+4>>2],l[(s=b+1024|0)>>2]=l[f>>2],l[s+4>>2]=t,s=l[b+1652>>2],l[b+1016>>2]=l[b+1648>>2],l[b+1020>>2]=s,Nb(b+1440|0,b+1016|0),jb(b+1424|0,22170),t=l[4+(s=b+1448|0)>>2],l[b+1008>>2]=l[s>>2],l[b+1012>>2]=t,t=l[4+(s=b+1432|0)>>2],l[b+992>>2]=l[s>>2],l[b+996>>2]=t,s=l[b+1444>>2],l[b+1e3>>2]=l[b+1440>>2],l[b+1004>>2]=s,s=l[b+1428>>2],l[b+984>>2]=l[b+1424>>2],l[b+988>>2]=s,dn(b+1456|0,b+1e3|0,b+984|0),t=l[4+(s=d=b+1464|0)>>2],l[b+976>>2]=l[s>>2],l[b+980>>2]=t,s=l[b+1460>>2],l[b+968>>2]=l[b+1456>>2],l[b+972>>2]=s;a:{i:{if(!(15&v[b+968|0]&&(s=l[d+4>>2],l[b+960>>2]=l[d>>2],l[b+964>>2]=s,s=l[b+1460>>2],l[b+952>>2]=l[b+1456>>2],l[b+956>>2]=s,5!=(15&v[b+952|0])))){if(s=l[d+4>>2],l[b+944>>2]=l[d>>2],l[b+948>>2]=s,s=l[b+1460>>2],l[b+936>>2]=l[b+1456>>2],l[b+940>>2]=s,5==(15&v[b+936|0])&&(s=l[d+4>>2],l[b+928>>2]=l[d>>2],l[b+932>>2]=s,s=l[b+1460>>2],l[b+920>>2]=l[b+1456>>2],l[b+924>>2]=s,y=Gb(b+920|0)),jb(b+1376|0,22797),s=l[f+4>>2],l[b+912>>2]=l[f>>2],l[b+916>>2]=s,s=l[4+(f=b+1384|0)>>2],l[b+896>>2]=l[f>>2],l[b+900>>2]=s,f=l[b+1652>>2],l[b+904>>2]=l[b+1648>>2],l[b+908>>2]=f,f=l[b+1380>>2],l[b+888>>2]=l[b+1376>>2],l[b+892>>2]=f,dn(b+1392|0,b+904|0,b+888|0),f=l[4+(t=b+1400|0)>>2],s=c=b+1712|0,t=l[t>>2],l[s>>2]=t,l[s+4>>2]=f,l[b+880>>2]=t,l[b+884>>2]=f,f=l[b+1396>>2],s=l[b+1392>>2],l[b+1704>>2]=s,l[b+1708>>2]=f,l[b+872>>2]=s,l[b+876>>2]=f,15&v[b+872|0]?(f=l[c+4>>2],l[b+864>>2]=l[c>>2],l[b+868>>2]=f,f=l[b+1708>>2],l[b+856>>2]=l[b+1704>>2],l[b+860>>2]=f,6==(15&v[b+856|0])?(s=l[c+4>>2],l[(f=b+1416|0)>>2]=l[c>>2],l[f+4>>2]=s,f=l[b+1708>>2],l[b+1408>>2]=l[b+1704>>2],l[b+1412>>2]=f):(rn(b+1768|0),f=l[o+4>>2],l[b+848>>2]=l[o>>2],l[b+852>>2]=f,f=l[c+4>>2],l[b+832>>2]=l[c>>2],l[b+836>>2]=f,f=l[b+1772>>2],l[b+840>>2]=l[b+1768>>2],l[b+844>>2]=f,f=l[b+1708>>2],l[b+824>>2]=l[b+1704>>2],l[b+828>>2]=f,Vb(b+1408|0,b+840|0,b+824|0))):(f=l[c+4>>2],l[b+816>>2]=l[c>>2],l[b+820>>2]=f,f=l[b+1708>>2],l[b+808>>2]=l[b+1704>>2],l[b+812>>2]=f,zb(b+808|0),rn(b+1752|0),jb(b+1736|0,18724),s=l[4+(f=b+1760|0)>>2],l[b+800>>2]=l[f>>2],l[b+804>>2]=s,s=l[4+(f=b+1744|0)>>2],l[b+784>>2]=l[f>>2],l[b+788>>2]=s,f=l[b+1756>>2],l[b+792>>2]=l[b+1752>>2],l[b+796>>2]=f,f=l[b+1740>>2],l[b+776>>2]=l[b+1736>>2],l[b+780>>2]=f,Vb(b+1768|0,b+792|0,b+776|0),va(b+1720|0,r),f=l[o+4>>2],l[b+768>>2]=l[o>>2],l[b+772>>2]=f,s=l[4+(f=b+1728|0)>>2],l[b+752>>2]=l[f>>2],l[b+756>>2]=s,f=l[b+1772>>2],l[b+760>>2]=l[b+1768>>2],l[b+764>>2]=f,f=l[b+1724>>2],l[b+744>>2]=l[b+1720>>2],l[b+748>>2]=f,la(b+1408|0,b+760|0,b+744|0)),f=l[a+12>>2],l[b+736>>2]=l[a+8>>2],l[b+740>>2]=f,f=l[a+4>>2],l[b+728>>2]=l[a>>2],l[b+732>>2]=f,Nb(b+1344|0,b+728|0),f=l[i+12>>2],l[b+720>>2]=l[i+8>>2],l[b+724>>2]=f,f=l[i+4>>2],l[b+712>>2]=l[i>>2],l[b+716>>2]=f,Nb(b+1328|0,b+712|0),s=l[4+(f=b+1528|0)>>2],l[b+704>>2]=l[f>>2],l[b+708>>2]=s,s=l[4+(f=b+1416|0)>>2],l[b+688>>2]=l[f>>2],l[b+692>>2]=s,s=l[4+(f=b+1352|0)>>2],l[b+672>>2]=l[f>>2],l[b+676>>2]=s,s=l[4+(f=b+1336|0)>>2],l[b+656>>2]=l[f>>2],l[b+660>>2]=s,f=l[b+1524>>2],l[b+696>>2]=l[b+1520>>2],l[b+700>>2]=f,f=l[b+1412>>2],l[b+680>>2]=l[b+1408>>2],l[b+684>>2]=f,f=l[b+1348>>2],l[b+664>>2]=l[b+1344>>2],l[b+668>>2]=f,f=l[b+1332>>2],l[b+648>>2]=l[b+1328>>2],l[b+652>>2]=f,ce(b+1360|0,b+696|0,b+680|0,3==(0|w)?23131:14125,b+664|0,b+648|0),t=l[4+(f=s=b+1368|0)>>2],l[b+640>>2]=l[f>>2],l[b+644>>2]=t,f=l[b+1364>>2],l[b+632>>2]=l[b+1360>>2],l[b+636>>2]=f,!(15&v[b+632|0]))break i;t=0,f=0;f:{if(l[k+8>>2]|l[k+12>>2]){for(;;){if(u=l[l[k>>2]+(t<<2)>>2],h=l[s+4>>2],l[b+624>>2]=l[s>>2],l[b+628>>2]=h,h=l[b+1364>>2],l[b+616>>2]=l[b+1360>>2],l[b+620>>2]=h,fn(u,Gb(b+616|0))){if((t=t+1|0)>>>0<1&&(f=f+1|0),(0|(u=l[k+12>>2]))==(0|f)&t>>>0<(h=l[k+8>>2])>>>0|f>>>0<u>>>0)continue}else h=l[k+8>>2],u=l[k+12>>2];break}if(!((0|f)==(0|u)&t>>>0>=h>>>0|f>>>0>u>>>0)){f=l[s+4>>2],l[b+608>>2]=l[s>>2],l[b+612>>2]=f,f=l[b+1364>>2],l[b+600>>2]=l[b+1360>>2],l[b+604>>2]=f,zb(b+600|0),f=l[k+4>>2]+(t<<3)|0,s=l[f+4>>2],l[b+592>>2]=l[f>>2],l[b+596>>2]=s,f=l[b+1684>>2],l[b+584>>2]=l[b+1680>>2],l[b+588>>2]=f,ta(b+1768|0,b+592|0,b+584|0,y),f=l[b+1772>>2],l[b+1680>>2]=l[b+1768>>2],l[b+1684>>2]=f;break f}}l[(f=b+1304|0)>>2]=0,l[f+4>>2]=0,f=l[s+4>>2],l[c>>2]=l[s>>2],l[c+4>>2]=f,f=l[b+1364>>2],l[b+1704>>2]=l[b+1360>>2],l[b+1708>>2]=f,3==(0|m)|3!=(0|w)?(f=l[c+4>>2],l[b+560>>2]=l[c>>2],l[b+564>>2]=f,f=l[b+1708>>2],l[b+552>>2]=l[b+1704>>2],l[b+556>>2]=f,Vi(b+1752|0,Gb(b+552|0),1)):(f=l[c+4>>2],l[b+576>>2]=l[c>>2],l[b+580>>2]=f,f=l[b+1708>>2],l[b+568>>2]=l[b+1704>>2],l[b+572>>2]=f,Vi(b+1752|0,Gb(b+568|0),0)),s=l[4+(f=b+1760|0)>>2],l[o>>2]=l[f>>2],l[o+4>>2]=s,f=l[b+1756>>2],l[b+1768>>2]=l[b+1752>>2],l[b+1772>>2]=f,f=l[o+4>>2],l[b+544>>2]=l[o>>2],l[b+548>>2]=f,f=l[b+1772>>2],l[b+536>>2]=l[b+1768>>2],l[b+540>>2]=f,15&v[b+536|0]?(3!=(0|w)?(f=l[c+4>>2],l[b+528>>2]=l[c>>2],l[b+532>>2]=f,f=l[b+1708>>2],l[b+520>>2]=l[b+1704>>2],l[b+524>>2]=f,f=Gb(b+520|0),s=l[o+4>>2],l[b+512>>2]=l[o>>2],l[b+516>>2]=s,s=l[b+1772>>2],l[b+504>>2]=l[b+1768>>2],l[b+508>>2]=s,s=Gb(b+504|0),t=l[o+4>>2],l[b+496>>2]=l[o>>2],l[b+500>>2]=t,t=l[b+1772>>2],l[b+488>>2]=l[b+1768>>2],l[b+492>>2]=t,Nb(b+1752|0,b+488|0),u=l[4+(t=b+1760|0)>>2],l[b+480>>2]=l[t>>2],l[b+484>>2]=u,t=l[b+1756>>2],l[b+472>>2]=l[b+1752>>2],l[b+476>>2]=t,(f=Vf(u=df(r,f,s,vn(b+472|0)),b+1784|0))||(f=l[c+4>>2],l[b+464>>2]=l[c>>2],l[b+468>>2]=f,f=l[b+1708>>2],l[b+456>>2]=l[b+1704>>2],l[b+460>>2]=f,s=En(Gb(b+456|0)),bk(b+1736|0,r),jb(b+1720|0,qr(s)),t=l[4+(f=b+1744|0)>>2],l[b+448>>2]=l[f>>2],l[b+452>>2]=t,t=l[4+(f=b+1728|0)>>2],l[b+432>>2]=l[f>>2],l[b+436>>2]=t,f=l[b+1740>>2],l[b+440>>2]=l[b+1736>>2],l[b+444>>2]=f,f=l[b+1724>>2],l[b+424>>2]=l[b+1720>>2],l[b+428>>2]=f,f=e(r,b+440|0,b+424|0,b+1784|0,k),Lb(s))):(f=l[o+4>>2],l[b+416>>2]=l[o>>2],l[b+420>>2]=f,f=l[b+1772>>2],l[b+408>>2]=l[b+1768>>2],l[b+412>>2]=f,Nb(b+1752|0,b+408|0),s=l[4+(f=b+1760|0)>>2],l[b+400>>2]=l[f>>2],l[b+404>>2]=s,f=l[b+1756>>2],l[b+392>>2]=l[b+1752>>2],l[b+396>>2]=f,Ri(b+1736|0,b+392|0,y),f=l[b+1740>>2],l[b+1784>>2]=l[b+1736>>2],l[b+1788>>2]=f,u=0,f=0),_=s=k,h=l[s+12>>2],(m=(t=l[s+8>>2])+1|0)>>>0<1&&(h=h+1|0),l[_+8>>2]=m,l[s+12>>2]=h,l[k>>2]=an(l[k>>2],m<<2),l[k+4>>2]=an(l[k+4>>2],l[k+8>>2]<<3),s=l[c+4>>2],l[b+384>>2]=l[c>>2],l[b+388>>2]=s,s=l[b+1708>>2],l[b+376>>2]=l[b+1704>>2],l[b+380>>2]=s,s=En(Gb(b+376|0)),l[l[k>>2]+(t<<2)>>2]=s,s=l[k+4>>2]+(t<<3)|0,t=l[b+1788>>2],l[s>>2]=l[b+1784>>2],l[s+4>>2]=t,s=l[b+1788>>2],l[b+1304>>2]=l[b+1784>>2],l[b+1308>>2]=s,u&&hb(u)):(f=l[o+4>>2],l[b+368>>2]=l[o>>2],l[b+372>>2]=f,f=l[b+1772>>2],l[b+360>>2]=l[b+1768>>2],l[b+364>>2]=f,Nb(b+1752|0,b+360|0),s=l[4+(f=b+1760|0)>>2],l[b+352>>2]=l[f>>2],l[b+356>>2]=s,f=l[b+1756>>2],l[b+344>>2]=l[b+1752>>2],l[b+348>>2]=f,rb(b+344|0)?(f=l[o+4>>2],l[b+336>>2]=l[o>>2],l[b+340>>2]=f,f=l[b+1772>>2],l[b+328>>2]=l[b+1768>>2],l[b+332>>2]=f,Ck(b+1736|0,b+328|0)):jb(b+1736|0,23824),s=l[4+(f=b+1744|0)>>2],l[o>>2]=l[f>>2],l[o+4>>2]=s,f=l[b+1740>>2],l[b+1768>>2]=l[b+1736>>2],l[b+1772>>2]=f,f=l[c+4>>2],l[b+320>>2]=l[c>>2],l[b+324>>2]=f,f=l[b+1708>>2],l[b+312>>2]=l[b+1704>>2],l[b+316>>2]=f,f=Gb(b+312|0),s=l[o+4>>2],l[b+304>>2]=l[o>>2],l[b+308>>2]=s,s=l[b+1772>>2],l[b+296>>2]=l[b+1768>>2],l[b+300>>2]=s,l[b+292>>2]=Gb(b+296|0),l[b+288>>2]=f,Yb(b+1736|0,24096,b+288|0),s=l[4+(f=b+1744|0)>>2],l[b+280>>2]=l[f>>2],l[b+284>>2]=s,f=l[b+1740>>2],l[b+272>>2]=l[b+1736>>2],l[b+276>>2]=f,Mf(r,b+272|0),f=1),s=l[c+4>>2],l[b+264>>2]=l[c>>2],l[b+268>>2]=s,s=l[b+1708>>2],l[b+256>>2]=l[b+1704>>2],l[b+260>>2]=s,zb(b+256|0),s=l[o+4>>2],l[b+248>>2]=l[o>>2],l[b+252>>2]=s,s=l[b+1772>>2],l[b+240>>2]=l[b+1768>>2],l[b+244>>2]=s,zb(b+240|0),(p=f+p|0)||(f=l[b+1308>>2],l[b+232>>2]=l[b+1304>>2],l[b+236>>2]=f,f=l[b+1684>>2],l[b+224>>2]=l[b+1680>>2],l[b+228>>2]=f,ta(b+1768|0,b+232|0,b+224|0,y),f=l[b+1772>>2],l[b+1680>>2]=l[b+1768>>2],l[b+1684>>2]=f,3==(0|w)&&(f=l[b+1308>>2],l[b+216>>2]=l[b+1304>>2],l[b+220>>2]=f,f=l[b+1684>>2],l[b+208>>2]=l[b+1680>>2],l[b+212>>2]=f,ta(b+1768|0,b+216|0,b+208|0,0),f=l[b+1772>>2],l[b+1680>>2]=l[b+1768>>2],l[b+1684>>2]=f))}f=l[d+4>>2],l[b+200>>2]=l[d>>2],l[b+204>>2]=f,f=l[b+1460>>2],l[b+192>>2]=l[b+1456>>2],l[b+196>>2]=f,zb(b+192|0),f=1;break a}P(22451,18311,247,45303),M()}f=l[s+4>>2],l[b+184>>2]=l[s>>2],l[b+188>>2]=f,f=l[b+1364>>2],l[b+176>>2]=l[b+1360>>2],l[b+180>>2]=f,Ck(b+1768|0,b+176|0),f=l[o+4>>2],l[b+168>>2]=l[o>>2],l[b+172>>2]=f,f=l[b+1772>>2],l[b+160>>2]=l[b+1768>>2],l[b+164>>2]=f,l[b+144>>2]=Gb(b+160|0),Yb(b+1312|0,23512,b+144|0),s=l[4+(f=b+1320|0)>>2],l[b+136>>2]=l[f>>2],l[b+140>>2]=s,f=l[b+1316>>2],l[b+128>>2]=l[b+1312>>2],l[b+132>>2]=f,Mf(r,b+128|0),f=l[o+4>>2],l[b+120>>2]=l[o>>2],l[b+124>>2]=f,f=l[b+1772>>2],l[b+112>>2]=l[b+1768>>2],l[b+116>>2]=f,zb(b+112|0),f=l[d+4>>2],l[b+104>>2]=l[d>>2],l[b+108>>2]=f,f=l[b+1460>>2],l[b+96>>2]=l[b+1456>>2],l[b+100>>2]=f,zb(b+96|0),f=l[n+4>>2],l[b+88>>2]=l[n>>2],l[b+92>>2]=f,f=l[b+1692>>2],l[b+80>>2]=l[b+1688>>2],l[b+84>>2]=f,zb(b+80|0),f=l[a+12>>2],l[b+72>>2]=l[a+8>>2],l[b+76>>2]=f,f=l[a+4>>2],l[b+64>>2]=l[a>>2],l[b+68>>2]=f,zb(b- -64|0),f=l[i+12>>2],l[b+56>>2]=l[i+8>>2],l[b+60>>2]=f,f=l[i+4>>2],l[b+48>>2]=l[i>>2],l[b+52>>2]=f,zb(b+48|0),f=0}if(!f)break r;if((0|E)==(0|(g=g+1|0)))break}r=l[i+12>>2],l[b+40>>2]=l[i+8>>2],l[b+44>>2]=r,r=l[i+4>>2],l[b+32>>2]=l[i>>2],l[b+36>>2]=r,zb(b+32|0),r=l[a+12>>2],l[b+24>>2]=l[a+8>>2],l[b+28>>2]=r,r=l[a+4>>2],l[b+16>>2]=l[a>>2],l[b+20>>2]=r,zb(b+16|0),r=l[n+4>>2],l[b+8>>2]=l[n>>2],l[b+12>>2]=r,r=l[b+1692>>2],l[b>>2]=l[b+1688>>2],l[b+4>>2]=r,zb(b);break e}p=1}return ne=b+1792|0,p}(e,i+80|0,i- -64|0,i+168|0,i+152|0),l[i+112>>2]=0,l[i+116>>2]=0,t=e=l[i+164>>2],e|(c=l[i+160>>2]))for(e=l[i+156>>2],n=l[i+152>>2];Lb(l[((f=b)<<2)+n>>2]),r||(o=l[4+(k=(f<<3)+e|0)>>2],l[i+56>>2]=l[k>>2],l[i+60>>2]=o,Eb(i+56|0))?(k=l[4+(f=(f<<3)+e|0)>>2],l[i+48>>2]=l[f>>2],l[i+52>>2]=k,sn(i+48|0)):(f=l[i+116>>2],l[i+40>>2]=l[i+112>>2],l[i+44>>2]=f,f=l[k+4>>2],l[i+32>>2]=l[k>>2],l[i+36>>2]=f,$b(i+104|0,i+40|0,i+32|0),f=l[i+108>>2],l[i+112>>2]=l[i+104>>2],l[i+116>>2]=f),(b=b+1|0)>>>0<1&&(s=s+1|0),(0|s)==(0|t)&(f=b)>>>0<c>>>0|s>>>0<t>>>0;);else e=l[i+156>>2],n=l[i+152>>2];Lb(n),Lb(e),r?(e=l[i+172>>2],l[i+24>>2]=l[i+168>>2],l[i+28>>2]=e,sn(i+24|0)):(e=l[i+116>>2],l[i+16>>2]=l[i+112>>2],l[i+20>>2]=e,e=l[i+172>>2],l[i+8>>2]=l[i+168>>2],l[i+12>>2]=e,$b(i+96|0,i+16|0,i+8|0),e=l[i+100>>2],l[i>>2]=l[i+96>>2],l[i+4>>2]=e,de(i+104|0,i),e=l[i+108>>2],l[a>>2]=l[i+104>>2],l[a+4>>2]=e)}return ne=i+176|0,r}function Br(e,r,a){var i,f=0,k=0;ne=i=ne-496|0,f=l[a+12>>2],l[i+304>>2]=l[a+8>>2],l[i+308>>2]=f,f=l[a+4>>2],l[i+296>>2]=l[a>>2],l[i+300>>2]=f,oe(i+464|0,i+296|0),va(i+448|0,r),bk(i+432|0,r),a=l[10947],l[i+424>>2]=l[10946],l[i+428>>2]=a,a=l[10945],l[i+416>>2]=l[10944],l[i+420>>2]=a,a=l[i+476>>2],l[i+288>>2]=l[i+472>>2],l[i+292>>2]=a,a=l[i+460>>2],l[i+272>>2]=l[i+456>>2],l[i+276>>2]=a,a=l[i+444>>2],l[i+256>>2]=l[i+440>>2],l[i+260>>2]=a,a=l[i+428>>2],l[i+240>>2]=l[i+424>>2],l[i+244>>2]=a,a=l[i+468>>2],l[i+280>>2]=l[i+464>>2],l[i+284>>2]=a,a=l[i+452>>2],l[i+264>>2]=l[i+448>>2],l[i+268>>2]=a,a=l[i+436>>2],l[i+248>>2]=l[i+432>>2],l[i+252>>2]=a,a=l[i+420>>2],l[i+232>>2]=l[i+416>>2],l[i+236>>2]=a,ce(i+480|0,i+280|0,i+264|0,14125,i+248|0,i+232|0),a=l[i+492>>2],l[i+224>>2]=l[i+488>>2],l[i+228>>2]=a,a=l[i+484>>2],l[i+216>>2]=l[i+480>>2],l[i+220>>2]=a,15&v[i+216|0]?(a=l[10947],l[i+408>>2]=l[10946],l[i+412>>2]=a,a=l[10945],l[i+400>>2]=l[10944],l[i+404>>2]=a,a=l[i+492>>2],l[i+208>>2]=l[i+488>>2],l[i+212>>2]=a,a=l[i+484>>2],l[i+200>>2]=l[i+480>>2],l[i+204>>2]=a,Vi(i+384|0,Gb(i+200|0),1),a=l[i+396>>2],l[i+192>>2]=l[i+392>>2],l[i+196>>2]=a,a=l[i+388>>2],l[i+184>>2]=l[i+384>>2],l[i+188>>2]=a,15&v[i+184|0]&&(a=l[i+492>>2],l[i+176>>2]=l[i+488>>2],l[i+180>>2]=a,a=l[i+484>>2],l[i+168>>2]=l[i+480>>2],l[i+172>>2]=a,a=Gb(i+168|0),f=l[i+396>>2],l[i+160>>2]=l[i+392>>2],l[i+164>>2]=f,f=l[i+388>>2],l[i+152>>2]=l[i+384>>2],l[i+156>>2]=f,f=Gb(i+152|0),k=l[i+396>>2],l[i+144>>2]=l[i+392>>2],l[i+148>>2]=k,k=l[i+388>>2],l[i+136>>2]=l[i+384>>2],l[i+140>>2]=k,Nb(i+360|0,i+136|0),k=l[i+372>>2],l[i+128>>2]=l[i+368>>2],l[i+132>>2]=k,k=l[i+364>>2],l[i+120>>2]=l[i+360>>2],l[i+124>>2]=k,Vf(a=df(r,a,f,vn(i+120|0)),i+376|0)||(r=l[i+380>>2],l[i+112>>2]=l[i+376>>2],l[i+116>>2]=r,function(e,r){var a,i=0;ne=a=ne-16|0,!(r=l[r>>2])|37!=l[r+8>>2]?(r=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=r,r=l[10945],l[e>>2]=l[10944],l[e+4>>2]=r):(i=l[r+36>>2],l[a+8>>2]=l[r+32>>2],l[a+12>>2]=i,i=l[r+28>>2],l[a>>2]=l[r+24>>2],l[a+4>>2]=i,Nb(e,a)),ne=a+16|0}(i+344|0,i+112|0),r=l[i+356>>2],f=l[i+352>>2],l[i+408>>2]=f,l[i+412>>2]=r,l[i+104>>2]=f,l[i+108>>2]=r,r=l[i+348>>2],f=l[i+344>>2],l[i+400>>2]=f,l[i+404>>2]=r,l[i+96>>2]=f,l[i+100>>2]=r,1==(15&v[i+96|0])&&(mn(i+344|0),r=l[i+356>>2],l[i+408>>2]=l[i+352>>2],l[i+412>>2]=r,r=l[i+348>>2],l[i+400>>2]=l[i+344>>2],l[i+404>>2]=r),jb(i+328|0,14534),ue(i+312|0,i+376|0),r=l[i+412>>2],l[i+88>>2]=l[i+408>>2],l[i+92>>2]=r,r=l[i+340>>2],l[i+72>>2]=l[i+336>>2],l[i+76>>2]=r,r=l[i+324>>2],l[i+56>>2]=l[i+320>>2],l[i+60>>2]=r,r=l[i+404>>2],l[i+80>>2]=l[i+400>>2],l[i+84>>2]=r,r=l[i+332>>2],l[i+64>>2]=l[i+328>>2],l[i+68>>2]=r,r=l[i+316>>2],l[i+48>>2]=l[i+312>>2],l[i+52>>2]=r,en(i+344|0,i+80|0,i- -64|0,i+48|0),r=l[i+356>>2],l[i+408>>2]=l[i+352>>2],l[i+412>>2]=r,r=l[i+348>>2],l[i+400>>2]=l[i+344>>2],l[i+404>>2]=r),hb(a),r=l[i+380>>2],l[i+40>>2]=l[i+376>>2],l[i+44>>2]=r,sn(i+40|0)),r=l[i+492>>2],l[i+32>>2]=l[i+488>>2],l[i+36>>2]=r,r=l[i+484>>2],l[i+24>>2]=l[i+480>>2],l[i+28>>2]=r,zb(i+24|0),r=l[i+396>>2],l[i+16>>2]=l[i+392>>2],l[i+20>>2]=r,r=l[i+388>>2],l[i+8>>2]=l[i+384>>2],l[i+12>>2]=r,zb(i+8|0),r=l[i+412>>2],l[e+8>>2]=l[i+408>>2],l[e+12>>2]=r,r=l[i+404>>2],l[e>>2]=l[i+400>>2],l[e+4>>2]=r):(r=l[i+484>>2],l[e>>2]=l[i+480>>2],l[e+4>>2]=r,r=l[i+492>>2],l[e+8>>2]=l[i+488>>2],l[e+12>>2]=r),ne=i+496|0}function Cr(e,r,a){var i=0,f=0,k=0;e:if(r>>>0<=e>>>0){if((0|e)==(0|r))return r;for(i=1;;){if(255!=(0|(f=v[v[0|e]+44768|0]))){if(!f)break e;if((0|(r=f-i|0))<0)break e;a&&(l[a>>2]=r),k=e;break e}if(i=i+1|0,!((e=e+-1|0)>>>0>=r>>>0))break}}else P(14112,14517,12,44673),M();return k}function Lr(e,r){var a,i;ne=a=ne-16|0,l[e+24>>2]=r,2&r?(rn(a),r=l[a+12>>2],l[e+48>>2]=l[a+8>>2],l[e+52>>2]=r,r=l[a+4>>2],l[e+40>>2]=l[a>>2],l[e+44>>2]=r):(l[a>>2]=0,l[a+4>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,r=l[a+12>>2],l[e+48>>2]=l[a+8>>2],l[e+52>>2]=r,r=l[a+4>>2],l[e+40>>2]=l[a>>2],l[e+44>>2]=r,l[e+24>>2]=-5&l[e+24>>2]),l[e+56>>2]=0,l[e+36>>2]=0,l[e+28>>2]=0,l[e+32>>2]=0,l[a>>2]=0,l[a+4>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,r=l[a+12>>2],l[e+72>>2]=l[a+8>>2],l[e+76>>2]=r,i=l[a+4>>2],l[(r=e- -64|0)>>2]=l[a>>2],l[r+4>>2]=i,l[a>>2]=0,l[a+4>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,r=l[a+12>>2],l[e+88>>2]=l[a+8>>2],l[e+92>>2]=r,r=l[a+4>>2],l[e+80>>2]=l[a>>2],l[e+84>>2]=r,l[e+104>>2]=0,l[e+96>>2]=0,l[e+100>>2]=0,l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0,l[e+16>>2]=0,l[e+20>>2]=0,l[e+108>>2]=1,l[e+112>>2]=0,k[e+156|0]=254&v[e+156|0],l[e+152>>2]=0-(1&l[e+24>>2])&3,l[e+116>>2]=0,l[e+120>>2]=0,l[e+148>>2]=0,l[e+140>>2]=0,l[e+144>>2]=0,l[e+132>>2]=0,l[e+136>>2]=0,l[e+124>>2]=0,l[e+128>>2]=0,ne=a+16|0}function Hr(e,r,a,i,f){var c,o=0,u=0,d=0,h=0,w=0,p=0,y=0,E=0,_=0,D=0,S=0,F=0,M=0,A=0,x=0,P=0,T=0;ne=c=ne-16|0,m[c>>3]=r,t(+r),w=0|b(1),o=0|b(0),(0|(h=w))<=-1?(l[i>>2]=1,h&=2147483647,l[c+4>>2]=h):l[i>>2]=0;e:if(2146435072!=(2146435072&h))if(0!=m[c>>3]){p=na(e,c,c+8|0,c+12|0),(i=(w=l[c+4>>2])>>>20&2047)?(D=i+-1023|0,u=l[c>>2],o=1048575&l[c+4>>2]|1072693248,w=0):(D=(i=l[c+8>>2]+l[c+12>>2]|0)-1|0,t(+((w=(0|i)>=-1041?w<<-1010-i|l[c>>2]>>>i+1042:l[c>>2]<<-1042-i)>>>0)),o=(w=0|b(1))-32505856|0,o=(i=0|b(0))>>>0<0?o+1|0:o,u=i,w=1),y=1,n(0,0|u),n(1,0|o),r=.301029995663981*+(0|D)+(.289529654602168*(+s()-1.5)+.1760912590558),(F=(i=g(r)<2147483648?~~r:-2147483648)-(r!=+(0|i)&r<0)|0)>>>0>22||(y=0,m[c>>3]<m[44272+(F<<3)>>3]&&(F=F+-1|0)),E=(o=(0|(i=l[c+12>>2]+(-1^D)|0))>-1)?0:0-i|0,o=o?i:0,(0|F)>=0?(o=o+F|0,d=F,i=0):(E=E-F|0,i=0-F|0),_=e,(h=l[e>>2])?l[_>>2]=l[h>>2]:(h=Bb(24),l[h+8>>2]=1,l[h+4>>2]=0),l[h+12>>2]=0,l[h+16>>2]=0,l[h>>2]=0,x=h+4|0;r:{a:{if(!((0|(e=l[c+8>>2]))<0|(0|F)>14)){if(A=m[c>>3],r=m[44272+(F<<3)>>3],e=g(T=A/r)<2147483648?~~T:-2147483648,m[c>>3]=A-r*+(0|e),k[0|x]=e+48,D=1,i=x+1|0,0==(A=m[c>>3])){w=i;break r}for(;;){if(e=g(T=(A*=10)/r)<2147483648?~~T:-2147483648,m[c>>3]=A-r*+(0|e),k[0|i]=e+48,i=i+1|0,0==(A=m[c>>3])){w=i;break r}if(-1==(0|(D=D+1|0)))break}if(A+=A,m[c>>3]=A,A>r)break a;if(!(1&e)){w=i;break r}if(A==r)break a;w=i;break r}e=w?e+1075|0:54-l[c+12>>2]|0,(w=l[_+4>>2])?l[_+4>>2]=l[w>>2]:(w=Bb(28),l[(u=w)+4>>2]=1,l[u+8>>2]=2),l[w+20>>2]=1,l[w+12>>2]=0,l[w+16>>2]=1,h=e+E|0,(0|E)<1|(0|(o=e+o|0))<1||(o=o-(e=(0|E)<(0|o)?E:o)|0,E=E-e|0,h=h-e|0),(0|i)<1?e=p:(e=Qf(_,w=Ib(_,w,i),p),p&&((0|(i=l[p+4>>2]))>=8?Lb(p):(i=(i<<2)+_|0,l[p>>2]=l[i>>2],l[i>>2]=p))),(S=l[_+4>>2])?l[_+4>>2]=l[S>>2]:(S=Bb(28),l[(i=S)+4>>2]=1,l[i+8>>2]=2),l[S+20>>2]=1,l[S+12>>2]=0,l[S+16>>2]=1,(0|d)>=1&&(S=Ib(_,S,d)),D=0,l[c>>2]||1048575&(i=l[c+4>>2])|!(2145386496&i)||(D=1,o=o+1|0,h=h+1|0),i=o,p=u=((d=l[16+((l[S+16>>2]<<2)+S|0)>>2])>>>0<65536)<<4,M=8|u,p=(u=(d=d>>>0>65535?d:d<<16)>>>0>16777215)?p:M,M=p=(u=(d=u?d:d<<8)>>>0>268435455)?p:4|p,P=2|p,d=M=(p=(u=u?d:d<<4)>>>0>1073741823)?M:P,(0|(u=p?u:u<<2))<0||(d=32,1073741824&u&&(d=M+1|0)),i=(P=28+(d-((0|o)>0?o:0)|0)&31)+i|0,(0|(d=h+P|0))>=1&&(e=Kk(_,e,d)),(0|i)>=1&&(S=Kk(_,S,i));i:{f:if(y){M=l[e+16>>2],i=l[S+16>>2];k:{if(!(d=M-i|0)){for(i=(d=e+20|0)+(o=i<<2)|0,h=20+(o+S|0)|0;;){if((0|(o=l[(i=i+-4|0)>>2]))!=(0|(u=l[(h=h+-4|0)>>2]))){if(o>>>0>=u>>>0)break f;break k}if(!(i>>>0>d>>>0))break}break f}if((0|d)>-1)break f}for(i=e+20|0,h=0,u=0,o=0;d=zi(l[i>>2],0,10,0)+u|0,o=o+se|0,o=d>>>0<u>>>0?o+1|0:o,l[i>>2]=d,i=i+4|0,u=o,o=0,(0|(h=h+1|0))<(0|M););for(o|u?((0|M)<l[e+8>>2]?p=e:((0|(i=l[e+4>>2]+1|0))>7||!(p=l[(d=(i<<2)+_|0)>>2])?(p=Bb(20+((d=1<<i)<<2)|0),l[p+8>>2]=d,l[p+4>>2]=i):l[d>>2]=l[p>>2],l[p+12>>2]=0,l[p+16>>2]=0,qb(p+12|0,e+12|0,8+(l[e+16>>2]<<2)|0),(0|(i=l[e+4>>2]))>=8?Lb(e):(i=(i<<2)+_|0,l[e>>2]=l[i>>2],l[i>>2]=e)),l[20+((M<<2)+p|0)>>2]=u,l[p+16>>2]=M+1):p=e,F=F+-1|0,i=w+20|0,d=l[w+16>>2],h=0,u=0;e=zi(l[i>>2],0,10,0)+u|0,y=o+se|0,y=e>>>0<u>>>0?y+1|0:y,l[i>>2]=e,i=i+4|0,u=y,(0|(h=h+1|0))<(0|d););if(!(o|u)){e=w;break i}(0|d)<l[w+8>>2]?e=w:((0|(i=l[w+4>>2]+1|0))>7||!(e=l[(o=(i<<2)+_|0)>>2])?(e=Bb(20+((o=1<<i)<<2)|0),l[e+8>>2]=o,l[e+4>>2]=i):l[o>>2]=l[e>>2],l[e+12>>2]=0,l[e+16>>2]=0,qb(e+12|0,w+12|0,8+(l[w+16>>2]<<2)|0),(0|(i=l[w+4>>2]))>=8?Lb(w):(i=(i<<2)+_|0,l[w>>2]=l[i>>2],l[i>>2]=w)),l[20+((d<<2)+e|0)>>2]=u,l[e+16>>2]=d+1;break i}p=e,e=w}(0|(i=E+P|0))<1?d=e:e=d=Kk(_,e,i),D&&((0|(e=l[d+4>>2]))>7||!(i=l[(w=(e<<2)+_|0)>>2])?(i=Bb(20+((w=1<<e)<<2)|0),l[i+8>>2]=w,l[i+4>>2]=e):l[w>>2]=l[i>>2],l[i+12>>2]=0,l[i+16>>2]=0,qb(i+12|0,d+12|0,8+(l[d+16>>2]<<2)|0),e=Kk(_,i,1)),D=1,w=x;i:{f:{k:{b:{n:{s:{for(;;){y=yf(p,S),i=l[d+16>>2],o=l[p+16>>2]-i|0;t:if(!o){for(i=(o=p+20|0)+(u=i<<2)|0,h=20+(d+u|0)|0;;){if((0|(u=l[(i=i+-4|0)>>2]))!=(0|(E=l[(h=h+-4|0)>>2]))){o=u>>>0<E>>>0?-1:1;break t}if(!(i>>>0>o>>>0))break}o=0}u=ge(_,S,e),h=1;t:{c:{o:if(!l[u+12>>2]){if(i=l[u+16>>2],h=l[p+16>>2]-i|0)break c;for(i=(E=p+20|0)+(h=i<<2)|0,h=20+(u+h|0)|0;;){if((0|(M=l[(i=i+-4|0)>>2]))!=(0|(P=l[(h=h+-4|0)>>2]))){h=M>>>0<P>>>0?-1:1;break o}if(!(i>>>0>E>>>0))break}h=0}if(!u)break t}(0|(i=l[u+4>>2]))>=8?Lb(u):(i=(i<<2)+_|0,l[u>>2]=l[i>>2],l[i>>2]=u)}if(i=y+48|0,!(1&k[0|c]|h)){if(57==(0|i))break k;k[0|w]=(0|o)>0?y+49|0:i,w=w+1|0;break i}if(!(1&k[0|c]|o&&(0|o)>=0)){t:{if(!l[p+20>>2]){if((0|h)<1)break b;if(l[p+16>>2]>1)break t;break b}if((0|h)<1)break b}if(p=Kk(_,p,1),o=l[S+16>>2],u=l[p+16>>2]-o|0)break s;for(h=(u=p+20|0)+(o<<=2)|0,D=20+(o+S|0)|0;;){if((0|(o=l[(h=h+-4|0)>>2]))!=(0|(E=l[(D=D+-4|0)>>2]))){if(o>>>0>=E>>>0)break n;break b}if(!(h>>>0>u>>>0))break}if(!(1&i))break b;break n}if((0|h)>=1){if(57==(0|i))break k;k[0|w]=y+49,w=w+1|0;break i}if(k[0|w]=i,w=w+1|0,-1==(0|D))break;for(i=p+20|0,E=l[p+16>>2],h=0,u=0,o=0;y=zi(l[i>>2],0,10,0)+u|0,o=o+se|0,o=y>>>0<u>>>0?o+1|0:o,l[i>>2]=y,i=i+4|0,u=o,o=0,(0|(h=h+1|0))<(0|E););if(o|u&&((0|E)>=l[p+8>>2]&&((0|(o=l[p+4>>2]+1|0))>7||!(i=l[(y=(o<<2)+_|0)>>2])?(i=Bb(20+((y=1<<o)<<2)|0),l[i+8>>2]=y,l[i+4>>2]=o):l[y>>2]=l[i>>2],l[i+12>>2]=0,l[i+16>>2]=0,qb(i+12|0,p+12|0,8+(l[p+16>>2]<<2)|0),(0|(o=l[p+4>>2]))>=8?Lb(p):(o=(o<<2)+_|0,l[p>>2]=l[o>>2],l[o>>2]=p),p=i),l[20+((E<<2)+p|0)>>2]=u,l[p+16>>2]=E+1),i=d+20|0,E=l[d+16>>2],h=0,u=0,o=0,(0|e)!=(0|d)){for(;y=zi(l[i>>2],0,10,0)+u|0,o=o+se|0,o=y>>>0<u>>>0?o+1|0:o,l[i>>2]=y,i=i+4|0,u=o,o=0,(0|(h=h+1|0))<(0|E););for(o|u&&((0|E)>=l[d+8>>2]&&((0|(o=l[d+4>>2]+1|0))>7||!(i=l[(y=(o<<2)+_|0)>>2])?(i=Bb(20+((y=1<<o)<<2)|0),l[i+8>>2]=y,l[i+4>>2]=o):l[y>>2]=l[i>>2],l[i+12>>2]=0,l[i+16>>2]=0,qb(i+12|0,d+12|0,8+(l[d+16>>2]<<2)|0),(0|(o=l[d+4>>2]))>=8?Lb(d):(o=(o<<2)+_|0,l[d>>2]=l[o>>2],l[o>>2]=d),d=i),l[20+((E<<2)+d|0)>>2]=u,l[d+16>>2]=E+1),i=e+20|0,E=l[e+16>>2],h=0,u=0,o=0;M=zi(l[i>>2],0,10,0)+u|0,y=o+se|0,l[i>>2]=M,i=i+4|0,u=M>>>0<u>>>0?y+1|0:y,(0|(h=h+1|0))<(0|E););o|u&&((0|E)>=l[e+8>>2]&&((0|(o=l[e+4>>2]+1|0))>7||!(i=l[(y=(o<<2)+_|0)>>2])?(i=Bb(20+((y=1<<o)<<2)|0),l[i+8>>2]=y,l[i+4>>2]=o):l[y>>2]=l[i>>2],l[i+12>>2]=0,l[i+16>>2]=0,qb(i+12|0,e+12|0,8+(l[e+16>>2]<<2)|0),(0|(o=l[e+4>>2]))>=8?Lb(e):(o=(o<<2)+_|0,l[e>>2]=l[o>>2],l[o>>2]=e),e=i),l[20+((E<<2)+e|0)>>2]=u,l[e+16>>2]=E+1),D=D+1|0}else{for(;e=zi(l[i>>2],0,10,0)+u|0,y=o+se|0,y=e>>>0<u>>>0?y+1|0:y,l[i>>2]=e,i=i+4|0,u=y,(0|(h=h+1|0))<(0|E););if(!(o|u)){e=d,D=D+1|0;continue}(0|E)>=l[d+8>>2]&&((0|(e=l[d+4>>2]+1|0))>7||!(i=l[(o=(e<<2)+_|0)>>2])?(i=Bb(20+((o=1<<e)<<2)|0),l[i+8>>2]=o,l[i+4>>2]=e):l[o>>2]=l[i>>2],l[i+12>>2]=0,l[i+16>>2]=0,qb(i+12|0,d+12|0,8+(l[d+16>>2]<<2)|0),(0|(e=l[d+4>>2]))>=8?Lb(d):(e=(e<<2)+_|0,l[d>>2]=l[e>>2],l[e>>2]=d),d=i),l[20+((E<<2)+d|0)>>2]=u,l[d+16>>2]=E+1,e=d,D=D+1|0}}t:{p=Kk(_,p,1),o=l[S+16>>2],u=l[p+16>>2]-o|0;c:if(u){if((0|u)<=0)break t}else{for(h=(u=p+20|0)+(o<<=2)|0,D=20+(o+S|0)|0;;){if((0|(o=l[(h=h+-4|0)>>2]))!=(0|(y=l[(D=D+-4|0)>>2]))){if(o>>>0>=y>>>0)break c;break t}if(!(h>>>0>u>>>0))break}if(!(1&i))break t}i=w;break f}for(;48==v[0|(w=(i=w)+-1|0)];);w=i;break i}if((0|u)<=0)break b}if(57==(0|i))break k;i=y+49|0}k[0|w]=i,w=w+1|0;break i}k[0|w]=57,i=w+1|0}f:{for(;;){if(w=i,57!=(0|(o=v[0|(i=i+-1|0)])))break f;if((0|i)==(0|x))break}k[0|x]=49,F=F+1|0;break i}k[0|i]=o+1}if(S&&((0|(i=l[S+4>>2]))>=8?Lb(S):(i=(i<<2)+_|0,l[S>>2]=l[i>>2],l[i>>2]=S)),!e)break r;if(!d|(0|e)==(0|d)||((0|(i=l[d+4>>2]))>=8?Lb(d):(i=(i<<2)+_|0,l[d>>2]=l[i>>2],l[i>>2]=d)),(0|(i=l[e+4>>2]))>=8){Lb(e);break r}i=(i<<2)+_|0,l[e>>2]=l[i>>2],l[i>>2]=e;break r}a:{for(;;){if(w=i,57!=(0|(e=v[0|(i=i+-1|0)])))break a;if((0|i)==(0|x))break}k[0|x]=48,F=F+1|0,k[0|x]=49;break r}k[0|i]=e+1}p&&((0|(e=l[p+4>>2]))>=8?Lb(p):(e=(e<<2)+_|0,l[p>>2]=l[e>>2],l[e>>2]=p)),k[0|w]=0,l[a>>2]=F+1,f&&(l[f>>2]=w)}else{if(l[a>>2]=1,(i=l[e>>2])?l[e>>2]=l[i>>2]:(i=Bb(24),l[i+4>>2]=0,l[i+8>>2]=1),l[i+12>>2]=0,l[i+16>>2]=0,l[i>>2]=0,k[i+4|0]=48,k[i+5|0]=0,x=i+4|0,!f)break e;l[f>>2]=i+5}else{if(l[a>>2]=9999,i=l[e>>2],!(1048575&h|o)){if(i?l[e>>2]=l[i>>2]:(i=Bb(24),l[i+4>>2]=0,l[i+8>>2]=1),l[i+12>>2]=0,l[i+16>>2]=0,l[i>>2]=0,k[i+12|0]=0,k[i+4|0]=1768320585,k[i+5|0]=6907502,k[i+6|0]=26982,k[i+7|0]=105,k[i+8|0]=2037672302,k[i+9|0]=7959657,k[i+10|0]=31092,k[i+11|0]=121,x=i+4|0,!f)break e;l[f>>2]=i+12;break e}if(i?l[e>>2]=l[i>>2]:(i=Bb(24),l[i+4>>2]=0,l[i+8>>2]=1),l[i+12>>2]=0,l[i+16>>2]=0,l[i>>2]=0,k[i+4|0]=5136718,k[i+5|0]=20065,k[i+6|0]=78,k[i+7|0]=0,x=i+4|0,!f)break e;l[f>>2]=i+7}return ne=c+16|0,x}function qr(e){var r=0,a=0;e:if(!(!e|!v[0|e])){for(r=on(e);;){r:{if(47!=v[(r=r+-1|0)+e|0]){for(;;){if(!r)break e;if(47==v[(r=r+-1|0)+e|0])break}for(;;){if(a=r,!r)break r;if(47!=v[(r=a+-1|0)+e|0])break}return k[e+a|0]=0,e}if(r)continue}break}return 300882}return 300880}function Yr(e,r){var a,i=0,f=0,k=0;ne=a=ne-128|0;e:{if(r){if(i=l[r+12>>2],l[a+72>>2]=l[r+8>>2],l[a+76>>2]=i,i=l[r+4>>2],l[a+64>>2]=l[r>>2],l[a+68>>2]=i,7!=(15&v[a- -64|0]))break e;if(e=l[e>>2])for(;l[e+76>>2]?(i=l[e+80>>2],l[a+56>>2]=l[e+76>>2],l[a+60>>2]=i,Yr(a+56|0,r)):l[e+60>>2]|40!=(32|l[e+8>>2])||(jb(a+96|0,l[e+64>>2]),i=l[10939],l[a+88>>2]=l[10938],l[a+92>>2]=i,i=l[10937],l[a+80>>2]=l[10936],l[a+84>>2]=i,i=l[r+12>>2],l[a+48>>2]=l[r+8>>2],l[a+52>>2]=i,i=l[r>>2],k=l[r+4>>2],f=l[a+108>>2],l[a+32>>2]=l[a+104>>2],l[a+36>>2]=f,f=l[a+92>>2],l[a+16>>2]=l[a+88>>2],l[a+20>>2]=f,l[a+40>>2]=i,l[a+44>>2]=k,i=l[a+100>>2],l[a+24>>2]=l[a+96>>2],l[a+28>>2]=i,i=l[a+84>>2],l[a+8>>2]=l[a+80>>2],l[a+12>>2]=i,en(a+112|0,a+40|0,a+24|0,a+8|0),i=l[a+124>>2],l[r+8>>2]=l[a+120>>2],l[r+12>>2]=i,i=l[a+116>>2],l[r>>2]=l[a+112>>2],l[r+4>>2]=i),e=l[e>>2];);return void(ne=a+128|0)}P(27676,14282,747,35746),M()}P(27962,14282,748,35746),M()}function Wr(e,r,a){var i,f=0,k=0,b=0,n=0,s=0,t=0;ne=i=ne-272|0,l[i+248>>2]=0,l[i+252>>2]=0,l[i+240>>2]=0,l[i+244>>2]=0,b=f=l[r+4>>2],r=l[r>>2],l[i+232>>2]=r,l[i+236>>2]=f;e:{r:{a:{i:{f:{k:{b:{n:{s:{t:{c:{o:{u:{if(f=r,r){for(s=b,b=l[i+244>>2];;){if(39==l[(r=f)+8>>2]){if(r)if((f=l[r>>2])?(l[f+4>>2]=0,l[i+232>>2]=f,l[r>>2]=0):(s=0,l[i+232>>2]=0),n){if(l[n>>2])break o;if(l[r+4>>2])break c;l[n>>2]=r,l[r+4>>2]=n,b=r,n=r}else b=r,n=r,k=r;if(f)continue}break}if(l[i+236>>2]=s,l[i+244>>2]=b,l[i+240>>2]=k,k)break u}r=l[i+236>>2],l[i+8>>2]=l[i+232>>2],l[i+12>>2]=r,r=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=r,ki(e,i+8|0,i);break f}if(mn(i+216|0),r=l[i+244>>2],l[i+168>>2]=l[i+240>>2],l[i+172>>2]=r,Yr(i+168|0,i+216|0),r=l[i+236>>2],l[i+160>>2]=l[i+232>>2],l[i+164>>2]=r,Yr(i+160|0,i+216|0),r=l[i+228>>2],l[i+152>>2]=l[i+224>>2],l[i+156>>2]=r,r=l[i+220>>2],l[i+144>>2]=l[i+216>>2],l[i+148>>2]=r,n=Df(i+144|0),r=l[i+228>>2],l[i+136>>2]=l[i+224>>2],l[i+140>>2]=r,r=l[i+220>>2],l[i+128>>2]=l[i+216>>2],l[i+132>>2]=r,-2!=(0|n)){for(;;){if(r=l[i+228>>2],l[i+120>>2]=l[i+224>>2],l[i+124>>2]=r,r=l[i+220>>2],l[i+112>>2]=l[i+216>>2],l[i+116>>2]=r,_f(i+256|0,i+112|0,n),r=l[i+268>>2],l[i+208>>2]=l[i+264>>2],l[i+212>>2]=r,r=l[i+260>>2],l[i+200>>2]=l[i+256>>2],l[i+204>>2]=r,1!=l[8593])break t;f=Bb(104),l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+96>>2]=-1,l[f+8>>2]=1,l[f>>2]=0,l[f+4>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,k=l[i+252>>2],r=l[i+248>>2];u:{if(f){if(!k){k=f;break u}if(l[k>>2])break i;l[k>>2]=f,l[f+4>>2]=k,k=f}f=r}if(r=l[10947],l[i+192>>2]=l[10946],l[i+196>>2]=r,r=l[10945],l[i+184>>2]=l[10944],l[i+188>>2]=r,r=l[i+196>>2],l[i+264>>2]=l[i+192>>2],l[i+268>>2]=r,r=l[i+188>>2],l[i+256>>2]=l[i+184>>2],l[i+260>>2]=r,!(2&v[34344]))break s;r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=0,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,b=l[i+260>>2],l[r+24>>2]=l[i+256>>2],l[r+28>>2]=b,b=l[i+268>>2],l[r+32>>2]=l[i+264>>2],l[r+36>>2]=b;u:{if(r){if(!k){k=r;break u}if(l[k>>2])break i;l[k>>2]=r,l[r+4>>2]=k,k=r}r=f}if(f=l[i+212>>2],l[i+104>>2]=l[i+208>>2],l[i+108>>2]=f,f=l[i+204>>2],l[i+96>>2]=l[i+200>>2],l[i+100>>2]=f,b=Gb(i+96|0),!(4&v[34537]))break n;f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=8,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,l[f+64>>2]=En(b);u:{if(f){if(!k){k=f;break u}if(l[k>>2])break i;if(l[f+4>>2])break a;l[k>>2]=f,l[f+4>>2]=k,k=f}f=r}if(r=l[i+212>>2],l[i+88>>2]=l[i+208>>2],l[i+92>>2]=r,l[i+252>>2]=k,l[i+248>>2]=f,r=l[i+204>>2],l[i+80>>2]=l[i+200>>2],l[i+84>>2]=r,zb(i+80|0),r=l[i+228>>2],l[i+72>>2]=l[i+224>>2],l[i+76>>2]=r,r=l[i+220>>2],l[i+64>>2]=l[i+216>>2],l[i+68>>2]=r,n=jn(i- -64|0,n),r=l[i+228>>2],l[i+56>>2]=l[i+224>>2],l[i+60>>2]=r,r=l[i+220>>2],l[i+48>>2]=l[i+216>>2],l[i+52>>2]=r,-2==(0|n))break}k=l[i+240>>2]}if(r=l[i+228>>2],l[i+40>>2]=l[i+224>>2],l[i+44>>2]=r,r=l[i+220>>2],l[i+32>>2]=l[i+216>>2],l[i+36>>2]=r,zb(i+32|0),!k){b=0,s=0;break k}for(b=0,s=0;;){if(n=l[k+76>>2],r=l[k+80>>2],!(8&v[34728]))break r;if(!(t=l[i+236>>2]))break e;if(f=r,r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=16,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+20>>2]=t,l[r+84>>2]=0,l[r+88>>2]=0,r)if(f){if(l[f>>2])break i;l[f>>2]=r,l[r+4>>2]=f}else n=r;else r=f;if(!(8&v[35280]))break r;if(!r)break e;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=39,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+20>>2]=r,l[f+84>>2]=0,l[f+88>>2]=0,f)if(b){if(l[b>>2])break i;l[b>>2]=f,l[f+4>>2]=b}else s=f;else f=b;if(b=f,n)if(f){if(l[f>>2])break i;if(l[n+4>>2])break a;l[f>>2]=n,l[n+4>>2]=f,b=r}else s=n,b=r;if(l[k+76>>2]=0,l[k+80>>2]=0,!(k=l[k>>2]))break}break b}l[i+244>>2]=b;break i}l[i+244>>2]=b;break a}P(1044,14282,141,35388),M()}P(14782,14282,147,35402),M()}P(17730,14282,211,35526),M()}if(r=l[i+240>>2])for(;f=l[r>>2],Wk(r),r=f;);}if(f=l[i+232>>2])if(r=l[i+236>>2],b){if(l[b>>2])break i;if(l[f+4>>2])break a;l[b>>2]=f,l[f+4>>2]=b}else s=f;else r=b;if(b=l[a+4>>2],k=l[a>>2],l[i+176>>2]=s,l[i+180>>2]=r,k){if(r){if(l[r>>2])break i;if(l[k+4>>2])break a;l[r>>2]=k,l[k+4>>2]=r}else l[i+176>>2]=k;l[i+180>>2]=b}r=l[i+252>>2],l[i+24>>2]=l[i+248>>2],l[i+28>>2]=r,r=l[i+180>>2],l[i+16>>2]=l[i+176>>2],l[i+20>>2]=r,ki(e,i+24|0,i+16|0)}return void(ne=i+272|0)}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}P(16334,14282,190,35477),M()}P(16744,14282,191,35477),M()}function Gr(e,r,a){return(0|a)>=1&&pn(e,r,a<<2)?-1:0}function Xr(e,r,a,i){e:if(!(!a|(0|i)<1))for(i=i+-1|0;;){if(a>>>0<=r>>>0)return 0;if(a=0|f[l[e+56>>2]](r,a+-1|0),(0|i)<1)break e;if(i=i-(0!=(0|a))|0,!a)break}return a}function Jr(e,r,a,i,k,b,n,s){var t,c,o=0,u=0,d=0,h=0,m=0,w=0,p=0;ne=t=ne-32|0,c=l[e+372>>2]+k|0;e:{for(;;){r:{a:if(!((k=l[e+76>>2]+-1|0)>>>0>4)){i:switch(k-3|0){default:if(d=l[e+56>>2],(k=((h=l[e+100>>2])-(u=l[e+104>>2])|0)+a|0)>>>0<=i>>>0&&(i=0|f[l[d+56>>2]](b,k)),i>>>0<c>>>0)break e;for(;;){if(o=i,k=h,v[0|i]==v[0|k]){for(;(k=k+1|0)>>>0<u>>>0&&(o=o+1|0,v[0|k]==v[0|o]););if((0|k)==(0|u))break a}if(!((i=i>>>0>b>>>0?0|f[l[d+56>>2]](b,i+-1|0):0)>>>0>=c>>>0))break}break e;case 0:if(w=l[e+68>>2],d=l[e+56>>2],(k=((h=l[e+100>>2])-(u=l[e+104>>2])|0)+a|0)>>>0<=i>>>0&&(i=0|f[l[d+56>>2]](b,k)),i>>>0<c>>>0)break e;for(o=i;;){if(l[t+28>>2]=o,(k=h)>>>0>=u>>>0)break a;for(;;){f:{if((0|(m=0|f[l[d+32>>2]](w,t+28|0,a,t)))>=1){if(pn(k,t,m))break f;k=k+m|0}if(k>>>0<u>>>0)continue;break r}break}if(!((o=o>>>0>b>>>0?0|f[l[d+56>>2]](b,o+-1|0):0)>>>0>=c>>>0))break}break e;case 1:}if(i>>>0<c>>>0)break e;for(k=l[e+56>>2];;){if(v[108+(v[0|i]+e|0)|0])break a;if(!((i=i>>>0>b>>>0?0|f[l[k+56>>2]](b,i+-1|0):0)>>>0>=c>>>0))break}break e}o=i}if(!o)break e;r:{a:{if(32!=(0|(i=l[e+96>>2]))){if(2!=(0|i))break r;if((0|r)!=(0|o))break a;o=r;break r}if((0|a)==(0|o)){o=a;break r}if(f[l[l[e+56>>2]+16>>2]](o,a))break r;if(i=l[e+56>>2],i=o>>>0>b>>>0?0|f[l[i+56>>2]](b,o+-1|0):0)continue;break e}if(i=l[e+56>>2],i=o>>>0>r>>>0?0|f[l[i+56>>2]](r,o+-1|0):0,!f[l[l[e+56>>2]+16>>2]](i,a))continue}break}p=1,-1!=(0|(r=l[e+376>>2]))&&(l[n>>2]=o-r,r=o-l[e+372>>2]|0,l[s>>2]=r,a=l[e+56>>2],(e=0|f[l[a+56>>2]](b,r))>>>0<r>>>0&&(e=(0|f[l[a>>2]](e))+e|0),l[s>>2]=e)}return ne=t+32|0,p}function Vr(e,r,a){var i=0,b=0,n=0,s=0;if((b=l[r+24>>2])&&!(!(i=l[e+24>>2])|l[e>>2]!=l[r>>2]|l[e+4>>2]!=l[r+4>>2])){e:if((0|i)<1)i=0;else if(i=0,!((0|b)<1))for(n=r+29|0,s=e+29|0;;){if(v[0|(b=28+(e+i|0)|0)]!=v[28+(r+i|0)|0])break e;if((0|(b=0|f[l[l[a+8>>2]>>2]](b)))>=2&&pn(i+s|0,i+n|0,b+-1|0))break e;if((0|(i=i+b|0))>=l[e+24>>2])break e;if(!((0|i)<l[r+24>>2]))break}return!l[r+16>>2]|(0|i)<l[r+24>>2]|(0|i)<l[e+24>>2]?(l[e+16>>2]=0,a=1):a=!l[e+16>>2],l[e+24>>2]=i,l[e+20>>2]=l[e+20>>2]|l[r+20>>2],l[e+8>>2]=l[e+8>>2]&l[r+8>>2],void(l[e+12>>2]=a?0:l[e+12>>2]&l[r+12>>2])}l[e>>2]=0,l[e+4>>2]=0,k[e+21|0]=0,k[e+22|0]=0,k[e+23|0]=0,k[e+24|0]=0,k[e+25|0]=0,k[e+26|0]=0,k[e+27|0]=0,k[e+28|0]=0,l[e+16>>2]=0,l[e+20>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0}function Kr(e,r,a,i,f){var b=0,n=0,s=0;e:if(f)b=1==(0|a)?14:15;else if((f=r+-1|0)>>>0<=2){b=12;r:switch(f-1|0){default:b=a+-1>>>0<5?a+1|0:7;break e;case 1:break e;case 0:}b=a+-1>>>0<3?a+7|0:11}else b=13;f=l[i+8>>2],s=l[i+4>>2];e:{if(f>>>0>=(n=s+1|0)>>>0)f=l[i>>2];else{for(;(f<<=1)>>>0<n>>>0;);if(l[i+8>>2]=f,f=Ub(l[i>>2],f),l[i>>2]=f,!f)break e;s=l[i+4>>2]}k[f+s|0]=b,h[i+4>>2]>=n>>>0||(l[i+4>>2]=n)}e:if(!((f=b+-7|0)>>>0>8)){r:{a:{i:{f:{k:{b:switch(f-1|0){case 5:if((f=l[i+8>>2])>>>0>=(n=(b=l[i+4>>2])+4|0)>>>0)break k;for(;(f<<=1)>>>0<n>>>0;);if(l[i+8>>2]=f,f=Ub(l[i>>2],f),l[i>>2]=f,!f)break r;b=l[i+4>>2];break a;case 0:case 1:case 2:case 6:break e;case 7:break b;default:break r}if((f=l[i+8>>2])>>>0>=(n=(b=l[i+4>>2])+4|0)>>>0)break f;for(;(f<<=1)>>>0<n>>>0;);if(l[i+8>>2]=f,f=Ub(l[i>>2],f),l[i>>2]=f,!f)break e;b=l[i+4>>2];break i}f=l[i>>2];break a}f=l[i>>2]}if(f=f+b|0,b=w(r,a),k[0|f]=b,k[f+1|0]=b>>>8,k[f+2|0]=b>>>16,k[f+3|0]=b>>>24,h[i+4>>2]>=n>>>0)break e;l[i+4>>2]=n;break e}k[0|(f=f+b|0)]=r,k[f+1|0]=r>>>8,k[f+2|0]=r>>>16,k[f+3|0]=r>>>24,h[i+4>>2]>=n>>>0||(l[i+4>>2]=n)}if((f=l[i+8>>2])>>>0<(n=(b=l[i+4>>2])+4|0)>>>0){for(;(f<<=1)>>>0<n>>>0;);if(l[i+8>>2]=f,f=Ub(l[i>>2],f),l[i>>2]=f,!f)break e;b=l[i+4>>2]}else f=l[i>>2];k[0|(f=f+b|0)]=a,k[f+1|0]=a>>>8,k[f+2|0]=a>>>16,k[f+3|0]=a>>>24,h[i+4>>2]>=n>>>0||(l[i+4>>2]=n)}f=l[i+8>>2],b=l[i+4>>2],a=w(r,a);e:{if(f>>>0<(r=b+a|0)>>>0){for(;(f<<=1)>>>0<r>>>0;);if(l[i+8>>2]=f,f=Ub(l[i>>2],f),l[i>>2]=f,!f)break e;b=l[i+4>>2]}else f=l[i>>2];qb(f+b|0,e,a),h[i+4>>2]>=r>>>0||(l[i+4>>2]=r)}}function Zr(e,r,a){var i=0,f=0;if(!(1<<(f=l[e>>2])&2031))return 1;for(;;){if((i=f+-5|0)>>>0>4)return 0;e:{r:{a:{i:{f:switch(i-1|0){case 2:case 3:for(;;){if(i=Zr(l[e+4>>2],r,a))break e;if(!(e=l[e+8>>2]))break}return 0;default:e=e+8|0;break i;case 1:break a;case 0:}if(!(l[e+8>>2]&r))return 1;e=e+20|0}e=l[e>>2];break r}if(!(l[e+4>>2]&a))return 1;if(i=0,!(e=l[e+8>>2]))break e}if(i=1,1<<(f=l[e>>2])&2031)continue}break}return i}function $r(e){var r=0;e&&((r=l[e>>2])&&Lb(r),(r=l[e+100>>2])&&Lb(r),(r=l[e+364>>2])&&Lb(r),(r=l[e+368>>2])&&Lb(r),(r=l[e+52>>2])&&Lb(r),(r=l[e+380>>2])&&($r(r),Lb(r)),Ar(e))}function Qr(e,r,a,i,f,b,n,s,t){var c=0,o=0,u=0;c=l[s>>2];e:{r:if(!(c>>>0>3)){a:switch(c-1|0){default:if((s=l[n>>2])>>>0>1)break r;if(s-1){s=e,e=l[r>>2],k[8+(s=s+(e>>>3)|0)|0]=v[s+8|0]|1<<(7&e);break r}if((0|(c=Fn(s=e+40|0,e=l[r>>2],e)))>=0)break r;break e;case 0:i:{if(l[n>>2]==(0|b)){if(o=l[r>>2],!b){if(c=-400,(a|o)>>>0>255)break e;if(o>>>0>a>>>0){if(c=-203,64&v[l[t+12>>2]+10|0])break i;break e}if((0|o)>255|(0|o)>(0|a))break i;for(;;){if(k[8+(t=(o>>>3)+e|0)|0]=v[t+8|0]|1<<(7&o),(0|o)>=(0|a))break i;if(!((0|(o=o+1|0))<256))break}break i}if(o>>>0>a>>>0){if(c=-203,64&v[l[t+12>>2]+10|0])break i;break e}if((0|(c=Fn(e+40|0,o,a)))>=0)break i;break e}if((c=l[r>>2])>>>0>a>>>0){if(c=-203,64&v[l[t+12>>2]+10|0])break i;break e}if(!((0|c)>255||(0|c)>(0|(o=a>>>0<255?a:255)))){for(;k[8+(u=(c>>>3)+e|0)|0]=v[u+8|0]|1<<(7&c),!((0|c)>=(0|o))&&(0|(c=c+1|0))<256;);c=l[r>>2]}if(c>>>0>a>>>0){if(c=-203,64&v[l[t+12>>2]+10|0])break i;break e}if((0|(c=Fn(e+40|0,c,a)))<0)break e}l[s>>2]=2;break r;case 1:case 2:}l[s>>2]=0}l[i>>2]=f,l[r>>2]=a,l[n>>2]=b,c=0}return c}function ea(e){var r,a=0;r=l[e>>2]+-7|0;e:{if(r>>>0<=2){a=1;r:switch(r-1|0){case 0:for(;;){if(a=0,!ea(l[e+4>>2]))break e;if(!(e=l[e+8>>2]))break}break e;case 1:break r;default:break e}for(;;){if(ea(l[e+4>>2]))break e;if(!(e=l[e+8>>2]))break}}a=0}return a}function ra(){var e;return(e=Cb(44))&&(l[e+8>>2]=0,l[e+4>>2]=0,l[e>>2]=9),e}function aa(e,r,a,i){var f,k,b=0;ne=f=ne-272|0,k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=36,l[(b=k)>>2]=0,l[b+4>>2]=0,l[b+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0,mn(f+256|0),a&&(jb(f+224|0,20135),jb(f+208|0,a),a=l[f+268>>2],l[f+136>>2]=l[f+264>>2],l[f+140>>2]=a,a=l[f+236>>2],l[f+120>>2]=l[f+232>>2],l[f+124>>2]=a,a=l[f+220>>2],l[f+104>>2]=l[f+216>>2],l[f+108>>2]=a,a=l[f+260>>2],l[f+128>>2]=l[f+256>>2],l[f+132>>2]=a,a=l[f+228>>2],l[f+112>>2]=l[f+224>>2],l[f+116>>2]=a,a=l[f+212>>2],l[f+96>>2]=l[f+208>>2],l[f+100>>2]=a,en(f+240|0,f+128|0,f+112|0,f+96|0),a=l[f+252>>2],l[f+264>>2]=l[f+248>>2],l[f+268>>2]=a,a=l[f+244>>2],l[f+256>>2]=l[f+240>>2],l[f+260>>2]=a),jb(f+192|0,20403),i?(a=l[10939],l[f+184>>2]=l[10938],l[f+188>>2]=a,a=l[10937],l[f+176>>2]=l[10936],l[f+180>>2]=a):(a=l[10943],l[f+184>>2]=l[10942],l[f+188>>2]=a,a=l[10941],l[f+176>>2]=l[10940],l[f+180>>2]=a),a=l[f+268>>2],l[f+88>>2]=l[f+264>>2],l[f+92>>2]=a,a=l[f+204>>2],l[f+72>>2]=l[f+200>>2],l[f+76>>2]=a,a=l[f+188>>2],l[f+56>>2]=l[f+184>>2],l[f+60>>2]=a,a=l[f+260>>2],l[f+80>>2]=l[f+256>>2],l[f+84>>2]=a,a=l[f+196>>2],l[f+64>>2]=l[f+192>>2],l[f+68>>2]=a,a=l[f+180>>2],l[f+48>>2]=l[f+176>>2],l[f+52>>2]=a,en(f+240|0,f+80|0,f- -64|0,f+48|0),a=l[f+252>>2],l[f+264>>2]=l[f+248>>2],l[f+268>>2]=a,a=l[f+244>>2],l[f+256>>2]=l[f+240>>2],l[f+260>>2]=a,jb(f+160|0,20629),jb(f+144|0,r),r=l[f+268>>2],l[f+40>>2]=l[f+264>>2],l[f+44>>2]=r,r=l[f+172>>2],l[f+24>>2]=l[f+168>>2],l[f+28>>2]=r,r=l[f+156>>2],l[f+8>>2]=l[f+152>>2],l[f+12>>2]=r,r=l[f+260>>2],l[f+32>>2]=l[f+256>>2],l[f+36>>2]=r,r=l[f+164>>2],l[f+16>>2]=l[f+160>>2],l[f+20>>2]=r,r=l[f+148>>2],l[f>>2]=l[f+144>>2],l[f+4>>2]=r,en(f+240|0,f+32|0,f+16|0,f),r=l[f+252>>2],i=l[f+248>>2],l[f+264>>2]=i,l[f+268>>2]=r,a=l[f+244>>2],b=l[f+240>>2],l[f+256>>2]=b,l[f+260>>2]=a,l[k+32>>2]=i,l[k+36>>2]=r,l[k+24>>2]=b,l[k+28>>2]=a,l[e+4>>2]=k,l[e>>2]=k,ne=f+272|0}function ia(e){var r=0,a=0;e:{r:{if(!(r=l[e+20>>2])){if(r=Bb(4),l[e+20>>2]=r,!r)break r;return l[r>>2]=0,l[e+12>>2]=0,void(l[e+16>>2]=1)}if(a=l[e+16>>2],h[e+12>>2]>=a+-1>>>0){if(r=an(r,(a=a+8|0)<<2),l[e+20>>2]=r,!r)break e;r=r+(l[e+16>>2]<<2)|0,l[r>>2]=0,l[r+4>>2]=0,l[r+24>>2]=0,l[r+28>>2]=0,l[r+16>>2]=0,l[r+20>>2]=0,l[r+8>>2]=0,l[r+12>>2]=0,l[e+16>>2]=a}return}Tk(19063),M()}Tk(19063),M()}function fa(e,r){var a;l[e+16>>2]=an(l[e+16>>2],4+(l[e+20>>2]<<2)|0),(r=En(r))||(ak(),M()),a=l[e+20>>2],l[e+20>>2]=a+1,l[l[e+16>>2]+(a<<2)>>2]=r}function ka(e,r,a,i){return ir(e,r,a,i)}function ba(e,r,a){var i,f=0;ne=i=ne+-64|0,l[i+24>>2]=0,l[i+28>>2]=0,l[i+56>>2]=0,l[i+48>>2]=0,l[i+52>>2]=0,l[i+40>>2]=0,l[i+44>>2]=0,l[i+32>>2]=0,l[i+36>>2]=0,f=l[e+12>>2],l[i+16>>2]=l[e+8>>2],l[i+20>>2]=f,f=l[e+4>>2],l[i+8>>2]=l[e>>2],l[i+12>>2]=f,mb(i+24|0,i+8|0,a,0,r,0),Ji(i+24|0),ne=i- -64|0}function na(e,r,a,i){var f,k=0,b=0,n=0,s=0,t=0,c=0;(n=l[e+4>>2])?l[e+4>>2]=l[n>>2]:(n=Bb(28),l[n+4>>2]=1,l[n+8>>2]=2),l[n+12>>2]=0,l[n+16>>2]=0,k=2147483647&(e=l[r+4>>2]),l[r+4>>2]=k,e&=1048575,e=(f=k>>>20)?1048576|e:e;e:{r:{a:{i:{f:{k:{b:{if(b=l[r>>2]){if(7&b){if(1&b){k=b;break a}k=b>>>(r=2&b?1:2);break i}if(s=k=!(r=65535&b)<<4,t=8|k,s=(k=255&(r=r?b:b>>>16))?s:t,t=s=(k=15&(r=k?r:r>>>8))?s:4|s,c=2|s,r=(s=3&(k=k?r:r>>>4))?t:c,!(1&(k=s?k:k>>>2))){if(!(k>>>=1))break b;r=r+1|0}if(!r)break a;break i}if(7&e){if(r=0,1&e){k=e;break f}k=e>>>(r=2&e?1:2);break f}if(b=k=!(r=65535&e)<<4,s=8|k,b=(k=255&(r=r?e:e>>>16))?b:s,s=b=(k=15&(r=k?r:r>>>8))?b:4|b,t=2|b,r=(b=3&(k=k?r:r>>>4))?s:t,1&(k=b?k:k>>>2))break f;if(!(k>>>=1))break k;r=r+1|0;break f}r=32,k=b;break i}r=32,k=e}b=1,l[n+16>>2]=1,l[n+20>>2]=k,r=r+32|0;break e}l[n+20>>2]=e<<32-r|k,e>>>=r;break r}l[n+20>>2]=k,r=0}b=e?2:1,l[n+16>>2]=b,l[n+24>>2]=e}return e=r+f|0,f?(l[a>>2]=e+-1075,l[i>>2]=53-r,n):(l[a>>2]=e+-1074,a=b<<5,k=r=((e=l[16+((b<<2)+n|0)>>2])>>>0<65536)<<4,b=8|r,k=(r=(e=e>>>0>65535?e:e<<16)>>>0>16777215)?k:b,b=k=(r=(e=r?e:e<<8)>>>0>268435455)?k:4|k,s=2|k,e=b=(k=(r=r?e:e<<4)>>>0>1073741823)?b:s,(0|(r=k?r:r<<2))<0||(e=32,1073741824&r&&(e=b+1|0)),l[i>>2]=a-e,n)}function sa(e,r,a){var i,f=0,k=0,b=0,n=0;ne=i=ne-272|0,f=l[r+12>>2],l[i+200>>2]=l[r+8>>2],l[i+204>>2]=f,f=l[r+4>>2],l[i+192>>2]=l[r>>2],l[i+196>>2]=f;e:{r:{if(6==(15&v[i+192|0])){if(f=l[a+12>>2],l[i+184>>2]=l[a+8>>2],l[i+188>>2]=f,f=l[a+4>>2],l[i+176>>2]=l[a>>2],l[i+180>>2]=f,6!=(15&v[i+176|0]))break r;if(f=l[r+12>>2],l[i+168>>2]=l[r+8>>2],l[i+172>>2]=f,f=l[r+4>>2],l[i+160>>2]=l[r>>2],l[i+164>>2]=f,Nb(i+256|0,i+160|0),f=l[i+268>>2],l[i+152>>2]=l[i+264>>2],l[i+156>>2]=f,f=l[i+260>>2],l[i+144>>2]=l[i+256>>2],l[i+148>>2]=f,f=Zb(i+144|0),k=l[a+12>>2],l[i+136>>2]=l[a+8>>2],l[i+140>>2]=k,k=l[a+4>>2],l[i+128>>2]=l[a>>2],l[i+132>>2]=k,Nb(i+240|0,i+128|0),k=l[i+252>>2],l[i+120>>2]=l[i+248>>2],l[i+124>>2]=k,k=l[i+244>>2],l[i+112>>2]=l[i+240>>2],l[i+116>>2]=k,(0|Zb(i+112|0))!=(0|f))break e;if(f=l[r+12>>2],l[i+104>>2]=l[r+8>>2],l[i+108>>2]=f,f=l[r+4>>2],l[i+96>>2]=l[r>>2],l[i+100>>2]=f,Nb(i+224|0,i+96|0),f=l[i+236>>2],l[i+88>>2]=l[i+232>>2],l[i+92>>2]=f,f=l[i+228>>2],l[i+80>>2]=l[i+224>>2],l[i+84>>2]=f,k=Zb(i+80|0),f=l[r+12>>2],l[i+72>>2]=l[r+8>>2],l[i+76>>2]=f,f=l[r+4>>2],l[i+64>>2]=l[r>>2],l[i+68>>2]=f,r=l[a+12>>2],l[i+56>>2]=l[a+8>>2],l[i+60>>2]=r,r=l[a+4>>2],l[i+48>>2]=l[a>>2],l[i+52>>2]=r,n=Ee(i- -64|0,i+48|0),rn(e),(0|k)>=1)for(r=0;a=w(r,40)+n|0,b=l[(f=a)+28>>2],l[i+40>>2]=l[f+24>>2],l[i+44>>2]=b,b=l[f+20>>2],l[i+32>>2]=l[f+16>>2],l[i+36>>2]=b,zb(i+32|0),f=l[e+12>>2],l[i+24>>2]=l[e+8>>2],l[i+28>>2]=f,f=l[e+4>>2],l[i+16>>2]=l[e>>2],l[i+20>>2]=f,f=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,Dn(i+208|0,i+16|0,r,i),a=l[i+220>>2],l[e+8>>2]=l[i+216>>2],l[e+12>>2]=a,a=l[i+212>>2],l[e>>2]=l[i+208>>2],l[e+4>>2]=a,(0|k)!=(0|(r=r+1|0)););return Lb(n),void(ne=i+272|0)}P(19901,16044,603,44193),M()}P(20245,16044,604,44193),M()}P(20477,16044,605,44193),M()}function ta(e,r,a,i){var f,b,n=0,s=0,t=0,c=0,o=0;ne=f=ne-32|0,i&&(n=on(i)),b=Bb(n+3|0),k[0|b]=0,s=n,i&&(s=n,v[0|i]&&(i=xf(b,i)+n|0,s=v[18858]|v[18859]<<8,k[0|i]=s,k[i+1|0]=s>>>8,k[i+2|0]=v[18860],s=n+2|0));e:{if(i=l[r>>2]){for(n=i;;){if(r=l[n+8>>2],37!=l[n+8>>2]&&1152!=(1152&l[8+(r>>>0<41?w(r,24)+34336|0:35320)>>2]))break e;if(!(n=l[n>>2]))break}if(i)for(n=s+1|0;xf((r=xf(Bb(on(o=l[i+64>>2])+n|0),b))+s|0,l[i+64>>2]),t=l[i+8>>2],t=l[8+(t>>>0<41?w(t,24)+34336|0:35320)>>2],l[i+64>>2]=r,l[f+28>>2]=i,l[f+24>>2]=i,c=l[f+28>>2],l[f+16>>2]=l[f+24>>2],l[f+20>>2]=c,c=l[a+4>>2],l[f+8>>2]=l[a>>2],l[f+12>>2]=c,Bn(f+16|0,f+8|0,6&t?1028:1152,0),l[i+64>>2]=o,Lb(r),i=l[i>>2];);}return Lb(b),r=l[a+4>>2],l[e>>2]=l[a>>2],l[e+4>>2]=r,void(ne=f+32|0)}P(19201,14282,394,35571),M()}function ca(e,r,a){var i,f=0,b=0;if(ne=i=ne-16|0,l[i+12>>2]=a,b=1024,f=Bb(1024),l[i+8>>2]=l[i+12>>2],(a=Uf(f,1024,r,l[i+8>>2]))>>>0>1023)for(;Lb(f),f=Bb(b=((0|a)>0?a:b)<<1),l[i+8>>2]=l[i+12>>2],(0|(a=Uf(f,b,r,l[i+8>>2])))<0|(0|a)>=(0|b););sb(f,a+f|0)?(r=Bb(a+17|0),l[r+12>>2]=a,l[r>>2]=1,l[r+8>>2]=a<<1,f&&qb(r+16|0,f,a),k[16+(r+a|0)|0]=0,l[e+8>>2]=r,l[e>>2]=5,l[e+4>>2]=0):ob(e,f,a),Lb(f),ne=i+16|0}function oa(e,r,a){var i,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0,w=0;ne=i=ne-352|0;e:{r:{a:{i:{if(5==(15&(n=v[0|r]))){if(5!=(15&(f=v[0|a])))break i;if(b=l[r+12>>2],c=l[r+8>>2],l[c>>2]=l[c>>2]+1,k[i+336|0]=n,s=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,n=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,l[i+348>>2]=b,l[i+344>>2]=c,k[i+340|0]=s,k[i+341|0]=s>>>8,k[i+342|0]=s>>>16,k[i+343|0]=s>>>24,k[i+337|0]=n,k[i+338|0]=n>>>8,k[i+339|0]=n>>>16,k[i+340|0]=n>>>24,n=l[c+8>>2],b=l[i+348>>2],l[i+216>>2]=l[i+344>>2],l[i+220>>2]=b,b=l[i+340>>2],l[i+208>>2]=l[i+336>>2],l[i+212>>2]=b,zb(i+208|0),b=l[a+12>>2],d=l[a+8>>2],l[d>>2]=l[d>>2]+1,k[i+336|0]=f,s=v[a+4|0]|v[a+5|0]<<8|v[a+6|0]<<16|v[a+7|0]<<24,f=v[a+1|0]|v[a+2|0]<<8|v[a+3|0]<<16|v[a+4|0]<<24,l[i+348>>2]=b,l[i+344>>2]=d,k[i+340|0]=s,k[i+341|0]=s>>>8,k[i+342|0]=s>>>16,k[i+343|0]=s>>>24,k[i+337|0]=f,k[i+338|0]=f>>>8,k[i+339|0]=f>>>16,k[i+340|0]=f>>>24,f=l[d+8>>2],b=l[i+348>>2],l[i+200>>2]=l[i+344>>2],l[i+204>>2]=b,b=l[i+340>>2],l[i+192>>2]=l[i+336>>2],l[i+196>>2]=b,zb(i+192|0),l[e>>2]=6,l[e+4>>2]=0,b=Bb(272),l[b+8>>2]=16,l[b>>2]=1,l[b+4>>2]=0,l[e+8>>2]=b,w=(t=c+16|0)+(b=n>>>1)|0,!(h=f>>>1))break a;if(!b)break r;for(d=d+16|0,o=i+336|1,b=m=i+304|1;;){n=(u=(f=ka(t,w-t|0,d,h))||w)-t|0,sb(t,u)?(f=Bb(n+17|0),l[f+12>>2]=n,l[f>>2]=1,l[f+8>>2]=n<<1,t&&qb(f+16|0,t,n),k[16+(f+n|0)|0]=0,l[i+248>>2]=f,l[i+240>>2]=5,l[i+244>>2]=0):ob(i+240|0,t,n),f=l[i+252>>2],l[i+328>>2]=l[i+248>>2],l[i+332>>2]=f,f=l[i+244>>2],l[i+320>>2]=l[i+240>>2],l[i+324>>2]=f,f=l[e+12>>2],n=l[e+8>>2],l[i+312>>2]=n,l[i+316>>2]=f,s=l[e+4>>2],f=l[e>>2],l[i+304>>2]=f,l[i+308>>2]=s,l[i+336>>2]=v[0|m]|v[m+1|0]<<8|v[m+2|0]<<16|v[m+3|0]<<24,s=v[b+3|0]|v[b+4|0]<<8|v[b+5|0]<<16|v[b+6|0]<<24,k[i+339|0]=s,k[i+340|0]=s>>>8,k[i+341|0]=s>>>16,k[i+342|0]=s>>>24,s=l[i+316>>2];f:if(!((c=15&f)>>>0>7)){k:switch(c-1|0){default:if(!n)break f;break;case 0:case 1:case 2:case 3:break f;case 4:case 5:case 6:}l[n>>2]=l[n>>2]+1}if(t=v[i+339|0]|v[i+340|0]<<8|v[i+341|0]<<16|v[i+342|0]<<24,k[i+299|0]=t,k[i+300|0]=t>>>8,k[i+301|0]=t>>>16,k[i+302|0]=t>>>24,l[i+296>>2]=l[i+336>>2],k[i+336|0]=f,f=v[i+299|0]|v[i+300|0]<<8|v[i+301|0]<<16|v[i+302|0]<<24,k[o+3|0]=f,k[o+4|0]=f>>>8,k[o+5|0]=f>>>16,k[o+6|0]=f>>>24,f=l[i+296>>2],k[0|o]=f,k[o+1|0]=f>>>8,k[o+2|0]=f>>>16,k[o+3|0]=f>>>24,l[i+348>>2]=s,l[i+344>>2]=n,6!=(0|c))break e;if(f=l[i+348>>2],l[i+184>>2]=l[i+344>>2],l[i+188>>2]=f,f=l[i+340>>2],l[i+176>>2]=l[i+336>>2],l[i+180>>2]=f,n=l[i+340>>2],zb(i+176|0),f=l[i+316>>2],l[i+168>>2]=l[i+312>>2],l[i+172>>2]=f,f=l[i+332>>2],l[i+152>>2]=l[i+328>>2],l[i+156>>2]=f,f=l[i+308>>2],l[i+160>>2]=l[i+304>>2],l[i+164>>2]=f,f=l[i+324>>2],l[i+144>>2]=l[i+320>>2],l[i+148>>2]=f,Dn(e,i+160|0,n,i+144|0),(0|w)==(0|(t=u+h|0))){sb(20711,20711)?(f=Bb(17),l[f+8>>2]=0,l[f+12>>2]=0,l[f>>2]=1,k[f+16|0]=0,l[i+232>>2]=f,l[i+224>>2]=5,l[i+228>>2]=0):ob(i+224|0,20711,0),f=l[i+236>>2],l[i+328>>2]=l[i+232>>2],l[i+332>>2]=f,f=l[i+228>>2],l[i+320>>2]=l[i+224>>2],l[i+324>>2]=f,f=l[e+12>>2],n=l[e+8>>2],l[i+312>>2]=n,l[i+316>>2]=f,s=l[e+4>>2],f=l[e>>2],l[i+304>>2]=f,l[i+308>>2]=s,l[i+336>>2]=v[0|m]|v[m+1|0]<<8|v[m+2|0]<<16|v[m+3|0]<<24,s=v[b+3|0]|v[b+4|0]<<8|v[b+5|0]<<16|v[b+6|0]<<24,k[i+339|0]=s,k[i+340|0]=s>>>8,k[i+341|0]=s>>>16,k[i+342|0]=s>>>24,s=l[i+316>>2];f:if(!((c=15&f)>>>0>7)){k:switch(c-1|0){default:if(!n)break f;break;case 0:case 1:case 2:case 3:break f;case 4:case 5:case 6:}l[n>>2]=l[n>>2]+1}if(u=v[i+339|0]|v[i+340|0]<<8|v[i+341|0]<<16|v[i+342|0]<<24,k[i+299|0]=u,k[i+300|0]=u>>>8,k[i+301|0]=u>>>16,k[i+302|0]=u>>>24,l[i+296>>2]=l[i+336>>2],k[i+336|0]=f,f=v[i+299|0]|v[i+300|0]<<8|v[i+301|0]<<16|v[i+302|0]<<24,k[o+3|0]=f,k[o+4|0]=f>>>8,k[o+5|0]=f>>>16,k[o+6|0]=f>>>24,f=l[i+296>>2],k[0|o]=f,k[o+1|0]=f>>>8,k[o+2|0]=f>>>16,k[o+3|0]=f>>>24,l[i+348>>2]=s,l[i+344>>2]=n,6!=(0|c))break e;f=l[i+348>>2],l[i+136>>2]=l[i+344>>2],l[i+140>>2]=f,f=l[i+340>>2],l[i+128>>2]=l[i+336>>2],l[i+132>>2]=f,n=l[i+340>>2],zb(i+128|0),f=l[i+316>>2],l[i+120>>2]=l[i+312>>2],l[i+124>>2]=f,f=l[i+332>>2],l[i+104>>2]=l[i+328>>2],l[i+108>>2]=f,f=l[i+308>>2],l[i+112>>2]=l[i+304>>2],l[i+116>>2]=f,f=l[i+324>>2],l[i+96>>2]=l[i+320>>2],l[i+100>>2]=f,Dn(e,i+112|0,n,i+96|0)}if(!(t>>>0<w>>>0))break}break r}P(19611,17172,672,43453),M()}P(20210,17172,673,43453),M()}if(d=Vk(t,w,i+292|0))for(t=i+336|1,u=h=i+304|1;;){sb(20711,20711)?(b=Bb(17),l[b+8>>2]=0,l[b+12>>2]=0,l[b>>2]=1,k[b+16|0]=0,l[i+264>>2]=b,l[i+256>>2]=5,l[i+260>>2]=0):ob(i+256|0,20711,0),f=l[i+292>>2],b=l[i+268>>2],l[i+344>>2]=l[i+264>>2],l[i+348>>2]=b,b=l[i+260>>2],l[i+336>>2]=l[i+256>>2],l[i+340>>2]=b,f=Zf(f,i+320|0),b=l[i+268>>2],l[i+88>>2]=l[i+264>>2],l[i+92>>2]=b,b=l[i+260>>2],l[i+80>>2]=l[i+256>>2],l[i+84>>2]=b,Ff(i+336|0,i+80|0,i+320|0,f),s=l[i+348>>2],f=l[i+344>>2],l[i+280>>2]=f,l[i+284>>2]=s,n=l[i+340>>2],b=l[i+336>>2],l[i+272>>2]=b,l[i+276>>2]=n,l[i+328>>2]=f,l[i+332>>2]=s,l[i+320>>2]=b,l[i+324>>2]=n,b=l[e+12>>2],f=l[e+8>>2],l[i+312>>2]=f,l[i+316>>2]=b,n=l[e+4>>2],b=l[e>>2],l[i+304>>2]=b,l[i+308>>2]=n,l[i+336>>2]=v[0|h]|v[h+1|0]<<8|v[h+2|0]<<16|v[h+3|0]<<24,n=v[u+3|0]|v[u+4|0]<<8|v[u+5|0]<<16|v[u+6|0]<<24,k[i+339|0]=n,k[i+340|0]=n>>>8,k[i+341|0]=n>>>16,k[i+342|0]=n>>>24,n=l[i+316>>2];a:if(!((s=15&b)>>>0>7)){i:switch(s-1|0){default:if(!f)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[f>>2]=l[f>>2]+1}if(c=v[i+339|0]|v[i+340|0]<<8|v[i+341|0]<<16|v[i+342|0]<<24,k[i+299|0]=c,k[i+300|0]=c>>>8,k[i+301|0]=c>>>16,k[i+302|0]=c>>>24,l[i+296>>2]=l[i+336>>2],k[i+336|0]=b,b=v[i+299|0]|v[i+300|0]<<8|v[i+301|0]<<16|v[i+302|0]<<24,k[t+3|0]=b,k[t+4|0]=b>>>8,k[t+5|0]=b>>>16,k[t+6|0]=b>>>24,b=l[i+296>>2],k[0|t]=b,k[t+1|0]=b>>>8,k[t+2|0]=b>>>16,k[t+3|0]=b>>>24,l[i+348>>2]=n,l[i+344>>2]=f,6!=(0|s))break e;if(b=l[i+348>>2],l[i+72>>2]=l[i+344>>2],l[i+76>>2]=b,b=l[i+340>>2],l[i+64>>2]=l[i+336>>2],l[i+68>>2]=b,f=l[i+340>>2],zb(i- -64|0),b=l[i+316>>2],l[i+56>>2]=l[i+312>>2],l[i+60>>2]=b,b=l[i+332>>2],l[i+40>>2]=l[i+328>>2],l[i+44>>2]=b,b=l[i+308>>2],l[i+48>>2]=l[i+304>>2],l[i+52>>2]=b,b=l[i+324>>2],l[i+32>>2]=l[i+320>>2],l[i+36>>2]=b,Dn(e,i+48|0,f,i+32|0),!(d=Vk(d,w,i+292|0)))break}}return e=l[r+12>>2],l[i+24>>2]=l[r+8>>2],l[i+28>>2]=e,e=l[r+4>>2],l[i+16>>2]=l[r>>2],l[i+20>>2]=e,zb(i+16|0),e=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=e,e=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=e,zb(i),void(ne=i+352|0)}P(18173,17172,326,43311),M()}function ua(e,r){var a,i=0,f=0,b=0,n=0,s=0,t=0;ne=a=ne-240|0;e:{f=15&(t=v[0|r]),b=v[0|e],i=0;r:if((0|f)==(0|(n=15&b)))if((i=n+-5|0)>>>0<=2){a:switch(i-1|0){case 1:s=l[e+12>>2],n=l[e+8>>2],l[n>>2]=l[n>>2]+1,k[a+216|0]=b,i=v[e+1|0]|v[e+2|0]<<8|v[e+3|0]<<16|v[e+4|0]<<24,k[a+217|0]=i,k[a+218|0]=i>>>8,k[a+219|0]=i>>>16,k[a+220|0]=i>>>24,i=v[e+4|0]|v[e+5|0]<<8|v[e+6|0]<<16|v[e+7|0]<<24,k[a+220|0]=i,k[a+221|0]=i>>>8,k[a+222|0]=i>>>16,k[a+223|0]=i>>>24,l[a+228>>2]=s,l[a+224>>2]=n,i=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[a+235|0]=i,k[a+236|0]=i>>>8,k[a+237|0]=i>>>16,k[a+238|0]=i>>>24,l[a+232>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,b=l[r+12>>2],i=l[r+8>>2];i:if(!(f>>>0>7)){f:switch(f-1|0){default:if(!i)break i;break;case 0:case 1:case 2:case 3:break i;case 4:case 5:case 6:}l[i>>2]=l[i>>2]+1}f=l[a+228>>2],l[a+96>>2]=l[a+224>>2],l[a+100>>2]=f,l[a+212>>2]=b,l[a+208>>2]=i,f=l[a+212>>2],l[a+80>>2]=l[a+208>>2],l[a+84>>2]=f,f=v[a+235|0]|v[a+236|0]<<8|v[a+237|0]<<16|v[a+238|0]<<24,k[a+204|0]=f,k[a+205|0]=f>>>8,k[a+206|0]=f>>>16,k[a+207|0]=f>>>24,f=l[a+232>>2],k[a+201|0]=f,k[a+202|0]=f>>>8,k[a+203|0]=f>>>16,k[a+204|0]=f>>>24,k[a+200|0]=t,f=l[a+220>>2],l[a+88>>2]=l[a+216>>2],l[a+92>>2]=f,f=l[a+204>>2],l[a+72>>2]=l[a+200>>2],l[a+76>>2]=f,i=function(e,r){var a=0,i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0,p=0,g=0,y=0,E=0,_=0,D=0;ne=a=ne-224|0;i:{f:{if(7==(15&(h=v[0|e]))){if(7!=(15&v[0|r]))break f;for(c=l[r+8>>2],o=l[r+4>>2],n=-1;;){if((0|(n=n+1|0))>=(0|o)){n=-2;break i}k:if(!((t=(15&v[16+(w(n,40)+c|0)|0])-1|0)>>>0>4))switch(t-1|0){case 3:break i;case 0:case 1:case 2:break k;default:continue}break}P(23734,17172,1225,43704),M()}P(22732,17172,1181,43670),M()}P(23065,17172,1182,43670),M()}i=1;i:{f:{k:if(-2!=(0|n))for(g=l[e+12>>2],u=l[e+8>>2],y=a+136|1,E=a+152|1,_=a+192|1,m=t=a+208|1;;){if(i=0,!(s=-1==(0|n))){if(!((0|o)>(0|n)&&(0|n)>=0))break i;i=8+(w(n,40)+c|0)|0}if(d=v[i+8|0],b=v[i+12|0]|v[i+13|0]<<8|v[i+14|0]<<16|v[i+15|0]<<24,k[a+171|0]=b,k[a+172|0]=b>>>8,k[a+173|0]=b>>>16,k[a+174|0]=b>>>24,l[a+168>>2]=v[i+9|0]|v[i+10|0]<<8|v[i+11|0]<<16|v[i+12|0]<<24,5!=(15&d))break f;if(p=v[i+20|0]|v[i+21|0]<<8|v[i+22|0]<<16|v[i+23|0]<<24,b=v[i+16|0]|v[i+17|0]<<8|v[i+18|0]<<16|v[i+19|0]<<24,l[b>>2]=l[b>>2]+1,i=v[a+171|0]|v[a+172|0]<<8|v[a+173|0]<<16|v[a+174|0]<<24,k[a+187|0]=i,k[a+188|0]=i>>>8,k[a+189|0]=i>>>16,k[a+190|0]=i>>>24,l[a+184>>2]=l[a+168>>2],k[a+208|0]=d,i=m,f=v[a+187|0]|v[a+188|0]<<8|v[a+189|0]<<16|v[a+190|0]<<24,k[i+3|0]=f,k[i+4|0]=f>>>8,k[i+5|0]=f>>>16,k[i+6|0]=f>>>24,i=t,f=l[a+184>>2],k[0|i]=f,k[i+1|0]=f>>>8,k[i+2|0]=f>>>16,k[i+3|0]=f>>>24,l[a+220>>2]=p,l[a+216>>2]=b,s)i=0;else{if((0|o)<=(0|n))break i;i=8+(w(n,40)+c|0)|0}s=v[i+24|0],f=v[i+28|0]|v[i+29|0]<<8|v[i+30|0]<<16|v[i+31|0]<<24,k[a+171|0]=f,k[a+172|0]=f>>>8,k[a+173|0]=f>>>16,k[a+174|0]=f>>>24,l[a+168>>2]=v[i+25|0]|v[i+26|0]<<8|v[i+27|0]<<16|v[i+28|0]<<24,D=v[i+36|0]|v[i+37|0]<<8|v[i+38|0]<<16|v[i+39|0]<<24,f=v[i+32|0]|v[i+33|0]<<8|v[i+34|0]<<16|v[i+35|0]<<24;b:if(!((i=15&s)>>>0>7)){n:switch(i-1|0){default:if(!f)break b;break;case 0:case 1:case 2:case 3:break b;case 4:case 5:case 6:}l[f>>2]=l[f>>2]+1}if(i=v[a+171|0]|v[a+172|0]<<8|v[a+173|0]<<16|v[a+174|0]<<24,k[a+187|0]=i,k[a+188|0]=i>>>8,k[a+189|0]=i>>>16,k[a+190|0]=i>>>24,l[a+184>>2]=l[a+168>>2],k[a+192|0]=s,i=_,s=v[a+187|0]|v[a+188|0]<<8|v[a+189|0]<<16|v[a+190|0]<<24,k[i+3|0]=s,k[i+4|0]=s>>>8,k[i+5|0]=s>>>16,k[i+6|0]=s>>>24,s=l[a+184>>2],k[0|i]=s,k[i+1|0]=s>>>8,k[i+2|0]=s>>>16,k[i+3|0]=s>>>24,l[a+204>>2]=D,l[a+200>>2]=f,i=v[e+4|0]|v[e+5|0]<<8|v[e+6|0]<<16|v[e+7|0]<<24,k[a+171|0]=i,k[a+172|0]=i>>>8,k[a+173|0]=i>>>16,k[a+174|0]=i>>>24,l[a+168>>2]=v[e+1|0]|v[e+2|0]<<8|v[e+3|0]<<16|v[e+4|0]<<24,l[u>>2]=l[u>>2]+1,k[a+152|0]=h,i=E,f=v[a+171|0]|v[a+172|0]<<8|v[a+173|0]<<16|v[a+174|0]<<24,k[i+3|0]=f,k[i+4|0]=f>>>8,k[i+5|0]=f>>>16,k[i+6|0]=f>>>24,f=l[a+168>>2],k[0|i]=f,k[i+1|0]=f>>>8,k[i+2|0]=f>>>16,k[i+3|0]=f>>>24,l[a+164>>2]=g,l[a+160>>2]=u,i=v[(i=m)+3|0]|v[i+4|0]<<8|v[i+5|0]<<16|v[i+6|0]<<24,k[a+171|0]=i,k[a+172|0]=i>>>8,k[a+173|0]=i>>>16,k[a+174|0]=i>>>24,i=t,l[a+168>>2]=v[0|i]|v[i+1|0]<<8|v[i+2|0]<<16|v[i+3|0]<<24,l[b>>2]=l[b>>2]+1,k[a+136|0]=d,i=y,f=v[a+171|0]|v[a+172|0]<<8|v[a+173|0]<<16|v[a+174|0]<<24,k[i+3|0]=f,k[i+4|0]=f>>>8,k[i+5|0]=f>>>16,k[i+6|0]=f>>>24,f=l[a+168>>2],k[0|i]=f,k[i+1|0]=f>>>8,k[i+2|0]=f>>>16,k[i+3|0]=f>>>24,i=l[a+164>>2],l[a+128>>2]=l[a+160>>2],l[a+132>>2]=i,l[a+148>>2]=p,l[a+144>>2]=b,i=l[a+148>>2],l[a+112>>2]=l[a+144>>2],l[a+116>>2]=i,i=l[a+156>>2],l[a+120>>2]=l[a+152>>2],l[a+124>>2]=i,i=l[a+140>>2],l[a+104>>2]=l[a+136>>2],l[a+108>>2]=i,dn(a+168|0,a+120|0,a+104|0),i=l[a+180>>2],l[a+96>>2]=l[a+176>>2],l[a+100>>2]=i,i=l[a+204>>2],l[a+80>>2]=l[a+200>>2],l[a+84>>2]=i,i=l[a+172>>2],l[a+88>>2]=l[a+168>>2],l[a+92>>2]=i,i=l[a+196>>2],l[a+72>>2]=l[a+192>>2],l[a+76>>2]=i,i=ua(a+88|0,a+72|0),f=l[a+220>>2],l[(b=a- -64|0)>>2]=l[a+216>>2],l[b+4>>2]=f,b=l[a+212>>2],l[a+56>>2]=l[a+208>>2],l[a+60>>2]=b,zb(a+56|0),!i){i=0;break k}if(b=l[r+12>>2],l[a+48>>2]=l[r+8>>2],l[a+52>>2]=b,b=l[r+4>>2],l[a+40>>2]=l[r>>2],l[a+44>>2]=b,-2==(0|(n=jn(a+40|0,n))))break}return t=l[e+12>>2],l[a+32>>2]=l[e+8>>2],l[a+36>>2]=t,t=l[e+4>>2],l[a+24>>2]=l[e>>2],l[a+28>>2]=t,zb(a+24|0),e=l[r+12>>2],l[a+16>>2]=l[r+8>>2],l[a+20>>2]=e,e=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=e,zb(a+8|0),ne=a+224|0,i}P(24023,17172,1231,43724),M()}P(28228,17172,925,44064),M()}(a+88|0,a+72|0);break r;case 0:s=l[e+12>>2],n=l[e+8>>2],l[n>>2]=l[n>>2]+1,k[a+184|0]=b,i=v[e+1|0]|v[e+2|0]<<8|v[e+3|0]<<16|v[e+4|0]<<24,k[a+185|0]=i,k[a+186|0]=i>>>8,k[a+187|0]=i>>>16,k[a+188|0]=i>>>24,i=v[e+4|0]|v[e+5|0]<<8|v[e+6|0]<<16|v[e+7|0]<<24,k[a+188|0]=i,k[a+189|0]=i>>>8,k[a+190|0]=i>>>16,k[a+191|0]=i>>>24,l[a+196>>2]=s,l[a+192>>2]=n,i=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[a+235|0]=i,k[a+236|0]=i>>>8,k[a+237|0]=i>>>16,k[a+238|0]=i>>>24,l[a+232>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,b=l[r+12>>2],i=l[r+8>>2];i:if(!(f>>>0>7)){f:switch(f-1|0){default:if(!i)break i;break;case 0:case 1:case 2:case 3:break i;case 4:case 5:case 6:}l[i>>2]=l[i>>2]+1}f=l[a+196>>2],l[a+128>>2]=l[a+192>>2],l[a+132>>2]=f,l[a+180>>2]=b,l[a+176>>2]=i,f=l[a+180>>2],l[a+112>>2]=l[a+176>>2],l[a+116>>2]=f,f=v[a+235|0]|v[a+236|0]<<8|v[a+237|0]<<16|v[a+238|0]<<24,k[a+172|0]=f,k[a+173|0]=f>>>8,k[a+174|0]=f>>>16,k[a+175|0]=f>>>24,f=l[a+232>>2],k[a+169|0]=f,k[a+170|0]=f>>>8,k[a+171|0]=f>>>16,k[a+172|0]=f>>>24,k[a+168|0]=t,f=l[a+188>>2],l[a+120>>2]=l[a+184>>2],l[a+124>>2]=f,f=l[a+172>>2],l[a+104>>2]=l[a+168>>2],l[a+108>>2]=f,i=function(e,r){var a=0,i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0,w=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,A=0,x=0,T=0,R=0,O=0;ne=a=ne-272|0,u=v[0|r],l[a+256>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,i=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[a+259|0]=i,k[a+260|0]=i>>>8,k[a+261|0]=i>>>16,k[a+262|0]=i>>>24,m=l[r+12>>2],n=l[r+8>>2];i:if(!((t=15&u)>>>0>7)){f:switch(t-1|0){default:if(!n)break i;break;case 0:case 1:case 2:case 3:break i;case 4:case 5:case 6:}l[n>>2]=l[n>>2]+1}if(i=v[a+259|0]|v[a+260|0]<<8|v[a+261|0]<<16|v[a+262|0]<<24,k[a+243|0]=i,k[a+244|0]=i>>>8,k[a+245|0]=i>>>16,k[a+246|0]=i>>>24,l[a+240>>2]=l[a+256>>2],k[a+256|0]=u,i=l[a+240>>2],k[a+257|0]=i,k[a+258|0]=i>>>8,k[a+259|0]=i>>>16,k[a+260|0]=i>>>24,i=v[a+243|0]|v[a+244|0]<<8|v[a+245|0]<<16|v[a+246|0]<<24,k[a+260|0]=i,k[a+261|0]=i>>>8,k[a+262|0]=i>>>16,k[a+263|0]=i>>>24,l[a+268>>2]=m,l[a+264>>2]=n,6==(0|t))i:{i=l[a+268>>2],l[a+160>>2]=l[a+264>>2],l[a+164>>2]=i,i=l[a+260>>2],l[a+152>>2]=l[a+256>>2],l[a+156>>2]=i,f=1,w=l[a+260>>2],zb(a+152|0);f:if(!((0|w)<1))for(p=l[e+12>>2],s=l[e+8>>2],D=a+168|1,S=a+224|1,F=a+184|1,A=a+256|1,x=a+208|1,T=t>>>0>7,d=v[0|e],R=6==(0|(c=15&d));;){l[a+256>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,i=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[a+259|0]=i,k[a+260|0]=i>>>8,k[a+261|0]=i>>>16,k[a+262|0]=i>>>24;k:if(!T){b:switch(t-1|0){default:if(!n)break k;break;case 0:case 1:case 2:case 3:break k;case 4:case 5:case 6:}l[n>>2]=l[n>>2]+1}k[a+208|0]=u,i=x,f=v[a+259|0]|v[a+260|0]<<8|v[a+261|0]<<16|v[a+262|0]<<24,k[i+3|0]=f,k[i+4|0]=f>>>8,k[i+5|0]=f>>>16,k[i+6|0]=f>>>24,f=l[a+256>>2],k[0|i]=f,k[i+1|0]=f>>>8,k[i+2|0]=f>>>16,k[i+3|0]=f>>>24,l[a+220>>2]=m,l[a+216>>2]=n,i=l[a+220>>2],l[a+144>>2]=l[a+216>>2],l[a+148>>2]=i,i=l[a+212>>2],l[a+136>>2]=l[a+208>>2],l[a+140>>2]=i,Kb(a+224|0,a+136|0,h),i=v[e+4|0]|v[e+5|0]<<8|v[e+6|0]<<16|v[e+7|0]<<24,k[a+259|0]=i,k[a+260|0]=i>>>8,k[a+261|0]=i>>>16,k[a+262|0]=i>>>24,l[a+256>>2]=v[e+1|0]|v[e+2|0]<<8|v[e+3|0]<<16|v[e+4|0]<<24;k:if(!(g=c>>>0>7)){b:switch(c-1|0){default:if(!s)break k;break;case 0:case 1:case 2:case 3:break k;case 4:case 5:case 6:}l[s>>2]=l[s>>2]+1}if(i=v[a+259|0]|v[a+260|0]<<8|v[a+261|0]<<16|v[a+262|0]<<24,k[a+203|0]=i,k[a+204|0]=i>>>8,k[a+205|0]=i>>>16,k[a+206|0]=i>>>24,l[a+200>>2]=l[a+256>>2],k[a+256|0]=d,i=A,f=v[a+203|0]|v[a+204|0]<<8|v[a+205|0]<<16|v[a+206|0]<<24,k[i+3|0]=f,k[i+4|0]=f>>>8,k[i+5|0]=f>>>16,k[i+6|0]=f>>>24,f=l[a+200>>2],k[0|i]=f,k[i+1|0]=f>>>8,k[i+2|0]=f>>>16,k[i+3|0]=f>>>24,l[a+268>>2]=p,l[a+264>>2]=s,!R)break i;i=l[a+268>>2],l[a+128>>2]=l[a+264>>2],l[a+132>>2]=i,i=l[a+260>>2],l[a+120>>2]=l[a+256>>2],l[a+124>>2]=i,y=l[a+260>>2],zb(a+120|0);k:{if((0|y)>=1)for(E=v[a+224|0],_=15&E,o=l[a+232>>2],O=l[a+236>>2],f=0;;){l[a+248>>2]=v[e+1|0]|v[e+2|0]<<8|v[e+3|0]<<16|v[e+4|0]<<24,i=v[e+4|0]|v[e+5|0]<<8|v[e+6|0]<<16|v[e+7|0]<<24,k[a+251|0]=i,k[a+252|0]=i>>>8,k[a+253|0]=i>>>16,k[a+254|0]=i>>>24;b:if(!g){n:switch(c-1|0){default:if(!s)break b;break;case 0:case 1:case 2:case 3:break b;case 4:case 5:case 6:}l[s>>2]=l[s>>2]+1}k[a+184|0]=d,i=F,b=v[a+251|0]|v[a+252|0]<<8|v[a+253|0]<<16|v[a+254|0]<<24,k[i+3|0]=b,k[i+4|0]=b>>>8,k[i+5|0]=b>>>16,k[i+6|0]=b>>>24,b=l[a+248>>2],k[0|i]=b,k[i+1|0]=b>>>8,k[i+2|0]=b>>>16,k[i+3|0]=b>>>24,l[a+196>>2]=p,l[a+192>>2]=s,i=l[a+196>>2],l[a+112>>2]=l[a+192>>2],l[a+116>>2]=i,i=l[a+188>>2],l[a+104>>2]=l[a+184>>2],l[a+108>>2]=i,Kb(a+256|0,a+104|0,f),b=v[(i=S)+3|0]|v[i+4|0]<<8|v[i+5|0]<<16|v[i+6|0]<<24,k[a+251|0]=b,k[a+252|0]=b>>>8,k[a+253|0]=b>>>16,k[a+254|0]=b>>>24,l[a+248>>2]=v[0|i]|v[i+1|0]<<8|v[i+2|0]<<16|v[i+3|0]<<24;b:if(!(_>>>0>7)){n:switch(_-1|0){default:if(!o)break b;break;case 0:case 1:case 2:case 3:break b;case 4:case 5:case 6:}l[o>>2]=l[o>>2]+1}if(k[a+168|0]=E,i=D,b=v[a+251|0]|v[a+252|0]<<8|v[a+253|0]<<16|v[a+254|0]<<24,k[i+3|0]=b,k[i+4|0]=b>>>8,k[i+5|0]=b>>>16,k[i+6|0]=b>>>24,b=l[a+248>>2],k[0|i]=b,k[i+1|0]=b>>>8,k[i+2|0]=b>>>16,k[i+3|0]=b>>>24,i=l[a+268>>2],l[a+96>>2]=l[a+264>>2],l[a+100>>2]=i,l[a+180>>2]=O,l[a+176>>2]=o,i=l[a+180>>2],l[a+80>>2]=l[a+176>>2],l[a+84>>2]=i,i=l[a+260>>2],l[a+88>>2]=l[a+256>>2],l[a+92>>2]=i,i=l[a+172>>2],l[a+72>>2]=l[a+168>>2],l[a+76>>2]=i,ua(a+88|0,a+72|0))break k;if((0|y)==(0|(f=f+1|0)))break}i=l[a+236>>2],l[a+48>>2]=l[a+232>>2],l[a+52>>2]=i,i=l[a+228>>2],l[a+40>>2]=l[a+224>>2],l[a+44>>2]=i,zb(a+40|0),f=0;break f}if(f=l[a+236>>2],l[(i=a- -64|0)>>2]=l[a+232>>2],l[i+4>>2]=f,i=l[a+228>>2],l[a+56>>2]=l[a+224>>2],l[a+60>>2]=i,f=1,zb(a+56|0),(0|w)==(0|(h=h+1|0)))break}return i=l[e+12>>2],l[a+32>>2]=l[e+8>>2],l[a+36>>2]=i,i=l[e+4>>2],l[a+24>>2]=l[e>>2],l[a+28>>2]=i,zb(a+24|0),e=l[r+12>>2],l[a+16>>2]=l[r+8>>2],l[a+20>>2]=e,e=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=e,zb(a+8|0),ne=a+272|0,f}P(18173,17172,326,43311),M()}(a+120|0,a+104|0);break r}if(5!=(0|n))break e;i=0!=(0|af(l[e+8>>2]+16|0,l[r+8>>2]+16|0))}else{l[a+232>>2]=v[e+1|0]|v[e+2|0]<<8|v[e+3|0]<<16|v[e+4|0]<<24,i=v[e+4|0]|v[e+5|0]<<8|v[e+6|0]<<16|v[e+7|0]<<24,k[a+235|0]=i,k[a+236|0]=i>>>8,k[a+237|0]=i>>>16,k[a+238|0]=i>>>24,s=l[e+12>>2],!(i=l[e+8>>2])|n||(l[i>>2]=l[i>>2]+1),k[a+152|0]=b,b=l[a+232>>2],k[a+153|0]=b,k[a+154|0]=b>>>8,k[a+155|0]=b>>>16,k[a+156|0]=b>>>24,b=v[a+235|0]|v[a+236|0]<<8|v[a+237|0]<<16|v[a+238|0]<<24,k[a+156|0]=b,k[a+157|0]=b>>>8,k[a+158|0]=b>>>16,k[a+159|0]=b>>>24,l[a+164>>2]=s,l[a+160>>2]=i,i=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[a+235|0]=i,k[a+236|0]=i>>>8,k[a+237|0]=i>>>16,k[a+238|0]=i>>>24,l[a+232>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,b=l[r+12>>2],i=l[r+8>>2];a:if(!(f>>>0>7)){i:switch(f-1|0){default:if(!i)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[i>>2]=l[i>>2]+1}n=l[a+164>>2],l[(f=a- -64|0)>>2]=l[a+160>>2],l[f+4>>2]=n,l[a+148>>2]=b,l[a+144>>2]=i,f=l[a+148>>2],l[a+48>>2]=l[a+144>>2],l[a+52>>2]=f,f=v[a+235|0]|v[a+236|0]<<8|v[a+237|0]<<16|v[a+238|0]<<24,k[a+140|0]=f,k[a+141|0]=f>>>8,k[a+142|0]=f>>>16,k[a+143|0]=f>>>24,f=l[a+232>>2],k[a+137|0]=f,k[a+138|0]=f>>>8,k[a+139|0]=f>>>16,k[a+140|0]=f>>>24,k[a+136|0]=t,f=l[a+156>>2],l[a+56>>2]=l[a+152>>2],l[a+60>>2]=f,f=l[a+140>>2],l[a+40>>2]=l[a+136>>2],l[a+44>>2]=f,i=gn(a+56|0,a+40|0)}return f=l[e+12>>2],l[a+32>>2]=l[e+8>>2],l[a+36>>2]=f,f=l[e+4>>2],l[a+24>>2]=l[e>>2],l[a+28>>2]=f,zb(a+24|0),e=l[r+12>>2],l[a+16>>2]=l[r+8>>2],l[a+20>>2]=e,e=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=e,zb(a+8|0),ne=a+240|0,i}P(19611,17172,745,43520),M()}function la(e,r,a){var i,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0,w=0,p=0,g=0,y=0;ne=i=ne-192|0;e:{r:{if(6==(15&v[0|r])){if(6!=(0|(o=15&(c=v[0|a]))))break r;if(m=l[a+12>>2],s=l[a+8>>2],l[s>>2]=l[s>>2]+1,k[i+176|0]=c,f=v[a+4|0]|v[a+5|0]<<8|v[a+6|0]<<16|v[a+7|0]<<24,t=v[a+1|0]|v[a+2|0]<<8|v[a+3|0]<<16|v[a+4|0]<<24,l[i+188>>2]=m,l[i+184>>2]=s,u=l[i+188>>2],l[i+96>>2]=l[i+184>>2],l[i+100>>2]=u,k[i+177|0]=t,k[i+178|0]=t>>>8,k[i+179|0]=t>>>16,k[i+180|0]=t>>>24,k[i+180|0]=f,k[i+181|0]=f>>>8,k[i+182|0]=f>>>16,k[i+183|0]=f>>>24,f=l[i+180>>2],l[i+88>>2]=l[i+176>>2],l[i+92>>2]=f,w=l[i+180>>2],zb(i+88|0),(0|w)>=1)for(t=i+176|1,u=i+136|1,p=i+104|1,g=o>>>0>7;;){l[i+176>>2]=v[a+1|0]|v[a+2|0]<<8|v[a+3|0]<<16|v[a+4|0]<<24,f=v[a+4|0]|v[a+5|0]<<8|v[a+6|0]<<16|v[a+7|0]<<24,k[i+179|0]=f,k[i+180|0]=f>>>8,k[i+181|0]=f>>>16,k[i+182|0]=f>>>24;a:if(!g){i:switch(o-1|0){default:if(!s)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[s>>2]=l[s>>2]+1}k[i+104|0]=c,f=p,b=v[i+179|0]|v[i+180|0]<<8|v[i+181|0]<<16|v[i+182|0]<<24,k[f+3|0]=b,k[f+4|0]=b>>>8,k[f+5|0]=b>>>16,k[f+6|0]=b>>>24,b=l[i+176>>2],k[0|f]=b,k[f+1|0]=b>>>8,k[f+2|0]=b>>>16,k[f+3|0]=b>>>24,l[i+116>>2]=m,l[i+112>>2]=s,f=l[i+116>>2],l[i+80>>2]=l[i+112>>2],l[i+84>>2]=f,f=l[i+108>>2],l[i+72>>2]=l[i+104>>2],l[i+76>>2]=f,Kb(i+120|0,i+72|0,d),f=l[i+132>>2],l[i+160>>2]=l[i+128>>2],l[i+164>>2]=f,f=l[i+124>>2],l[i+152>>2]=l[i+120>>2],l[i+156>>2]=f,f=l[r+12>>2],l[i+144>>2]=l[r+8>>2],l[i+148>>2]=f,f=l[r+4>>2],l[i+136>>2]=l[r>>2],l[i+140>>2]=f,f=u,l[i+176>>2]=v[0|f]|v[f+1|0]<<8|v[f+2|0]<<16|v[f+3|0]<<24,f=v[f+3|0]|v[f+4|0]<<8|v[f+5|0]<<16|v[f+6|0]<<24,k[i+179|0]=f,k[i+180|0]=f>>>8,k[i+181|0]=f>>>16,k[i+182|0]=f>>>24,b=l[i+144>>2],y=l[i+148>>2],n=v[i+136|0];a:if(!((h=15&n)>>>0>7)){i:switch(h-1|0){default:if(!b)break a;break;case 4:case 5:case 6:break i;case 0:case 1:case 2:case 3:break a}l[b>>2]=l[b>>2]+1}if(f=v[i+179|0]|v[i+180|0]<<8|v[i+181|0]<<16|v[i+182|0]<<24,k[i+171|0]=f,k[i+172|0]=f>>>8,k[i+173|0]=f>>>16,k[i+174|0]=f>>>24,l[i+168>>2]=l[i+176>>2],k[i+176|0]=n,f=t,n=v[i+171|0]|v[i+172|0]<<8|v[i+173|0]<<16|v[i+174|0]<<24,k[f+3|0]=n,k[f+4|0]=n>>>8,k[f+5|0]=n>>>16,k[f+6|0]=n>>>24,n=l[i+168>>2],k[0|f]=n,k[f+1|0]=n>>>8,k[f+2|0]=n>>>16,k[f+3|0]=n>>>24,l[i+188>>2]=y,l[i+184>>2]=b,6!=(0|h))break e;if(b=l[i+188>>2],l[(f=i- -64|0)>>2]=l[i+184>>2],l[f+4>>2]=b,f=l[i+180>>2],l[i+56>>2]=l[i+176>>2],l[i+60>>2]=f,f=l[i+180>>2],zb(i+56|0),b=l[i+148>>2],l[i+48>>2]=l[i+144>>2],l[i+52>>2]=b,b=l[i+164>>2],l[i+32>>2]=l[i+160>>2],l[i+36>>2]=b,b=l[i+140>>2],l[i+40>>2]=l[i+136>>2],l[i+44>>2]=b,b=l[i+156>>2],l[i+24>>2]=l[i+152>>2],l[i+28>>2]=b,Dn(i+176|0,i+40|0,f,i+24|0),f=l[i+188>>2],l[r+8>>2]=l[i+184>>2],l[r+12>>2]=f,f=l[i+180>>2],l[r>>2]=l[i+176>>2],l[r+4>>2]=f,(0|w)==(0|(d=d+1|0)))break}return f=l[a+12>>2],l[i+16>>2]=l[a+8>>2],l[i+20>>2]=f,f=l[a+4>>2],l[i+8>>2]=l[a>>2],l[i+12>>2]=f,zb(i+8|0),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,void(ne=i+192|0)}P(18922,17172,368,43353),M()}P(19290,17172,369,43353),M()}P(18173,17172,326,43311),M()}function va(e,r){var a,i=0;ne=a=ne-96|0,jb(a+48|0,26006),i=l[a+60>>2],l[a+72>>2]=l[a+56>>2],l[a+76>>2]=i,i=l[a+52>>2],l[a+64>>2]=l[a+48>>2],l[a+68>>2]=i,i=l[r+164>>2],l[a+40>>2]=l[r+160>>2],l[a+44>>2]=i,i=l[r+156>>2],l[a+32>>2]=l[r+152>>2],l[a+36>>2]=i,Nb(a+80|0,a+32|0),r=l[a+92>>2],l[a+24>>2]=l[a+88>>2],l[a+28>>2]=r,r=l[a+76>>2],l[a+8>>2]=l[a+72>>2],l[a+12>>2]=r,r=l[a+84>>2],l[a+16>>2]=l[a+80>>2],l[a+20>>2]=r,r=l[a+68>>2],l[a>>2]=l[a+64>>2],l[a+4>>2]=r,dn(e,a+16|0,a),ne=a+96|0}function da(e,r,a){var i,k=0,b=0,n=0,s=0,t=0;ne=i=ne-576|0,l[82342]=l[e>>2],b=l[a+12>>2],l[i+368>>2]=l[a+8>>2],l[i+372>>2]=b,b=l[a+4>>2],l[i+360>>2]=l[a>>2],l[i+364>>2]=b;e:{r:{a:{i:{f:{if(6==(15&v[i+360|0])||(b=l[a+12>>2],l[i+352>>2]=l[a+8>>2],l[i+356>>2]=b,b=l[a+4>>2],l[i+344>>2]=l[a>>2],l[i+348>>2]=b,7==(15&v[i+344|0]))){if(s=df(e,24828,r,on(r)),ha(e),b=e+8|0,(r=l[e+8>>2])&&(Af(r),l[b>>2]=0),r=Ur(e,s,i+392|0))break i;if(r=Ve(e,i+392|0))break a;if(r=l[a+12>>2],l[i+408>>2]=l[a+8>>2],l[i+412>>2]=r,r=l[a+4>>2],l[i+400>>2]=l[a>>2],l[i+404>>2]=r,r=l[a+12>>2],l[i+320>>2]=l[a+8>>2],l[i+324>>2]=r,r=l[a+4>>2],l[i+312>>2]=l[a>>2],l[i+316>>2]=r,7!=(15&v[i+312|0])){if(r=l[i+412>>2],l[i+304>>2]=l[i+408>>2],l[i+308>>2]=r,r=l[i+404>>2],l[i+296>>2]=l[i+400>>2],l[i+300>>2]=r,6!=(15&v[i+296|0]))break f;if(mn(i+560|0),jb(i+544|0,30571),jb(i+528|0,30717),r=l[i+412>>2],l[i+288>>2]=l[i+408>>2],l[i+292>>2]=r,r=l[i+404>>2],l[i+280>>2]=l[i+400>>2],l[i+284>>2]=r,Nb(i+512|0,i+280|0),r=l[i+524>>2],l[i+272>>2]=l[i+520>>2],l[i+276>>2]=r,r=l[i+516>>2],l[i+264>>2]=l[i+512>>2],l[i+268>>2]=r,(0|(t=Zb(i+264|0)))>=1)for(r=0;k=l[i+412>>2],l[i+256>>2]=l[i+408>>2],l[i+260>>2]=k,k=l[i+404>>2],l[i+248>>2]=l[i+400>>2],l[i+252>>2]=k,Nb(i+464|0,i+248|0),k=l[i+476>>2],l[i+240>>2]=l[i+472>>2],l[i+244>>2]=k,k=l[i+468>>2],l[i+232>>2]=l[i+464>>2],l[i+236>>2]=k,Kb(i+480|0,i+232|0,r),k=l[i+492>>2],n=l[i+488>>2],l[i+504>>2]=n,l[i+508>>2]=k,l[i+224>>2]=n,l[i+228>>2]=k,k=l[i+484>>2],n=l[i+480>>2],l[i+496>>2]=n,l[i+500>>2]=k,l[i+216>>2]=n,l[i+220>>2]=k,Nb(i+432|0,i+216|0),k=l[i+444>>2],l[i+208>>2]=l[i+440>>2],l[i+212>>2]=k,k=l[i+556>>2],l[i+192>>2]=l[i+552>>2],l[i+196>>2]=k,k=l[i+436>>2],l[i+200>>2]=l[i+432>>2],l[i+204>>2]=k,k=l[i+548>>2],l[i+184>>2]=l[i+544>>2],l[i+188>>2]=k,dn(i+448|0,i+200|0,i+184|0),k=l[i+508>>2],l[i+176>>2]=l[i+504>>2],l[i+180>>2]=k,k=l[i+540>>2],l[i+160>>2]=l[i+536>>2],l[i+164>>2]=k,k=l[i+500>>2],l[i+168>>2]=l[i+496>>2],l[i+172>>2]=k,k=l[i+532>>2],l[i+152>>2]=l[i+528>>2],l[i+156>>2]=k,dn(i+416|0,i+168|0,i+152|0),k=l[i+572>>2],l[i+144>>2]=l[i+568>>2],l[i+148>>2]=k,k=l[i+460>>2],l[i+128>>2]=l[i+456>>2],l[i+132>>2]=k,k=l[i+428>>2],l[i+112>>2]=l[i+424>>2],l[i+116>>2]=k,k=l[i+564>>2],l[i+136>>2]=l[i+560>>2],l[i+140>>2]=k,k=l[i+452>>2],l[i+120>>2]=l[i+448>>2],l[i+124>>2]=k,k=l[i+420>>2],l[i+104>>2]=l[i+416>>2],l[i+108>>2]=k,en(i+480|0,i+136|0,i+120|0,i+104|0),k=l[i+492>>2],l[i+568>>2]=l[i+488>>2],l[i+572>>2]=k,k=l[i+484>>2],l[i+560>>2]=l[i+480>>2],l[i+564>>2]=k,(0|t)!=(0|(r=r+1|0)););r=l[i+412>>2],l[i+96>>2]=l[i+408>>2],l[i+100>>2]=r,r=l[i+404>>2],l[i+88>>2]=l[i+400>>2],l[i+92>>2]=r,zb(i+88|0),r=l[i+556>>2],l[i+80>>2]=l[i+552>>2],l[i+84>>2]=r,r=l[i+548>>2],l[i+72>>2]=l[i+544>>2],l[i+76>>2]=r,zb(i+72|0),k=l[i+540>>2],l[(r=i- -64|0)>>2]=l[i+536>>2],l[r+4>>2]=k,r=l[i+532>>2],l[i+56>>2]=l[i+528>>2],l[i+60>>2]=r,zb(i+56|0),r=l[i+572>>2],l[i+504>>2]=l[i+568>>2],l[i+508>>2]=r,r=l[i+564>>2],l[i+496>>2]=l[i+560>>2],l[i+500>>2]=r}else r=l[i+412>>2],l[i+504>>2]=l[i+408>>2],l[i+508>>2]=r,r=l[i+404>>2],l[i+496>>2]=l[i+400>>2],l[i+500>>2]=r;if(r=l[i+508>>2],l[a+8>>2]=l[i+504>>2],l[a+12>>2]=r,r=l[i+500>>2],l[a>>2]=l[i+496>>2],l[a+4>>2]=r,r=l[i+396>>2],l[i+48>>2]=l[i+392>>2],l[i+52>>2]=r,r=l[a+12>>2],l[i+40>>2]=l[a+8>>2],l[i+44>>2]=r,r=l[a+4>>2],l[i+32>>2]=l[a>>2],l[i+36>>2]=r,!(r=Ze(i+48|0,b,s,i+32|0)))break r;break a}P(24601,14305,1156,43101),M()}P(35844,14305,1142,43222),M()}k=l[a+12>>2],l[i+336>>2]=l[a+8>>2],l[i+340>>2]=k,k=l[a+4>>2],l[i+328>>2]=l[a>>2],l[i+332>>2]=k,zb(i+328|0)}if(l[i+16>>2]=r,l[i+20>>2]=(0|r)>1?25232:25384,Yb(i+376|0,25004,i+16|0),r=l[i+388>>2],l[i+568>>2]=l[i+384>>2],l[i+572>>2]=r,r=l[i+380>>2],l[i+560>>2]=l[i+376>>2],l[i+564>>2]=r,!(r=l[e+12>>2]))break e;e=l[e+16>>2],a=l[i+572>>2],l[i+8>>2]=l[i+568>>2],l[i+12>>2]=a,a=l[i+564>>2],l[i>>2]=l[i+560>>2],l[i+4>>2]=a,f[r](e,i)}return(e=l[b>>2])&&(l[b>>2]=function e(r){var a=0,i=0,f=0,k=0,b=0;if(l[r+40>>2]>=1)for(;b=e(l[(f=a<<2)+l[r+36>>2]>>2]),l[f+l[r+36>>2]>>2]=b,(0|(a=a+1|0))<l[r+40>>2];);if(l[r+4>>2]>=1)for(i=l[r>>2];;){if(27==d[i>>1]){a=i+4|0,f=d[i+4>>1];r:{a:{if((0|(k=(b=d[i+2>>1])+1|0))==(65535&k)){for(b=8+((b<<2)+i|0)|0;;){if(!f)break a;if(f=d[a+4>>1],a=a+4|0,!(65535&(k=k+-1|0)))break}a=b}if(k=29,28==(0|f))break r;for(;;){if(16!=(0|f)){k=27;break r}if(a=4+((d[a+2>>1]<<1)+a|0)|0,28==(0|(f=d[a>>1])))break}break r}k=27}u[i>>1]=k}if(!((i=(sr(i)<<1)+i|0)>>>0<l[r>>2]+(l[r+4>>2]<<1)>>>0))break}return r}(e)),hb(s),ne=i+576|0,0!=l[b>>2]}P(15995,14305,326,43077),M()}function ha(e){var r,a=0,i=0;for(ne=r=ne-112|0;pa(e););e:{r:{a:{if(!l[e+56>>2]){if(l[e+60>>2])break a;if(l[e+52>>2])break r;if(l[e+48>>2])break e;return Lb((l[e+44>>2]+l[e+40>>2]|0)-8|0),l[e+48>>2]=0,l[e+40>>2]=0,l[e+44>>2]=8,a=l[e+36>>2],l[r+88>>2]=l[e+32>>2],l[r+92>>2]=a,a=l[e+28>>2],l[r+80>>2]=l[e+24>>2],l[r+84>>2]=a,zb(r+80|0),a=l[10947],l[r+104>>2]=l[10946],l[r+108>>2]=a,a=l[10945],l[r+96>>2]=l[10944],l[r+100>>2]=a,a=l[r+108>>2],l[e+32>>2]=l[r+104>>2],l[e+36>>2]=a,a=l[r+100>>2],l[e+24>>2]=l[r+96>>2],l[e+28>>2]=a,l[e+112>>2]=0,a=l[e+132>>2],l[r+72>>2]=l[e+128>>2],l[r+76>>2]=a,a=l[e+124>>2],l[r+64>>2]=l[e+120>>2],l[r+68>>2]=a,zb(r- -64|0),a=l[e+148>>2],l[r+56>>2]=l[e+144>>2],l[r+60>>2]=a,a=l[e+140>>2],l[r+48>>2]=l[e+136>>2],l[r+52>>2]=a,zb(r+48|0),a=l[e+76>>2],l[r+40>>2]=l[e+72>>2],l[r+44>>2]=a,a=l[e+68>>2],l[r+32>>2]=l[e+64>>2],l[r+36>>2]=a,a=e- -64|0,15&v[r+32|0]&&(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,zb(r+16|0)),i=l[10947],l[r+104>>2]=l[10946],l[r+108>>2]=i,i=l[10945],l[r+96>>2]=l[10944],l[r+100>>2]=i,i=l[r+108>>2],l[a+8>>2]=l[r+104>>2],l[a+12>>2]=i,i=l[r+100>>2],l[a>>2]=l[r+96>>2],l[a+4>>2]=i,a=l[e+92>>2],l[r+8>>2]=l[e+88>>2],l[r+12>>2]=a,a=l[e+84>>2],l[r>>2]=l[e+80>>2],l[r+4>>2]=a,zb(r),a=l[10947],l[r+104>>2]=l[10946],l[r+108>>2]=a,a=l[10945],l[r+96>>2]=l[10944],l[r+100>>2]=a,a=l[r+108>>2],l[e+88>>2]=l[r+104>>2],l[e+92>>2]=a,a=l[r+100>>2],l[e+80>>2]=l[r+96>>2],l[e+84>>2]=a,l[e+96>>2]=0,void(ne=r+112|0)}P(29450,14305,307,43201),M()}P(29621,14305,308,43201),M()}P(29771,14305,309,43201),M()}P(30105,30388,63,43210),M()}function ma(e,r,a){var i,f=0,k=0,b=0;ne=i=ne-208|0;e:{if(l[e+96>>2]||(f=l[e+76>>2],l[i+152>>2]=l[e+72>>2],l[i+156>>2]=f,f=l[e+68>>2],l[i+144>>2]=l[e+64>>2],l[i+148>>2]=f,6!=(15&v[i+144|0])))e=l[r+12>>2],l[i+136>>2]=l[r+8>>2],l[i+140>>2]=e,e=l[r+4>>2],l[i+128>>2]=l[r>>2],l[i+132>>2]=e,zb(i+128|0),e=l[a+12>>2],l[i+120>>2]=l[a+8>>2],l[i+124>>2]=e,e=l[a+4>>2],l[i+112>>2]=l[a>>2],l[i+116>>2]=e,zb(i+112|0);else{if(k=l[12+(f=e- -64|0)>>2],l[i+104>>2]=l[f+8>>2],l[i+108>>2]=k,k=l[f+4>>2],l[i+96>>2]=l[f>>2],l[i+100>>2]=k,Nb(i+192|0,i+96|0),b=l[i+204>>2],l[i+88>>2]=l[i+200>>2],l[i+92>>2]=b,b=l[i+196>>2],l[i+80>>2]=l[i+192>>2],l[i+84>>2]=b,b=Zb(i+80|0),k=l[f+12>>2],l[i+72>>2]=l[f+8>>2],l[i+76>>2]=k,k=l[f+4>>2],l[i+64>>2]=l[f>>2],l[i+68>>2]=k,k=l[r+12>>2],l[i+56>>2]=l[r+8>>2],l[i+60>>2]=k,k=l[r+4>>2],l[i+48>>2]=l[r>>2],l[i+52>>2]=k,Vb(i+176|0,i- -64|0,i+48|0),r=l[i+188>>2],l[f+8>>2]=l[i+184>>2],l[f+12>>2]=r,r=l[i+180>>2],l[f>>2]=l[i+176>>2],l[f+4>>2]=r,r=l[f+12>>2],l[i+40>>2]=l[f+8>>2],l[i+44>>2]=r,r=l[f+4>>2],l[i+32>>2]=l[f>>2],l[i+36>>2]=r,Nb(i+160|0,i+32|0),r=l[i+172>>2],l[i+24>>2]=l[i+168>>2],l[i+28>>2]=r,r=l[i+164>>2],l[i+16>>2]=l[i+160>>2],l[i+20>>2]=r,(0|Zb(i+16|0))!=(b+1|0))break e;r=l[e+92>>2],l[i+8>>2]=l[e+88>>2],l[i+12>>2]=r,r=l[e+84>>2],l[i>>2]=l[e+80>>2],l[i+4>>2]=r,zb(i),r=l[a+12>>2],l[e+88>>2]=l[a+8>>2],l[e+92>>2]=r,r=l[a+4>>2],l[e+80>>2]=l[a>>2],l[e+84>>2]=r}return void(ne=i+208|0)}P(28004,14305,240,43165),M()}function wa(e){var r,a=0,i=0,f=0,k=0,b=0,n=0,s=0;ne=r=ne-16|0;e:{if(a=l[e+52>>2]){k=l[e+40>>2],s=l[(b=k+a|0)-4>>2];r:{if(s){if(i=l[b+12>>2],n=l[k+s>>2],i>>>0<(f=l[n>>2])+(l[n+4>>2]<<1)>>>0&&i>>>0>=f>>>0)break r;P(27028,14305,85,43135),M()}if(l[b+12>>2])break e}f=l[e+48>>2];r:{a:{if((0|a)==(0|f)){if(f=0,i=l[b>>2],(0|(n=l[i+8>>2]))<=0){f=a;break a}i:{for(;;){if(i=(a+k|0)+(l[i+12>>2]+f<<4)|0,a=l[i+28>>2],l[r+8>>2]=l[i+24>>2],l[r+12>>2]=a,a=l[i+20>>2],l[r>>2]=l[i+16>>2],l[r+4>>2]=a,zb(r),i=(a=l[e+52>>2])+(k=l[e+40>>2])|0,(0|n)==(0|(f=f+1|0)))break i;if(i=l[i>>2],!(l[i+8>>2]>(0|f)))break}P(27698,14305,104,43149),M()}s=l[i+-4>>2],f=l[e+48>>2]}if((0|a)!=(0|f))break r}a=l[b>>2],l[e+48>>2]=(31+(l[a+12>>2]+l[a+8>>2]<<4)&-8)+f}return l[e+52>>2]=s,void(ne=r+16|0)}P(26773,14305,152,43125),M()}P(27245,14305,87,43135),M()}function pa(e){var r,a=0,i=0,f=0,k=0,b=0;ne=r=ne-112|0;e:{r:{a:{i:{if((0|(a=l[e+48>>2]))!=(0|(f=l[e+60>>2])))for(;;){if(l[e+56>>2]!=(0|a)){if(l[e+52>>2]!=(0|a))break a;wa(e)}else{if(f=l[e+40>>2]+a|0,i=l[f+12>>2],l[r+104>>2]=l[f+8>>2],l[r+108>>2]=i,i=l[f+4>>2],l[r+96>>2]=l[f>>2],l[r+100>>2]=i,f=l[f+-4>>2],l[e+48>>2]=a+24,l[e+56>>2]=f,a=l[r+108>>2],l[r+72>>2]=l[r+104>>2],l[r+76>>2]=a,a=l[r+100>>2],l[r+64>>2]=l[r+96>>2],l[r+68>>2]=a,!(15&v[r- -64|0]))break i;a=l[r+108>>2],l[r+56>>2]=l[r+104>>2],l[r+60>>2]=a,a=l[r+100>>2],l[r+48>>2]=l[r+96>>2],l[r+52>>2]=a,zb(r+48|0)}if((0|(a=l[e+48>>2]))==(0|(f=l[e+60>>2])))break}if(f){if(a=l[e+40>>2]+f|0,f=l[a+32>>2],l[e+56>>2]=l[a>>2],l[e+52>>2]=l[a+4>>2],k=l[a+8>>2],i=l[e+76>>2],l[r+40>>2]=l[e+72>>2],l[r+44>>2]=i,i=l[e+68>>2],l[r+32>>2]=l[e+64>>2],l[r+36>>2]=i,6!=(15&v[r+32|0])){if(k)break e}else{if((0|k)<=-1)break r;b=l[12+(i=e- -64|0)>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=b,b=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=b,eb(r+80|0,r+16|0,0,k),k=l[r+92>>2],l[i+8>>2]=l[r+88>>2],l[i+12>>2]=k,k=l[r+84>>2],l[i>>2]=l[r+80>>2],l[i+4>>2]=k}i=l[e+92>>2],l[r+8>>2]=l[e+88>>2],l[r+12>>2]=i,i=l[e+84>>2],l[r>>2]=l[e+80>>2],l[r+4>>2]=i,zb(r),i=l[a+28>>2],l[e+88>>2]=l[a+24>>2],l[e+92>>2]=i,i=l[a+20>>2],l[e+80>>2]=l[a+16>>2],l[e+84>>2]=i,l[e+96>>2]=l[a+12>>2],a=l[e+60>>2],i=l[(a+l[e+40>>2]|0)-4>>2],(0|a)==l[e+48>>2]&&(l[e+48>>2]=a+48),l[e+60>>2]=i}else f=0;return ne=r+112|0,f}P(13971,14305,177,43042),M()}P(14844,14305,278,43063),M()}P(15247,14305,292,43063),M()}P(15600,14305,295,43063),M()}function ga(e,r){var a,i,f=0;ne=a=ne-32|0,l[a+16>>2]=26199,f=l[82340],l[a+20>>2]=f,l[a+24>>2]=f,l[a+28>>2]=f,i=Sn(f=l[(e?301592:301044)>>2],31075,a+16|0),r?(l[a>>2]=l[82340],Sn(f,31906,a)):cn(32068,1188,1,f),T(0|(e||((0|i)<0?2:e))),M()}function ya(e,r){var a,i=0,f=0,k=0,b=0;return ne=a=ne-928|0,l[r>>2]=0,l[r+4>>2]=0,l[r+40>>2]=0,l[r+32>>2]=0,l[r+36>>2]=0,l[r+24>>2]=0,l[r+28>>2]=0,l[r+16>>2]=0,l[r+20>>2]=0,l[r+8>>2]=0,l[r+12>>2]=0,i=l[e+12>>2],l[a+776>>2]=l[e+8>>2],l[a+780>>2]=i,i=l[e+4>>2],l[a+768>>2]=l[e>>2],l[a+772>>2]=i,Nb(a+896|0,a+768|0),i=l[a+908>>2],l[a+760>>2]=l[a+904>>2],l[a+764>>2]=i,i=l[a+900>>2],l[a+752>>2]=l[a+896>>2],l[a+756>>2]=i,Kb(a+912|0,a+752|0,0),i=l[a+924>>2],l[a+744>>2]=l[a+920>>2],l[a+748>>2]=i,i=l[a+916>>2],l[a+736>>2]=l[a+912>>2],l[a+740>>2]=i,4==(15&v[a+736|0])?(i=l[a+924>>2],l[a+712>>2]=l[a+920>>2],l[a+716>>2]=i,i=l[a+916>>2],l[a+704>>2]=l[a+912>>2],l[a+708>>2]=i,i=r,f=Wb(a+704|0),k=g(f)<2147483648?~~f:-2147483648,l[i+20>>2]=k,i=l[a+924>>2],l[a+696>>2]=l[a+920>>2],l[a+700>>2]=i,i=l[a+916>>2],l[a+688>>2]=l[a+912>>2],l[a+692>>2]=i,zb(a+688|0),l[r+20>>2]=l[r+20>>2]+-1900,i=l[e+12>>2],l[a+680>>2]=l[e+8>>2],l[a+684>>2]=i,i=l[e+4>>2],l[a+672>>2]=l[e>>2],l[a+676>>2]=i,Nb(a+880|0,a+672|0),i=l[a+892>>2],l[a+664>>2]=l[a+888>>2],l[a+668>>2]=i,i=l[a+884>>2],l[a+656>>2]=l[a+880>>2],l[a+660>>2]=i,Kb(a+912|0,a+656|0,1),i=l[a+924>>2],l[a+648>>2]=l[a+920>>2],l[a+652>>2]=i,i=l[a+916>>2],l[a+640>>2]=l[a+912>>2],l[a+644>>2]=i,4==(15&v[a+640|0])?(i=l[a+924>>2],l[a+616>>2]=l[a+920>>2],l[a+620>>2]=i,i=l[a+916>>2],l[a+608>>2]=l[a+912>>2],l[a+612>>2]=i,i=r,f=Wb(a+608|0),k=g(f)<2147483648?~~f:-2147483648,l[i+16>>2]=k,i=l[a+924>>2],l[a+600>>2]=l[a+920>>2],l[a+604>>2]=i,i=l[a+916>>2],l[a+592>>2]=l[a+912>>2],l[a+596>>2]=i,zb(a+592|0),i=l[e+12>>2],l[a+584>>2]=l[e+8>>2],l[a+588>>2]=i,i=l[e+4>>2],l[a+576>>2]=l[e>>2],l[a+580>>2]=i,Nb(a+864|0,a+576|0),i=l[a+876>>2],l[a+568>>2]=l[a+872>>2],l[a+572>>2]=i,i=l[a+868>>2],l[a+560>>2]=l[a+864>>2],l[a+564>>2]=i,Kb(a+912|0,a+560|0,2),i=l[a+924>>2],l[a+552>>2]=l[a+920>>2],l[a+556>>2]=i,i=l[a+916>>2],l[a+544>>2]=l[a+912>>2],l[a+548>>2]=i,4==(15&v[a+544|0])?(i=l[a+924>>2],l[a+520>>2]=l[a+920>>2],l[a+524>>2]=i,i=l[a+916>>2],l[a+512>>2]=l[a+912>>2],l[a+516>>2]=i,i=r,f=Wb(a+512|0),k=g(f)<2147483648?~~f:-2147483648,l[i+12>>2]=k,i=l[a+924>>2],l[a+504>>2]=l[a+920>>2],l[a+508>>2]=i,i=l[a+916>>2],l[a+496>>2]=l[a+912>>2],l[a+500>>2]=i,zb(a+496|0),i=l[e+12>>2],l[a+488>>2]=l[e+8>>2],l[a+492>>2]=i,i=l[e+4>>2],l[a+480>>2]=l[e>>2],l[a+484>>2]=i,Nb(a+848|0,a+480|0),i=l[a+860>>2],l[a+472>>2]=l[a+856>>2],l[a+476>>2]=i,i=l[a+852>>2],l[a+464>>2]=l[a+848>>2],l[a+468>>2]=i,Kb(a+912|0,a+464|0,3),i=l[a+924>>2],l[a+456>>2]=l[a+920>>2],l[a+460>>2]=i,i=l[a+916>>2],l[a+448>>2]=l[a+912>>2],l[a+452>>2]=i,4==(15&v[a+448|0])?(i=l[a+924>>2],l[a+424>>2]=l[a+920>>2],l[a+428>>2]=i,i=l[a+916>>2],l[a+416>>2]=l[a+912>>2],l[a+420>>2]=i,i=r,f=Wb(a+416|0),k=g(f)<2147483648?~~f:-2147483648,l[i+8>>2]=k,i=l[a+924>>2],l[a+408>>2]=l[a+920>>2],l[a+412>>2]=i,i=l[a+916>>2],l[a+400>>2]=l[a+912>>2],l[a+404>>2]=i,zb(a+400|0),i=l[e+12>>2],l[a+392>>2]=l[e+8>>2],l[a+396>>2]=i,i=l[e+4>>2],l[a+384>>2]=l[e>>2],l[a+388>>2]=i,Nb(a+832|0,a+384|0),i=l[a+844>>2],l[a+376>>2]=l[a+840>>2],l[a+380>>2]=i,i=l[a+836>>2],l[a+368>>2]=l[a+832>>2],l[a+372>>2]=i,Kb(a+912|0,a+368|0,4),i=l[a+924>>2],l[a+360>>2]=l[a+920>>2],l[a+364>>2]=i,i=l[a+916>>2],l[a+352>>2]=l[a+912>>2],l[a+356>>2]=i,4==(15&v[a+352|0])?(i=l[a+924>>2],l[a+328>>2]=l[a+920>>2],l[a+332>>2]=i,i=l[a+916>>2],l[a+320>>2]=l[a+912>>2],l[a+324>>2]=i,i=r,f=Wb(a+320|0),k=g(f)<2147483648?~~f:-2147483648,l[i+4>>2]=k,i=l[a+924>>2],l[a+312>>2]=l[a+920>>2],l[a+316>>2]=i,i=l[a+916>>2],l[a+304>>2]=l[a+912>>2],l[a+308>>2]=i,zb(a+304|0),i=l[e+12>>2],l[a+296>>2]=l[e+8>>2],l[a+300>>2]=i,i=l[e+4>>2],l[a+288>>2]=l[e>>2],l[a+292>>2]=i,Nb(a+816|0,a+288|0),i=l[a+828>>2],l[a+280>>2]=l[a+824>>2],l[a+284>>2]=i,i=l[a+820>>2],l[a+272>>2]=l[a+816>>2],l[a+276>>2]=i,Kb(a+912|0,a+272|0,5),i=l[a+924>>2],l[a+264>>2]=l[a+920>>2],l[a+268>>2]=i,i=l[a+916>>2],l[a+256>>2]=l[a+912>>2],l[a+260>>2]=i,4==(15&v[a+256|0])?(i=l[a+924>>2],l[a+232>>2]=l[a+920>>2],l[a+236>>2]=i,i=l[a+916>>2],l[a+224>>2]=l[a+912>>2],l[a+228>>2]=i,i=r,f=Wb(a+224|0),k=g(f)<2147483648?~~f:-2147483648,l[i>>2]=k,i=l[a+924>>2],l[a+216>>2]=l[a+920>>2],l[a+220>>2]=i,i=l[a+916>>2],l[a+208>>2]=l[a+912>>2],l[a+212>>2]=i,zb(a+208|0),i=l[e+12>>2],l[a+200>>2]=l[e+8>>2],l[a+204>>2]=i,i=l[e+4>>2],l[a+192>>2]=l[e>>2],l[a+196>>2]=i,Nb(a+800|0,a+192|0),i=l[a+812>>2],l[a+184>>2]=l[a+808>>2],l[a+188>>2]=i,i=l[a+804>>2],l[a+176>>2]=l[a+800>>2],l[a+180>>2]=i,Kb(a+912|0,a+176|0,6),i=l[a+924>>2],l[a+168>>2]=l[a+920>>2],l[a+172>>2]=i,i=l[a+916>>2],l[a+160>>2]=l[a+912>>2],l[a+164>>2]=i,4==(15&v[a+160|0])?(i=l[a+924>>2],l[a+136>>2]=l[a+920>>2],l[a+140>>2]=i,i=l[a+916>>2],l[a+128>>2]=l[a+912>>2],l[a+132>>2]=i,i=r,f=Wb(a+128|0),k=g(f)<2147483648?~~f:-2147483648,l[i+24>>2]=k,i=l[a+924>>2],l[a+120>>2]=l[a+920>>2],l[a+124>>2]=i,i=l[a+916>>2],l[a+112>>2]=l[a+912>>2],l[a+116>>2]=i,zb(a+112|0),i=l[e+12>>2],l[a+104>>2]=l[e+8>>2],l[a+108>>2]=i,i=l[e+4>>2],l[a+96>>2]=l[e>>2],l[a+100>>2]=i,Nb(a+784|0,a+96|0),i=l[a+796>>2],l[a+88>>2]=l[a+792>>2],l[a+92>>2]=i,i=l[a+788>>2],l[a+80>>2]=l[a+784>>2],l[a+84>>2]=i,Kb(a+912|0,a+80|0,7),i=l[a+924>>2],l[a+72>>2]=l[a+920>>2],l[a+76>>2]=i,i=l[a+916>>2],l[a+64>>2]=l[a+912>>2],l[a+68>>2]=i,4==(15&v[a- -64|0])?(i=l[a+924>>2],l[a+40>>2]=l[a+920>>2],l[a+44>>2]=i,i=l[a+916>>2],l[a+32>>2]=l[a+912>>2],l[a+36>>2]=i,f=Wb(a+32|0),i=g(f)<2147483648?~~f:-2147483648,l[r+28>>2]=i,r=l[a+924>>2],l[a+24>>2]=l[a+920>>2],l[a+28>>2]=r,r=l[a+916>>2],l[a+16>>2]=l[a+912>>2],l[a+20>>2]=r,zb(a+16|0),r=l[e+12>>2],l[a+8>>2]=l[e+8>>2],l[a+12>>2]=r,r=l[e+4>>2],l[a>>2]=l[e>>2],l[a+4>>2]=r,zb(a),b=1):(r=l[e+12>>2],l[a+56>>2]=l[e+8>>2],l[a+60>>2]=r,r=l[e+4>>2],l[a+48>>2]=l[e>>2],l[a+52>>2]=r,zb(a+48|0))):(r=l[e+12>>2],l[a+152>>2]=l[e+8>>2],l[a+156>>2]=r,r=l[e+4>>2],l[a+144>>2]=l[e>>2],l[a+148>>2]=r,zb(a+144|0))):(r=l[e+12>>2],l[a+248>>2]=l[e+8>>2],l[a+252>>2]=r,r=l[e+4>>2],l[a+240>>2]=l[e>>2],l[a+244>>2]=r,zb(a+240|0))):(r=l[e+12>>2],l[a+344>>2]=l[e+8>>2],l[a+348>>2]=r,r=l[e+4>>2],l[a+336>>2]=l[e>>2],l[a+340>>2]=r,zb(a+336|0))):(r=l[e+12>>2],l[a+440>>2]=l[e+8>>2],l[a+444>>2]=r,r=l[e+4>>2],l[a+432>>2]=l[e>>2],l[a+436>>2]=r,zb(a+432|0))):(r=l[e+12>>2],l[a+536>>2]=l[e+8>>2],l[a+540>>2]=r,r=l[e+4>>2],l[a+528>>2]=l[e>>2],l[a+532>>2]=r,zb(a+528|0))):(r=l[e+12>>2],l[a+632>>2]=l[e+8>>2],l[a+636>>2]=r,r=l[e+4>>2],l[a+624>>2]=l[e>>2],l[a+628>>2]=r,zb(a+624|0))):(r=l[e+12>>2],l[a+728>>2]=l[e+8>>2],l[a+732>>2]=r,r=l[e+4>>2],l[a+720>>2]=l[e>>2],l[a+724>>2]=r,zb(a+720|0)),ne=a+928|0,b}function Ea(e,r){var a,i=0,f=0;ne=a=ne-512|0,rn(a+384|0),f=+(l[r+20>>2]+1900|0),l[a+368>>2]=4,l[a+372>>2]=0,m[a+376>>3]=f,i=l[a+396>>2],l[a+248>>2]=l[a+392>>2],l[a+252>>2]=i,i=l[a+380>>2],l[a+232>>2]=l[a+376>>2],l[a+236>>2]=i,i=l[a+388>>2],l[a+240>>2]=l[a+384>>2],l[a+244>>2]=i,i=l[a+372>>2],l[a+224>>2]=l[a+368>>2],l[a+228>>2]=i,Vb(a+400|0,a+240|0,a+224|0),f=+l[r+16>>2],l[a+352>>2]=4,l[a+356>>2]=0,m[a+360>>3]=f,i=l[a+412>>2],l[a+216>>2]=l[a+408>>2],l[a+220>>2]=i,i=l[a+364>>2],l[a+200>>2]=l[a+360>>2],l[a+204>>2]=i,i=l[a+404>>2],l[a+208>>2]=l[a+400>>2],l[a+212>>2]=i,i=l[a+356>>2],l[a+192>>2]=l[a+352>>2],l[a+196>>2]=i,Vb(a+416|0,a+208|0,a+192|0),f=+l[r+12>>2],l[a+336>>2]=4,l[a+340>>2]=0,m[a+344>>3]=f,i=l[a+428>>2],l[a+184>>2]=l[a+424>>2],l[a+188>>2]=i,i=l[a+348>>2],l[a+168>>2]=l[a+344>>2],l[a+172>>2]=i,i=l[a+420>>2],l[a+176>>2]=l[a+416>>2],l[a+180>>2]=i,i=l[a+340>>2],l[a+160>>2]=l[a+336>>2],l[a+164>>2]=i,Vb(a+432|0,a+176|0,a+160|0),f=+l[r+8>>2],l[a+320>>2]=4,l[a+324>>2]=0,m[a+328>>3]=f,i=l[a+444>>2],l[a+152>>2]=l[a+440>>2],l[a+156>>2]=i,i=l[a+332>>2],l[a+136>>2]=l[a+328>>2],l[a+140>>2]=i,i=l[a+436>>2],l[a+144>>2]=l[a+432>>2],l[a+148>>2]=i,i=l[a+324>>2],l[a+128>>2]=l[a+320>>2],l[a+132>>2]=i,Vb(a+448|0,a+144|0,a+128|0),f=+l[r+4>>2],l[a+304>>2]=4,l[a+308>>2]=0,m[a+312>>3]=f,i=l[a+460>>2],l[a+120>>2]=l[a+456>>2],l[a+124>>2]=i,i=l[a+316>>2],l[a+104>>2]=l[a+312>>2],l[a+108>>2]=i,i=l[a+452>>2],l[a+112>>2]=l[a+448>>2],l[a+116>>2]=i,i=l[a+308>>2],l[a+96>>2]=l[a+304>>2],l[a+100>>2]=i,Vb(a+464|0,a+112|0,a+96|0),f=+l[r>>2],l[a+288>>2]=4,l[a+292>>2]=0,m[a+296>>3]=f,i=l[a+476>>2],l[a+88>>2]=l[a+472>>2],l[a+92>>2]=i,i=l[a+300>>2],l[a+72>>2]=l[a+296>>2],l[a+76>>2]=i,i=l[a+468>>2],l[a+80>>2]=l[a+464>>2],l[a+84>>2]=i,i=l[a+292>>2],l[a+64>>2]=l[a+288>>2],l[a+68>>2]=i,Vb(a+480|0,a+80|0,a- -64|0),f=+l[r+24>>2],l[a+272>>2]=4,l[a+276>>2]=0,m[a+280>>3]=f,i=l[a+492>>2],l[a+56>>2]=l[a+488>>2],l[a+60>>2]=i,i=l[a+284>>2],l[a+40>>2]=l[a+280>>2],l[a+44>>2]=i,i=l[a+484>>2],l[a+48>>2]=l[a+480>>2],l[a+52>>2]=i,i=l[a+276>>2],l[a+32>>2]=l[a+272>>2],l[a+36>>2]=i,Vb(a+496|0,a+48|0,a+32|0),f=+l[r+28>>2],l[a+256>>2]=4,l[a+260>>2]=0,m[a+264>>3]=f,r=l[a+508>>2],l[a+24>>2]=l[a+504>>2],l[a+28>>2]=r,r=l[a+268>>2],l[a+8>>2]=l[a+264>>2],l[a+12>>2]=r,r=l[a+500>>2],l[a+16>>2]=l[a+496>>2],l[a+20>>2]=r,r=l[a+260>>2],l[a>>2]=l[a+256>>2],l[a+4>>2]=r,Vb(e,a+16|0,a),ne=a+512|0}function _a(e,r,a){var i,f=0,k=0,b=0;if(ne=i=ne-672|0,f=l[r+12>>2],l[i+112>>2]=l[r+8>>2],l[i+116>>2]=f,f=l[r+4>>2],l[i+104>>2]=l[r>>2],l[i+108>>2]=f,5==(15&v[i+104|0])){if(wn(i+160|0,0,512),l[i+160>>2]=41818,f=v[0|a])for(;k=(i+160|0)+(f<<24>>24<<2)|0,f=a+1|0,l[k>>2]=f,a=2+(on(f)+a|0)|0,f=v[0|a];);if(jb(e,40961),f=l[(a=r)+12>>2],l[i+96>>2]=l[a+8>>2],l[i+100>>2]=f,f=l[a+4>>2],l[i+88>>2]=l[a>>2],l[i+92>>2]=f,f=Gb(i+88|0),k=l[a+12>>2],l[i+80>>2]=l[a+8>>2],l[i+84>>2]=k,k=l[a+4>>2],l[i+72>>2]=l[a>>2],l[i+76>>2]=k,Nb(i+144|0,i+72|0),k=l[i+156>>2],l[(a=i- -64|0)>>2]=l[i+152>>2],l[a+4>>2]=k,a=l[i+148>>2],l[i+56>>2]=l[i+144>>2],l[i+60>>2]=a,a=vn(i+56|0),l[i+140>>2]=0,a=Vk(f,k=a+f|0,i+140|0))for(;(0|(b=l[i+140>>2]))>127||!(b=l[(i+160|0)+(b<<2)>>2])?(b=l[e+12>>2],l[i+32>>2]=l[e+8>>2],l[i+36>>2]=b,b=l[e+4>>2],l[i+24>>2]=l[e>>2],l[i+28>>2]=b,Qb(i+120|0,i+24|0,f,a-f|0)):(f=l[e+12>>2],l[i+48>>2]=l[e+8>>2],l[i+52>>2]=f,f=l[e+4>>2],l[i+40>>2]=l[e>>2],l[i+44>>2]=f,Un(i+120|0,i+40|0,b)),f=l[i+132>>2],l[e+8>>2]=l[i+128>>2],l[e+12>>2]=f,f=l[i+124>>2],l[e>>2]=l[i+120>>2],l[e+4>>2]=f,f=a,a=Vk(a,k,i+140|0););return e=l[r+12>>2],l[i+16>>2]=l[r+8>>2],l[i+20>>2]=e,e=l[r+4>>2],l[i+8>>2]=l[r>>2],l[i+12>>2]=e,zb(i+8|0),void(ne=i+672|0)}P(41762,14830,485,41804),M()}function Da(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,b=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,b=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,b=cr(b,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=b,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0}function Sa(e,r){var a,i=0,f=0,k=0,b=0,n=0,s=0;ne=a=ne-704|0,i=(r=r-l[e>>2]|0)>>1,l[a+480>>2]=i,tn(17091,a+480|0),f=(r=d[r+l[e>>2]>>1])>>>0<41?w(r,24)+34336|0:35320,l[a+464>>2]=l[f+4>>2],tn(15538,a+464|0);e:if(!(l[f+12>>2]<2)){b=i+2|0,r=l[e>>2],k=d[2+(r+(i<<1)|0)>>1];r:if(!((i=l[f>>2]+-26|0)>>>0>3)){a:switch(i-1|0){case 0:case 2:for(;;){if(f=d[(r=(b<<1)+r|0)>>1],4096&(n=d[r+2>>1])){if(n&=61439,r=e,f)for(i=f;r=l[r+44>>2],(0|(i=i+-1|0))>0;);r=l[l[r+36>>2]+(n<<2)>>2],i=l[r+60>>2],l[a+376>>2]=l[r+56>>2],l[a+380>>2]=i,i=l[r+52>>2],l[a+368>>2]=l[r+48>>2],l[a+372>>2]=i,Nb(a+656|0,a+368|0),jb(a+640|0,16329),r=l[a+668>>2],l[a+360>>2]=l[a+664>>2],l[a+364>>2]=r,r=l[a+652>>2],l[a+344>>2]=l[a+648>>2],l[a+348>>2]=r,r=l[a+660>>2],l[a+352>>2]=l[a+656>>2],l[a+356>>2]=r,r=l[a+644>>2],l[a+336>>2]=l[a+640>>2],l[a+340>>2]=r,dn(a+672|0,a+352|0,a+336|0)}else{if(r=e,f)for(i=f;r=l[r+44>>2],(0|(i=i+-1|0))>0;);i=l[r+60>>2],l[a+328>>2]=l[r+56>>2],l[a+332>>2]=i,i=l[r+52>>2],l[a+320>>2]=l[r+48>>2],l[a+324>>2]=i,Nb(a+608|0,a+320|0),jb(a+592|0,14775),r=l[a+620>>2],l[a+312>>2]=l[a+616>>2],l[a+316>>2]=r,r=l[a+604>>2],l[a+296>>2]=l[a+600>>2],l[a+300>>2]=r,r=l[a+612>>2],l[a+304>>2]=l[a+608>>2],l[a+308>>2]=r,r=l[a+596>>2],l[a+288>>2]=l[a+592>>2],l[a+292>>2]=r,dn(a+624|0,a+304|0,a+288|0),r=l[a+636>>2],l[a+280>>2]=l[a+632>>2],l[a+284>>2]=r,r=l[a+628>>2],l[a+272>>2]=l[a+624>>2],l[a+276>>2]=r,Kb(a+672|0,a+272|0,n)}if(r=l[a+684>>2],l[a+696>>2]=l[a+680>>2],l[a+700>>2]=r,r=l[a+676>>2],l[a+688>>2]=l[a+672>>2],l[a+692>>2]=r,r=l[a+700>>2],l[a+264>>2]=l[a+696>>2],l[a+268>>2]=r,r=l[a+692>>2],l[a+256>>2]=l[a+688>>2],l[a+260>>2]=r,r=Gb(a+256|0),l[a+244>>2]=n,l[a+240>>2]=r,tn(17417,a+240|0),r=l[a+700>>2],l[a+232>>2]=l[a+696>>2],l[a+236>>2]=r,r=l[a+692>>2],l[a+224>>2]=l[a+688>>2],l[a+228>>2]=r,zb(a+224|0),f&&(l[a+208>>2]=f,tn(17726,a+208|0)),(0|k)==(0|s))break e;b=b+2|0,s=s+1|0,r=l[e>>2]}case 1:break r}r=d[(b<<1)+r>>1],e=l[e+32>>2],f=l[e+20>>2],l[a+456>>2]=l[e+16>>2],l[a+460>>2]=f,f=l[e+12>>2],l[a+448>>2]=l[e+8>>2],l[a+452>>2]=f,Nb(a+576|0,a+448|0),e=l[a+588>>2],l[a+440>>2]=l[a+584>>2],l[a+444>>2]=e,e=l[a+580>>2],l[a+432>>2]=l[a+576>>2],l[a+436>>2]=e,Kb(a+688|0,a+432|0,r),e=l[a+700>>2],l[a+424>>2]=l[a+696>>2],l[a+428>>2]=e,e=l[a+692>>2],l[a+416>>2]=l[a+688>>2],l[a+420>>2]=e,l[a+400>>2]=Gb(a+416|0),tn(18071,a+400|0),e=l[a+700>>2],l[a+392>>2]=l[a+696>>2],l[a+396>>2]=e,e=l[a+692>>2],l[a+384>>2]=l[a+688>>2],l[a+388>>2]=e,zb(a+384|0);break e}if(8&(f=l[f+8>>2]))l[a+192>>2]=k+b,tn(18464,a+192|0);else if(2&f)Ab(32),r=l[e+28>>2],l[a+184>>2]=l[e+24>>2],l[a+188>>2]=r,r=l[e+20>>2],l[a+176>>2]=l[e+16>>2],l[a+180>>2]=r,Nb(a+544|0,a+176|0),e=l[a+556>>2],l[a+168>>2]=l[a+552>>2],l[a+172>>2]=e,e=l[a+548>>2],l[a+160>>2]=l[a+544>>2],l[a+164>>2]=e,Kb(a+560|0,a+160|0,k),e=l[a+572>>2],l[a+152>>2]=l[a+568>>2],l[a+156>>2]=e,e=l[a+564>>2],l[a+144>>2]=l[a+560>>2],l[a+148>>2]=e,tb(a+144|0,0);else if(4&f){if(f=1,i=d[(b<<1)+r>>1],k)for(f=!k,r=k;e=l[e+44>>2],(0|(r=r+-1|0))>0;);if(r=l[e+60>>2],l[a+136>>2]=l[e+56>>2],l[a+140>>2]=r,r=l[e+52>>2],l[a+128>>2]=l[e+48>>2],l[a+132>>2]=r,Nb(a+512|0,a+128|0),jb(a+496|0,19194),e=l[a+524>>2],l[a+120>>2]=l[a+520>>2],l[a+124>>2]=e,e=l[a+508>>2],l[a+104>>2]=l[a+504>>2],l[a+108>>2]=e,e=l[a+516>>2],l[a+112>>2]=l[a+512>>2],l[a+116>>2]=e,e=l[a+500>>2],l[a+96>>2]=l[a+496>>2],l[a+100>>2]=e,dn(a+528|0,a+112|0,a+96|0),e=l[a+540>>2],l[a+88>>2]=l[a+536>>2],l[a+92>>2]=e,e=l[a+532>>2],l[a+80>>2]=l[a+528>>2],l[a+84>>2]=e,Kb(a+688|0,a+80|0,i),e=l[a+700>>2],l[a+72>>2]=l[a+696>>2],l[a+76>>2]=e,e=l[a+692>>2],l[a+64>>2]=l[a+688>>2],l[a+68>>2]=e,e=Gb(a- -64|0),l[a+52>>2]=i,l[a+48>>2]=e,tn(19566,a+48|0),e=l[a+700>>2],l[a+40>>2]=l[a+696>>2],l[a+44>>2]=e,e=l[a+692>>2],l[a+32>>2]=l[a+688>>2],l[a+36>>2]=e,zb(a+32|0),f)break e;l[a+16>>2]=k,tn(17726,a+16|0)}else l[a>>2]=k,tn(19811,a)}ne=a+704|0}function Fa(e,r){var a=0,i=0,f=0,k=0,b=0,n=0;k=e+r|0;e:{r:if(!(1&(a=l[e+4>>2]))){if(!(3&a))break e;if(r=(a=l[e>>2])+r|0,(0|(e=e-a|0))==l[82979]){if(3==(3&(a=l[k+4>>2])))return l[82976]=r,l[k+4>>2]=-2&a,l[e+4>>2]=1|r,void(l[k>>2]=r)}else{if(a>>>0<=255){if(f=a>>>3,a=l[e+8>>2],(0|(i=l[e+12>>2]))==(0|a)){l[82974]=l[82974]&Bi(-2,f);break r}l[a+12>>2]=i,l[i+8>>2]=a;break r}if(n=l[e+24>>2],(0|(a=l[e+12>>2]))==(0|e))if((f=l[(i=e+20|0)>>2])||(f=l[(i=e+16|0)>>2])){for(;b=i,(f=l[(i=(a=f)+20|0)>>2])||(i=a+16|0,f=l[a+16>>2]););l[b>>2]=0}else a=0;else i=l[e+8>>2],l[i+12>>2]=a,l[a+8>>2]=i;if(!n)break r;i=l[e+28>>2];a:{if(l[(f=332200+(i<<2)|0)>>2]==(0|e)){if(l[f>>2]=a,a)break a;l[82975]=l[82975]&Bi(-2,i);break r}if(l[n+(l[n+16>>2]==(0|e)?16:20)>>2]=a,!a)break r}if(l[a+24>>2]=n,(i=l[e+16>>2])&&(l[a+16>>2]=i,l[i+24>>2]=a),!(i=l[e+20>>2]))break r;l[a+20>>2]=i,l[i+24>>2]=a}}a=l[k+4>>2];r:{if(!(2&a)){if(l[82980]==(0|k)){if(l[82980]=e,r=l[82977]+r|0,l[82977]=r,l[e+4>>2]=1|r,l[82979]!=(0|e))break e;return l[82976]=0,void(l[82979]=0)}if(l[82979]==(0|k))return l[82979]=e,r=l[82976]+r|0,l[82976]=r,l[e+4>>2]=1|r,void(l[e+r>>2]=r);r=(-8&a)+r|0;a:if(a>>>0<=255){if(f=a>>>3,a=l[k+8>>2],(0|(i=l[k+12>>2]))==(0|a)){l[82974]=l[82974]&Bi(-2,f);break a}l[a+12>>2]=i,l[i+8>>2]=a}else{if(n=l[k+24>>2],(0|k)==(0|(a=l[k+12>>2])))if((f=l[(i=k+20|0)>>2])||(f=l[(i=k+16|0)>>2])){for(;b=i,(f=l[(i=(a=f)+20|0)>>2])||(i=a+16|0,f=l[a+16>>2]););l[b>>2]=0}else a=0;else i=l[k+8>>2],l[i+12>>2]=a,l[a+8>>2]=i;if(n){i=l[k+28>>2];i:{if(l[(f=332200+(i<<2)|0)>>2]==(0|k)){if(l[f>>2]=a,a)break i;l[82975]=l[82975]&Bi(-2,i);break a}if(l[n+(l[n+16>>2]==(0|k)?16:20)>>2]=a,!a)break a}l[a+24>>2]=n,(i=l[k+16>>2])&&(l[a+16>>2]=i,l[i+24>>2]=a),(i=l[k+20>>2])&&(l[a+20>>2]=i,l[i+24>>2]=a)}}if(l[e+4>>2]=1|r,l[e+r>>2]=r,l[82979]!=(0|e))break r;return void(l[82976]=r)}l[k+4>>2]=-2&a,l[e+4>>2]=1|r,l[e+r>>2]=r}if(r>>>0<=255)return r=331936+((a=r>>>3)<<3)|0,(i=l[82974])&(a=1<<a)?a=l[r+8>>2]:(l[82974]=a|i,a=r),l[r+8>>2]=e,l[a+12>>2]=e,l[e+12>>2]=r,void(l[e+8>>2]=a);l[e+16>>2]=0,l[e+20>>2]=0,i=e,a=0,(f=r>>>8)&&(a=31,r>>>0>16777215||(a=28+((a=((k=(f<<=b=f+1048320>>>16&8)<<(a=f+520192>>>16&4))<<(f=k+245760>>>16&2)>>>15)-(f|a|b)|0)<<1|r>>>a+21&1)|0)),l[i+28>>2]=a,f=332200+(a<<2)|0;r:{if((i=l[82975])&(b=1<<a)){for(i=r<<(31==(0|a)?0:25-(a>>>1)|0),a=l[f>>2];;){if(f=a,(-8&l[a+4>>2])==(0|r))break r;if(a=i>>>29,i<<=1,!(a=l[16+(b=f+(4&a)|0)>>2]))break}l[b+16>>2]=e}else l[82975]=i|b,l[f>>2]=e;return l[e+24>>2]=f,l[e+12>>2]=e,void(l[e+8>>2]=e)}r=l[f+8>>2],l[r+12>>2]=e,l[f+8>>2]=e,l[e+24>>2]=0,l[e+12>>2]=f,l[e+8>>2]=r}}function Ma(e,r){var a=0,i=0,f=0,k=0,c=0,o=0,u=0,l=0,v=0,d=0,h=0,w=0,p=0,y=0,E=0,_=0,D=0,S=0,M=0,A=0;a=1,t(+r),k=0|b(1),i=0|b(0),w=k;e:{r:{a:if(i|(o=2147483647&k)&&(t(+e),c=0|b(1),_=0|b(0),p=c,1072693248!=(0|c)||_)){if((c=2147483647&p)>>>0>2146435072|2146435072==(0|c)&0!=(0|_)|o>>>0>2146435072||!(!i|2146435072!=(0|o)))return e+r;i:{f:{k:{if(l=0,!((0|p)>-1||(l=2,o>>>0>1128267775||(l=0,o>>>0<1072693248)))){if(y=o>>>20,o>>>0<1094713344)break k;l=0,(0|i)==(y=i>>>(f=1075-y|0))<<f&&(l=2-(1&y)|0)}if(l=f=l,!i)break f;break i}if(i)break i;l=0,(0|o)==(f=o>>>(i=1043-y|0))<<i&&(l=2-(1&f)|0)}if(f=l,2146435072==(0|o)){if(!(c+-1072693248|_))break a;return c>>>0>=1072693248?(0|k)>-1?r:0:(0|k)>-1?0:-r}if(1072693248==(0|o))return(0|k)>-1?e:1/e;if(1073741824==(0|k))return e*e;if(!(1071644672!=(0|k)|(0|p)<0))return F(e)}if(a=g(e),!((2146435072!=(1073741824|c)?c:0)|_)){if(a=(0|k)<0?1/a:a,(0|p)>-1)break a;return c+-1072693248|f?1==(0|f)?-a:a:(e=a-a)/e}if(d=1,!((0|p)>-1|f>>>0>1)){if(f-1)return(e-=e)/e;d=-1}if(o>>>0>=1105199105){if(o>>>0>=1139802113)return c>>>0<=1072693247?(0|k)<0?x:0:(0|k)>0?x:0;if(c>>>0<=1072693246)return(0|k)<0?1e300*d*1e300:1e-300*d*1e-300;if(c>>>0>=1072693249)return(0|k)>0?1e300*d*1e300:1e-300*d*1e-300;t(+((a=1.4426950216293335*(e=a+-1))+(v=1.9259629911266175e-8*e+e*e*(.5-e*(-.25*e+.3333333333333333))*-1.4426950408889634))),i=0|b(1),b(0),n(0,0),n(1,0|i),u=(e=+s())-a}else e=9007199254740992*a,a=(i=c>>>0<1048576)?e:a,t(+e),f=0|b(1),b(0),k=1072693248|(c=1048575&(f=i?f:c)),f=(f>>20)+(i?-1076:-1023)|0,o=0,c>>>0<235663||(c>>>0<767610?o=1:(k=k+-1048576|0,f=f+1|0)),E=m[308496+(c=o<<3)>>3],t(+a),b(1),n(0,0|b(0)),n(1,0|k),t(+(a=(h=(v=+s())-(u=m[c+308464>>3]))*(D=1/(u+v)))),i=0|b(1),b(0),n(0,0),n(1,0|i),M=e=+s(),S=e*e,A=h,n(0,0),n(1,524288+((k>>1|536870912)+(o<<18)|0)|0),u=(a+e)*(v=D*(A-e*(h=+s())-e*(v-(h-u)))),t(+(S+3+(u+=(e=a*a)*e*(e*(e*(e*(e*(.20697501780033842*e+.23066074577556175)+.272728123808534)+.33333332981837743)+.4285714285785502)+.5999999999999946)))),i=0|b(1),b(0),n(0,0),n(1,0|i),t(+((h=M*(e=+s()))+(a=v*e+a*(u-(e+-3-S))))),i=0|b(1),b(0),n(0,0),n(1,0|i),t(+(E+((u=.9617967009544373*(e=+s()))+(v=m[c+308480>>3]+(.9617966939259756*(a-(e-h))+-7.028461650952758e-9*e)))+(a=+(0|f)))),i=0|b(1),b(0),n(0,0),n(1,0|i),u=(e=+s())-a-E-u;n(0,0),n(1,0|w),t(+(r=(a=e*(E=+s()))+(e=(v-u)*r+(r-E)*e))),k=0|b(1),w=0|b(0);i:{if(f=k,(0|(i=k))>=1083179008){if(w|i+-1083179008)break r;if(!(e+8.008566259537294e-17>r-a))break i;break r}if(!((2147482624&i)>>>0<1083231232)){if(w|i+1064252416)break e;if(e<=r-a)break e}}o=0,(k=2147483647&i)>>>0>=1071644673?(w=(1048575&(f=i+(1048576>>>(k>>>20)-1022)|0)|1048576)>>>1043-(k=f>>>20&2047),o=(0|i)<0?0-w|0:w,n(0,0),n(1,f&-1048576>>k+-1023),t(+(e+(a-=+s()))),i=0|b(1),b(0)):i=f,n(0,0),n(1,0|i),t(+(e=(e=(v=.6931471824645996*(r=+s()))+(a=.6931471805599453*(e-(r-a))+-1.904654299957768e-9*r))-((u=e*(r=e-(r=e*e)*(r*(r*(r*(4.1381367970572385e-8*r-16533902205465252e-22)+6613756321437934e-20)-.0027777777777015593)+.16666666666666602))/(r+-2))-((r=a-(e-v))+e*r))+1)),i=0|b(1),f=0|b(0),(0|(i=(o<<20)+i|0))<=1048575?e=Ik(e,o):(n(0,0|f),n(1,0|i),e=+s()),a=d*e}return a}return 1e300*d*1e300}return 1e-300*d*1e-300}function Aa(e,r,a){var i,f,k=0,c=0,o=0,u=0,l=0;return t(+e),i=0|b(1),f=0|b(0),(u=1072010279==(0|(u=2147483640&i))|u>>>0<1072010279)||(e=.7853981633974483-((l=(0|i)<0?1:(0|i)<=0?f>>>0>=0?0:1:0)?-e:e)+(3.061616997868383e-17-(l?-r:r)),l=i>>>31,r=0),r=e+(k=.3333333333333341*(c=e*(k=e*e))+((o=r)+k*(o+c*((r=k*k)*(r*(r*(r*(-18558637485527546e-21*r+7817944429395571e-20)+.0005880412408202641)+.0035920791075913124)+.021869488294859542)+.13333333333320124+k*(r*(r*(r*(r*(2590730518636337e-20*r+7140724913826082e-20)+.0002464631348184699)+.0014562094543252903)+.0088632398235993)+.05396825397622605))))),u?(a&&(t(+r),a=0|b(1),b(0),n(0,0),n(1,0|a),c=+s(),t(+(o=-1/r)),a=0|b(1),b(0),n(0,0),n(1,0|a),r=o*(c*(r=+s())+1+(k-(c-e))*r)+r),r):(c=r*r,o=r,e=(r=+(1-(a<<1)|0))-((e+=k-c/(o+r))+e),l?-e:e)}function xa(e,r,a,i,f,k,b,n){var s,t=0,c=0,o=0,u=0,l=0;c=1,s=t=2147483647&i,o=a;e:if(!((!a&2147418112==(0|t)?e|r:2147418112==(0|t)&a>>>0>0|t>>>0>2147418112)||(l=u=2147483647&n,t=b,!b&2147418112==(0|u)?f|k:2147418112==(0|u)&b>>>0>0|u>>>0>2147418112))){if(!(e|f|t|o|r|k|s|l))return 0;if((0|(o=i&n))>0||(0|o)>=0&&!((a&b)>>>0<0)){if(c=-1,(0|a)==(0|b)&(0|i)==(0|n)?(0|r)==(0|k)&e>>>0<f>>>0|r>>>0<k>>>0:(0|i)<(0|n)||(0|i)<=(0|n)&&!(a>>>0>=b>>>0))break e;return 0!=(e^f|a^b)|0!=(r^k|i^n)}c=-1,((0|a)==(0|b)&(0|i)==(0|n)?(0|r)==(0|k)&e>>>0>f>>>0|r>>>0>k>>>0:(0|i)>(0|n)||(0|i)>=(0|n)&&!(a>>>0<=b>>>0))||(c=0!=(e^f|a^b)|0!=(r^k|i^n))}return c}function Pa(e,r){for(var a=0,i=0,f=0;k[0|(i=e+a|0)]=v[a+305448|0],f=14!=(0|a),a=a+1|0,f;);if(r){for(a=14,i=r;a=a+1|0,f=i>>>0>9,i=(i>>>0)/10|0,f;);for(k[e+a|0]=0;i=(r>>>0)/10|0,k[(a=a+-1|0)+e|0]=r-w(i,10)|48,f=r>>>0>9,r=i,f;);}else k[0|i]=48,k[e+15|0]=0}function Ta(e,r,a){return $e(e,r,a),e}function Ra(e){var r=0,a=0;if(!e)return 32;if(!(1&e))for(;r=r+1|0,a=2&e,e>>>=1,!a;);return r}function Oa(e,r,a){var i,f=0,k=0,b=0,n=0;ne=i=ne-256|0;e:if(!((0|a)<2)&&(l[(n=(a<<2)+r|0)>>2]=i,e))for(f=i;;){for(k=e>>>0<256?e:256,qb(f,l[r>>2],k),f=0;b=(f<<2)+r|0,f=f+1|0,qb(l[b>>2],l[(f<<2)+r>>2],k),l[b>>2]=l[b>>2]+k,(0|a)!=(0|f););if(!(e=e-k|0))break e;f=l[n>>2]}ne=i+256|0}function Ia(e){return Ra(l[e>>2]+-1|0)||((e=Ra(l[e+4>>2]))?e+32|0:0)}function za(e,r,a,i){var f,k=0,b=0,n=0,s=0,t=0;ne=f=ne-208|0,l[f+8>>2]=1,l[f+12>>2]=0;e:if(s=w(r,a)){for(l[f+16>>2]=a,l[f+20>>2]=a,t=0-a|0,n=r=a,k=2;b=r,r=(a+n|0)+r|0,l[(f+16|0)+(k<<2)>>2]=r,k=k+1|0,n=b,r>>>0<s>>>0;);if((b=(e+s|0)+t|0)>>>0<=e>>>0)k=1,r=1;else for(k=1,r=1;3!=(3&k)?(h[(f+16|0)+((n=r+-1|0)<<2)>>2]>=b-e>>>0?Rf(e,a,i,f+8|0,r,0,f+16|0):hk(e,a,i,r,f+16|0),1!=(0|r)?(Tf(f+8|0,n),r=1):(Tf(f+8|0,1),r=0)):(hk(e,a,i,r,f+16|0),Of(f+8|0,2),r=r+2|0),k=1|l[f+8>>2],l[f+8>>2]=k,(e=e+a|0)>>>0<b>>>0;);for(Rf(e,a,i,f+8|0,r,0,f+16|0);;){r:{a:{i:{if(!(1!=(0|r)|1!=(0|k))){if(l[f+12>>2])break i;break e}if((0|r)>1)break a}Of(f+8|0,b=Ia(f+8|0)),k=l[f+8>>2],r=r+b|0;break r}Tf(f+8|0,2),l[f+8>>2]=7^l[f+8>>2],Of(f+8|0,1),Rf((n=e+t|0)-l[(f+16|0)+((b=r+-2|0)<<2)>>2]|0,a,i,f+8|0,r+-1|0,1,f+16|0),Tf(f+8|0,1),k=1|l[f+8>>2],l[f+8>>2]=k,Rf(n,a,i,f+8|0,b,1,f+16|0),r=b}e=e+t|0}}ne=f+208|0}function Na(e){return 2.247116418577895e307*_b(e+-1416.0996898839683)*2.247116418577895e307}function ja(e,r,a){var i,f,k,n,s=0,c=0,o=0;return s=ab(r),c=Xk(r),c=s+(i=a?-c:c),e>>>0>2145386495||(o=-Xk(r+r),s*i<0?c=o/(s-=i):s=o/c,e>>>0>1207959551||(c=c*(k=0,n=0,t(+(f=r)),k=0|b(1),b(0),(k&=2147483647)>>>0>1075838975?(n=304272,k=304320):k>>>0>1074933386?(n=304368,k=304416):(n=(k=k>>>0>1074191212)?304464:304560,k=k?304512:304608),f=1/(f*f),(m[n>>3]+f*(m[n+8>>3]+f*(m[n+16>>3]+f*(m[n+24>>3]+f*(m[n+32>>3]+f*m[n+40>>3])))))/(f*(m[k>>3]+f*(m[k+8>>3]+f*(m[k+16>>3]+f*(m[k+24>>3]+f*m[k+32>>3]))))+1)+1)-(a?-s:s)*function(e){var r,a=0,i=0;return t(+e),a=0|b(1),b(0),(a&=2147483647)>>>0>1075838975?(i=304656,a=304704):a>>>0>1074933386?(i=304752,a=304800):(i=(a=a>>>0>1074191212)?304848:304944,a=a?304896:304992),r=1/(e*e),((m[i>>3]+r*(m[i+8>>3]+r*(m[i+16>>3]+r*(m[i+24>>3]+r*(m[i+32>>3]+r*m[i+40>>3])))))/(r*(m[a>>3]+r*(m[a+8>>3]+r*(m[a+16>>3]+r*(m[a+24>>3]+r*(m[a+32>>3]+r*m[a+40>>3])))))+1)-.125)/e}(r))),.5641895835477563*c/F(r)}function Ua(e,r,a,i){var f,k,n,s,c=0,o=0,u=0;return c=ab(r),c=(o=a?-c:c)-(f=Xk(r)),e>>>0>2145386495||(u=Xk(r+r),o*f>0?c=u/(o=-o-f):o=u/c,e>>>0>1207959551||(c=c*(n=0,s=0,t(+(k=r)),n=0|b(1),b(0),(n&=2147483647)>>>0>1075838975?(s=303504,n=303552):n>>>0>1074933386?(s=303600,n=303648):(s=(n=n>>>0>1074191212)?303696:303792,n=n?303744:303840),k=1/(k*k),(m[s>>3]+k*(m[s+8>>3]+k*(m[s+16>>3]+k*(m[s+24>>3]+k*(m[s+32>>3]+k*m[s+40>>3])))))/(k*(m[n>>3]+k*(m[n+8>>3]+k*(m[n+16>>3]+k*(m[n+24>>3]+k*m[n+32>>3]))))+1)+1)-(a?-o:o)*function(e){var r,a=0,i=0;return t(+e),a=0|b(1),b(0),(a&=2147483647)>>>0>1075838975?(i=303888,a=303936):a>>>0>1074933386?(i=303984,a=304032):(i=(a=a>>>0>1074191212)?304080:304176,a=a?304128:304224),r=1/(e*e),((m[i>>3]+r*(m[i+8>>3]+r*(m[i+16>>3]+r*(m[i+24>>3]+r*(m[i+32>>3]+r*m[i+40>>3])))))/(r*(m[a>>3]+r*(m[a+8>>3]+r*(m[a+16>>3]+r*(m[a+24>>3]+r*(m[a+32>>3]+r*m[a+40>>3])))))+1)+.375)/e}(r))),.5641895835477563*(i?-c:c)/F(r)}function Ba(e,r,a){var i,f=0,k=0,b=0,n=0,s=0;ne=i=ne-80|0;e:{r:{a:{i:{f:{k:{b:{if((f=l[r>>2])|l[r+4>>2]){if(1!=l[f+8>>2])break b;if(!(f=l[f>>2]))break k;n:{s:{t:if(!((k=l[f+8>>2]+-4|0)>>>0>18))switch(k-1|0){case 17:break s;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:break t;default:break n}P(23628,14282,976,35628),M()}if(f=l[f>>2],l[f+8>>2])break f}k=l[f+36>>2],l[i+24>>2]=l[f+32>>2],l[i+28>>2]=k,k=l[f+28>>2],l[i+16>>2]=l[f+24>>2],l[i+20>>2]=k,s=Wb(i+16|0),s=+(1+(b=g(s)<2147483648?~~s:-2147483648)|0)}if(1!=l[8593])break a;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=1,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,l[i+32>>2]=4,l[i+36>>2]=0,m[i+40>>3]=s,k=l[i+44>>2],l[i+72>>2]=l[i+40>>2],l[i+76>>2]=k,k=l[i+36>>2],l[i+64>>2]=l[i+32>>2],l[i+68>>2]=k,!(2&v[34344]))break i;if(b=Bb(104),l[(k=b)+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+96>>2]=-1,l[k+8>>2]=0,l[k>>2]=0,l[k+4>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,k=l[i+68>>2],l[b+24>>2]=l[i+64>>2],l[b+28>>2]=k,k=l[i+76>>2],l[b+32>>2]=l[i+72>>2],l[b+36>>2]=k,l[i+52>>2]=b,l[i+48>>2]=b,k=l[i+52>>2],l[i+8>>2]=l[i+48>>2],l[i+12>>2]=k,yn(i+56|0,i+8|0),k=l[i+56>>2]){if(b=l[i+60>>2],f){if(l[f>>2])break r;if(l[k+4>>2])break e;l[f>>2]=k,l[k+4>>2]=f,k=f}f=b}else k=f;if(1!=l[8647])break a;b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=10,l[(n=b)>>2]=0,l[n+4>>2]=0,l[n+76>>2]=0,l[n+80>>2]=0,l[n+68>>2]=-1,l[n+72>>2]=-1,l[n+60>>2]=0,l[n+64>>2]=0,l[n+52>>2]=-1,l[n+56>>2]=-1,l[n+48>>2]=0,l[n+84>>2]=0,l[n+88>>2]=0;n:{if(n){if(!f){f=b;break n}if(l[f>>2])break r;l[f>>2]=b,l[b+4>>2]=f,f=b}b=k}if(n=l[a>>2])if(k=l[a+4>>2],f){if(l[f>>2])break r;if(l[n+4>>2])break e;l[f>>2]=n,l[n+4>>2]=f}else b=n;else k=f;if(n=l[r+4>>2],f=l[r>>2],l[e>>2]=b,l[e+4>>2]=k,f){if(k){if(l[k>>2])break r;if(l[f+4>>2])break e;l[k>>2]=f,l[f+4>>2]=k}else l[e>>2]=f;l[e+4>>2]=n}return void(ne=i+80|0)}P(22917,14282,970,35628),M()}P(23259,14282,971,35628),M()}P(23909,14282,977,35628),M()}P(14782,14282,147,35402),M()}P(1044,14282,141,35388),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function Ca(e,r,a){var i,f=0;i=a*a,m[e>>3]=i,f=a-(a=(f=134217729*a)+(a-f)),m[r>>3]=f*f+(a*a-i+(a+a)*f)}function La(e,r){var a,i=0;if(i=l[r>>2])for(;8==l[i+8>>2]&&(l[i+8>>2]=40),i=l[i>>2];);i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=39,l[i>>2]=0,l[i+4>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,a=l[r+4>>2],l[i+76>>2]=l[r>>2],l[i+80>>2]=a,l[e+4>>2]=i,l[e>>2]=i}function Ha(e,r){var a,i,f,k=0,c=0,o=0,u=0,l=0,v=0,d=0;return e>>>0<=1072955391?.15493708848953247-((f=g(f=r)+-1)*(f*(f*(f*(f*(-.002166375594868791*f+.035478304325618236)-.11089469428239668)+.31834661990116175)-.3722078760357013)+.41485611868374833)-.0023621185607526594)/(f*(f*(f*(f*(f*(.011984499846799107*f+.01363708391202905)+.12617121980876164)+.07182865441419627)+.540397917702171)+.10642088040084423)+1):(r=1/((a=g(r))*a),e>>>0<=1074191212?(k=19.651271667439257,c=137.65775414351904,o=434.56587747522923,u=645.3872717332679,l=429.00814002756783,v=r*(-.0604244152148581*r+6.570249770319282)+108.63500554177944,d=r*(r*(r*(r*(r*(r*(-9.814329344169145*r-81.2874355063066)-184.60509290671104)-162.39666946257347)-62.375332450326006)-10.558626225323291)-.6938585727071818)-.009864944034847148):(k=30.33806074348246,c=325.7925129965739,o=1536.729586084437,u=3199.8582195085955,l=2553.0504064331644,v=-22.44095244658582*r+474.52854120695537,d=r*(r*(r*(r*(r*(-483.5191916086514*r-1025.0951316110772)-637.5664433683896)-160.63638485582192)-17.757954917754752)-.799283237680523)-.0098649429247001),t(+a),e=0|b(1),b(0),n(0,0),n(1,0|e),_b(-.5625-(i=+s())*i)*_b((i-a)*(a+i)+d/(r*(r*(r*(r*(r*(r*v+l)+u)+o)+c)+k)+1))/a)}function qa(e,r){return e?or(e,r):0}function Ya(e){(e=27==(0|(e=0|R(0|e)))?0:e)&&(l[82952]=e)}function Wa(e,r,a){return Va(e,r,a,0,0)}function Ga(e,r,a){var i,f=0,k=0,b=0,n=0;ne=i=ne-144|0;e:{r:{a:{if(1==l[8593]){if(n=Bb(104),l[(b=n)+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+96>>2]=-1,l[b+8>>2]=1,l[b>>2]=0,l[b+4>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0,f=l[r>>2])if(b=l[r+4>>2],n){if(l[f+4>>2])break a;l[n>>2]=f,l[f+4>>2]=n}else n=f;else b=n;if(1==l[8617]){if(r=Bb(104),l[(f=r)+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+96>>2]=-1,l[f+8>>2]=5,l[f>>2]=0,l[f+4>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[a>>2])if(a=l[a+4>>2],r){if(l[f+4>>2])break a;l[r>>2]=f,l[f+4>>2]=r}else r=f;else a=r;if(f=l[10939],l[i+88>>2]=l[10938],l[i+92>>2]=f,f=l[10937],l[i+80>>2]=l[10936],l[i+84>>2]=f,f=l[i+92>>2],l[i+136>>2]=l[i+88>>2],l[i+140>>2]=f,f=l[i+84>>2],l[i+128>>2]=l[i+80>>2],l[i+132>>2]=f,!(2&v[34344]))break r;if(k=Bb(104),l[(f=k)+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+96>>2]=-1,l[f+8>>2]=0,l[f>>2]=0,l[f+4>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[i+132>>2],l[k+24>>2]=l[i+128>>2],l[k+28>>2]=f,f=l[i+140>>2],l[k+32>>2]=l[i+136>>2],l[k+36>>2]=f,l[i+96>>2]=k,l[i+100>>2]=k,f=l[10943],l[i+64>>2]=l[10942],l[i+68>>2]=f,f=l[10941],l[i+56>>2]=l[10940],l[i+60>>2]=f,k=l[4+(f=i- -64|0)>>2],l[i+136>>2]=l[f>>2],l[i+140>>2]=k,f=l[i+60>>2],l[i+128>>2]=l[i+56>>2],l[i+132>>2]=f,!(2&v[34344]))break r;if(k=Bb(104),l[(f=k)+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+96>>2]=-1,l[f+8>>2]=0,l[f>>2]=0,l[f+4>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[i+132>>2],l[k+24>>2]=l[i+128>>2],l[k+28>>2]=f,f=l[i+140>>2],l[k+32>>2]=l[i+136>>2],l[k+36>>2]=f,l[i+76>>2]=k,l[i+72>>2]=k,f=l[i+100>>2],l[i+24>>2]=l[i+96>>2],l[i+28>>2]=f,f=l[i+76>>2],l[i+16>>2]=l[i+72>>2],l[i+20>>2]=f,Pb(i+104|0,i+24|0,i+16|0),l[i+112>>2]=r,l[i+116>>2]=a,r=l[i+104>>2]){if(f=l[i+108>>2],a){if(l[a>>2])break e;if(l[r+4>>2])break a;l[a>>2]=r,l[r+4>>2]=a}else l[i+112>>2]=r;l[i+116>>2]=f}if(1==l[8617]){if(r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=5,l[(a=r)>>2]=0,l[a+4>>2]=0,l[a+76>>2]=0,l[a+80>>2]=0,l[a+68>>2]=-1,l[a+72>>2]=-1,l[a+60>>2]=0,l[a+64>>2]=0,l[a+52>>2]=-1,l[a+56>>2]=-1,l[a+48>>2]=0,l[a+84>>2]=0,l[a+88>>2]=0,a=l[10943],l[i+40>>2]=l[10942],l[i+44>>2]=a,a=l[10941],l[i+32>>2]=l[10940],l[i+36>>2]=a,a=l[i+44>>2],l[i+136>>2]=l[i+40>>2],l[i+140>>2]=a,a=l[i+36>>2],l[i+128>>2]=l[i+32>>2],l[i+132>>2]=a,!(2&v[34344]))break r;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=0,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,k=l[i+140>>2],l[f+32>>2]=l[i+136>>2],l[f+36>>2]=k,k=l[i+132>>2],l[f+24>>2]=l[i+128>>2],l[f+28>>2]=k,l[i+48>>2]=r,l[i+52>>2]=r,f){if(r){if(l[r>>2])break e;l[r>>2]=f,l[f+4>>2]=r}else l[i+48>>2]=f;l[i+52>>2]=f}if(r=l[i+116>>2],l[i+8>>2]=l[i+112>>2],l[i+12>>2]=r,r=l[i+52>>2],l[i>>2]=l[i+48>>2],l[i+4>>2]=r,Pb(i+120|0,i+8|0,i),k=l[i+124>>2],f=l[i+120>>2],l[(a=e)>>2]=n,l[a+4>>2]=b,f){if(b){if(l[b>>2])break e;if(l[f+4>>2])break a;l[b>>2]=f,l[f+4>>2]=b}else l[e>>2]=f;l[e+4>>2]=k}return void(ne=i+144|0)}}}P(1044,14282,141,35388),M()}P(25731,14282,238,35660),M()}P(14782,14282,147,35402),M()}P(25534,14282,237,35660),M()}function Xa(e,r,a,i){e:{if(!(r>>>0>20||(r=r+-9|0)>>>0>9)){r:switch(r-1|0){default:return r=l[a>>2],l[a>>2]=r+4,void(l[e>>2]=l[r>>2]);case 0:return r=l[a>>2],l[a>>2]=r+4,r=l[r>>2],l[e>>2]=r,void(l[e+4>>2]=r>>31);case 1:return r=l[a>>2],l[a>>2]=r+4,l[e>>2]=l[r>>2],void(l[e+4>>2]=0);case 3:return r=l[a>>2],l[a>>2]=r+4,r=u[r>>1],l[e>>2]=r,void(l[e+4>>2]=r>>31);case 4:return r=l[a>>2],l[a>>2]=r+4,l[e>>2]=d[r>>1],void(l[e+4>>2]=0);case 5:return r=l[a>>2],l[a>>2]=r+4,r=k[0|r],l[e>>2]=r,void(l[e+4>>2]=r>>31);case 6:return r=l[a>>2],l[a>>2]=r+4,l[e>>2]=v[0|r],void(l[e+4>>2]=0);case 2:case 7:break e;case 8:}f[i](e,a)}return}r=l[a>>2]+7&-8,l[a>>2]=r+8,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a}function Ja(e){var r=0,a=0,i=0;if(k[l[e>>2]]+-48>>>0<10)for(;r=l[e>>2],i=k[0|r],l[e>>2]=r+1,a=(w(a,10)+i|0)-48|0,k[r+1|0]+-48>>>0<10;);return a}function Va(e,r,a,i,b){var n,s=0,t=0;return ne=n=ne-208|0,l[n+204>>2]=a,a=0,wn(n+160|0,0,40),l[n+200>>2]=l[n+204>>2],(0|yk(0,r,n+200|0,n+80|0,n+160|0,i,b))<0?r=-1:(a=l[e+76>>2]>=0?1:a,s=l[e>>2],k[e+74|0]<=0&&(l[e>>2]=-33&s),t=32&s,l[e+48>>2]?r=yk(e,r,n+200|0,n+80|0,n+160|0,i,b):(l[e+48>>2]=80,l[e+16>>2]=n+80,l[e+28>>2]=n,l[e+20>>2]=n,s=l[e+44>>2],l[e+44>>2]=n,r=i=yk(e,r,n+200|0,n+80|0,n+160|0,i,b),s&&(f[l[e+36>>2]](e,0,0),l[e+48>>2]=0,l[e+44>>2]=s,l[e+28>>2]=0,l[e+16>>2]=0,r=l[e+20>>2],l[e+20>>2]=0,r=r?i:-1)),i=e,e=l[e>>2],l[i>>2]=e|t,r=32&e?-1:r),ne=n+208|0,r}function Ka(e){var r,a=0;return a=v[e+74|0],k[e+74|0]=a+-1|a,h[e+20>>2]>h[e+28>>2]&&f[l[e+36>>2]](e,0,0),l[e+28>>2]=0,l[e+16>>2]=0,l[e+20>>2]=0,4&(a=l[e>>2])?(l[e>>2]=32|a,-1):(r=l[e+44>>2]+l[e+48>>2]|0,l[e+8>>2]=r,l[e+4>>2]=r,a<<27>>31)}function Za(e,r){var a,i,f,b,n=0;ne=a=ne-48|0;e:{r:{if(hn(301040,k[0|r])){if(n=Cb(1176))break r}else l[82952]=28;e=0;break e}wn(n,0,144),hn(r,43)||(l[n>>2]=114==v[0|r]?8:4),97==v[0|r]?(l[a+36>>2]=3,l[a+32>>2]=e,1024&(r=0|j(221,a+32|0))||(l[a+20>>2]=4,l[a+16>>2]=e,l[a+24>>2]=1024|r,j(221,a+16|0)),r=128|l[n>>2],l[n>>2]=r):r=l[n>>2],k[n+75|0]=255,l[n+48>>2]=1024,l[n+60>>2]=e,l[n+44>>2]=n+152,8&r||(l[a+4>>2]=21523,l[a>>2]=e,l[a+8>>2]=a+40,ae(54,0|a)||(k[n+75|0]=10)),l[n+40>>2]=171,l[n+36>>2]=172,l[n+32>>2]=170,l[n+12>>2]=169,l[82958]||(l[n+76>>2]=-1),i=n,f=Sk(),l[i+56>>2]=l[f>>2],(b=l[f>>2])&&(l[b+52>>2]=i),l[f>>2]=i,O(330744),e=i}return ne=a+48|0,e}function $a(e,r){var a,i,f,b=0;ne=a=ne-16|0;e:{if(hn(301032,k[0|r])){if(f=0,f=2,hn(i=r,43)||(f=114!=v[0|i]),f=hn(i,120)?128|f:f,f=hn(i,101)?524288|f:f,f=114==(0|(i=v[0|i]))?f:64|f,f=119==(0|i)?512|f:f,b=97==(0|i)?1024|f:f,l[a+8>>2]=438,l[a>>2]=e,l[a+4>>2]=32768|b,e=0,(b=0|I(5,0|a))>>>0>=4294963201&&(l[82952]=0-b,b=-1),(0|b)<0)break e;if(e=Za(b,r))break e;R(0|b)}else l[82952]=28;e=0}return ne=a+16|0,e}function Qa(e,r,a){var i,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0;ne=i=ne-96|0,Hn(i+72|0,22628);e:{r:{a:{i:{f:{k:{b:{n:{if(1==l[8593]){if(t=Bb(104),l[t+96>>2]=-1,l[t+8>>2]=1,l[(f=t)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f=l[10943],l[i+64>>2]=l[10942],l[i+68>>2]=f,f=l[10941],l[i+56>>2]=l[10940],l[i+60>>2]=f,b=l[4+(f=i- -64|0)>>2],l[i+88>>2]=l[f>>2],l[i+92>>2]=b,f=l[i+60>>2],l[i+80>>2]=l[i+56>>2],l[i+84>>2]=f,!(2&v[34344]))break f;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=0,l[k>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,f=l[i+84>>2],l[k+24>>2]=l[i+80>>2],l[k+28>>2]=f,f=l[i+92>>2],l[k+32>>2]=l[i+88>>2],l[k+36>>2]=f,k)if(t){if(l[t>>2])break i;l[t>>2]=k,l[k+4>>2]=t}else t=k;else k=t;if(f=l[i+72>>2])if(c=l[i+76>>2],k){if(l[k>>2])break i;if(l[f+4>>2])break a;l[k>>2]=f,l[f+4>>2]=k}else t=f;else c=k;if(1!=l[8695])break k;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=18,l[k>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,1!=l[8593])break k;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=1,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,b=l[i+76>>2],l[i+16>>2]=l[i+72>>2],l[i+20>>2]=b,Gk(i+48|0,6,i+16|0),s=l[i+48>>2])if(b=l[i+52>>2],f){if(l[f>>2])break i;if(l[s+4>>2])break a;l[f>>2]=s,l[s+4>>2]=f}else f=s;else b=f;if(!(8&v[34752]))break r;if(!k)break e;s=Bb(104),l[s+96>>2]=-1,l[s+8>>2]=17,l[(n=s)>>2]=0,l[n+4>>2]=0,l[n+76>>2]=0,l[n+80>>2]=0,l[n+68>>2]=-1,l[n+72>>2]=-1,l[n+60>>2]=0,l[n+64>>2]=0,l[n+52>>2]=-1,l[n+56>>2]=-1,l[n+48>>2]=0,l[n+20>>2]=k,l[n+84>>2]=0,l[n+88>>2]=0;s:{if(n){if(!b){b=s;break s}if(l[b>>2])break i;l[b>>2]=s,l[s+4>>2]=b,b=s}s=f}if(b){if(l[b>>2])break i;if(l[k+4>>2])break a;l[b>>2]=k,l[k+4>>2]=b}else s=k;if(1!=l[8617])break k;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=5,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,f){if(l[k>>2])break i;l[k>>2]=f,l[f+4>>2]=k,k=f}if(f=l[a>>2]){if(l[k>>2])break i;if(l[f+4>>2])break a;a=l[a+4>>2],l[k>>2]=f,l[f+4>>2]=k,k=a}if(1!=l[8695])break k;if(n=Bb(104),l[n+96>>2]=-1,l[n+8>>2]=18,l[n>>2]=0,l[n+4>>2]=0,l[n+76>>2]=0,l[n+80>>2]=0,l[n+68>>2]=-1,l[n+72>>2]=-1,l[n+60>>2]=0,l[n+64>>2]=0,l[n+52>>2]=-1,l[n+56>>2]=-1,l[n+48>>2]=0,l[n+84>>2]=0,l[n+88>>2]=0,1!=l[8593])break k;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=1,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,a=l[10939],l[i+40>>2]=l[10938],l[i+44>>2]=a,a=l[10937],l[i+32>>2]=l[10936],l[i+36>>2]=a,a=l[i+44>>2],l[i+88>>2]=l[i+40>>2],l[i+92>>2]=a,a=l[i+36>>2],l[i+80>>2]=l[i+32>>2],l[i+84>>2]=a,!(2&v[34344]))break f;if(b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=0,l[b>>2]=0,l[b+4>>2]=0,l[b+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0,a=l[i+84>>2],l[b+24>>2]=l[i+80>>2],l[b+28>>2]=a,a=l[i+92>>2],l[b+32>>2]=l[i+88>>2],l[b+36>>2]=a,b)if(f){if(l[f>>2])break i;l[f>>2]=b,l[b+4>>2]=f,a=f,f=b,b=a}else f=b;else b=f;if(a=l[i+76>>2],l[i+8>>2]=l[i+72>>2],l[i+12>>2]=a,Gk(i+24|0,8,i+8|0),a=l[i+24>>2])if(o=l[i+28>>2],f){if(l[f>>2])break i;if(l[a+4>>2])break a;l[f>>2]=a,l[a+4>>2]=f}else b=a;else o=f;if(!(8&v[34728]))break r;if(!k)break e;if(a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=16,l[(f=a)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+20>>2]=k,l[f+84>>2]=0,l[f+88>>2]=0,f)if(o){if(l[o>>2])break i;l[o>>2]=a,l[a+4>>2]=o}else b=a;else a=o;if(!(8&v[34680]))break r;if(!n)break e;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=14,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+20>>2]=n,l[f+84>>2]=0,l[f+88>>2]=0,f)if(c){if(l[c>>2])break i;l[c>>2]=f,l[f+4>>2]=c}else t=f;else f=c;if(o=l[r>>2])if(c=l[r+4>>2],f){if(l[f>>2])break i;if(l[o+4>>2])break a;l[f>>2]=o,l[o+4>>2]=f}else t=o;else c=f;if(!(8&v[34752]))break r;if(!a)break e;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=17,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+20>>2]=a,l[f+84>>2]=0,l[f+88>>2]=0,f)if(c){if(l[c>>2])break i;l[c>>2]=f,l[f+4>>2]=c}else t=f;else f=c;if(b){if(!f){f=a,t=b;break n}if(l[f>>2])break i;if(l[b+4>>2])break a;l[f>>2]=b,l[b+4>>2]=f,f=a;break n}if(f)break n;t=n;break b}break k}if(l[f>>2])break i;if(l[n+4>>2])break a;l[f>>2]=n,l[n+4>>2]=f}if(l[(a=e)>>2]=t,l[a+4>>2]=n,s){if(l[n>>2])break i;if(l[s+4>>2])break a;l[n>>2]=s,l[s+4>>2]=n,l[e+4>>2]=k}return void(ne=i+96|0)}P(1044,14282,141,35388),M()}P(14782,14282,147,35402),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}P(16334,14282,190,35477),M()}P(16744,14282,191,35477),M()}function ei(e){var r=0;return r=v[e+74|0],k[e+74|0]=r+-1|r,8&(r=l[e>>2])?(l[e>>2]=32|r,-1):(l[e+4>>2]=0,l[e+8>>2]=0,r=l[e+44>>2],l[e+28>>2]=r,l[e+20>>2]=r,l[e+16>>2]=r+l[e+48>>2],0)}function ri(e,r){var a;return(0|(a=on(e)))!=(0|cn(e,1,a,r))?-1:0}function ai(e,r,a,i,f,k){var b,n=0,s=0,t=0,c=0,o=0;ne=b=ne-80|0;e:{r:{a:{i:{f:{k:{b:{n:{if(8&v[34728]){if(c=Bb(104),l[c+96>>2]=-1,l[c+8>>2]=16,l[(n=c)>>2]=0,l[n+4>>2]=0,l[n+76>>2]=0,l[n+80>>2]=0,l[n+68>>2]=-1,l[n+72>>2]=-1,l[n+60>>2]=0,l[n+64>>2]=0,l[n+52>>2]=-1,l[n+56>>2]=-1,l[n+48>>2]=0,l[n+20>>2]=0,l[n+84>>2]=0,l[n+88>>2]=0,Hn(b+72|0,22237),1!=l[8599])break a;if(o=Bb(104),l[(n=o)+76>>2]=0,l[n+80>>2]=0,l[n+68>>2]=-1,l[n+72>>2]=-1,l[n+60>>2]=0,l[n+64>>2]=0,l[n+96>>2]=-1,l[n+8>>2]=2,l[n>>2]=0,l[n+4>>2]=0,l[n+52>>2]=-1,l[n+56>>2]=-1,l[n+48>>2]=0,l[n+84>>2]=0,l[n+88>>2]=0,s=l[r>>2])if(n=l[r+4>>2],o){if(l[s+4>>2])break r;l[o>>2]=s,l[s+4>>2]=o}else o=s;else n=o;if(r=l[b+76>>2],l[b+32>>2]=l[b+72>>2],l[b+36>>2]=r,Gk(b+48|0,7,b+32|0),r=l[b+52>>2],s=l[b+48>>2],t=l[f>>2])if(f=l[f+4>>2],r){if(l[r>>2])break e;if(l[t+4>>2])break r;l[r>>2]=t,l[t+4>>2]=r}else s=t;else f=r;if(1!=l[8593])break a;if(r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=1,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,r)if(f){if(l[f>>2])break e;l[f>>2]=r,l[r+4>>2]=f}else s=r;else r=f;if(f=l[b+76>>2],l[b+24>>2]=l[b+72>>2],l[b+28>>2]=f,Gk(b+40|0,8,b+24|0),t=l[b+40>>2])if(f=l[b+44>>2],r){if(l[r>>2])break e;if(l[t+4>>2])break r;l[r>>2]=t,l[t+4>>2]=r}else s=t;else f=r;if(t=l[k>>2])if(r=l[k+4>>2],f){if(l[f>>2])break e;if(l[t+4>>2])break r;l[f>>2]=t,l[t+4>>2]=f}else s=t;else r=f;if(l[b+56>>2]=s,l[b+60>>2]=r,c){if(r){if(l[r>>2])break e;if(l[c+4>>2])break r;l[r>>2]=c,l[c+4>>2]=r}else l[b+56>>2]=c;l[b+60>>2]=c}if(r=l[a+4>>2],l[b+16>>2]=l[a>>2],l[b+20>>2]=r,r=l[b+60>>2],l[b+8>>2]=l[b+56>>2],l[b+12>>2]=r,Wr(b- -64|0,b+16|0,b+8|0),r=l[b+64>>2])if(f=l[b+68>>2],n){if(l[n>>2])break e;if(l[r+4>>2])break r;l[n>>2]=r,l[r+4>>2]=n}else o=r;else f=n;if(1!=l[8593])break a;if(n=Bb(104),l[(r=n)+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+96>>2]=-1,l[r+8>>2]=1,l[r>>2]=0,l[r+4>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,a=l[i>>2])if(r=l[i+4>>2],n){if(l[a+4>>2])break r;l[n>>2]=a,l[a+4>>2]=n}else n=a;else r=n;if(a=l[b+72>>2])if(s=l[b+76>>2],r){if(l[r>>2])break e;if(l[a+4>>2])break r;l[r>>2]=a,l[a+4>>2]=r}else n=a;else s=r;if(!(8&v[34680]))break n;if(!f)break b;if(r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=14,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+20>>2]=f,l[r+84>>2]=0,l[r+88>>2]=0,r)if(s){if(l[s>>2])break e;l[s>>2]=r,l[r+4>>2]=s}else n=r;else r=s;if(o)if(r){if(l[r>>2])break e;if(l[o+4>>2])break r;l[r>>2]=o,l[o+4>>2]=r}else n=o;else f=r;if(1!=l[8695])break a;if(r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=18,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,l[e>>2]=n,l[e+4>>2]=f,r){if(f){if(l[f>>2])break e;l[f>>2]=r,l[r+4>>2]=f}else l[e>>2]=r;l[e+4>>2]=r}else r=f;if(!c)break k;if(e=l[c+8>>2],!(8&v[8+(e>>>0<41?w(e,24)+34336|0:35320)|0]))break f;if(!r)break i;return l[c+20>>2]=r,void(ne=b+80|0)}P(16334,14282,198,35491),M()}P(16334,14282,190,35477),M()}P(16744,14282,191,35477),M()}P(17097,14282,204,35510),M()}P(17424,14282,205,35510),M()}P(16744,14282,206,35510),M()}P(1044,14282,141,35388),M()}P(25731,14282,238,35660),M()}P(25534,14282,237,35660),M()}function ii(e,r){var a,i,f,k,b=0;return ne=a=ne+-64|0,l[a+20>>2]=r,l[a+16>>2]=e,-8==(0|(b=0|ie(197,a+16|0)))&&(k=0,ne=f=ne-32|0,k=1,(i=0|N(0|(i=e),f+8|0))&&(l[82952]=i,k=0),ne=f+32|0,i=k)?(Pa(a+32|0,e),l[a+4>>2]=r,l[a>>2]=a+32,(e=0|U(195,0|a))>>>0>=4294963201&&(l[82952]=0-e,e=-1)):b>>>0>=4294963201?(l[82952]=0-b,e=-1):e=b,ne=a- -64|0,e}function fi(e,r,a,i){var k,b=0,n=0,s=0,t=0,c=0,o=0;ne=k=ne-16|0;e:{if((0|e)<(0|r))for(;;){if(n=l[(t=312784+(s=e<<2)|0)>>2],l[k+12>>2]=n,(0|(s=l[(o=s+312788|0)>>2]))>=1){if(l[k+8>>2]=l[t+8>>2],b=0|f[a](n,k+8|0,1,i))break e;for(t=t+8|0,c=0;;){if(b=0|f[a](l[k+8>>2],k+12|0,1,i))break e;if(n=0,c)for(;;){if(l[k+4>>2]=l[(n<<2)+t>>2],b=0|f[a](l[k+8>>2],k+4|0,1,i))break e;if(b=0|f[a](l[k+4>>2],k+8|0,1,i))break e;if((0|(n=n+1|0))==(0|c))break}if((0|s)!=(0|(c=c+1|0))){if(n=l[k+12>>2],l[k+8>>2]=l[(c<<2)+t>>2],!(b=0|f[a](n,k+8|0,1,i)))continue;break e}break}s=l[o>>2]}if(!((0|(e=2+(e+s|0)|0))<(0|r)))break}b=0}return ne=k+16|0,b}function ki(e,r,a){var i,f=0,k=0;if(ne=i=ne-32|0,f=l[r>>2])for(;l[f+60>>2]|40!=(32|l[f+8>>2])||(l[i+28>>2]=f,l[i+24>>2]=f,k=l[i+28>>2],l[i+16>>2]=l[i+24>>2],l[i+20>>2]=k,k=l[a+4>>2],l[i+8>>2]=l[a>>2],l[i+12>>2]=k,Bn(i+16|0,i+8|0,4,0)),f=l[f>>2];);k=l[a+4>>2],f=l[a>>2],a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a;e:{r:{if(f){if(r=a){if(l[r>>2])break r;if(l[f+4>>2])break e;l[r>>2]=f,l[f+4>>2]=r}else l[e>>2]=f;l[e+4>>2]=k}return void(ne=i+32|0)}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function bi(e,r,a,i){var f,k=0,b=0,n=0;if(ne=f=ne-720|0,k=l[r+12>>2],l[f+584>>2]=l[r+8>>2],l[f+588>>2]=k,k=l[r+4>>2],l[f+576>>2]=l[r>>2],l[f+580>>2]=k,Be(e,f+576|0,a),nk(f+688|0,e),r=l[f+700>>2],a=l[f+696>>2],l[f+712>>2]=a,l[f+716>>2]=r,l[f+568>>2]=a,l[f+572>>2]=r,r=l[f+692>>2],a=l[f+688>>2],l[f+704>>2]=a,l[f+708>>2]=r,l[f+560>>2]=a,l[f+564>>2]=r,15&v[f+560|0])for(k=l[75261];8&v[329364]&&(r=l[f+716>>2],l[f+552>>2]=l[f+712>>2],l[f+556>>2]=r,r=l[f+708>>2],l[f+544>>2]=l[f+704>>2],l[f+548>>2]=r,5==(15&v[f+544|0]))?(32&v[329364]?(r=l[f+716>>2],l[f+536>>2]=l[f+712>>2],l[f+540>>2]=r,r=l[f+708>>2],l[f+528>>2]=l[f+704>>2],l[f+532>>2]=r,ba(f+528|0,k,2)):(r=l[f+716>>2],l[f+520>>2]=l[f+712>>2],l[f+524>>2]=r,r=l[f+708>>2],l[f+512>>2]=l[f+704>>2],l[f+516>>2]=r,r=Gb(f+512|0),a=l[f+716>>2],l[f+504>>2]=l[f+712>>2],l[f+508>>2]=a,a=l[f+708>>2],l[f+496>>2]=l[f+704>>2],l[f+500>>2]=a,Nb(f+672|0,f+496|0),a=l[f+684>>2],l[f+488>>2]=l[f+680>>2],l[f+492>>2]=a,a=l[f+676>>2],l[f+480>>2]=l[f+672>>2],l[f+484>>2]=a,cn(r,1,vn(f+480|0),k)),r=l[f+716>>2],l[f+472>>2]=l[f+712>>2],l[f+476>>2]=r,r=l[f+708>>2],l[f+464>>2]=l[f+704>>2],l[f+468>>2]=r,zb(f+464|0),a=0):(r=l[f+716>>2],l[f+456>>2]=l[f+712>>2],l[f+460>>2]=r,r=l[f+708>>2],l[f+448>>2]=l[f+704>>2],l[f+452>>2]=r,a=11,2!=(15&v[f+448|0])&&(r=l[f+716>>2],l[f+440>>2]=l[f+712>>2],l[f+444>>2]=r,r=l[f+708>>2],l[f+432>>2]=l[f+704>>2],l[f+436>>2]=r,a=1==(15&v[f+432|0])?11:0),64&v[329365]&&bn(30,k),r=l[f+716>>2],l[f+424>>2]=l[f+712>>2],l[f+428>>2]=r,r=l[f+708>>2],l[f+416>>2]=l[f+704>>2],l[f+420>>2]=r,tb(f+416|0,i)),1024&(r=l[82341])||(bn(10,k),r=l[82341]),2048&r&&jf(k),nk(f+688|0,e),r=l[f+700>>2],b=l[f+696>>2],l[f+712>>2]=b,l[f+716>>2]=r,l[f+408>>2]=b,l[f+412>>2]=r,r=l[f+692>>2],b=l[f+688>>2],l[f+704>>2]=b,l[f+708>>2]=r,l[f+400>>2]=b,l[f+404>>2]=r,15&v[f+400|0];);else a=14;return l[e+112>>2]?(l[82341]=8192|l[82341],function(e,r){var a=0,i=0;ne=a=ne-16|0,i=l[r+132>>2],l[a+8>>2]=l[r+128>>2],l[a+12>>2]=i,i=l[r+124>>2],l[a>>2]=l[r+120>>2],l[a+4>>2]=i,Nb(e,a),ne=a+16|0}(f+688|0,e),r=l[f+700>>2],l[f+392>>2]=l[f+696>>2],l[f+396>>2]=r,r=l[f+692>>2],l[f+384>>2]=l[f+688>>2],l[f+388>>2]=r,a=0,15&v[f+384|0]&&(r=l[f+700>>2],l[f+376>>2]=l[f+696>>2],l[f+380>>2]=r,r=l[f+692>>2],l[f+368>>2]=l[f+688>>2],l[f+372>>2]=r,a=5,4==(15&v[f+368|0])&&(r=l[f+700>>2],l[f+360>>2]=l[f+696>>2],l[f+364>>2]=r,r=l[f+692>>2],l[f+352>>2]=l[f+688>>2],l[f+356>>2]=r,n=Wb(f+352|0),a=g(n)<2147483648?~~n:-2147483648)),r=l[f+700>>2],l[f+344>>2]=l[f+696>>2],l[f+348>>2]=r,r=l[f+692>>2],l[f+336>>2]=l[f+688>>2],l[f+340>>2]=r,zb(f+336|0),function(e,r){var a=0,i=0;ne=a=ne-16|0,i=l[r+148>>2],l[a+8>>2]=l[r+144>>2],l[a+12>>2]=i,i=l[r+140>>2],l[a>>2]=l[r+136>>2],l[a+4>>2]=i,Nb(e,a),ne=a+16|0}(f+656|0,e),e=l[f+668>>2],l[f+328>>2]=l[f+664>>2],l[f+332>>2]=e,e=l[f+660>>2],l[f+320>>2]=l[f+656>>2],l[f+324>>2]=e,5!=(15&v[f+320|0])?(e=l[f+668>>2],l[f+312>>2]=l[f+664>>2],l[f+316>>2]=e,e=l[f+660>>2],l[f+304>>2]=l[f+656>>2],l[f+308>>2]=e,1!=(15&v[f+304|0])&&(e=l[f+668>>2],l[f+296>>2]=l[f+664>>2],l[f+300>>2]=e,e=l[f+660>>2],l[f+288>>2]=l[f+656>>2],l[f+292>>2]=e,15&v[f+288|0]&&(e=l[f+668>>2],l[f+280>>2]=l[f+664>>2],l[f+284>>2]=e,e=l[f+660>>2],l[f+272>>2]=l[f+656>>2],l[f+276>>2]=e,Nb(f+624|0,f+272|0),e=l[f+636>>2],l[f+264>>2]=l[f+632>>2],l[f+268>>2]=e,e=l[f+628>>2],l[f+256>>2]=l[f+624>>2],l[f+260>>2]=e,jk(f+640|0,f+256|0,0),e=l[f+652>>2],r=l[f+648>>2],l[f+664>>2]=r,l[f+668>>2]=e,l[f+248>>2]=r,l[f+252>>2]=e,e=l[f+644>>2],r=l[f+640>>2],l[f+656>>2]=r,l[f+660>>2]=e,l[f+240>>2]=r,l[f+244>>2]=e,l[f+224>>2]=Gb(f+240|0),Sn(l[75398],33856,f+224|0)))):(e=l[f+668>>2],l[f+216>>2]=l[f+664>>2],l[f+220>>2]=e,e=l[f+660>>2],l[f+208>>2]=l[f+656>>2],l[f+212>>2]=e,ri(Gb(f+208|0),l[75398])),jf(l[75398]),e=l[f+668>>2],l[f+200>>2]=l[f+664>>2],l[f+204>>2]=e,e=l[f+660>>2],l[f+192>>2]=l[f+656>>2],l[f+196>>2]=e,zb(f+192|0)):(r=l[f+716>>2],l[f+184>>2]=l[f+712>>2],l[f+188>>2]=r,r=l[f+708>>2],l[f+176>>2]=l[f+704>>2],l[f+180>>2]=r,Nb(f+608|0,f+176|0),r=l[f+620>>2],l[f+168>>2]=l[f+616>>2],l[f+172>>2]=r,r=l[f+612>>2],l[f+160>>2]=l[f+608>>2],l[f+164>>2]=r,rb(f+160|0)&&(r=l[f+716>>2],l[f+152>>2]=l[f+712>>2],l[f+156>>2]=r,r=l[f+708>>2],l[f+144>>2]=l[f+704>>2],l[f+148>>2]=r,Nb(f+592|0,f+144|0),r=l[f+604>>2],l[f+136>>2]=l[f+600>>2],l[f+140>>2]=r,r=l[f+596>>2],l[f+128>>2]=l[f+592>>2],l[f+132>>2]=r,Ck(f+688|0,f+128|0),function(e,r){var a,i=0,f=0;if(ne=a=ne+-64|0,l[a+60>>2]=0,l[a+56>>2]=0,l[a+60>>2]=l[r+168>>2],l[a+56>>2]=l[r+172>>2],1==l[a+60>>2])return r=l[a+56>>2],f=l[4+(i=r+4160|0)>>2],l[a+32>>2]=l[i>>2],l[a+36>>2]=f,i=l[r+4156>>2],l[a+24>>2]=l[r+4152>>2],l[a+28>>2]=i,5==(15&v[a+24|0])?(f=l[12+(i=r+4152|0)>>2],l[a+16>>2]=l[i+8>>2],l[a+20>>2]=f,f=l[i+4>>2],l[a+8>>2]=l[i>>2],l[a+12>>2]=f,i=Gb(a+8|0),l[a+4>>2]=l[r+4168>>2],l[a>>2]=i,Yb(a+40|0,18324,a),r=l[a+52>>2],l[e+8>>2]=l[a+48>>2],l[e+12>>2]=r,r=l[a+44>>2],l[e>>2]=l[a+40>>2],l[e+4>>2]=r):jb(e,17941),void(ne=a- -64|0);P(17287,14553,371,45398),M()}(f+656|0,e),e=l[f+700>>2],l[f+120>>2]=l[f+696>>2],l[f+124>>2]=e,e=l[f+692>>2],l[f+112>>2]=l[f+688>>2],l[f+116>>2]=e,a=5,r=34027,5!=(15&v[f+112|0])&&(e=l[f+700>>2],l[f+104>>2]=l[f+696>>2],l[f+108>>2]=e,e=l[f+692>>2],l[f+96>>2]=l[f+688>>2],l[f+100>>2]=e,jk(f+640|0,f+96|0,0),e=l[f+652>>2],l[f+696>>2]=l[f+648>>2],l[f+700>>2]=e,e=l[f+644>>2],l[f+688>>2]=l[f+640>>2],l[f+692>>2]=e,r=34198),e=l[f+668>>2],l[f+88>>2]=l[f+664>>2],l[f+92>>2]=e,e=l[f+660>>2],l[f+80>>2]=l[f+656>>2],l[f+84>>2]=e,e=Gb(f+80|0),i=l[f+700>>2],l[f+72>>2]=l[f+696>>2],l[f+76>>2]=i,i=l[f+692>>2],l[f+64>>2]=l[f+688>>2],l[f+68>>2]=i,l[f+52>>2]=Gb(f- -64|0),l[f+48>>2]=e,Sn(l[75398],r,f+48|0),e=l[f+668>>2],l[f+40>>2]=l[f+664>>2],l[f+44>>2]=e,e=l[f+660>>2],l[f+32>>2]=l[f+656>>2],l[f+36>>2]=e,zb(f+32|0),e=l[f+700>>2],l[f+24>>2]=l[f+696>>2],l[f+28>>2]=e,e=l[f+692>>2],l[f+16>>2]=l[f+688>>2],l[f+20>>2]=e,zb(f+16|0))),e=l[f+716>>2],l[f+8>>2]=l[f+712>>2],l[f+12>>2]=e,e=l[f+708>>2],l[f>>2]=l[f+704>>2],l[f+4>>2]=e,zb(f),ne=f+720|0,a}function ni(e){var r=0,a=0;return((0|e)<=7||(r=1,(0|e)<16||(r=2,(0|e)<32||(r=3,(0|e)<64||(r=4,(0|e)<128||(r=5,(0|e)<256||(r=6,(0|e)<512||(r=7,(0|e)<1024||(r=8,(0|e)<2048||(r=9,(0|e)<4096||(r=10,(0|e)<8192||(r=11,(0|e)<16384||(r=12,(0|e)<32768||(r=13,(0|e)<65536||(r=14,(0|e)<131072||(r=15,(0|e)<262144||(r=16,(0|e)<524288||(r=17,(0|e)<1048576||(r=18,(0|e)<2097152||(r=19,(0|e)<4194304||(r=20,(0|e)<8388608||(r=21,(0|e)<16777216||(r=22,(0|e)<33554432||(r=23,(0|e)<67108864||(r=24,(0|e)<134217728||(r=25,(0|e)<268435456||(r=26,(0|e)<536870912||(r=27,a=-1,!((0|e)>=1073741824)))))))))))))))))))))))))))))&&(a=l[60784+(r<<2)>>2]),a}function si(e,r){return 1}function ti(e,r){return(e|=0)>>>0<(r|=0)>>>0&&(r=1,10==v[0|e])||(r=0),0|r}function ci(e,r,a){var i=0;if(r>>>0<a>>>0)for(;i=i+1|0,(r=(0|f[l[e>>2]](r))+r|0)>>>0<a>>>0;);return i}function oi(e,r,a,i,k,b,n,s){var t,c,o,u,d,h,m=0,w=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,M=0;if(ne=t=ne-32|0,w=i,p=l[e+372>>2])if(m=i+p|0,g=l[e+56>>2],1!=l[g+8>>2]){if(!((0|p)<1||(w=(g=0|f[l[g>>2]](i))+i|0,(0|g)>=(0|p))))for(;(w=(0|f[l[l[e+56>>2]>>2]](w))+w|0)>>>0<m>>>0;);}else w=m;for(c=k+-1|0;;){e:{r:{a:{i:if(!((m=l[e+76>>2]+-1|0)>>>0>4)){f:{k:switch(m-1|0){default:if((_=(m=a-((E=l[e+104>>2])+(-1^(g=l[e+100>>2]))|0)|0)>>>0>k>>>0?k:m)>>>0<=w>>>0)break r;for(D=l[e+56>>2];;){if(p=w,m=g,v[0|w]==v[0|m]){for(;(m=m+1|0)>>>0<E>>>0&&(p=p+1|0,v[0|m]==v[0|p]););if((0|m)==(0|E))break i}if(!((w=(0|f[l[D>>2]](w))+w|0)>>>0<_>>>0))break}break r;case 2:if((y=(m=a-((E=l[e+104>>2])+(-1^(g=l[e+100>>2]))|0)|0)>>>0>k>>>0?k:m)>>>0<=w>>>0)break r;for(F=l[e+68>>2],_=l[e+56>>2],m=w;;){if(l[t+28>>2]=m,(p=g)>>>0>=E>>>0)break i;for(;;){b:{if((0|(D=0|f[l[_+32>>2]](F,t+28|0,a,t)))>=1){if(pn(p,t,D))break b;p=p+D|0}if(p>>>0<E>>>0)continue;break a}break}if(!((m=(0|f[l[_>>2]](m))+m|0)>>>0<y>>>0))break}break r;case 0:if(E=(g=(p=(m=l[e+104>>2])-(_=l[e+100>>2])|0)+c|0)>>>0>a>>>0?a:g,g=m+-1|0,p=(w+p|0)-1|0,D=l[e+364>>2]){if(p>>>0>=E>>>0)break r;for(y=v[0|g];;){if(w=g,(0|(F=v[0|(m=p)]))==(0|y))for(;;){if((0|w)==(0|_))break a;if(w=w+-1|0,v[0|(m=m+-1|0)]!=v[0|w])break}if(!((p=l[D+(F<<2)>>2]+p|0)>>>0<E>>>0))break}break r}if(p>>>0>=E>>>0)break r;for(D=v[0|g];;){if(w=g,(0|(y=v[0|(m=p)]))==(0|D))for(;;){if((0|w)==(0|_))break a;if(w=w+-1|0,v[0|(m=m+-1|0)]!=v[0|w])break}if(!((p=v[108+(e+y|0)|0]+p|0)>>>0<E>>>0))break}break r;case 1:if(E=k+(_=(g=l[e+104>>2]+-1|0)-(D=l[e+100>>2])|0)>>>0>a>>>0?a-_|0:k,l[e+364>>2]){if(E>>>0>w>>>0)break f;break r}if(E>>>0<=w>>>0)break r;for(;;){if((0|(y=v[0|(w=_+(m=w)|0)]))==v[0|(p=g)])for(;;){if((0|p)==(0|D))break a;if(p=p+-1|0,v[0|(w=w+-1|0)]!=v[0|p])break}for(p=v[108+(e+y|0)|0],w=m;y=(w=(0|f[l[l[e+56>>2]>>2]](w))+w|0)>>>0>=E>>>0,(w-m|0)<(0|p)&&!y;);if(y)break}break r;case 3:}if(w>>>0>=k>>>0)break r;for(m=l[e+56>>2];;){if(v[108+(v[0|w]+e|0)|0])break i;if(!((w=(0|f[l[m>>2]](w))+w|0)>>>0<k>>>0))break}break r}for(;;){if((0|(y=v[0|(w=_+(m=w)|0)]))==v[0|(p=g)])for(;;){if((0|p)==(0|D))break a;if(p=p+-1|0,v[0|(w=w+-1|0)]!=v[0|p])break}for(p=l[l[e+364>>2]+(y<<2)>>2],w=m;y=(w=(0|f[l[l[e+56>>2]>>2]](w))+w|0)>>>0>=E>>>0,(w-m|0)<(0|p)&&!y;);if(y)break}break r}m=w}if(!(!m|m>>>0>=k>>>0)){if(m-l[e+372>>2]>>>0<i>>>0)break e;w=l[e+96>>2];a:if(32==(0|w))if((0|a)!=(0|m)){if(!f[l[l[e+56>>2]+16>>2]](m,a))break e}else m=a;else{if(2!=(0|w))break a;if((0|r)==(0|m)){m=r;break a}if(w=l[e+56>>2],w=m>>>0>(p=S||r)>>>0?0|f[l[w+56>>2]](p,m+-1|0):0,!f[l[l[e+56>>2]+16>>2]](w,a))break e}a=l[e+376>>2];a:if((k=a+1|0)>>>0<=1){if(k-1)break a;if(l[b>>2]=m,!s)break a;if(a=l[e+56>>2],m>>>0>i>>>0){r=m>>>0>i>>>0?0|f[l[a+56>>2]](i,m+-1|0):0,l[s>>2]=r;break a}r=m>>>0>(r=S||r)>>>0?0|f[l[a+56>>2]](r,m+-1|0):0,l[s>>2]=r}else if(a=m-a|0,l[b>>2]=a,a>>>0>i>>>0){if(o=l[e+56>>2],u=i,d=a,h=s,r=(u=0|f[l[o+56>>2]](u,d))>>>0<d>>>0?(h&&(l[h>>2]=u),(0|f[l[o>>2]](u))+u|0):(h&&(l[h>>2]=0),u),l[b>>2]=r,l[s>>2]|!s)break a;a=l[e+56>>2],r=r>>>0>(i=S||i)>>>0?0|f[l[a+56>>2]](i,r+-1|0):0,l[s>>2]=r}else s&&(i=l[e+56>>2],r=a>>>0>(r=S||r)>>>0?0|f[l[i+56>>2]](r,a+-1|0):0,l[s>>2]=r);l[n>>2]=m-l[e+372>>2],M=1}}return ne=t+32|0,M}w=(0|f[l[l[e+56>>2]>>2]](m))+m|0,S=m}}function ui(e,r,a,i,f){var k=0,b=0,n=0,s=0,t=0,c=0,o=0;s=1;e:if(!((b=l[r>>2])>>>0>=a>>>0)){for(;;){r:if(33280==(0|(k=l[b>>2]))){if(l[b+4>>2]==l[e>>2]){l[e+8>>2]=l[b+8>>2]-i,l[r>>2]=b,s=0;break e}}else{if(256!=(0|k))break r;if((0|(k=l[b+4>>2]))>31|!(l[f+32>>2]>>>k&1))break r;if(s=-5,!(n=Cb(24)))break e;if(l[n+12>>2]=0,l[n+16>>2]=0,l[n+20>>2]=0,l[n+4>>2]=-1,l[n+8>>2]=-1,l[n>>2]=k,l[n+4>>2]=l[b+8>>2]-i,(0|(k=l[e+16>>2]))>=(0|(t=l[e+12>>2]))){if(o=e,(k=l[e+20>>2])?(c=t<<1,k=Ub(k,t<<3)):(c=8,k=Cb(32)),l[o+20>>2]=k,!k)break e;if(!((0|(t=l[e+12>>2]))>=(0|c))&&(l[k+(t<<2)>>2]=0,(0|(s=t+1|0))!=(0|c)&&(l[k+(s<<2)>>2]=0,(0|c)!=(0|(k=t+2|0)))))for(;l[l[e+20>>2]+(k<<2)>>2]=0,(0|c)!=(0|(k=k+1|0)););l[e+12>>2]=c,k=l[e+16>>2]}if(l[l[e+20>>2]+(k<<2)>>2]=n,l[e+16>>2]=k+1,l[r>>2]=b+20,s=ui(n,r,a,i,f))break e;b=l[r>>2],l[n+8>>2]=l[b+8>>2]-i}if(!((b=b+20|0)>>>0<a>>>0))break}return 1}return s}function li(e,r){var a=0;e&&(l[e>>2]>=1&&((a=l[e+8>>2])&&Lb(a),(a=l[e+12>>2])&&Lb(a),l[e>>2]=0),(a=l[e+16>>2])&&(nf(a),l[e+16>>2]=0),r&&Lb(e))}function vi(e,r,a){var i=0,b=0,n=0,s=0,t=0,c=0;e:if(l[e+12>>2]>1||(e=0|f[l[e+24>>2]](r),r>>>0>255||!((0|e)<2))){if(!(e=l[a+40>>2]))break e;if(s=(i=l[e>>2])+4|0,e=0,i=l[i>>2])for(n=i;t=(b=e+n|0)>>>1,(e=(b=h[(b<<2|4)+s>>2]<r>>>0)?t+1|0:e)>>>0<(n=b?n:t)>>>0;);if(e>>>0>=i>>>0)break e;c=h[(e<<3)+s>>2]<=r>>>0}else c=v[8+((r>>>3)+a|0)|0]>>>(7&r)&1;return 1&k[a+4|0]^c}function di(e,r,a,i){var b,n,s,t,c,o,u=0,d=0,m=0,w=0,p=0,g=0;ne=n=ne-32|0,b=Jf(r,a);e:if(b){r:{a:{i:if(u=Cb(d=(m=l[b+8>>2])-(r=l[b+4>>2])<<1)){if(l[n+28>>2]=r,m>>>0<=r>>>0){r=u;break a}for(p=u+d|0,r=u;;){if(a=0,(0|(g=0|f[l[l[i+56>>2]+32>>2]](l[i+68>>2],n+28|0,m,n)))>=1)for(;;){if(r>>>0>=p>>>0){if(!(u=Ub(u,w=d<<1)))break i;p=u+w|0,r=u+d|0,d=w}if(k[0|r]=v[a+n|0],r=r+1|0,(0|g)==(0|(a=a+1|0)))break}if(!(h[n+28>>2]<m>>>0))break}break a}r=-5;break r}if(t=u,c=r,o=0,l[(s=b)+16>>2]&&(!(o=l[s+4>>2])|(0|o)==(s+20|0)||Lb(o)),l[s+12>>2]=0,l[s+16>>2]=0,o=s+20|0,l[s+8>>2]=o,l[s+4>>2]=o,r=qk(s,t,c),Lb(u),!r){l[b+12>>2]=6|l[b+12>>2],l[e>>2]=b,r=0;break e}}kn(b)}else r=-5;return ne=n+32|0,r}function hi(e,r,a){var i,f,b,n,s,t,c,o=0,u=0,d=0;if(ne=i=ne-96|0,s=1&(n=l[r+4>>2]),t=l[r+40>>2],f=l[e+40>>2],u=c=e+8|0,b=1&l[e+4>>2]){for(;k[(i+48|0)+o|0]=-1^v[8+(e+o|0)|0],32!=(0|(o=o+1|0)););u=i+48|0}if(s){for(o=0;k[(i+16|0)+o|0]=-1^v[8+(r+o|0)|0],32!=(0|(o=o+1|0)););r=i+16|0}else r=r+8|0;for(o=0;k[0|(d=o+u|0)]=v[0|d]&v[r+o|0],32!=(0|(o=o+1|0)););if((0|u)!=(0|c))for(o=0;k[8+(e+o|0)|0]=v[o+u|0],32!=(0|(o=o+1|0)););if(b)for(o=0;k[8+(r=e+o|0)|0]=-1^v[r+8|0],32!=(0|(o=o+1|0)););e:{if(1!=l[a+8>>2]){r:{if(b&n)o=mi(a,f,0,t,0,i+92|0);else if(!((o=wi(f,b,t,s,i+92|0))|!b)){if(o=Gf(a,r=l[i+92>>2],i+12|0),r&&((a=l[r>>2])&&Lb(a),Lb(r)),o)break e;o=l[i+12>>2],l[i+92>>2]=o;break r}if(o)break e;o=l[i+92>>2]}l[e+40>>2]=o,f&&((e=l[f>>2])&&Lb(e),Lb(f))}o=0}return ne=i+96|0,o}function mi(e,r,a,i,f,k){var b=0,n=0;l[k>>2]=0;e:{r:{if(!(r|i)){if(!(a|f))break r;break e}if(b=i?a:f,f=i?f:a,a=i||r,!i||!r){if(b)break e;if(!f){if(e=Cb(12),l[k>>2]=e,!e)return-5;if(b=of(e,l[a+8>>2]))break r;return r=l[a+4>>2],l[e+4>>2]=r,qb(l[e>>2],l[a>>2],r),0}return Gf(e,a,k)}if(i=b?r:a,a=l[(b?a:r)>>2],r=l[a>>2],(n=b?f:0)|(b||f)){if(!n&&(b=Gf(e,i,k)))break r}else{if(e=Cb(12),l[k>>2]=e,!e)return-5;if(b=of(e,l[i+8>>2]))break r;f=l[i+4>>2],l[e+4>>2]=f,qb(l[e>>2],l[i>>2],f)}if(!r)return 0;for(e=a+4|0,i=0;;){if(b=Fn(k,l[(a=i<<3)+e>>2],l[e+(4|a)>>2]))break r;if((0|r)==(0|(i=i+1|0)))break}return 0}return b}return Fn(k,(l[e+12>>2]<2)<<7,-1)}function wi(e,r,a,i,f){var k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0;l[f>>2]=0;e:{r:if(e)if(a){if(n=(k=l[(r?e:a)>>2])+4|0,s=(e=l[(r?a:e)>>2])+4|0,t=l[k>>2],c=l[e>>2],!(!(e=!r|!i)|(r||i))){if(!c)break r;for(;;){a:if(t)for(e=l[(r=b<<3)+s>>2],a=l[(4|r)+s>>2],r=0;;){if((i=l[(k=r<<3)+n>>2])>>>0>a>>>0)break a;if((k=l[(4|k)+n>>2])>>>0>=e>>>0&&(k=Fn(f,e>>>0<i>>>0?i:e,a>>>0>k>>>0?k:a)))break e;if((0|t)==(0|(r=r+1|0)))break}if(k=0,(0|c)==(0|(b=b+1|0)))break}break e}if(k=0,!c|1^e)break e;for(u=(0|t)<1;;){r=l[(e=b<<3)+s>>2],i=l[(4|e)+s>>2],e=0;a:if(!u)for(;;){o=l[(4|(a=e<<3))+n>>2],a=l[a+n>>2];i:{f:{k:{if(a>>>0<r>>>0){if(o>>>0>=r>>>0)break k;break i}if(a>>>0>i>>>0){r=a;break f}if(a=a+-1|0,o>>>0>=i>>>0){i=a;break f}if(!(r>>>0>a>>>0)&&(k=Fn(f,r,a)))break e}r=o+1|0}if(r>>>0>i>>>0)break a}if((0|t)==(0|(e=e+1|0)))break}if(r>>>0<=i>>>0&&(k=Fn(f,r,i)))break e;if((0|c)==(0|(b=b+1|0)))break}}else{if(!i)break e;if(r=Cb(12),l[f>>2]=r,!r)return-5;if(k=of(r,l[e+8>>2]))break e;a=l[e+4>>2],l[r+4>>2]=a,qb(l[r>>2],l[e>>2],a)}else{if(!r|!a)break e;if(e=Cb(12),l[f>>2]=e,!e)return-5;if(k=of(e,l[a+8>>2]))break e;r=l[a+4>>2],l[e+4>>2]=r,qb(l[e>>2],l[a>>2],r)}k=0}return k}function pi(e,r,a,i,b,n){var s,t=0,c=0,o=0,d=0,m=0,p=0,g=0,y=0,E=0,_=0,D=0;ne=s=ne-288|0,l[e>>2]=0;e:{r:{a:{i:{f:{k:{b:{n:{s:{t:{c:{o:{u:{l:{v:{d:{h:{m:{w:{p:{g:{y:{E:{_:{D:{S:{F:{M:{A:{x:if((0|(t=l[r>>2]))!=(0|a)){if(p=-11,t>>>0>18)break e;switch(t-1|0){case 1:break e;case 0:break v;case 2:break d;case 14:break h;case 3:break m;case 16:break w;case 5:break p;case 17:break g;case 15:break y;case 4:break E;case 11:break _;case 6:break D;case 7:break S;case 8:break F;case 9:case 10:break M;case 13:break A;default:break x}}r=e,(e=Cb(44))?(l[e>>2]=0,l[e+12>>2]=0,l[e+16>>2]=0,a=e+20|0,l[e+8>>2]=a,l[e+4>>2]=a):e=0,l[r>>2]=e,p=t;break e}if(y=l[n+8>>2],t=l[i>>2],l[s+276>>2]=t,l[e>>2]=0,o=-117,t>>>0>=b>>>0)break k;if(c=l[n>>2],63!=(0|f[l[y+20>>2]](t,b))|!(2&v[l[n+12>>2]+4|0]))break u;if(t=(0|f[l[y>>2]](t))+t|0,l[s+276>>2]=t,o=-118,t>>>0>=b>>>0)break k;if(m=0|f[l[y+20>>2]](t,b),t=(0|f[l[y>>2]](t))+t|0,l[s+276>>2]=t,o=-119,(d=m+-33|0)>>>0>87)break k;A:{x:{P:{T:{R:switch(d-1|0){case 27:(t=Cb(44))&&(l[t+8>>2]=0,l[t+12>>2]=-1,l[t>>2]=7,l[t+4>>2]=1024),l[e>>2]=t;break t;default:(t=Cb(44))&&(l[t+8>>2]=0,l[t+12>>2]=-1,l[t>>2]=7,l[t+4>>2]=2048),l[e>>2]=t;break t;case 28:(t=Cb(44))&&(l[t+8>>2]=4,l[t>>2]=6,l[t+4>>2]=0,l[t+40>>2]=0,l[t+20>>2]=0,l[t+24>>2]=-1,l[t+12>>2]=0,l[t+16>>2]=0),l[e>>2]=t;break t;case 5:if(!(128&v[l[n+12>>2]+4|0]))break k;c=39;break T;case 11:case 71:case 75:case 81:case 86:break x;case 30:break P;case 26:break R;case 0:case 1:case 2:case 3:case 4:case 6:case 7:case 8:case 9:case 10:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 25:case 29:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:case 72:case 73:case 74:case 76:case 77:case 78:case 79:case 80:case 82:case 83:case 84:case 85:break k;case 24:break b}if(o=-117,t>>>0>=b>>>0)break k;c=0|f[l[y+20>>2]](t,b),l[s+276>>2]=(0|f[l[y>>2]](t))+t;R:{if(33!=(0|c)){if(61!=(0|c))break R;(t=Cb(44))&&(l[t+8>>2]=0,l[t+12>>2]=-1,l[t>>2]=7,l[t+4>>2]=4096),l[e>>2]=t;break t}(t=Cb(44))&&(l[t+8>>2]=0,l[t+12>>2]=-1,l[t>>2]=7,l[t+4>>2]=8192),l[e>>2]=t;break t}if(o=-119,!(128&v[l[n+12>>2]+4|0]))break k;l[s+276>>2]=t,c=60}m=t;break o}if(!(1024&(c=l[l[n+12>>2]+4>>2])))break k;if(128&c){if(c=0|f[l[y+20>>2]](t,b),m=(0|f[l[y>>2]](t))+t|0,l[s+276>>2]=m,g=1,39==(0|c)|60==(0|c))break o;l[s+276>>2]=t}if(c=l[n>>2],!(t=Cb(44)))break A;l[t>>2]=6,l[t+4>>2]=0,l[t+40>>2]=0,l[t+20>>2]=0,l[t+24>>2]=-1,l[t+8>>2]=1,l[t+12>>2]=0,l[t+16>>2]=c,l[e>>2]=t,o=-210;P:{T:{if((0|(c=l[n+60>>2]))<=32766){if(t=c+1|0,(0|c)<7)break P;if((0|(c=l[n+68>>2]))>(0|t))break P;if((t=l[n+104>>2])?(g=Ub(t,c<<3),c<<=1):(t=g=Cb(64),c=l[n+100>>2],l[t+24>>2]=l[n+96>>2],l[t+28>>2]=c,t=l[n+92>>2],l[g+16>>2]=l[n+88>>2],l[g+20>>2]=t,t=l[n+84>>2],l[g+8>>2]=l[n+80>>2],l[g+12>>2]=t,t=l[n+76>>2],l[g>>2]=l[n+72>>2],l[g+4>>2]=t,c=16),g)break T;o=-5}l[s+280>>2]=o;break k}(0|(t=(o=l[n+60>>2])+1|0))<(0|c)&&wn(4+((o<<2)+g|0)|0,0,c+(-1^o)<<2),l[n+68>>2]=c,l[n+104>>2]=g}if(l[n+60>>2]=t,l[s+280>>2]=t,(0|t)<0){o=t;break k}if(o=-222,(0|t)>31)break k;l[l[e>>2]+12>>2]=t,l[n+16>>2]=l[n+16>>2]|1<<t;break c}for(g=l[s+276>>2];;){x:{P:{T:{if((d=m+-105|0)>>>0>15){if((d=m+-41|0)>>>0>17)break P;E=1;R:switch(d-1|0){default:if(l[s+276>>2]=g,o=Cb(44)){l[o>>2]=6,l[o+4>>2]=0,l[o+40>>2]=0,l[o+20>>2]=0,l[o+24>>2]=-1,l[o+8>>2]=2,l[o+12>>2]=0,l[o+16>>2]=c,l[e>>2]=o,l[i>>2]=t,o=2;break k}l[e>>2]=0,o=-5;break k;case 0:case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break P;case 3:break T;case 16:}if(l[s+276>>2]=g,t=l[n>>2],l[n>>2]=c,(0|(o=An(r,s+276|0,b,n)))<0)break k;if(o=lf(s+16|0,r,15,s+276|0,b,n),l[n>>2]=t,(0|o)<=-1){kn(l[s+16>>2]);break k}if(t=Cb(44)){l[t>>2]=6,l[t+4>>2]=0,o=0,l[t+40>>2]=0,l[t+24>>2]=-1,l[t+8>>2]=2,l[t+12>>2]=0,l[t+16>>2]=c,l[e>>2]=t,l[t+20>>2]=l[s+16>>2],l[i>>2]=l[s+276>>2];break k}l[e>>2]=0,o=-5;break k}R:{O:{I:{z:{N:switch(d-1|0){case 3:if(4&(d=l[l[n+12>>2]+4>>2])){if(d=-9&c,!E)break R;c|=8;break T}if(!(8&d))break P;if(!E)break z;c&=-5;break T;case 0:case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 10:case 11:case 12:case 13:break P;case 14:break O;case 9:break N;default:break I}if(!(4&v[l[n+12>>2]+4|0]))break P;if(E){c&=-5;break T}}d=4|c;break R}if(E){c&=-2;break T}d=1|c;break R}if(E){c&=-3;break T}d=2|c}c=d,E=0}if(t>>>0<b>>>0)break x;o=-118}l[s+276>>2]=g;break k}m=0|f[l[y+20>>2]](t,b),t=g=(0|f[l[y>>2]](t))+t|0}}l[e>>2]=0,o=-5;break k}if(!(1&(a=l[l[n+12>>2]+8>>2])))break d;if(p=-113,2&a)break e;t=e,(a=Cb(44))?(l[a>>2]=0,l[a+12>>2]=0,l[a+16>>2]=0,c=a+20|0,l[a+8>>2]=c,l[a+4>>2]=c):a=0,l[t>>2]=a;break i}t=l[r+16>>2],(a=Cb(44))&&(l[a+8>>2]=0,l[a+12>>2]=-1,l[a+4>>2]=t,l[a>>2]=7),l[e>>2]=a;break f}if(!((0|(t=l[r+24>>2]))>-1||(0|(t=1+(l[n+60>>2]+t|0)|0))>=1)){p=-208;break e}if(c=l[r+20>>2],d=l[r+16>>2],a=Cb(44)){l[a+20>>2]=0,l[a>>2]=10,l[a+4>>2]=0,l[a+16>>2]=c,l[a+12>>2]=d,l[a+8>>2]=t,l[e>>2]=a,l[n+52>>2]=l[n+52>>2]+1;break i}l[e>>2]=0;break r}o=l[r+16>>2],t=l[r+24>>2],(0|o)>=2||(t=r+20|0),a=l[r+36>>2],d=l[r+32>>2],m=l[r+28>>2];D:{S:{F:{if(c=Cb(44)){if(l[c+36>>2]=0,l[c+8>>2]=o,l[c>>2]=4,l[c+4>>2]=0,m&&(l[c+4>>2]=2048,g=2048),d&&(l[c+40>>2]=a,g|=8192,l[c+4>>2]=g),(0|o)<1)break S;for(d=n+72|0,m=l[n+60>>2],a=0;;){if((0|(y=l[t+(a<<2)>>2]))>(0|m)||(E=y<<2,y=l[n+104>>2],l[E+(y||d)>>2])){if((0|o)!=(0|(a=a+1|0)))continue}else l[c+4>>2]=128|g;break}if((0|o)<7)break D;if(a=Cb(o<<=2))break F;kn(c)}l[e>>2]=0;break r}l[c+36>>2]=a,qb(a,t,o)}l[e>>2]=c,o=0;break i}qb(c+12|0,t,o<<2),l[e>>2]=c,o=0;break i}if(t=Cb(44)){if(l[t>>2]=3,l[e>>2]=t,!(a=Cb(44)))break r;l[a+24>>2]=0,l[a+28>>2]=0,l[a+20>>2]=1,l[a+12>>2]=0,l[a+16>>2]=-1,l[a>>2]=5,l[a+4>>2]=0,l[a+8>>2]=t,l[a+32>>2]=0,l[a+36>>2]=0,l[e>>2]=a;break i}l[e>>2]=0;break r}if(a=Cb(44)){l[a>>2]=3,l[e>>2]=a;break i}l[e>>2]=0;break r}if(p=function e(r,a,i,b,n){var s,t=0,c=0,o=0,d=0,m=0,w=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,M=0,A=0;ne=s=ne-496|0,l[r>>2]=0,t=l[n+108>>2]+1|0,l[n+108>>2]=t,o=-16;y:if(!(t>>>0>h[78162])){t=2,o=Nn(a,i,b,n);E:{if(2==(0|o)){if(l[a+4>>2]|94!=l[a+16>>2])break E;F=1,o=Nn(a,i,b,n)}if((0|o)<0)break y;if(19==(0|o)){if(o=-102,(t=l[i>>2])>>>0>=(d=l[n+36>>2])>>>0)break y;for(g=l[n+8>>2];;){_:{if(c)c=0;else{if(m=0|f[l[g+20>>2]](t,d),c=0|f[l[g>>2]](t),93==(0|m))break _;t=t+c|0,c=(0|m)==l[l[n+12>>2]+16>>2]}if(t>>>0<d>>>0)continue;break y}break}9==l[78160]|18874368!=(18874368&l[l[n+12>>2]+8>>2])||(m=l[n+36>>2],c=l[n+32>>2],t=l[n+8>>2],l[s+96>>2]=14208,nb(s+176|0,t,c,m,15903,s+96|0),f[l[78160]](s+176|0)),t=2,l[a>>2]=2}else t=o}E:{_:{if(m=Cb(44)){l[m+4>>2]=0,l[m+8>>2]=0,l[m>>2]=1,l[m+12>>2]=0,l[m+16>>2]=0,l[m+20>>2]=0,l[m+24>>2]=0,l[m+28>>2]=0,l[m+32>>2]=0,l[m+36>>2]=0,l[m+40>>2]=0,l[r>>2]=m,l[s+116>>2]=3,l[s+168>>2]=l[i>>2],M=s+183|0,g=0;D:for(;;)for(c=t;;){if(o=-11,c>>>0>23)break E;t=-103;S:{F:{M:{A:{x:{P:{T:{R:{O:{I:{z:{N:{j:{U:{B:{C:{L:switch(c-1|0){case 0:if(p=l[n+8>>2],1!=(0|(c=l[p+8>>2]))&&(d=l[a+8>>2])){if(k[s+176|0]=l[a+16>>2],t=1,w=l[s+168>>2],(0|c)<2)c=0;else{H:{for(;;){if((0|(o=Nn(a,s+168|0,b,n)))<0)break E;if(c=1,1!=(0|o)|(0|d)!=l[a+8>>2])break H;if(k[(s+176|0)+t|0]=l[a+16>>2],!((0|(t=t+1|0))<l[l[n+8>>2]+8>>2]))break}c=0}p=l[n+8>>2]}if(o=-206,(0|t)<l[p+12>>2])break E;if((0|t)<(0|(d=0|f[l[p>>2]](s+176|0))))break E;H:{if((0|t)>(0|d)){if(l[s+168>>2]=w,c=0,t=1,(0|d)<2)break H;for(;Nn(a,s+168|0,b,n),(0|d)!=(0|(t=t+1|0)););t=d}if(1!=(0|t)){o=0|f[l[l[n+8>>2]+20>>2]](s+176|0,M),d=1,p=1;break M}}o=v[s+176|0],p=1,d=0;break M}o=l[a+16>>2],p=1,d=0,c=0;break M;case 3:o=l[a+16>>2],c=0,p=1;break x;case 20:if(w=l[n+8>>2],c=0,(t=l[s+168>>2])>>>0>=b>>>0||94==(0|f[l[w+20>>2]](t,b))&&(t=(0|f[l[w>>2]](t))+t|0,c=1),(0|ci(w,t,b))<7)break O;if(!Bk(w,t,b,16301,5)){d=58880;break R}if(!Bk(w,t,b,16700,5)){d=58892;break R}if(!Bk(w,t,b,17064,5)){d=58904;break R}if(!Bk(w,t,b,17392,5)){d=58916;break R}if(!Bk(w,t,b,17691,5)){d=58928;break R}if(!Bk(w,t,b,18044,5)){d=58940;break R}if(!Bk(w,t,b,18437,5)){d=58952;break R}if(!Bk(w,t,b,18833,5)){d=58964;break R}if(!Bk(w,t,b,19166,5)){d=58976;break R}if(!Bk(w,t,b,19551,5)){d=58988;break R}if(!Bk(w,t,b,19791,5)){d=59e3;break R}if(!Bk(w,t,b,20080,6)){d=59012;break R}if(!Bk(w,t,b,20344,5)){d=59024;break R}if(Bk(w,t,b,20612,4))break O;d=59036;break R;case 5:if(o=uf(m,l[a+16>>2],l[a+20>>2],n))break y;break P;case 17:H:{q:if(!((t=d=l[s+168>>2])>>>0>=b>>>0)){for(y=l[n+8>>2],c=d;;){if(t=c,p=0|f[l[y+20>>2]](t,b),c=(0|f[l[y>>2]](t))+t|0,o=-223,!((w=p+-123|0)>>>0<=2)){if(p+-40>>>0<2)break I;if(c>>>0<b>>>0)continue;break q}break}if(w-2)break I;if((0|(o=0|f[l[y+44>>2]](y,d,t)))<0)break I;l[s+168>>2]=c;break H}l[n+44>>2]=t,l[n+40>>2]=d,o=0}if(!(o=uf(m,o,l[a+20>>2],n)))break P;break y;case 19:H:if(!((t=l[s+116>>2])>>>0>3)){switch(t-1|0){default:if((0|(t=Nn(a,s+168|0,b,n)))<0)break _;if((t=t+-19|0)>>>0>3)break C;c=1,p=0,o=45;q:switch(t-1|0){case 0:case 1:break C;case 2:break q;default:break x}if(9==l[78160]|18874368!=(18874368&l[l[n+12>>2]+8>>2]))break x;w=l[n+36>>2],d=l[n+32>>2],t=l[n+8>>2],l[s+48>>2]=15514,nb(s+176|0,t,d,w,15903,s+48|0),f[l[78160]](s+176|0);break x;case 2:if(o=l[a+16>>2],(0|(t=Nn(a,s+168|0,b,n)))<0)break _;if(p=0,c=1,!A&20!=(0|t)|9==l[78160]|18874368!=(18874368&l[l[n+12>>2]+8>>2]))break x;w=l[n+36>>2],d=l[n+32>>2],t=l[n+8>>2],l[s+64>>2]=15514,nb(s+176|0,t,d,w,15903,s- -64|0),f[l[78160]](s+176|0);break x;case 1:break H;case 0:}if(9==l[78160]|18874368!=(18874368&l[l[n+12>>2]+8>>2]))break A;o=l[n+36>>2],c=l[n+32>>2],t=l[n+8>>2],l[s+80>>2]=15514,nb(s+176|0,t,c,o,15903,s+80|0),f[l[78160]](s+176|0);break A}if((0|(t=Nn(a,s+168|0,b,n)))<0)break _;c=1,o=45;H:if(!((t=t+-19|0)>>>0>3)){p=0;q:switch(t-1|0){case 0:case 1:break H;case 2:break q;default:break x}if(9==l[78160]|18874368!=(18874368&l[l[n+12>>2]+8>>2]))break x;w=l[n+36>>2],d=l[n+32>>2],t=l[n+8>>2],l[s+32>>2]=15514,nb(s+176|0,t,d,w,15903,s+32|0),f[l[78160]](s+176|0);break x}if(!(8388608&(t=l[l[n+12>>2]+8>>2]))){o=-112;break E}if(p=0,9==l[78160]|18874368!=(18874368&t))break x;w=l[n+36>>2],d=l[n+32>>2],t=l[n+8>>2],l[s+16>>2]=15514,nb(s+176|0,t,d,w,15903,s+16|0),f[l[78160]](s+176|0);break x;case 22:if(o=e(s+104|0,a,s+168|0,b,n),d=l[s+104>>2],o){kn(d);break E}if(D=l[n+8>>2],S=1&(p=l[d+4>>2]),y=l[d+40>>2],E=l[m+40>>2],t=0,c=w=m+8|0,_=1&l[m+4>>2]){for(;k[(s+176|0)+t|0]=-1^v[8+(t+m|0)|0],32!=(0|(t=t+1|0)););c=s+176|0}if(t=0,S){for(;k[(s+448|0)+t|0]=-1^v[8+(t+d|0)|0],32!=(0|(t=t+1|0)););o=s+448|0}else o=d+8|0;for(t=0;k[0|(d=t+c|0)]=v[0|d]|v[t+o|0],32!=(0|(t=t+1|0)););if(t=0,(0|c)!=(0|w))for(;k[8+(t+m|0)|0]=v[t+c|0],32!=(0|(t=t+1|0)););if(t=0,_)for(;k[8+(c=t+m|0)|0]=-1^v[c+8|0],32!=(0|(t=t+1|0)););if(1==l[D+8>>2])break N;if(p&_){t=wi(E,0,y,0,s+492|0);break U}if((t=mi(D,E,_,y,S,s+492|0))|!_)break U;if(t=Gf(D,o=l[s+492>>2],s+444|0),o&&((c=l[o>>2])&&Lb(c),Lb(o)),t)break z;t=l[s+444>>2],l[s+492>>2]=t;break j;case 2:case 4:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:break E;case 1:break A;case 18:break B;case 21:break L;default:break _}if(!l[s+116>>2]&&(t=Qr(m,s+172|0,0,s+108|0,0,l[s+112>>2],s+112|0,s+116|0,n)))break _;if(l[s+116>>2]=3,g){if(t=hi(g,m,l[n+8>>2]))break _;(c=l[m+40>>2])&&((t=l[c>>2])&&Lb(t),Lb(c))}else g=m,m=s+120|0;l[m+4>>2]=0,l[m+8>>2]=0,l[m+36>>2]=0,l[m+40>>2]=0,l[m+28>>2]=0,l[m+32>>2]=0,l[m+20>>2]=0,l[m+24>>2]=0,l[m+12>>2]=0,l[m+16>>2]=0,A=1;break F}l[s+116>>2]=1;break S}if(!l[s+116>>2]&&(o=Qr(m,s+172|0,0,s+108|0,0,l[s+112>>2],s+112|0,s+116|0,n)))break E;if(g){if(o=hi(g,m,l[n+8>>2]))break E;(a=l[m+40>>2])&&((r=l[a>>2])&&Lb(r),Lb(a))}else g=m;r=l[g+4>>2],r=F?1|r:-2&r,l[g+4>>2]=r;B:if(!(!(1&r)|!(16&v[l[n+12>>2]+10|0]))){C:if(!l[g+40>>2]){for(t=0;;){if(v[8+(t+g|0)|0])break C;if(32==(0|(t=t+1|0)))break}break B}f[l[l[n+8>>2]+48>>2]](10,0)&&(1!=(0|f[l[l[n+8>>2]+24>>2]](10))?Fn(g+40|0,10,10):k[g+9|0]=4|v[g+9|0])}l[i>>2]=l[s+168>>2],l[n+108>>2]=l[n+108>>2]+-1,o=0;break y}if(t)break z;t=l[s+492>>2]}l[m+40>>2]=t,E&&((t=l[E>>2])&&Lb(t),Lb(E))}t=0}if(kn(l[s+104>>2]),!t)break F;break _}l[n+44>>2]=t,l[n+40>>2]=d;break y}for(c=0;;){if(t>>>0>=b>>>0)break T;if(58!=(0|(o=0|f[l[w+20>>2]](t,b)))){if(93==(0|o))break T;if(t=(0|f[l[w>>2]](t))+t|0,21!=(0|(c=c+1|0)))continue;break T}break}if((c=(0|f[l[w>>2]](t))+t|0)>>>0>=b>>>0)break T;if(t=0|f[l[w+20>>2]](c,b),f[l[w>>2]](c),93!=(0|t))break T;o=-121;break E}if(Bk(w,o=wr(w,t,b,u[d+8>>1]),b,20851,2)){o=-121;break E}if(!(t=uf(m,l[d+4>>2],c,n))){t=(0|f[l[w>>2]](o))+o|0,l[s+168>>2]=(0|f[l[w>>2]](t))+t;break P}if((0|t)<0)break _;if(1!=(0|t))break P}9==l[78160]|18874368!=(18874368&l[l[n+12>>2]+8>>2])||(o=l[n+36>>2],c=l[n+32>>2],t=l[n+8>>2],l[s>>2]=15073,nb(s+176|0,t,c,o,15903,s),f[l[78160]](s+176|0)),l[s+168>>2]=l[a+12>>2],o=l[a+16>>2],p=0,c=0;break x}c=l[s+116>>2];P:if(!(c>>>0>1)){if(t=-110,!(c-1))break _;if(!((t=l[s+112>>2])>>>0>1)){if(!(t-1)){if((0|(t=Fn(m+40|0,t=l[s+172>>2],t)))>=0)break P;break _}c=l[s+172>>2],k[8+(t=(c>>>3)+m|0)|0]=v[t+8|0]|1<<(7&c)}}l[s+112>>2]=2,l[s+116>>2]=0;break F}if((0|(t=0|f[l[l[n+8>>2]+24>>2]](o)))<0)break _;d=1!=(0|t);break M}if(d=1,(0|(t=0|f[l[l[n+8>>2]+24>>2]](l[a+16>>2])))<=1&&(d=0,(0|t)<0))break _;o=l[a+16>>2],p=0,c=0}if(t=Qr(m,s+172|0,o,s+108|0,p,d,s+112|0,s+116|0,n))break _;if(c)break S}if((0|(t=Nn(a,s+168|0,b,n)))>=0)continue D;break _}c=l[a>>2]}}l[r>>2]=0,o=-5;break y}o=t}l[r>>2]!=(0|m)&&(a=l[m+40>>2])&&((r=l[a>>2])&&Lb(r),Lb(a))}return ne=s+496|0,o}(e,r,i,b,n))break e;if(!(1&k[0|n]))break i;if(a=l[e>>2],l[s+28>>2]=s+24,l[s+24>>2]=0,l[s+20>>2]=a,l[s+16>>2]=n,p=0|f[l[l[n+8>>2]+36>>2]](l[n+4>>2],13,s+16|0),a=l[s+24>>2],p){kn(a);break e}if(!a)break f;if(c=l[e>>2],t=Cb(44)){l[t+8>>2]=a,l[t+4>>2]=c,l[t>>2]=9,l[e>>2]=t;break i}kn(a);break r}g:{y:{if((d=l[i>>2])>>>0<b>>>0){c=l[n+8>>2],t=d;E:{for(;;){if(a=t,o=0|f[l[c+20>>2]](t,b),t=(0|f[l[c>>2]](t))+t|0,p=-223,!((m=o+-123|0)>>>0<=2)){if(o+-40>>>0<2)break g;if(t>>>0<b>>>0)continue;break E}break}if(m-2)break g;if((0|(p=0|f[l[c+44>>2]](c,d,a)))<0)break g;l[i>>2]=t;break y}d=l[i>>2]}else a=d;l[n+44>>2]=a,l[n+40>>2]=d,p=0}if(t=Cb(44)){if(l[t+4>>2]=0,l[t+8>>2]=0,l[t>>2]=1,l[t+12>>2]=0,l[t+16>>2]=0,l[t+20>>2]=0,l[t+24>>2]=0,l[t+28>>2]=0,l[t+32>>2]=0,l[t+36>>2]=0,l[t+40>>2]=0,l[e>>2]=t,o=0,p=uf(t,p,0,n))break e;if(!l[r+20>>2])break i;l[t+4>>2]=1|l[t+4>>2];break i}l[e>>2]=0;break r}e=l[i>>2],l[n+44>>2]=a,l[n+40>>2]=e;break e}if((a=l[r+16>>2]+-4|0)>>>0>8)break e;p:switch(a-1|0){case 7:if(t=l[r+20>>2],a=Cb(44)){l[a+8>>2]=t,l[a>>2]=2,l[a+4>>2]=12,l[e>>2]=a;break i}l[e>>2]=0;break r;case 0:case 1:case 2:case 3:case 5:break e}if(t=Cb(44)){if(l[t+4>>2]=0,l[t+8>>2]=0,l[t>>2]=1,l[t+12>>2]=0,l[t+16>>2]=0,l[t+20>>2]=0,l[t+24>>2]=0,l[t+28>>2]=0,l[t+32>>2]=0,l[t+36>>2]=0,l[t+40>>2]=0,l[e>>2]=t,uf(t,l[r+16>>2],0,n),!l[r+20>>2])break i;l[t+4>>2]=1|l[t+4>>2];break i}l[e>>2]=0;break r}w:{p:if(!((m=l[i>>2])>>>0>=b>>>0)){for(c=l[n+8>>2],o=l[l[n+12>>2]+16>>2],a=m;;){if(t=a,(d=(0|f[l[c+20>>2]](t,b))!=(0|o))|(a=(0|f[l[c>>2]](t))+t|0)>>>0>=b>>>0||69!=(0|f[l[c+20>>2]](a,b))){if(a>>>0<b>>>0)continue;break p}break}if(c=0|f[l[c>>2]](a),t){c=a+c|0;break w}}t=c=b}w:{if(d=Cb(44)){if(o=0,l[d>>2]=0,l[(a=d)+12>>2]=0,l[a+16>>2]=0,g=a+20|0,l[a+8>>2]=g,l[a+4>>2]=g,!qk(a,m,t))break w;kn(d)}l[e>>2]=0;break r}l[e>>2]=d,l[i>>2]=c;break i}if((0|(p=0|f[l[l[n+8>>2]+28>>2]](l[r+16>>2],s+16|0)))<=-1)break e;m:{if(a=Cb(44)){if(l[a>>2]=0,l[a+12>>2]=0,l[a+16>>2]=0,t=a+20|0,l[a+8>>2]=t,l[a+4>>2]=t,!qk(a,s+16|0,(s+16|0)+p|0))break m;kn(a)}l[e>>2]=0;break r}l[e>>2]=a;break i}if(p=-116,!(4&v[l[n+12>>2]+8|0]))break e;if(l[r+4>>2])break v}c=l[i>>2],o=l[r+12>>2];d:{if(t=Cb(44)){if(l[t>>2]=0,l[t+12>>2]=0,l[t+16>>2]=0,p=t+20|0,l[t+8>>2]=p,l[t+4>>2]=p,!qk(t,o,c))break d;kn(t)}l[e>>2]=0;break r}for(l[e>>2]=t;;){if((0|(p=An(r,i,b,n)))<0)break e;if(3!=(0|p))break l;if(!((0|(p=qk(l[e>>2],l[r+12>>2],l[i>>2])))>=0))break}break e}k[s+16|0]=l[r+16>>2],a=Cb(44);v:{if(a){if(l[a>>2]=0,l[a+12>>2]=0,l[a+16>>2]=0,t=a+20|0,l[a+8>>2]=t,l[a+4>>2]=t,!qk(a,s+16|0,s+17|0))break v;kn(a)}a=0}if(l[a+12>>2]=1|l[a+12>>2],l[e>>2]=a,!a)break r;for(t=s+17|0,a=1;;){if(c=l[n+8>>2],!((0|a)<l[c+12>>2])&&(0|f[l[c>>2]](l[l[e>>2]+4>>2]))==(0|a)){p=An(r,i,b,n),a=l[e>>2],l[a+12>>2]=-2&l[a+12>>2];break l}if((0|(p=An(r,i,b,n)))<0)break e;if(1!=(0|p)){p=-206;break e}if(c=l[e>>2],k[s+16|0]=l[r+16>>2],a=a+1|0,!((0|(p=qk(c,s+16|0,t)))>=0))break}break e}o=0,a=1;break a}if(128&(c=l[n>>2]))break b;if(t=Cb(44)){l[t>>2]=6,l[t+4>>2]=0,l[t+40>>2]=0,l[t+20>>2]=0,l[t+24>>2]=-1,l[t+8>>2]=1,l[t+12>>2]=0,l[t+16>>2]=c,l[e>>2]=t,o=-210;u:{l:{if((0|(t=l[n+60>>2]))<=32766){if(o=t+1|0,(0|t)<7)break u;if((0|(c=l[n+68>>2]))>(0|o))break u;if((t=l[n+104>>2])?(t=Ub(t,c<<3),c<<=1):(t=Cb(64),c=l[n+100>>2],l[t+24>>2]=l[n+96>>2],l[t+28>>2]=c,c=l[n+92>>2],l[t+16>>2]=l[n+88>>2],l[t+20>>2]=c,c=l[n+84>>2],l[t+8>>2]=l[n+80>>2],l[t+12>>2]=c,c=l[n+76>>2],l[t>>2]=l[n+72>>2],l[t+4>>2]=c,c=16),t)break l;o=-5}l[s+280>>2]=o;break k}(0|(o=(d=l[n+60>>2])+1|0))<(0|c)&&wn(4+((d<<2)+t|0)|0,0,c+(-1^d)<<2),l[n+68>>2]=c,l[n+104>>2]=t}if(l[n+60>>2]=o,l[s+280>>2]=o,(0|o)<0)break k;l[l[e>>2]+12>>2]=o;break c}l[e>>2]=0,o=-5;break k}if((0|(o=yi(c,s+276|0,b,s+272|0,n,s+280|0,0)))<0)break k;o=-210;o:{u:{if((0|(c=l[n+60>>2]))<=32766){if(t=c+1|0,(0|c)<7)break o;if((0|(o=l[n+68>>2]))>(0|t))break o;if((t=l[n+104>>2])?(c=Ub(t,o<<3),o<<=1):(t=c=Cb(64),o=l[n+100>>2],l[t+24>>2]=l[n+96>>2],l[t+28>>2]=o,t=l[n+92>>2],l[c+16>>2]=l[n+88>>2],l[c+20>>2]=t,t=l[n+84>>2],l[c+8>>2]=l[n+80>>2],l[c+12>>2]=t,t=l[n+76>>2],l[c>>2]=l[n+72>>2],l[c+4>>2]=t,o=16),c)break u;o=-5}l[s+280>>2]=o;break k}(0|(t=(d=l[n+60>>2])+1|0))<(0|o)&&wn(4+((d<<2)+c|0)|0,0,o+(-1^d)<<2),l[n+68>>2]=o,l[n+104>>2]=c}if(l[n+60>>2]=t,l[s+280>>2]=t,(0|t)<0){o=t;break k}if(g&&(o=-222,(0|t)>31))break k;if((0|(y=(_=l[s+272>>2])-m|0))<1){o=-214;break k}E=l[n+48>>2],d=l[E+72>>2],l[s+284>>2]=0;o:{u:{if(d){if(l[s+20>>2]=_,l[s+16>>2]=m,Hf(d,s+16|0,s+284|0),!(c=l[s+284>>2]))break u;break o}d=function(){var e=0,r=0;r=ni(5),e=Cb(16);l:{if(e){if(l[e+8>>2]=0,l[e>>2]=312652,l[e+4>>2]=r,r=tk(r,4),l[e+12>>2]=r,r)break l;Lb(e)}e=0}return e}(),l[E+72>>2]=d}if(o=-5,!(c=Cb(24)))break k;if(!(D=Cb((E=l[l[E+56>>2]+12>>2])+y|0)))break s;o=qb(D,m,y),(0|E)>=1&&wn(o+y|0,0,E),l[c>>2]=o,E=Cb(8),l[E+4>>2]=o+y,l[E>>2]=o,function(e,r,a){var i,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0;n=((i=0|f[l[l[e>>2]+4>>2]](r))>>>0)%h[e+4>>2]|0;u:{l:{b=l[l[e+12>>2]+(n<<2)>>2];v:if(b){if(l[b>>2]==(0|i)){if((0|(k=l[b+4>>2]))==(0|r))break l;if(!f[l[l[e>>2]>>2]](r,k))break l}if(k=l[b+12>>2]){for(b=b+12|0;;){d:{if(l[k>>2]==(0|i)){if((0|(s=l[k+4>>2]))==(0|r))break u;if(s=0|f[l[l[e>>2]>>2]](r,s),k=l[b>>2],!s)break d}if(b=k+12|0,k=l[k+12>>2])continue;break v}break}if(k)break u}}if(b=l[e+4>>2],(l[e+8>>2]/(0|b)|0)>=6){if(t=tk(n=ni(b+1|0),4)){if(o=l[e+12>>2],(0|b)>=1)for(;;){if(k=l[(c<<2)+o>>2])for(;s=l[k+12>>2],u=(h[k>>2]%(n>>>0)<<2)+t|0,l[k+12>>2]=l[u>>2],l[u>>2]=k,k=s;);if((0|b)==(0|(c=c+1|0)))break}Lb(o),l[e+12>>2]=t,l[e+4>>2]=n}else n=b;n=(i>>>0)%(n>>>0)|0}return k=Cb(16),l[k+8>>2]=a,l[k+4>>2]=r,l[k>>2]=i,r=l[e+12>>2]+(n<<2)|0,l[k+12>>2]=l[r>>2],l[r>>2]=k,l[e+8>>2]=l[e+8>>2]+1,0}k=b}return l[k+8>>2]=a,1}(d,E,c)&&Lb(E),l[c+20>>2]=0,l[c+8>>2]=0,l[c+12>>2]=0,l[c+4>>2]=y}o:{u:{l:{if((0|(o=l[c+8>>2]))>=1){if(1&k[l[n+12>>2]+9|0])break l;l[n+44>>2]=_,l[n+40>>2]=m,o=-219;break k}if(m=o+1|0,l[c+8>>2]=m,o)break u;c=c+16|0;break o}if(m=o+1|0,l[c+8>>2]=m,2==(0|m)){if(o=Cb(32),l[c+20>>2]=o,!o){o=-5;break k}l[c+12>>2]=8,l[o>>2]=l[c+16>>2],c=o+4|0;break o}}if((0|(d=o))<(0|(o=l[c+12>>2])))d=l[c+20>>2];else{if(d=Ub(l[c+20>>2],o<<3),l[c+20>>2]=d,!d){o=-5;break k}l[c+12>>2]=o<<1,m=l[c+8>>2]}c=((m<<2)+d|0)-4|0}if(l[c>>2]=t,o=l[n>>2],!(c=Cb(44)))break n;l[c+40>>2]=0,l[c+20>>2]=0,l[c+24>>2]=-1,l[c+8>>2]=1,l[c>>2]=6,l[c+4>>2]=1024,l[c+16>>2]=o,l[e>>2]=c,l[c+12>>2]=t,!g|(0|t)>=32||(l[n+16>>2]=l[n+16>>2]|1<<t),l[n+64>>2]=l[n+64>>2]+1}t=l[e>>2]}if(!t){o=-5;break k}if((0|(o=An(r,s+276|0,b,n)))<0)break k;if((0|(o=lf(s+16|0,r,15,s+276|0,b,n)))<=-1){kn(l[s+16>>2]);break k}if(t=l[s+16>>2],c=l[e>>2],7!=l[c>>2]){if(l[c+20>>2]=t,t=l[e>>2],1==l[t+8>>2]){if(o=-11,c=l[t+12>>2],l[n+60>>2]<(0|c))break k;o=c<<2,c=l[n+104>>2],l[o+(c||n+72|0)>>2]=t}}else l[c+8>>2]=t;l[i>>2]=l[s+276>>2],o=0;break k}Lb(c);break k}l[e>>2]=0,o=-5;break k}(0|(o=An(r,s+276|0,b,n)))<0||(0|(o=lf(e,r,15,s+276|0,b,n)))<0||(l[i>>2]=l[s+276>>2],o=1)}if((0|o)<0){p=o;break e}if(!((t=o+-1|0)>>>0>1)){if(t-1)break i;if(t=l[n>>2],l[n>>2]=l[l[e>>2]+16>>2],(0|(p=An(r,i,b,n)))<0)break e;if(p=lf(s+16|0,r,a,i,b,n),l[n>>2]=t,a=l[s+16>>2],(0|p)<=-1){kn(a);break e}l[l[e>>2]+20>>2]=a,p=l[r>>2];break e}}o=0}a=0}for(;;){if(a){if(11!=(1|p))break e;if(ea(m=l[e>>2])){p=-114;break e}if(t=l[r+20>>2],g=l[r+16>>2],!(a=Cb(44)))break r;l[a+24>>2]=0,l[a+28>>2]=0,c=1,l[a+20>>2]=1,l[a+16>>2]=t,l[a+12>>2]=g,d=0,l[a+8>>2]=0,l[a>>2]=5,l[a+4>>2]=0,l[a+32>>2]=0,l[a+36>>2]=0,11==(0|p)&&(l[a+4>>2]=16384,d=16384),y=l[r+24>>2],l[a+20>>2]=y;a:if(1!=(0|t)||1!=(0|g)){i:{f:{c=l[m>>2];k:if(!(c>>>0>5)){b:switch(c-1|0){default:if(o)break k;if(t=l[m+4>>2],h[m+8>>2]<=t>>>0)break k;if((0|(d=0|f[l[l[n+8>>2]>>2]](t)))>=((t=l[m+8>>2])-(c=l[m+4>>2])|0)|t>>>0<=c>>>0)break k;if(d=l[n+8>>2],!(c=t>>>0>c>>>0?0|f[l[d+56>>2]](c,t+-1|0):0)|c>>>0<=h[m+4>>2])break k;d=l[m+8>>2],t=Cb(44);n:{if(t){if(l[t>>2]=0,l[t+12>>2]=0,l[t+16>>2]=0,g=t+20|0,l[t+8>>2]=g,l[t+4>>2]=g,!qk(t,c,d))break n;kn(t)}t=0}if(1&k[m+12|0])l[t+12>>2]=1|l[t+12>>2],l[m+8>>2]=c;else if(l[m+8>>2]=c,!t)break k;l[a+8>>2]=t,c=2;break a;case 0:case 1:case 2:case 3:break k;case 4:}b:{n:{if(y){if(!g){c=1==(0|t)?0:-1==(0|t)?1:-1;break b}if(1!=(0|g))break n;if(c=2,-1!=(0|t))break n;break b}if(!g){c=1==(0|t)?3:-1==(0|t)?4:-1;break b}if(1==(0|g)&&(c=5,-1==(0|t)))break b}c=-1}t=l[m+12>>2];b:{n:{if(l[m+20>>2]){if(!t){t=1==(0|(t=l[m+16>>2]))?0:-1==(0|t)?1:-1;break b}if(1!=(0|t)|-1!=l[m+16>>2])break n;t=2;break b}if(!t){t=1==(0|(t=l[m+16>>2]))?3:-1==(0|t)?4:-1;break b}if(!(1!=(0|t)|-1!=l[m+16>>2])){t=5;break b}}t=-1}b:if(!(!(2&v[l[n+12>>2]+11|0])|64&v[m+5|0]|d))if((d=l[58736+(w(t,24)+(c<<2)|0)>>2])>>>0<=1){if(d-1|9==l[78161])break b;nb(s+16|0,l[n+8>>2],l[n+32>>2],l[n+36>>2],21186,0),f[l[78161]](s+16|0)}else 9!=l[78161]&&(g=l[n+36>>2],y=l[n+32>>2],E=l[n+8>>2],l[s+8>>2]=l[59104+(d<<2)>>2],l[s+4>>2]=l[59072+(c<<2)>>2],l[s>>2]=l[59072+(t<<2)>>2],nb(s+16|0,E,y,g,21502,s),f[l[78161]](s+16|0));if(!((0|t)<0)){if((0|c)>-1)break f;!l[a+20>>2]|l[a+16>>2]<2|t+-1>>>0>1||(t=l[a+12>>2],l[a+16>>2]=t||1)}}l[a+8>>2]=m;break i}_i(a,m)}c=0}a:{if(l[r+28>>2]){if(!(t=Cb(44)))break a;l[t+8>>2]=4,l[t>>2]=6,l[t+4>>2]=0,l[t+40>>2]=0,l[t+24>>2]=-1,l[t+12>>2]=0,l[t+16>>2]=0,l[t+20>>2]=a,a=t}i:if(!(c>>>0>2)){f:switch(c-1|0){default:l[e>>2]=a;break i;case 0:kn(a);break i;case 1:}if(c=l[e>>2],t=Cb(44)){if(l[t+8>>2]=0,l[t+4>>2]=c,l[t>>2]=8,l[e>>2]=t,t=Cb(44)){l[t+8>>2]=0,l[t+4>>2]=a,l[t>>2]=8,l[l[e>>2]+8>>2]=t,e=t+4|0;break i}l[l[e>>2]+8>>2]=0;break a}l[e>>2]=0;break a}a=0;continue}break}if((0|(p=An(r,i,b,n)))<0)break e;a=1}kn(a)}p=-5}return ne=s+288|0,p}function gi(e,r,a,i,f,k){var b,n=0,s=0,t=0;ne=b=ne-16|0,l[e>>2]=0,s=pi(b+12|0,r,a,i,f,k);e:if((0|s)<=-1)kn(l[b+12>>2]);else if(13==(0|s)||!s|(0|a)==(0|s))l[e>>2]=l[b+12>>2];else{for(t=l[b+12>>2],(n=Cb(44))&&(l[n+8>>2]=0,l[n+4>>2]=t,l[n>>2]=8),l[e>>2]=n,e=n+8|0;;){if((0|a)==(0|s)|13==(0|s))break e;if(s=pi(b+12|0,r,a,i,f,k),n=l[b+12>>2],(0|s)<=-1){kn(n);break e}r:{a:{if(8==l[n>>2]){if(l[e>>2]=n,e=l[n+8>>2])break a;e=n+8|0;break r}(t=Cb(44))&&(l[t+8>>2]=0,l[t+4>>2]=n,l[t>>2]=8),l[e>>2]=t,e=t+8|0;break r}for(;e=l[(n=e)+8>>2];);l[b+12>>2]=n,e=n+8|0}if(!s)break}s=0}return ne=b+16|0,s}function yi(e,r,a,i,k,b,n){var s,t=0,c=0,o=0,u=0,v=0,d=0;if(s=l[k+8>>2],o=l[r>>2],l[b>>2]=0,c=-214,!(o>>>0>=a>>>0)&&(t=0|f[l[s+20>>2]](o,a),u=0|f[l[s>>2]](o),(0|(v=60==(0|e)?62:39==(0|e)?39:0))!=(0|t))){e=o+u|0;e:{r:{a:{if(f[l[s+48>>2]](t,4)){if(u=1,d=1,c=-215,1!=(0|n))break a;break r}if(45==(0|t)){if(c=-215,1!=(0|n))break a;d=-1,u=2,o=e;break r}if(f[l[s+48>>2]](t,12)){d=1,u=0;break r}c=-216}a:if(e>>>0>=a>>>0)t=a;else for(;;){if(t=e,i=0|f[l[s+20>>2]](t,a),e=(0|f[l[s>>2]](t))+t|0,41==(0|i)|(0|i)==(0|v))break a;if(!(e>>>0<a>>>0))break}t=e>>>0<a>>>0?t:a;break e}r:if(e>>>0>=a>>>0)c=a;else for(;;){if(c=e,t=0|f[l[s+20>>2]](e,a),e=(0|f[l[s>>2]](e))+e|0,(0|t)==(0|v)|41==(0|t))break r;n=l[s+48>>2];a:{if(u){if(u=1,f[n](t,4))break a;f[l[s+48>>2]](t,12)}else f[n](t,12);u=0}if(!(e>>>0<a>>>0))break}t=(0|t)==(0|v)?c:a;r:{if(u){if(t>>>0<=o>>>0)break r;for(a=0;;){if(n=0|f[l[s+20>>2]](o,t),c=0|f[l[s>>2]](o),f[l[s+48>>2]](n,4)){if((-2147483601-n>>>0)/10>>>0<a>>>0)return l[b>>2]=-1,-200;if(a=(n+w(a,10)|0)-48|0,(o=o+c|0)>>>0<t>>>0)continue}break}if(l[b>>2]=a,(0|a)<0)return-200;if(!a){c=-215;break e}l[b>>2]=w(a,d)}return l[i>>2]=t,l[r>>2]=e,0}l[b>>2]=0,c=-215}e=l[r>>2],l[k+44>>2]=t,l[k+40>>2]=e}return c}function Ei(e,r,a,i){var k,b,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0;if(b=8&l[l[i+12>>2]+8>>2],(n=l[e>>2])>>>0>=r>>>0)return b?1:-100;s=k=l[i+8>>2];e:{if(!b){if(o=-100,(t=0|f[l[k+20>>2]](n,r))-40>>>0<2|124==(0|t))break e;s=l[i+8>>2]}for(;;){if(c=0|f[l[s+20>>2]](n,r),t=0|f[l[s>>2]](n),f[l[s+48>>2]](c,4)){if((-2147483601-c>>>0)/10>>>0<u>>>0)return-201;if(u=(c+w(u,10)|0)-48|0,(n=n+t|0)>>>0<r>>>0)continue}break}if(o=-201,!(u>>>0>1e5)){r:{if(l[e>>2]==(0|n)){if(!(16&v[l[i+12>>2]+8|0]))break r;m=1,u=0}if(!(n>>>0>=r>>>0)){c=0|f[l[k+20>>2]](n,r),t=0|f[l[k>>2]](n);a:if(44!=(0|c)){if(m)break r;s=u,c=2}else{if((t=n+t|0)>>>0<r>>>0){for(d=l[i+8>>2],s=0,n=t;;){if(h=0|f[l[d+20>>2]](n,r),c=0|f[l[d>>2]](n),f[l[d+48>>2]](h,4)){if((-2147483601-h>>>0)/10>>>0<s>>>0)break e;if(s=(w(s,10)+h|0)-48|0,(n=n+c|0)>>>0<r>>>0)continue}break}if(s>>>0>1e5)break e;if(c=0,(0|n)!=(0|t))break a}if(m)break r;s=-1,n=t,c=0}if(!(n>>>0>=r>>>0)){if(t=c,o=0|f[l[k+20>>2]](n,r),n=(0|f[l[k>>2]](n))+n|0,i=l[i+12>>2],2&v[i+1|0]){if(l[i+16>>2]!=(0|o))break r;o=0|f[l[k+20>>2]](n,r),n=(0|f[l[k>>2]](n))+n|0}if(125==(0|o)){if(-1!=(0|s)&&(o=-202,(0|u)>(0|s)))break e;return l[a>>2]=11,l[a+20>>2]=s,l[a+16>>2]=u,l[e>>2]=n,t}}}}o=b?1:-123}}return o}function _i(e,r){var a=0,i=0;a=l[e+12>>2];e:{r:{if(l[e+20>>2]){if(!a){i=1==(0|(a=l[e+16>>2]))?0:-1==(0|a)?1:-1;break e}if(1!=(0|a)|-1!=l[e+16>>2])break r;i=2;break e}if(!a){i=1==(0|(a=l[e+16>>2]))?3:-1==(0|a)?4:-1;break e}if(!(1!=(0|a)|-1!=l[e+16>>2])){i=5;break e}}i=-1}a=l[r+12>>2];e:{r:{if(l[r+20>>2]){if(!a){a=1==(0|(a=l[r+16>>2]))?0:-1==(0|a)?1:-1;break e}if(1!=(0|a)|-1!=l[r+16>>2])break r;a=2;break e}if(!a){a=1==(0|(a=l[r+16>>2]))?3:-1==(0|a)?4:-1;break e}if(!(1!=(0|a)|-1!=l[r+16>>2])){a=5;break e}}a=-1}if((a|i)>=0){a=l[58736+(w(a,24)+(i<<2)|0)>>2];e:if(!(a>>>0>6)){r:switch(a-1|0){case 1:a=l[r+8>>2],l[e+20>>2]=1,l[e+12>>2]=0,l[e+16>>2]=-1,l[e+8>>2]=a;break e;case 2:a=l[r+8>>2],l[e+20>>2]=0,l[e+12>>2]=0,l[e+16>>2]=-1,l[e+8>>2]=a;break e;case 3:a=l[r+8>>2],l[e+20>>2]=0,l[e+12>>2]=0,l[e+16>>2]=1,l[e+8>>2]=a;break e;case 4:return l[e+20>>2]=0,l[e+12>>2]=0,l[e+16>>2]=1,l[e+8>>2]=r,l[r+12>>2]=1,l[r+16>>2]=-1,void(l[r+20>>2]=1);case 5:return l[e+20>>2]=1,l[e+12>>2]=0,l[e+16>>2]=1,l[e+8>>2]=r,l[r+12>>2]=1,l[r+16>>2]=-1,void(l[r+20>>2]=0);default:return void(l[e+8>>2]=r);case 0:}a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,l[e+40>>2]=l[r+40>>2],a=l[r+36>>2],l[e+32>>2]=l[r+32>>2],l[e+36>>2]=a,a=l[r+28>>2],l[e+24>>2]=l[r+24>>2],l[e+28>>2]=a,a=l[r+20>>2],l[e+16>>2]=l[r+16>>2],l[e+20>>2]=a,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a}l[r+8>>2]=0,kn(r)}}function Di(e,r,a,i){var f,k=0,b=0,n=0;ne=f=ne-48|0,!(k=l[i>>2])|34!=l[k+8>>2]||((n=l[k>>2])?(l[n+4>>2]=0,l[i>>2]=n,l[k>>2]=0):(l[i>>2]=0,l[i+4>>2]=0),n=k);e:{r:{a:{k=l[a>>2];i:if(!k|39!=l[k+8>>2]){if(1!=l[8593])break a;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=1,l[k>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,k)if(n){if(l[n>>2])break r;l[n>>2]=k,l[k+4>>2]=n}else n=k;else k=n}else{if(1!=l[8593])break a;if(b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=1,l[(k=b)>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,!k){k=n;break i}if(k=l[r+4>>2]){if(l[k>>2])break r;l[k>>2]=b,l[b+4>>2]=k}else l[r>>2]=b;l[r+4>>2]=b,k=n}if(b=l[r+4>>2],l[f+24>>2]=l[r>>2],l[f+28>>2]=b,yn(f+40|0,f+24|0),b=l[f+40>>2])if(r=l[f+44>>2],k){if(l[k>>2])break r;if(l[b+4>>2])break e;l[k>>2]=b,l[b+4>>2]=k}else n=b;else r=k;if(1==l[8617]){if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=5,l[k>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,k)if(r){if(l[r>>2])break r;l[r>>2]=k,l[k+4>>2]=r}else n=k;else k=r;if(r=l[a+4>>2],l[f+16>>2]=l[a>>2],l[f+20>>2]=r,r=l[i+4>>2],l[f+8>>2]=l[i>>2],l[f+12>>2]=r,Wr(f+32|0,f+16|0,f+8|0),b=l[f+36>>2],i=l[f+32>>2],l[(a=e)>>2]=n,l[a+4>>2]=k,i){if(k){if(l[k>>2])break r;if(l[i+4>>2])break e;l[k>>2]=i,l[i+4>>2]=k}else l[e>>2]=i;l[e+4>>2]=b}return void(ne=f+48|0)}}P(1044,14282,141,35388),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function Si(e,r,a){var i,b=0,n=0,s=0,t=0,c=0;ne=i=ne-128|0,l[i+92>>2]=a;e:{if(!(-223!=(0|r)&&r+220>>>0>=6)){if(a=l[i+92>>2],l[i+92>>2]=a+4,n=l[a>>2],c=l[n+8>>2],a=l[n+4>>2],t=l[n>>2],l[t+12>>2]>=2){for(;;){r:if(!(a>>>0>=c>>>0)){s=0|f[l[t+20>>2]](a,c);a:if(s>>>0>=128){if(!(s>>>0<65536||(0|(n=b+10|0))>27)){l[i+48>>2]=s>>>24,ib(b=(i+96|0)+b|0,5,33315,i+48|0),l[i+32>>2]=s>>>16&255,ib(b+4|0,3,32053,i+32|0),l[i+16>>2]=s>>>8&255,ib(b+6|0,3,32053,i+16|0),l[i>>2]=255&s,ib(b+8|0,3,32053,i);break a}if((0|(n=b+6|0))>27)break r;l[i+80>>2]=s>>>8&255,ib(b=(i+96|0)+b|0,5,33315,i+80|0),l[i+64>>2]=255&s,ib(b+4|0,3,32053,i- -64|0)}else k[(i+96|0)+b|0]=s,n=b+1|0;if(a=(0|f[l[t>>2]](a))+a|0,(0|(b=n))<27)continue}break}t=a>>>0<c>>>0}else qb(i+96|0,a,b=(t=(0|(n=c-a|0))>27)?27:n);for(a=Fi(r),r=e;;){r:{a:{if(37!=(0|(n=v[0|a]))){if(!n)break a;break r}if(e=a+1|0,110!=(0|(n=v[a+1|0]))){a=e;break r}r=qb(r,i+96|0,b)+b|0,t&&(k[r+2|0]=v[31068],a=v[31066]|v[31067]<<8,k[0|r]=a,k[r+1|0]=a>>>8,r=r+3|0),a=e+1|0;continue}k[0|r]=0;break e}k[0|r]=n,r=r+1|0,a=a+1|0}}a=qf(r=Fi(r)),k[qb(e,r,a)+a|0]=0}ne=i+128|0}function Fi(e){var r=0;e:if(!((0|e)>-1)){r:if(!((e=e+500|0)>>>0>499)){r=14199;a:switch(e-1|0){case 497:return 14627;case 494:return 15047;case 484:return 15491;case 483:return 15880;case 493:return 16280;case 488:return 16672;case 487:return 17046;case 486:return 17367;case 485:return 17665;case 478:return 18003;case 477:return 18378;case 476:return 18814;case 469:return 19149;case 399:return 19525;case 398:return 19763;case 397:return 20063;case 396:return 20316;case 395:return 20590;case 394:return 20831;case 393:return 21163;case 391:return 21477;case 390:return 21776;case 389:return 21959;case 388:return 22178;case 387:return 22510;case 386:return 22854;case 385:return 23140;case 384:return 23531;case 383:return 23845;case 382:return 24139;case 381:return 24316;case 380:return 24484;case 378:return 24735;case 377:return 24921;case 376:return 25132;case 299:return 25312;case 298:return 25486;case 297:return 25655;case 296:return 25850;case 295:return 26112;case 294:return 26412;case 293:return 26677;case 292:return 26970;case 291:return 27152;case 290:return 27371;case 289:return 27605;case 98:return 27895;case 287:return 28079;case 99:return 28341;case 285:return 28594;case 284:return 28811;case 283:return 29191;case 282:return 29364;case 281:return 29520;case 280:return 29682;case 279:return 29863;case 278:return 30029;case 277:return 30216;case 276:return 30477;case 97:return 35947;case 96:return 30618;case 498:break e;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 92:case 93:case 94:case 95:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:case 123:case 124:case 125:case 126:case 127:case 128:case 129:case 130:case 131:case 132:case 133:case 134:case 135:case 136:case 137:case 138:case 139:case 140:case 141:case 142:case 143:case 144:case 145:case 146:case 147:case 148:case 149:case 150:case 151:case 152:case 153:case 154:case 155:case 156:case 157:case 158:case 159:case 160:case 161:case 162:case 163:case 164:case 165:case 166:case 167:case 168:case 169:case 170:case 171:case 172:case 173:case 174:case 175:case 176:case 177:case 178:case 179:case 180:case 181:case 182:case 183:case 184:case 185:case 186:case 187:case 188:case 189:case 190:case 191:case 192:case 193:case 194:case 195:case 196:case 197:case 198:case 199:case 200:case 201:case 202:case 203:case 204:case 205:case 206:case 207:case 208:case 209:case 210:case 211:case 212:case 213:case 214:case 215:case 216:case 217:case 218:case 219:case 220:case 221:case 222:case 223:case 224:case 225:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 238:case 239:case 240:case 241:case 242:case 243:case 244:case 245:case 246:case 247:case 248:case 249:case 250:case 251:case 252:case 253:case 254:case 255:case 256:case 257:case 258:case 259:case 260:case 261:case 262:case 263:case 264:case 265:case 266:case 267:case 268:case 269:case 270:case 271:case 272:case 273:case 274:case 275:case 286:case 288:case 300:case 301:case 302:case 303:case 304:case 305:case 306:case 307:case 308:case 309:case 310:case 311:case 312:case 313:case 314:case 315:case 316:case 317:case 318:case 319:case 320:case 321:case 322:case 323:case 324:case 325:case 326:case 327:case 328:case 329:case 330:case 331:case 332:case 333:case 334:case 335:case 336:case 337:case 338:case 339:case 340:case 341:case 342:case 343:case 344:case 345:case 346:case 347:case 348:case 349:case 350:case 351:case 352:case 353:case 354:case 355:case 356:case 357:case 358:case 359:case 360:case 361:case 362:case 363:case 364:case 365:case 366:case 367:case 368:case 369:case 370:case 371:case 372:case 373:case 374:case 375:case 379:case 392:case 400:case 401:case 402:case 403:case 404:case 405:case 406:case 407:case 408:case 409:case 410:case 411:case 412:case 413:case 414:case 415:case 416:case 417:case 418:case 419:case 420:case 421:case 422:case 423:case 424:case 425:case 426:case 427:case 428:case 429:case 430:case 431:case 432:case 433:case 434:case 435:case 436:case 437:case 438:case 439:case 440:case 441:case 442:case 443:case 444:case 445:case 446:case 447:case 448:case 449:case 450:case 451:case 452:case 453:case 454:case 455:case 456:case 457:case 458:case 459:case 460:case 461:case 462:case 463:case 464:case 465:case 466:case 467:case 468:case 470:case 471:case 472:case 473:case 474:case 475:case 479:case 480:case 481:case 482:case 489:case 490:case 491:case 492:case 495:case 496:break r}return 30768}r=30928}return r}function Mi(e,r){var a,i,f,k,b;return ne=a=ne-32|0,(k=a+24|0)?(b=Bb(100),l[k>>2]=b,b?(wn(b,0,100),k=l[k>>2],l[k+60>>2]=0,l[k+52>>2]=0,l[k+56>>2]=0,l[k+44>>2]=0,l[k+36>>2]=0,l[k+40>>2]=0,l[k>>2]=0,l[k+4>>2]=0,l[k+8>>2]=0,l[k+12>>2]=0,l[k+16>>2]=0,l[k+20>>2]=0):l[82952]=48):l[82952]=28,i=Rr(l[e+16>>2],l[e+20>>2],l[a+24>>2]),l[a+20>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,f=l[a+12>>2],l[r>>2]=l[a+8>>2],l[r+4>>2]=f,Pr(r,a+20|0,e,a+24|0),function(e,r){var a=0,i=0;e&&(i=0,(a=l[r+20>>2])&&(i=l[(l[r+12>>2]<<2)+a>>2]),(0|i)==(0|e)&&(l[(l[r+12>>2]<<2)+a>>2]=0),l[e+20>>2]&&Lb(l[e+4>>2]),Lb(e))}(i,l[a+24>>2]),function(e){var r=0,a=0,i=0;r=l[e+20>>2];e:if(r)for(;;){if(i=r,r=(l[e+12>>2]<<2)+r|0,!(a=l[r>>2]))break e;if(l[r>>2]=0,l[a+20>>2]&&Lb(l[a+4>>2]),Lb(a),i=0,l[l[e+20>>2]+(l[e+12>>2]<<2)>>2]=0,Or(e),!(r=l[e+20>>2]))break}Lb(i),l[e+20>>2]=0,Lb(l[e+60>>2]),l[e+44>>2]=0,l[e+36>>2]=0,l[e+40>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0,l[e+16>>2]=0,l[e+20>>2]=0,l[e+52>>2]=0,l[e+56>>2]=0,l[e+60>>2]=0,Lb(e)}(l[a+24>>2]),(0|(e=l[a+20>>2]))>=1&&(e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,sn(a),l[a+8>>2]=0,l[a+12>>2]=0,e=l[a+12>>2],l[r>>2]=l[a+8>>2],l[r+4>>2]=e,e=l[a+20>>2]),ne=a+32|0,e}function Ai(e,r,a,i){var f,b=0,n=0,s=0,t=0,c=0,o=0,m=0,w=0,p=0;f=ne-32|0,n=l[58336+(i<<2)>>2],s=v[0|n];e:if(s){if(34==(0|s)){for(b=n;;){r:{c=k[b+1|0];a:{if(92!=(0|c)){if(b=b+1|0,(c=c+-34|0)>>>0>10)break a;switch(c-1|0){case 4:case 9:break r;case 0:case 1:case 2:case 3:case 5:case 6:case 7:case 8:break a;default:break e}}if(92!=v[b+2|0])break r;b=b+2|0}t=t+1|0;continue}break}if(t=0,!s)break e}for(b=1;t=b,b=b+1|0,v[n+t|0];);}e:{r:{a:{if(-2!=(0|i)){a=u[a>>1],l[f>>2]=n,c=1;i:{f:if(-158!=(0|(o=u[48336+(a<<1)>>1]))&&!((0|(s=0-o&o>>31))>=(0|(p=(0|(a=1973-o|0))<69?a:69)))){a=t;k:{for(;;){if(1!=(0|s)&&!(u[49280+(i=s+o<<1)>>1]!=(0|s)|65384==d[i+53232>>1])){if(5==(0|c))break f;i=l[58336+(s<<2)>>2],l[(c<<2)+f>>2]=i,b=0,w=v[0|i];b:if(w){if(n=i,34==(0|w)){for(;;){n:{m=k[n+1|0];s:{if(92!=(0|m)){if(n=n+1|0,(m=m+-34|0)>>>0>10)break s;switch(m-1|0){case 4:case 9:break n;case 0:case 1:case 2:case 3:case 5:case 6:case 7:case 8:break s;default:break b}}if(92!=v[n+2|0])break n;n=n+2|0}b=b+1|0;continue}break}if(b=0,!w)break b}for(n=1;n=(b=n)+1|0,v[i+b|0];);}if((a=a+b|0)>>>0<b>>>0)break k;c=c+1|0}if(!((0|(s=s+1|0))<(0|p)))break}if(i=0,c>>>0>5)break r;b:switch(c-1|0){case 1:i=36079;break r;case 2:i=36171;break r;case 3:i=33964;break r;case 0:break i;case 4:break b;default:break a}i=34128;break r}o=2;break e}a=t}c=1,i=33823;break r}a=t}c=0,i=27592}for(b=0;t=b,b=b+1|0,v[i+t|0];);if(o=2,!(t=(b=a+t|0)>>>0<t>>>0)){if(a=t?a:b,h[e>>2]<a>>>0)return r=e,e=a<<1,l[r>>2]=a>>>0>e>>>0?-1:e,1;for(e=l[r>>2],o=0,s=0;;){r=v[0|i],k[0|e]=r;r:{if(37!=(0|r)){if(b=1,n=1,r)break r;break e}if(115!=v[i+1|0]|(0|s)>=(0|c))b=1,n=1;else{r=s+1|0;a:{i:if(t=l[(s<<2)+f>>2],34==v[0|t]){for(b=0,n=t;;){f:{s=v[n+1|0];k:{if(92!=(0|s)){if(n=n+1|0,(a=(s<<24>>24)-34|0)>>>0>10)break k;switch(a-1|0){case 4:case 9:break i;case 0:case 1:case 2:case 3:case 5:case 6:case 7:case 8:break k;default:break f}}if(s=92,92!=v[n+2|0])break i;n=n+2|0}e&&(k[e+b|0]=s),b=b+1|0;continue}break}if(n=2,!e)break a;k[e+b|0]=0;break a}if(e){for(b=e;a=b,n=v[0|t],k[0|b]=n,b=b+1|0,t=t+1|0,n;);b=a-e|0}else for(n=0;n=(b=n)+1|0,v[b+t|0];);n=2}s=r}}i=i+n|0,e=e+b|0}}}return o}function xi(e,r){var a,i=0,f=0;ne=a=ne-128|0,i=l[r+4>>2],l[a+72>>2]=l[r>>2],l[a+76>>2]=i,Eb(a+72|0)&&(i=l[r+4>>2],l[a+64>>2]=l[r>>2],l[a+68>>2]=i,5!=(0|zn(a- -64|0)))?(i=l[r+4>>2],l[a+56>>2]=l[r>>2],l[a+60>>2]=i,i=Xb(zn(a+56|0)),f=l[r+4>>2],l[a+48>>2]=l[r>>2],l[a+52>>2]=f,qn(a+80|0,a+48|0),r=l[a+92>>2],l[a+40>>2]=l[a+88>>2],l[a+44>>2]=r,r=l[a+84>>2],l[a+32>>2]=l[a+80>>2],l[a+36>>2]=r,Nb(a+96|0,a+32|0),r=l[a+108>>2],l[a+24>>2]=l[a+104>>2],l[a+28>>2]=r,r=l[a+100>>2],l[a+16>>2]=l[a+96>>2],l[a+20>>2]=r,l[a+4>>2]=Jb(a+16|0,a+113|0,15),l[a>>2]=i,Yb(e,33696,a)):(l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0),ne=a+128|0}function Pi(e,r){var a=0,i=0,f=0,b=0,n=0;e:{if(a=Bb(48)){if(l[a+12>>2]=16384,f=Bb(16386),l[a+4>>2]=f,!f)break e;return l[a+20>>2]=1,n=l[82952],l[a+16>>2]=0,k[l[a+4>>2]]=0,k[l[a+4>>2]+1|0]=0,l[a+44>>2]=0,l[a+28>>2]=1,l[a+8>>2]=l[a+4>>2],(0|(i=(f=l[r+20>>2])?l[f+(l[r+12>>2]<<2)>>2]:0))==(0|a)&&(b=f+(l[r+12>>2]<<2)|0,i=l[b>>2],l[r+28>>2]=l[i+16>>2],i=l[i+8>>2],l[r+36>>2]=i,l[r+80>>2]=i,l[r+4>>2]=l[l[b>>2]>>2],k[r+24|0]=v[0|i]),l[a+40>>2]=1,l[a>>2]=e,(0|(f?l[f+(l[r+12>>2]<<2)>>2]:0))!=(0|a)&&(l[a+32>>2]=1,l[a+36>>2]=0),r=a,e?(l[e+76>>2],e=(0|bf(l[e+60>>2]))>0):e=0,l[r+24>>2]=e,l[82952]=n,a}Tk(15428),M()}Tk(15428),M()}function Ti(e){var r,a=0,i=0,b=0,n=0,s=0;ne=r=ne-48|0,i=l[e+12>>2];e:{if(i){if(b=l[e+12>>2],!(l[b>>2]>>>5&1||l[i>>2]>>>4&1))break e;if(b&&(!(l[b>>2]>>>5&1)||(l[r+16>>2]=lr(l[82952]),Sn(l[75398],19713,r+16|0),b=l[e+12>>2]))){r:if(l[75259]!=(0|b))xk(b);else{if(l[b+76>>2]>=0){l[b>>2]=-49&l[b>>2];break r}l[b>>2]=-49&l[b>>2]}l[e+12>>2]=0,a=l[4+(i=e+4160|0)>>2],l[r+8>>2]=l[i>>2],l[r+12>>2]=a,a=l[e+4156>>2],l[r>>2]=l[e+4152>>2],l[r+4>>2]=a,zb(r),l[r+32>>2]=0,l[r+36>>2]=0,l[r+40>>2]=0,l[r+44>>2]=0,a=l[r+44>>2],l[i>>2]=l[r+40>>2],l[i+4>>2]=a,i=l[r+36>>2],l[e+4152>>2]=l[r+32>>2],l[e+4156>>2]=i,l[e+4168>>2]=0}}(0|(i=l[e+24>>2]))>=l[e+20>>2]||(l[e+24>>2]=i+1,(i=l[l[e+16>>2]+(i<<2)>>2])&&(fn(i,20052)?(l[e+12>>2]=$a(i,20570),jb(r+32|0,i),a=l[r+44>>2],l[(b=e+4160|0)>>2]=l[r+40>>2],l[b+4>>2]=a,a=l[r+36>>2],l[(b=e+4152|0)>>2]=l[r+32>>2],l[b+4>>2]=a,l[e+12>>2]||(f[l[e>>2]](l[e+4>>2],i),l[e+28>>2]=l[e+28>>2]+1)):(l[e+12>>2]=l[75259],jb(r+32|0,20300),i=l[r+44>>2],l[(a=e+4160|0)>>2]=l[r+40>>2],l[a+4>>2]=i,i=l[r+36>>2],l[(a=e+4152|0)>>2]=l[r+32>>2],l[a+4>>2]=i),l[e+4168>>2]=0)),b=l[e+12>>2]}l[e+4144>>2]=0,k[e+48|0]=0;e:if(b){r:{a:{i:{if(!fb(i=wn(e+48|0,0,4096),b))for(;;){if(a=l[e+12>>2],l[a+76>>2],!(a=l[a>>2]>>>5&1)|27!=l[82952])break i;if(a=l[e+12>>2],l[a>>2]=-49&l[a>>2],fb(i,l[e+12>>2]))break}if(a=rf(i,10,4096))break r;if(!l[e+8>>2])break a;l[e+4144>>2]=on(i);break e}if(k[e+48|0]=0,i=l[e+12>>2],l[i+76>>2],!(a=l[i>>2]>>>5&1))break e;l[e+28>>2]=l[e+28>>2]+1;break e}if(a=l[e+12>>2],l[a+76>>2],a=l[a>>2]>>>4&1){for(b=0,a=i;a=v[48+(n=e+b|0)|0]?n+48|0:a,4096!=(0|(b=b+1|0)););l[e+4144>>2]=1+(a-i|0);break e}l[e+4144>>2]=4095;break e}l[e+4144>>2]=1+(a-i|0),l[e+4168>>2]=l[e+4168>>2]+1}return l[e+24>>2]==l[e+20>>2]&&(s=1,!(i=l[e+12>>2])|l[i>>2]>>>4&1||(e=l[e+12>>2],s=0!=(0|(l[e+76>>2],e=l[e>>2]>>>5&1)))),ne=r+48|0,s}function Ri(e,r,a){var i,f=0;1030!=(1030&l[8640])&&(P(15092,14282,155,35412),M()),i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=9,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,f=l[r+4>>2],l[i+24>>2]=l[r>>2],l[i+28>>2]=f,f=l[r+12>>2],l[i+32>>2]=l[r+8>>2],l[i+36>>2]=f,l[i+64>>2]=En(a),l[e+4>>2]=i,l[e>>2]=i}function Oi(e,r){o(0|e,0|r)}function Ii(e,r,a,i){var f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,l=0;e:{r:{a:{i:{f:{k:{b:{n:{s:{t:{if(b=r){if(!(f=a))break t;if(!(k=i))break s;if((k=y(k)-y(b)|0)>>>0<=31)break n;break r}if(1==(0|i)&a>>>0>=0|i>>>0>1)break r;return Oi(e-w(r=(e>>>0)/(a>>>0)|0,a)|0,0),se=0,r}if(f=i,!e)break b;if(!f)break k;if((k=f+-1|0)&f)break k;return Oi(e,k&b),e=b>>>(31&Ci(f)),se=0,e}if(!((k=f+-1|0)&f))break f;n=0-(t=(y(f)+33|0)-y(b)|0)|0;break a}t=k+1|0,n=63-k|0;break a}return Oi(0,b-w(e=(b>>>0)/(f>>>0)|0,f)|0),se=0,e}if((k=y(f)-y(b)|0)>>>0<31)break i;break r}if(Oi(e&k,0),1==(0|f))break e;return a=e,i=31&(e=Ci(f)),32<=(63&e)>>>0?(k=0,e=r>>>i):(k=r>>>i,e=((1<<i)-1&r)<<32-i|a>>>i),se=k,e}t=k+1|0,n=63-k|0}if(f=r,b=e,s=31&(k=63&t),32<=(63&k)>>>0?(k=0,o=f>>>s):(k=f>>>s,o=((1<<s)-1&f)<<32-s|b>>>s),n=31&(e=63&n),32<=(63&e)>>>0?(f=b<<n,e=0):(f=(1<<n)-1&b>>>32-n|r<<n,e=b<<n),r=f,t)for(b=i+-1|0,(f=a+-1|0)>>>0<4294967295&&(b=b+1|0),n=f;u=c=k=k<<1|(f=o)>>>31,f=(s=b-((n>>>0<(k=r>>>31|(f<<=1))>>>0)+(f=c)|0)|0)>>31,o=(c=k)-(k=a&(s>>=31))|0,k=u-((i&f)+(c>>>0<k>>>0)|0)|0,f=r<<1|e>>>31,e=l|e<<1,r=0|f,u=f=0,l=c=1&s,t=t+-1|0;);return Oi(o,k),se=(f=r<<1|e>>>31)|u,e=c|e<<1}Oi(e,r),e=0,r=0}return se=r,e}function zi(e,r,a,i){return e=function(e,r,a,i){var f,k,b,n,s=0,t=0;return n=w(s=a>>>16,t=e>>>16),s=(65535&(t=((b=w(f=65535&a,k=65535&e))>>>16)+w(t,f)|0))+w(s,k)|0,e=(((w(r,a)+n|0)+w(e,i)|0)+(t>>>16)|0)+(s>>>16)|0,se=e,r=65535&b|s<<16}(e,r,a,i)}function Ni(e,r,a){return Ii(e,r,a,0)}function ji(e){var r=0,a=0;if(!((a=e-(r=D(e)))<.5)){if(e=S(e),a>.5)return e;a=e,r=(e=.5*r)-D(e)==0?r:a}return r}function Ui(e){for(var r=0,a=0;a=r,e;)e&=e-1,r=r+1|0;return a}function Bi(e,r){var a=0;return(-1>>>(a=31&r)&e)<<a|((a=e)&-1<<(e=0-r&31))>>>e}function Ci(e){return e?31-y(e+-1^e)|0:32}function Li(e,r,a){var i,f=0,k=0,b=0,n=0;ne=i=ne-624|0,f=l[a+12>>2],l[i+456>>2]=l[a+8>>2],l[i+460>>2]=f,f=l[a+4>>2],l[i+448>>2]=l[a>>2],l[i+452>>2]=f;e:if(6==(15&v[i+448|0])){f=l[a+12>>2],l[i+392>>2]=l[a+8>>2],l[i+396>>2]=f,f=l[a+4>>2],l[i+384>>2]=l[a>>2],l[i+388>>2]=f,Nb(i+576|0,i+384|0),f=l[a+12>>2],l[i+376>>2]=l[a+8>>2],l[i+380>>2]=f,f=l[a>>2],n=l[a+4>>2],b=l[i+588>>2],l[i+360>>2]=l[i+584>>2],l[i+364>>2]=b,l[i+368>>2]=f,l[i+372>>2]=n,f=l[i+580>>2],l[i+352>>2]=l[i+576>>2],l[i+356>>2]=f,sa(i+592|0,i+368|0,i+352|0),f=l[i+604>>2],l[a+8>>2]=l[i+600>>2],l[a+12>>2]=f,f=l[i+596>>2],l[a>>2]=l[i+592>>2],l[a+4>>2]=f,f=l[a+12>>2],l[i+344>>2]=l[a+8>>2],l[i+348>>2]=f,f=l[a+4>>2],l[i+336>>2]=l[a>>2],l[i+340>>2]=f,Nb(i+560|0,i+336|0),f=l[i+572>>2],l[i+328>>2]=l[i+568>>2],l[i+332>>2]=f,f=l[i+564>>2],l[i+320>>2]=l[i+560>>2],l[i+324>>2]=f;r:{if((0|(n=Zb(i+320|0)))>=1)for(;;){if(f=l[a+12>>2],l[i+312>>2]=l[a+8>>2],l[i+316>>2]=f,f=l[a+4>>2],l[i+304>>2]=l[a>>2],l[i+308>>2]=f,Nb(i+528|0,i+304|0),f=l[i+540>>2],l[i+296>>2]=l[i+536>>2],l[i+300>>2]=f,f=l[i+532>>2],l[i+288>>2]=l[i+528>>2],l[i+292>>2]=f,Kb(i+544|0,i+288|0,k),f=l[i+556>>2],b=l[i+552>>2],l[i+600>>2]=b,l[i+604>>2]=f,l[i+280>>2]=b,l[i+284>>2]=f,f=l[i+548>>2],b=l[i+544>>2],l[i+592>>2]=b,l[i+596>>2]=f,l[i+272>>2]=b,l[i+276>>2]=f,6!=(15&v[i+272|0]))break r;if(f=l[i+604>>2],l[i+168>>2]=l[i+600>>2],l[i+172>>2]=f,f=l[i+596>>2],l[i+160>>2]=l[i+592>>2],l[i+164>>2]=f,zb(i+160|0),(0|n)==(0|(k=k+1|0)))break}if(k=l[a+12>>2],l[i+152>>2]=l[a+8>>2],l[i+156>>2]=k,k=l[a+4>>2],l[i+144>>2]=l[a>>2],l[i+148>>2]=k,Nb(i+496|0,i+144|0),k=l[i+508>>2],l[i+136>>2]=l[i+504>>2],l[i+140>>2]=k,k=l[i+500>>2],l[i+128>>2]=l[i+496>>2],l[i+132>>2]=k,!Zb(i+128|0)){k=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=k,k=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=k,zb(i),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a;break e}if(k=l[a+12>>2],l[i+120>>2]=l[a+8>>2],l[i+124>>2]=k,k=l[a+4>>2],l[i+112>>2]=l[a>>2],l[i+116>>2]=k,Nb(i+464|0,i+112|0),k=l[i+476>>2],l[i+104>>2]=l[i+472>>2],l[i+108>>2]=k,k=l[i+468>>2],l[i+96>>2]=l[i+464>>2],l[i+100>>2]=k,Kb(i+480|0,i+96|0,0),k=l[i+492>>2],l[i+88>>2]=l[i+488>>2],l[i+92>>2]=k,k=l[i+484>>2],l[i+80>>2]=l[i+480>>2],l[i+84>>2]=k,!Zb(i+80|0)){k=l[a+12>>2],l[i+40>>2]=l[a+8>>2],l[i+44>>2]=k,k=l[a+4>>2],l[i+32>>2]=l[a>>2],l[i+36>>2]=k,zb(i+32|0),a=l[r+12>>2],l[i+24>>2]=l[r+8>>2],l[i+28>>2]=a,a=l[r+4>>2],l[i+16>>2]=l[r>>2],l[i+20>>2]=a,zb(i+16|0),r=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=r,r=l[10945],l[e>>2]=l[10944],l[e+4>>2]=r;break e}k=l[r+12>>2],l[i+72>>2]=l[r+8>>2],l[i+76>>2]=k,k=l[r+4>>2],l[i+64>>2]=l[r>>2],l[i+68>>2]=k,r=l[a+12>>2],l[i+56>>2]=l[a+8>>2],l[i+60>>2]=r,r=l[a+4>>2],l[i+48>>2]=l[a>>2],l[i+52>>2]=r,_e(e,i- -64|0,i+48|0,0);break e}k=l[r+12>>2],l[i+264>>2]=l[r+8>>2],l[i+268>>2]=k,k=l[r+4>>2],l[i+256>>2]=l[r>>2],l[i+260>>2]=k,zb(i+256|0),r=l[a+12>>2],l[i+248>>2]=l[a+8>>2],l[i+252>>2]=r,r=l[a+4>>2],l[i+240>>2]=l[a>>2],l[i+244>>2]=r,zb(i+240|0),r=l[i+604>>2],l[i+232>>2]=l[i+600>>2],l[i+236>>2]=r,r=l[i+596>>2],l[i+224>>2]=l[i+592>>2],l[i+228>>2]=r,l[i+208>>2]=Xb(15&v[i+224|0]),Yb(i+512|0,18954,i+208|0),r=l[i+524>>2],l[i+200>>2]=l[i+520>>2],l[i+204>>2]=r,r=l[i+516>>2],l[i+192>>2]=l[i+512>>2],l[i+196>>2]=r,Hb(e,i+192|0),e=l[i+604>>2],l[i+184>>2]=l[i+600>>2],l[i+188>>2]=e,e=l[i+596>>2],l[i+176>>2]=l[i+592>>2],l[i+180>>2]=e,zb(i+176|0)}else k=l[r+12>>2],l[i+440>>2]=l[r+8>>2],l[i+444>>2]=k,k=l[r+4>>2],l[i+432>>2]=l[r>>2],l[i+436>>2]=k,zb(i+432|0),r=l[a+12>>2],l[i+424>>2]=l[a+8>>2],l[i+428>>2]=r,r=l[a+4>>2],l[i+416>>2]=l[a>>2],l[i+420>>2]=r,zb(i+416|0),jb(i+608|0,18598),r=l[i+620>>2],l[i+408>>2]=l[i+616>>2],l[i+412>>2]=r,r=l[i+612>>2],l[i+400>>2]=l[i+608>>2],l[i+404>>2]=r,Hb(e,i+400|0);ne=i+624|0}function Hi(e,r,a){var i,f=0,k=0,b=0;ne=i=ne-416|0,f=l[r+12>>2],l[i+360>>2]=l[r+8>>2],l[i+364>>2]=f,f=l[r+4>>2],l[i+352>>2]=l[r>>2],l[i+356>>2]=f;e:{if(15&v[i+352|0]){if(f=l[a+12>>2],l[i+344>>2]=l[a+8>>2],l[i+348>>2]=f,f=l[a+4>>2],l[i+336>>2]=l[a>>2],l[i+340>>2]=f,!(15&v[i+336|0]))break e;return f=l[r+12>>2],l[i+328>>2]=l[r+8>>2],l[i+332>>2]=f,f=l[r+4>>2],l[i+320>>2]=l[r>>2],l[i+324>>2]=f,1!=(15&v[i+320|0])?(f=l[r+12>>2],l[i+312>>2]=l[r+8>>2],l[i+316>>2]=f,f=l[r+4>>2],l[i+304>>2]=l[r>>2],l[i+308>>2]=f,7!=(15&v[i+304|0])||(f=l[a+12>>2],l[i+296>>2]=l[a+8>>2],l[i+300>>2]=f,f=l[a+4>>2],l[i+288>>2]=l[a>>2],l[i+292>>2]=f,5!=(15&v[i+288|0]))?(f=l[r+12>>2],l[i+280>>2]=l[r+8>>2],l[i+284>>2]=f,f=l[r+4>>2],l[i+272>>2]=l[r>>2],l[i+276>>2]=f,6!=(15&v[i+272|0])||(f=l[a+12>>2],l[i+264>>2]=l[a+8>>2],l[i+268>>2]=f,f=l[a+4>>2],l[i+256>>2]=l[a>>2],l[i+260>>2]=f,4!=(15&v[i+256|0]))?(f=l[r+12>>2],l[i+248>>2]=l[r+8>>2],l[i+252>>2]=f,f=l[r+4>>2],l[i+240>>2]=l[r>>2],l[i+244>>2]=f,f=Xb(15&v[i+240|0]),k=l[a+12>>2],l[i+232>>2]=l[a+8>>2],l[i+236>>2]=k,k=l[a+4>>2],l[i+224>>2]=l[a>>2],l[i+228>>2]=k,l[i+212>>2]=Xb(15&v[i+224|0]),l[i+208>>2]=f,Yb(i+368|0,17820,i+208|0),f=l[i+380>>2],l[i+200>>2]=l[i+376>>2],l[i+204>>2]=f,f=l[i+372>>2],l[i+192>>2]=l[i+368>>2],l[i+196>>2]=f,Hb(i+400|0,i+192|0),f=l[i+412>>2],l[e+8>>2]=l[i+408>>2],l[e+12>>2]=f,f=l[i+404>>2],l[e>>2]=l[i+400>>2],l[e+4>>2]=f,e=l[r+12>>2],l[i+184>>2]=l[r+8>>2],l[i+188>>2]=e,e=l[r+4>>2],l[i+176>>2]=l[r>>2],l[i+180>>2]=e,zb(i+176|0),e=l[a+12>>2],l[i+168>>2]=l[a+8>>2],l[i+172>>2]=e,e=l[a+4>>2],l[i+160>>2]=l[a>>2],l[i+164>>2]=e,zb(i+160|0)):(f=l[a+12>>2],l[i+152>>2]=l[a+8>>2],l[i+156>>2]=f,f=l[a+4>>2],l[i+144>>2]=l[a>>2],l[i+148>>2]=f,b=Wb(i+144|0),a=l[r+12>>2],l[i+136>>2]=l[r+8>>2],l[i+140>>2]=a,a=l[r+4>>2],l[i+128>>2]=l[r>>2],l[i+132>>2]=a,Kb(r=i+400|0,a=i+128|0,f=g(b)<2147483648?~~b:-2147483648),r=l[i+412>>2],l[i+120>>2]=l[i+408>>2],l[i+124>>2]=r,r=l[i+404>>2],l[i+112>>2]=l[i+400>>2],l[i+116>>2]=r,In(i+384|0,0!=(15&v[i+112|0])),r=l[i+396>>2],l[e+8>>2]=l[i+392>>2],l[e+12>>2]=r,r=l[i+388>>2],l[e>>2]=l[i+384>>2],l[e+4>>2]=r,e=l[i+412>>2],l[i+104>>2]=l[i+408>>2],l[i+108>>2]=e,e=l[i+404>>2],l[i+96>>2]=l[i+400>>2],l[i+100>>2]=e,zb(i+96|0))):(f=l[r+12>>2],l[i+88>>2]=l[r+8>>2],l[i+92>>2]=f,f=l[r+4>>2],l[i+80>>2]=l[r>>2],l[i+84>>2]=f,r=l[a+12>>2],l[i+72>>2]=l[a+8>>2],l[i+76>>2]=r,r=l[a+4>>2],l[i+64>>2]=l[a>>2],l[i+68>>2]=r,dn(i+400|0,i+80|0,i- -64|0),r=l[i+412>>2],l[i+56>>2]=l[i+408>>2],l[i+60>>2]=r,r=l[i+404>>2],l[i+48>>2]=l[i+400>>2],l[i+52>>2]=r,In(i+384|0,0!=(15&v[i+48|0])),r=l[i+396>>2],l[e+8>>2]=l[i+392>>2],l[e+12>>2]=r,r=l[i+388>>2],l[e>>2]=l[i+384>>2],l[e+4>>2]=r,e=l[i+412>>2],l[i+40>>2]=l[i+408>>2],l[i+44>>2]=e,e=l[i+404>>2],l[i+32>>2]=l[i+400>>2],l[i+36>>2]=e,zb(i+32|0))):(f=l[r+12>>2],l[i+24>>2]=l[r+8>>2],l[i+28>>2]=f,f=l[r+4>>2],l[i+16>>2]=l[r>>2],l[i+20>>2]=f,zb(i+16|0),r=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=r,r=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=r,zb(i),r=l[10943],l[i+408>>2]=l[10942],l[i+412>>2]=r,r=l[10941],l[i+400>>2]=l[10940],l[i+404>>2]=r,r=l[i+412>>2],l[e+8>>2]=l[i+408>>2],l[e+12>>2]=r,r=l[i+404>>2],l[e>>2]=l[i+400>>2],l[e+4>>2]=r),void(ne=i+416|0)}P(17181,16044,189,44171),M()}P(17516,16044,190,44171),M()}function qi(e,r,a){var i,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0;ne=i=ne-80|0;e:{r:{a:{i:{f:{if(b=l[r>>2])for(f=b;;){if(s=l[f+8>>2],37!=l[f+8>>2]&&1152!=(1152&l[8+(s>>>0<41?w(s,24)+34336|0:35320)>>2]))break f;if(!(f=l[f>>2]))break}if(l[i+56>>2]=0,l[i+60>>2]=0,!b)break a;for(;;){for(t=0,s=0;;){for((b=l[(f=b)>>2])?(l[b+4>>2]=0,l[r>>2]=b,l[f>>2]=0):(l[r>>2]=0,l[r+4>>2]=0),l[i+52>>2]=f,l[i+48>>2]=f,n=l[a+4>>2],l[i+64>>2]=l[a>>2],l[i+68>>2]=n,k=f;;){if(n=l[k+8>>2],37!=l[k+8>>2]&&1152!=(1152&l[8+(n>>>0<41?w(n,24)+34336|0:35320)>>2]))break i;if(!(k=l[k>>2]))break}for(k=0;l[i+76>>2]=f,l[i+72>>2]=f,n=l[i+68>>2],l[i+32>>2]=l[i+64>>2],l[i+36>>2]=n,n=l[i+76>>2],l[i+40>>2]=l[i+72>>2],l[i+44>>2]=n,k=Bn(i+40|0,i+32|0,1152,0)+k|0,f=l[f>>2];);if(f=l[i+52>>2],l[i+24>>2]=l[i+48>>2],l[i+28>>2]=f,f=l[i+60>>2],l[i+16>>2]=l[i+56>>2],l[i+20>>2]=f,c=Ki(i+24|0,i+16|0),f=l[i+52>>2],l[i+8>>2]=l[i+48>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,n=l[i+52>>2],f=l[i+48>>2],(k+c|0)==(0-Ki(i+8|0,i)|0)){if(f){if(t){if(l[t>>2])break r;if(l[f+4>>2])break e;l[t>>2]=f,l[f+4>>2]=t}else s=f;t=n}}else{if(k=l[i+60>>2],c=l[i+56>>2],f)if(k){if(l[k>>2])break r;if(l[f+4>>2])break e;l[k>>2]=f,l[f+4>>2]=k}else c=f;else n=k;l[i+60>>2]=n,l[i+56>>2]=c,o=o+1|0}if(!b)break}if((0|o)==(0|u)){if(!s)break a;for(;r=l[s>>2],Wk(s),s=r,r;);break a}if(l[(f=r)>>2]=s,l[f+4>>2]=t,u=o,!(b=s))break}break a}P(19201,14282,419,35590),M()}P(19201,14282,369,35670),M()}f=l[a+4>>2],a=l[a>>2],r=b=l[i+60>>2],l[e>>2]=l[i+56>>2],l[e+4>>2]=r;a:{if(a){if(r){if(l[r>>2])break r;if(l[a+4>>2])break a;l[r>>2]=a,l[a+4>>2]=r}else l[e>>2]=a;l[e+4>>2]=f}return void(ne=i+80|0)}break e}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function Yi(e,r,a){var i,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,w=0,p=0,g=0;ne=i=ne-176|0;e:{r:{if(5==(15&(t=v[0|r]))){if(5!=(15&(n=v[0|a])))break r;if(o=l[a+8>>2],f=l[r+12>>2],b=l[r+8>>2],l[b>>2]=l[b>>2]+1,k[i+160|0]=t,s=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,t=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,l[i+172>>2]=f,l[i+168>>2]=b,k[i+164|0]=s,k[i+165|0]=s>>>8,k[i+166|0]=s>>>16,k[i+167|0]=s>>>24,k[i+161|0]=t,k[i+162|0]=t>>>8,k[i+163|0]=t>>>16,k[i+164|0]=t>>>24,t=l[b+8>>2],f=l[i+172>>2],l[i+112>>2]=l[i+168>>2],l[i+116>>2]=f,f=l[i+164>>2],l[i+104>>2]=l[i+160>>2],l[i+108>>2]=f,zb(i+104|0),f=l[a+12>>2],l[o>>2]=l[o>>2]+1,k[i+160|0]=n,s=v[a+4|0]|v[a+5|0]<<8|v[a+6|0]<<16|v[a+7|0]<<24,n=v[a+1|0]|v[a+2|0]<<8|v[a+3|0]<<16|v[a+4|0]<<24,l[i+172>>2]=f,l[i+168>>2]=o,k[i+164|0]=s,k[i+165|0]=s>>>8,k[i+166|0]=s>>>16,k[i+167|0]=s>>>24,k[i+161|0]=n,k[i+162|0]=n>>>8,k[i+163|0]=n>>>16,k[i+164|0]=n>>>24,n=l[o+8>>2],f=l[i+172>>2],l[i+96>>2]=l[i+168>>2],l[i+100>>2]=f,f=l[i+164>>2],l[i+88>>2]=l[i+160>>2],l[i+92>>2]=f,zb(i+88|0),l[e>>2]=6,l[e+4>>2]=0,f=Bb(272),l[f+8>>2]=16,l[f>>2]=1,l[f+4>>2]=0,l[e+8>>2]=f,u=ka(h=b+16|0,f=t>>>1,g=o+16|0,w=n>>>1))for(o=f+h|0,c=i+160|1,t=s=i+120|1;;){l[i+136>>2]=4,l[i+140>>2]=0,m[i+144>>3]=u-h|0,f=l[e+12>>2],n=l[e+8>>2],l[i+128>>2]=n,l[i+132>>2]=f,b=l[e+4>>2],f=l[e>>2],l[i+120>>2]=f,l[i+124>>2]=b,b=s,l[i+160>>2]=v[0|b]|v[b+1|0]<<8|v[b+2|0]<<16|v[b+3|0]<<24,b=v[(b=t)+3|0]|v[b+4|0]<<8|v[b+5|0]<<16|v[b+6|0]<<24,k[i+163|0]=b,k[i+164|0]=b>>>8,k[i+165|0]=b>>>16,k[i+166|0]=b>>>24,b=l[i+132>>2];a:if(!((p=15&f)>>>0>7)){i:switch(p-1|0){default:if(!n)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[n>>2]=l[n>>2]+1}if(d=v[i+163|0]|v[i+164|0]<<8|v[i+165|0]<<16|v[i+166|0]<<24,k[i+155|0]=d,k[i+156|0]=d>>>8,k[i+157|0]=d>>>16,k[i+158|0]=d>>>24,l[i+152>>2]=l[i+160>>2],k[i+160|0]=f,f=v[i+155|0]|v[i+156|0]<<8|v[i+157|0]<<16|v[i+158|0]<<24,k[c+3|0]=f,k[c+4|0]=f>>>8,k[c+5|0]=f>>>16,k[c+6|0]=f>>>24,f=l[i+152>>2],k[0|c]=f,k[c+1|0]=f>>>8,k[c+2|0]=f>>>16,k[c+3|0]=f>>>24,l[i+172>>2]=b,l[i+168>>2]=n,6!=(0|p))break e;if(f=l[i+172>>2],l[i+80>>2]=l[i+168>>2],l[i+84>>2]=f,f=l[i+164>>2],l[i+72>>2]=l[i+160>>2],l[i+76>>2]=f,b=l[i+164>>2],zb(i+72|0),f=l[i+132>>2],l[(n=i- -64|0)>>2]=l[i+128>>2],l[n+4>>2]=f,f=l[i+148>>2],l[i+48>>2]=l[i+144>>2],l[i+52>>2]=f,f=l[i+124>>2],l[i+56>>2]=l[i+120>>2],l[i+60>>2]=f,f=l[i+140>>2],l[i+40>>2]=l[i+136>>2],l[i+44>>2]=f,Dn(e,i+56|0,b,i+40|0),!(u=ka(f=u+w|0,o-f|0,g,w)))break}return e=l[r+12>>2],l[i+32>>2]=l[r+8>>2],l[i+36>>2]=e,e=l[r+4>>2],l[i+24>>2]=l[r>>2],l[i+28>>2]=e,zb(i+24|0),e=l[a+12>>2],l[i+16>>2]=l[a+8>>2],l[i+20>>2]=e,e=l[a+4>>2],l[i+8>>2]=l[a>>2],l[i+12>>2]=e,zb(i+8|0),void(ne=i+176|0)}P(19611,17172,652,43435),M()}P(19868,17172,653,43435),M()}P(18173,17172,326,43311),M()}function Wi(e,r,a,i){var f,b=0,n=0,s=0,t=0,c=0,o=0,d=0,h=0,w=0,p=0,g=0;if(ne=f=ne-34128|0,wb(f+4560|0,22313),c=l[4+(n=f+4568|0)>>2],l[(b=f+4168|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+4564>>2],l[f+4160>>2]=l[f+4560>>2],l[f+4164>>2]=b,!(15&v[f+4160|0])){if(s=l[n+4>>2],l[(b=f+4152|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+4564>>2],l[f+4144>>2]=l[f+4560>>2],l[f+4148>>2]=b,Ck(f+30032|0,f+4144|0),b=l[4+(s=f+30040|0)>>2],s=l[s>>2],l[n>>2]=s,l[n+4>>2]=b,l[(n=f+4136|0)>>2]=s,l[n+4>>2]=b,n=l[f+30036>>2],b=l[f+30032>>2],l[f+4560>>2]=b,l[f+4564>>2]=n,l[f+4128>>2]=b,l[f+4132>>2]=n,!fn(Gb(f+4128|0),22982)){if(c=l[4+(n=f+4568|0)>>2],l[(b=f+4120|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+4564>>2],l[f+4112>>2]=l[f+4560>>2],l[f+4116>>2]=b,zb(f+4112|0),rn(f+4560|0),s=l[n+4>>2],l[(b=f+4104|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+4564>>2],l[f+4096>>2]=l[f+4560>>2],l[f+4100>>2]=b,6==(15&v[f+4096|0])){if(s=l[n+4>>2],l[(b=f+4088|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+4564>>2],l[f+4080>>2]=l[f+4560>>2],l[f+4084>>2]=n,Nb(f+30032|0,f+4080|0),s=l[4+(b=f+30040|0)>>2],l[(n=f+4072|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+30036>>2],l[f+4064>>2]=l[f+30032>>2],l[f+4068>>2]=n,!Zb(f+4064|0)){if(c=l[4+(n=f+4568|0)>>2],l[(b=f+4056|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+4564>>2],l[f+4048>>2]=l[f+4560>>2],l[f+4052>>2]=b,Nb(f+25936|0,f+4048|0),c=l[4+(s=f+25944|0)>>2],l[(b=f+4040|0)>>2]=l[s>>2],l[b+4>>2]=c,b=l[f+25940>>2],l[f+4032>>2]=l[f+25936>>2],l[f+4036>>2]=b,!Zb(f+4032|0)){if(l[(b=f+25904|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=42,s=l[n+4>>2],l[(b=f+4024|0)>>2]=l[n>>2],l[b+4>>2]=s,c=l[4+(s=f+25912|0)>>2],l[(b=f+4008|0)>>2]=l[s>>2],l[b+4>>2]=c,b=l[f+4564>>2],l[f+4016>>2]=l[f+4560>>2],l[f+4020>>2]=b,b=l[f+25908>>2],l[f+4e3>>2]=l[f+25904>>2],l[f+4004>>2]=b,Vb(f+25920|0,f+4016|0,f+4e3|0),s=l[4+(b=f+25928|0)>>2],c=l[b>>2],l[n>>2]=c,l[n+4>>2]=s,l[(n=f+3992|0)>>2]=c,l[n+4>>2]=s,n=l[f+25924>>2],s=l[f+25920>>2],l[f+4560>>2]=s,l[f+4564>>2]=n,l[f+3984>>2]=s,l[f+3988>>2]=n,Nb(f+25920|0,f+3984|0),s=l[b+4>>2],l[(n=f+3976|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25924>>2],l[f+3968>>2]=l[f+25920>>2],l[f+3972>>2]=n,1==(0|Zb(f+3968|0))){if(c=l[4+(n=f+4568|0)>>2],l[(b=f+3960|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+4564>>2],l[f+3952>>2]=l[f+4560>>2],l[f+3956>>2]=b,Nb(f+25872|0,f+3952|0),c=l[4+(s=f+25880|0)>>2],l[(b=f+3944|0)>>2]=l[s>>2],l[b+4>>2]=c,b=l[f+25876>>2],l[f+3936>>2]=l[f+25872>>2],l[f+3940>>2]=b,Kb(f+25888|0,f+3936|0,0),c=l[4+(s=f+25896|0)>>2],l[(b=f+3928|0)>>2]=l[s>>2],l[b+4>>2]=c,b=l[f+25892>>2],l[f+3920>>2]=l[f+25888>>2],l[f+3924>>2]=b,42==Wb(f+3920|0)){if(rn(f+25840|0),l[(b=f+25824|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=42,c=l[4+(s=f+25848|0)>>2],l[(b=f+3912|0)>>2]=l[s>>2],l[b+4>>2]=c,c=l[4+(s=f+25832|0)>>2],l[(b=f+3896|0)>>2]=l[s>>2],l[b+4>>2]=c,b=l[f+25844>>2],l[f+3904>>2]=l[f+25840>>2],l[f+3908>>2]=b,b=l[f+25828>>2],l[f+3888>>2]=l[f+25824>>2],l[f+3892>>2]=b,Vb(f+25856|0,f+3904|0,f+3888|0),s=l[n+4>>2],l[(b=f+3880|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+4564>>2],l[f+3872>>2]=l[f+4560>>2],l[f+3876>>2]=b,Nb(f+25808|0,f+3872|0),s=l[n+4>>2],l[(b=f+3864|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+4564>>2],l[f+3856>>2]=l[f+4560>>2],l[f+3860>>2]=n,Nb(f+25792|0,f+3856|0),s=l[4+(b=f+25816|0)>>2],l[(n=f+3848|0)>>2]=l[b>>2],l[n+4>>2]=s,s=l[4+(b=f+25800|0)>>2],l[(n=f+3832|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25812>>2],l[f+3840>>2]=l[f+25808>>2],l[f+3844>>2]=n,n=l[f+25796>>2],l[f+3824>>2]=l[f+25792>>2],l[f+3828>>2]=n,gn(f+3840|0,f+3824|0)){if(c=l[4+(n=f+25864|0)>>2],l[(b=f+3816|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+25860>>2],l[f+3808>>2]=l[f+25856>>2],l[f+3812>>2]=b,Nb(f+25776|0,f+3808|0),s=l[n+4>>2],l[(b=f+3800|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+25860>>2],l[f+3792>>2]=l[f+25856>>2],l[f+3796>>2]=b,Nb(f+25760|0,f+3792|0),c=l[4+(s=f+25784|0)>>2],l[(b=f+3784|0)>>2]=l[s>>2],l[b+4>>2]=c,c=l[4+(s=f+25768|0)>>2],l[(b=f+3768|0)>>2]=l[s>>2],l[b+4>>2]=c,b=l[f+25780>>2],l[f+3776>>2]=l[f+25776>>2],l[f+3780>>2]=b,b=l[f+25764>>2],l[f+3760>>2]=l[f+25760>>2],l[f+3764>>2]=b,gn(f+3776|0,f+3760|0)){if(c=l[4+(s=f+4568|0)>>2],l[(b=f+3752|0)>>2]=l[s>>2],l[b+4>>2]=c,b=l[f+4564>>2],l[f+3744>>2]=l[f+4560>>2],l[f+3748>>2]=b,Nb(f+25744|0,f+3744|0),s=l[n+4>>2],l[(b=f+3736|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+25860>>2],l[f+3728>>2]=l[f+25856>>2],l[f+3732>>2]=n,Nb(f+25728|0,f+3728|0),s=l[4+(b=f+25752|0)>>2],l[(n=f+3720|0)>>2]=l[b>>2],l[n+4>>2]=s,s=l[4+(b=f+25736|0)>>2],l[(n=f+3704|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25748>>2],l[f+3712>>2]=l[f+25744>>2],l[f+3716>>2]=n,n=l[f+25732>>2],l[f+3696>>2]=l[f+25728>>2],l[f+3700>>2]=n,gn(f+3712|0,f+3696|0)){if(c=l[4+(n=f+25864|0)>>2],l[(b=f+3688|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+25860>>2],l[f+3680>>2]=l[f+25856>>2],l[f+3684>>2]=b,Nb(f+25712|0,f+3680|0),t=l[4+(b=f+4568|0)>>2],l[(s=f+3672|0)>>2]=l[b>>2],l[s+4>>2]=t,s=l[f+4564>>2],l[f+3664>>2]=l[f+4560>>2],l[f+3668>>2]=s,Nb(f+25696|0,f+3664|0),t=l[4+(c=f+25720|0)>>2],l[(s=f+3656|0)>>2]=l[c>>2],l[s+4>>2]=t,t=l[4+(c=f+25704|0)>>2],l[(s=f+3640|0)>>2]=l[c>>2],l[s+4>>2]=t,s=l[f+25716>>2],l[f+3648>>2]=l[f+25712>>2],l[f+3652>>2]=s,s=l[f+25700>>2],l[f+3632>>2]=l[f+25696>>2],l[f+3636>>2]=s,gn(f+3648|0,f+3632|0)){if(c=l[n+4>>2],l[(s=f+3624|0)>>2]=l[n>>2],l[s+4>>2]=c,s=l[f+25860>>2],l[f+3616>>2]=l[f+25856>>2],l[f+3620>>2]=s,zb(f+3616|0),rn(f+25664|0),l[(s=f+25648|0)>>2]=4,l[s+4>>2]=0,m[s+8>>3]=19,t=l[4+(c=f+25672|0)>>2],l[(s=f+3608|0)>>2]=l[c>>2],l[s+4>>2]=t,t=l[4+(c=f+25656|0)>>2],l[(s=f+3592|0)>>2]=l[c>>2],l[s+4>>2]=t,s=l[f+25668>>2],l[f+3600>>2]=l[f+25664>>2],l[f+3604>>2]=s,s=l[f+25652>>2],l[f+3584>>2]=l[f+25648>>2],l[f+3588>>2]=s,Vb(f+25680|0,f+3600|0,f+3584|0),t=l[4+(s=f+25688|0)>>2],l[n>>2]=l[s>>2],l[n+4>>2]=t,t=l[b+4>>2],l[(c=f+3576|0)>>2]=l[b>>2],l[c+4>>2]=t,b=l[f+25684>>2],l[f+25856>>2]=l[f+25680>>2],l[f+25860>>2]=b,b=l[f+4564>>2],l[f+3568>>2]=l[f+4560>>2],l[f+3572>>2]=b,Nb(f+25680|0,f+3568|0),c=l[n+4>>2],l[(b=f+3560|0)>>2]=l[n>>2],l[b+4>>2]=c,n=l[f+25860>>2],l[f+3552>>2]=l[f+25856>>2],l[f+3556>>2]=n,Nb(f+25632|0,f+3552|0),b=l[s+4>>2],l[(n=f+3544|0)>>2]=l[s>>2],l[n+4>>2]=b,s=l[4+(b=f+25640|0)>>2],l[(n=f+3528|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25684>>2],l[f+3536>>2]=l[f+25680>>2],l[f+3540>>2]=n,n=l[f+25636>>2],l[f+3520>>2]=l[f+25632>>2],l[f+3524>>2]=n,!gn(f+3536|0,f+3520|0)){if(c=l[4+(n=f+25864|0)>>2],l[(b=f+3512|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+25860>>2],l[f+3504>>2]=l[f+25856>>2],l[f+3508>>2]=b,Nb(f+25616|0,f+3504|0),t=l[4+(b=f+4568|0)>>2],l[(s=f+3496|0)>>2]=l[b>>2],l[s+4>>2]=t,s=l[f+4564>>2],l[f+3488>>2]=l[f+4560>>2],l[f+3492>>2]=s,Nb(f+25600|0,f+3488|0),t=l[4+(c=f+25624|0)>>2],l[(s=f+3480|0)>>2]=l[c>>2],l[s+4>>2]=t,t=l[4+(c=f+25608|0)>>2],l[(s=f+3464|0)>>2]=l[c>>2],l[s+4>>2]=t,s=l[f+25620>>2],l[f+3472>>2]=l[f+25616>>2],l[f+3476>>2]=s,s=l[f+25604>>2],l[f+3456>>2]=l[f+25600>>2],l[f+3460>>2]=s,!gn(f+3472|0,f+3456|0)){if(c=l[n+4>>2],l[(s=f+3448|0)>>2]=l[n>>2],l[s+4>>2]=c,n=l[f+25860>>2],l[f+3440>>2]=l[f+25856>>2],l[f+3444>>2]=n,zb(f+3440|0),s=l[b+4>>2],l[(n=f+3432|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+4564>>2],l[f+3424>>2]=l[f+4560>>2],l[f+3428>>2]=n,1==(0|(s=(15&v[0|(n=f+3424|0)])-5>>>0<=2?l[l[n+8>>2]>>2]:1))){if(c=l[4+(n=f+4568|0)>>2],l[(b=f+3416|0)>>2]=l[n>>2],l[b+4>>2]=c,b=l[f+4564>>2],l[f+3408>>2]=l[f+4560>>2],l[f+3412>>2]=b,Nb(f+25568|0,f+3408|0),s=l[n+4>>2],l[(b=f+3400|0)>>2]=l[n>>2],l[b+4>>2]=s,c=l[4+(s=f+25576|0)>>2],l[(b=f+3384|0)>>2]=l[s>>2],l[b+4>>2]=c,b=l[f+4564>>2],l[f+3392>>2]=l[f+4560>>2],l[f+3396>>2]=b,b=l[f+25572>>2],l[f+3376>>2]=l[f+25568>>2],l[f+3380>>2]=b,Vb(f+25584|0,f+3392|0,f+3376|0),s=l[4+(b=f+25592|0)>>2],c=l[b>>2],l[n>>2]=c,l[n+4>>2]=s,l[(t=f+3368|0)>>2]=c,l[t+4>>2]=s,s=l[f+25588>>2],c=l[f+25584>>2],l[f+4560>>2]=c,l[f+4564>>2]=s,l[f+3360>>2]=c,l[f+3364>>2]=s,1==(0|(s=(15&v[0|(s=f+3360|0)])-5>>>0<=2?l[l[s+8>>2]>>2]:1))){if(c=l[n+4>>2],l[(s=f+3352|0)>>2]=l[n>>2],l[s+4>>2]=c,n=l[f+4564>>2],l[f+3344>>2]=l[f+4560>>2],l[f+3348>>2]=n,Nb(f+25584|0,f+3344|0),s=l[b+4>>2],l[(n=f+3336|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25588>>2],l[f+3328>>2]=l[f+25584>>2],l[f+3332>>2]=n,2==(0|Zb(f+3328|0))){c=l[4+(b=s=f+4568|0)>>2],l[(n=f+3320|0)>>2]=l[b>>2],l[n+4>>2]=c,n=l[f+4564>>2],l[f+3312>>2]=l[f+4560>>2],l[f+3316>>2]=n,Nb(f+25536|0,f+3312|0),c=l[4+(b=f+25544|0)>>2],l[(n=f+3304|0)>>2]=l[b>>2],l[n+4>>2]=c,n=l[f+25540>>2],l[f+3296>>2]=l[f+25536>>2],l[f+3300>>2]=n,Kb(f+25552|0,f+3296|0,0),c=l[4+(b=f+25560|0)>>2],l[(n=f+3288|0)>>2]=l[b>>2],l[n+4>>2]=c,n=l[f+25556>>2],l[f+3280>>2]=l[f+25552>>2],l[f+3284>>2]=n;e:{r:{a:{i:{f:{k:{b:{n:{s:{t:{c:{o:{u:{l:{v:{d:{h:{m:{w:{p:{g:{y:{E:{_:{D:{S:{F:{M:{A:{x:{P:{T:{R:{O:{I:{z:{N:{j:{U:{B:{C:{L:{H:{q:{if(42==Wb(f+3280|0)){for(c=l[75259],n=0;;){if(t=l[s+4>>2],l[(b=f+3272|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+4564>>2],l[f+3264>>2]=l[f+4560>>2],l[f+3268>>2]=b,Nb(f+25504|0,f+3264|0),o=l[4+(t=f+25512|0)>>2],l[(b=f+3256|0)>>2]=l[t>>2],l[b+4>>2]=o,b=l[f+25508>>2],l[f+3248>>2]=l[f+25504>>2],l[f+3252>>2]=b,Kb(f+25520|0,f+3248|0,1),h=l[4+(b=f+25528|0)>>2],l[(t=f+3240|0)>>2]=l[b>>2],l[t+4>>2]=h,t=l[f+25524>>2],l[f+3232>>2]=l[f+25520>>2],l[f+3236>>2]=t,6!=(15&v[f+3232|0]))break e;if(o=l[b+4>>2],l[(t=f+3224|0)>>2]=l[b>>2],l[t+4>>2]=o,t=l[f+25524>>2],l[f+3216>>2]=l[f+25520>>2],l[f+3220>>2]=t,Nb(f+25488|0,f+3216|0),h=l[4+(o=f+25496|0)>>2],l[(t=f+3208|0)>>2]=l[o>>2],l[t+4>>2]=h,t=l[f+25492>>2],l[f+3200>>2]=l[f+25488>>2],l[f+3204>>2]=t,1!=(0|Zb(f+3200|0)))break r;if(o=l[b+4>>2],l[(t=f+3192|0)>>2]=l[b>>2],l[t+4>>2]=o,t=l[f+25524>>2],l[f+3184>>2]=l[f+25520>>2],l[f+3188>>2]=t,Nb(f+25456|0,f+3184|0),h=l[4+(o=f+25464|0)>>2],l[(t=f+3176|0)>>2]=l[o>>2],l[t+4>>2]=h,t=l[f+25460>>2],l[f+3168>>2]=l[f+25456>>2],l[f+3172>>2]=t,Kb(f+25472|0,f+3168|0,0),h=l[4+(o=f+25480|0)>>2],l[(t=f+3160|0)>>2]=l[o>>2],l[t+4>>2]=h,t=l[f+25476>>2],l[f+3152>>2]=l[f+25472>>2],l[f+3156>>2]=t,42!=Wb(f+3152|0))break a;if(o=l[b+4>>2],l[(t=f+3144|0)>>2]=l[b>>2],l[t+4>>2]=o,b=l[f+25524>>2],l[f+3136>>2]=l[f+25520>>2],l[f+3140>>2]=b,zb(f+3136|0),10==(0|(n=n+1|0)))break}if(s=l[4+(b=f+4568|0)>>2],l[(n=f+3128|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+4564>>2],l[f+3120>>2]=l[f+4560>>2],l[f+3124>>2]=n,Nb(f+25440|0,f+3120|0),s=l[4+(b=f+25448|0)>>2],l[(n=f+3112|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25444>>2],l[f+3104>>2]=l[f+25440>>2],l[f+3108>>2]=n,Kb(f+25520|0,f+3104|0,1),t=l[4+(n=f+25528|0)>>2],l[(b=f+3096|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+25524>>2],l[f+3088>>2]=l[f+25520>>2],l[f+3092>>2]=b,6!=(15&v[f+3088|0]))break i;if(s=l[n+4>>2],l[(b=f+3080|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+25524>>2],l[f+3072>>2]=l[f+25520>>2],l[f+3076>>2]=n,Nb(f+25424|0,f+3072|0),s=l[4+(b=f+25432|0)>>2],l[(n=f+3064|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25428>>2],l[f+3056>>2]=l[f+25424>>2],l[f+3060>>2]=n,1!=(0|Zb(f+3056|0)))break f;if(t=l[4+(n=f+25528|0)>>2],l[(b=f+3048|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+25524>>2],l[f+3040>>2]=l[f+25520>>2],l[f+3044>>2]=b,Nb(f+25392|0,f+3040|0),t=l[4+(s=f+25400|0)>>2],l[(b=f+3032|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25396>>2],l[f+3024>>2]=l[f+25392>>2],l[f+3028>>2]=b,Kb(f+25408|0,f+3024|0,0),t=l[4+(s=f+25416|0)>>2],l[(b=f+3016|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25412>>2],l[f+3008>>2]=l[f+25408>>2],l[f+3012>>2]=b,42!=Wb(f+3008|0))break k;if(s=l[n+4>>2],l[(b=f+3e3|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+25524>>2],l[f+2992>>2]=l[f+25520>>2],l[f+2996>>2]=n,Nb(f+25376|0,f+2992|0),l[(n=f+25344|0)>>2]=4,l[n+4>>2]=0,m[n+8>>3]=19,t=l[4+(n=f+25384|0)>>2],l[(b=f+2984|0)>>2]=l[n>>2],l[b+4>>2]=t,t=l[4+(s=f+25352|0)>>2],l[(b=f+2968|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25380>>2],l[f+2976>>2]=l[f+25376>>2],l[f+2980>>2]=b,b=l[f+25348>>2],l[f+2960>>2]=l[f+25344>>2],l[f+2964>>2]=b,Vb(f+25360|0,f+2976|0,f+2960|0),b=l[4+(s=f+25368|0)>>2],s=l[s>>2],l[n>>2]=s,l[n+4>>2]=b,l[(n=f+2952|0)>>2]=s,l[n+4>>2]=b,n=l[f+25364>>2],b=l[f+25360>>2],l[f+25376>>2]=b,l[f+25380>>2]=n,l[f+2944>>2]=b,l[f+2948>>2]=n,6!=(15&v[f+2944|0]))break b;if(t=l[4+(n=f+25384|0)>>2],l[(b=f+2936|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+25380>>2],l[f+2928>>2]=l[f+25376>>2],l[f+2932>>2]=b,Nb(f+25360|0,f+2928|0),t=l[4+(s=f+25368|0)>>2],l[(b=f+2920|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25364>>2],l[f+2912>>2]=l[f+25360>>2],l[f+2916>>2]=b,2!=(0|Zb(f+2912|0)))break n;if(s=l[n+4>>2],l[(b=f+2904|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+25380>>2],l[f+2896>>2]=l[f+25376>>2],l[f+2900>>2]=n,Nb(f+25312|0,f+2896|0),s=l[4+(b=f+25320|0)>>2],l[(n=f+2888|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25316>>2],l[f+2880>>2]=l[f+25312>>2],l[f+2884>>2]=n,Kb(f+25328|0,f+2880|0,0),s=l[4+(b=f+25336|0)>>2],l[(n=f+2872|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25332>>2],l[f+2864>>2]=l[f+25328>>2],l[f+2868>>2]=n,42!=Wb(f+2864|0))break s;if(s=l[4+(b=f+25384|0)>>2],l[(n=f+2856|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25380>>2],l[f+2848>>2]=l[f+25376>>2],l[f+2852>>2]=n,Nb(f+25280|0,f+2848|0),s=l[4+(b=f+25288|0)>>2],l[(n=f+2840|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25284>>2],l[f+2832>>2]=l[f+25280>>2],l[f+2836>>2]=n,Kb(f+25296|0,f+2832|0,1),s=l[4+(b=f+25304|0)>>2],l[(n=f+2824|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25300>>2],l[f+2816>>2]=l[f+25296>>2],l[f+2820>>2]=n,19!=Wb(f+2816|0))break t;if(s=l[4+(b=f+25528|0)>>2],l[(n=f+2808|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25524>>2],l[f+2800>>2]=l[f+25520>>2],l[f+2804>>2]=n,6!=(15&v[f+2800|0]))break c;if(t=l[4+(n=f+25528|0)>>2],l[(b=f+2792|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+25524>>2],l[f+2784>>2]=l[f+25520>>2],l[f+2788>>2]=b,Nb(f+25264|0,f+2784|0),t=l[4+(s=f+25272|0)>>2],l[(b=f+2776|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25268>>2],l[f+2768>>2]=l[f+25264>>2],l[f+2772>>2]=b,1!=(0|Zb(f+2768|0)))break o;if(s=l[n+4>>2],l[(b=f+2760|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+25524>>2],l[f+2752>>2]=l[f+25520>>2],l[f+2756>>2]=n,Nb(f+25232|0,f+2752|0),s=l[4+(b=f+25240|0)>>2],l[(n=f+2744|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25236>>2],l[f+2736>>2]=l[f+25232>>2],l[f+2740>>2]=n,Kb(f+25248|0,f+2736|0,0),s=l[4+(b=f+25256|0)>>2],l[(n=f+2728|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25252>>2],l[f+2720>>2]=l[f+25248>>2],l[f+2724>>2]=n,42!=Wb(f+2720|0))break u;if(s=l[4+(b=f+25528|0)>>2],l[(n=f+2712|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25524>>2],l[f+2704>>2]=l[f+25520>>2],l[f+2708>>2]=n,zb(f+2704|0),b=l[f+25384>>2],l[(n=f+25200|0)>>2]=4,l[n+4>>2]=0,m[n+8>>3]=200,s=l[f+25388>>2],l[(n=f+2696|0)>>2]=l[f+25384>>2],l[n+4>>2]=s,t=l[4+(s=f+25208|0)>>2],l[(n=f+2680|0)>>2]=l[s>>2],l[n+4>>2]=t,n=l[f+25380>>2],l[f+2688>>2]=l[f+25376>>2],l[f+2692>>2]=n,n=l[f+25204>>2],l[f+2672>>2]=l[f+25200>>2],l[f+2676>>2]=n,Vb(f+25216|0,f+2688|0,f+2672|0),t=l[4+(n=f+25224|0)>>2],s=l[n>>2],l[f+25384>>2]=s,l[f+25388>>2]=t,t=l[f+25220>>2],l[f+25376>>2]=l[f+25216>>2],l[f+25380>>2]=t,(0|b)!=(0|s))break l;if(t=l[4+(s=f+25384|0)>>2],l[(b=f+2664|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25380>>2],l[f+2656>>2]=l[f+25376>>2],l[f+2660>>2]=b,zb(f+2656|0),t=l[4+(s=f+4568|0)>>2],l[(b=f+2648|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+4564>>2],l[f+2640>>2]=l[f+4560>>2],l[f+2644>>2]=b,Nb(f+25184|0,f+2640|0),l[(b=f+25168|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=19,t=l[4+(s=f+25192|0)>>2],l[(b=f+2632|0)>>2]=l[s>>2],l[b+4>>2]=t,t=l[4+(s=f+25176|0)>>2],l[(b=f+2616|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25188>>2],l[f+2624>>2]=l[f+25184>>2],l[f+2628>>2]=b,b=l[f+25172>>2],l[f+2608>>2]=l[f+25168>>2],l[f+2612>>2]=b,Vb(f+25216|0,f+2624|0,f+2608|0),s=l[n+4>>2],l[(b=f+2600|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+25220>>2],l[f+2592>>2]=l[f+25216>>2],l[f+2596>>2]=n,Nb(f+25152|0,f+2592|0),s=l[4+(b=f+25160|0)>>2],l[(n=f+2584|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25156>>2],l[f+2576>>2]=l[f+25152>>2],l[f+2580>>2]=n,3!=(0|Zb(f+2576|0)))break v;if(t=l[4+(n=f+25224|0)>>2],l[(b=f+2568|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+25220>>2],l[f+2560>>2]=l[f+25216>>2],l[f+2564>>2]=b,Nb(f+25120|0,f+2560|0),t=l[4+(s=f+25128|0)>>2],l[(b=f+2552|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25124>>2],l[f+2544>>2]=l[f+25120>>2],l[f+2548>>2]=b,Kb(f+25136|0,f+2544|0,0),t=l[4+(s=f+25144|0)>>2],l[(b=f+2536|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25140>>2],l[f+2528>>2]=l[f+25136>>2],l[f+2532>>2]=b,42!=Wb(f+2528|0))break d;if(s=l[n+4>>2],l[(b=f+2520|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+25220>>2],l[f+2512>>2]=l[f+25216>>2],l[f+2516>>2]=n,Nb(f+25088|0,f+2512|0),s=l[4+(b=f+25096|0)>>2],l[(n=f+2504|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25092>>2],l[f+2496>>2]=l[f+25088>>2],l[f+2500>>2]=n,Kb(f+25104|0,f+2496|0,1),s=l[4+(b=f+25112|0)>>2],l[(n=f+2488|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25108>>2],l[f+2480>>2]=l[f+25104>>2],l[f+2484>>2]=n,1!=(0|Zb(f+2480|0)))break h;if(t=l[4+(n=f+25224|0)>>2],l[(b=f+2472|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+25220>>2],l[f+2464>>2]=l[f+25216>>2],l[f+2468>>2]=b,Nb(f+25056|0,f+2464|0),t=l[4+(s=f+25064|0)>>2],l[(b=f+2456|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25060>>2],l[f+2448>>2]=l[f+25056>>2],l[f+2452>>2]=b,Kb(f+25072|0,f+2448|0,2),t=l[4+(s=f+25080|0)>>2],l[(b=f+2440|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25076>>2],l[f+2432>>2]=l[f+25072>>2],l[f+2436>>2]=b,19!=Wb(f+2432|0))break m;if(s=l[n+4>>2],l[(b=f+2424|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+25220>>2],l[f+2416>>2]=l[f+25216>>2],l[f+2420>>2]=n,zb(f+2416|0),rn(f+25040|0),l[(n=f+25008|0)>>2]=4,l[n+4>>2]=0,m[n+8>>3]=1,t=l[4+(n=f+25048|0)>>2],l[(b=f+2408|0)>>2]=l[n>>2],l[b+4>>2]=t,t=l[4+(s=f+25016|0)>>2],l[(b=f+2392|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25044>>2],l[f+2400>>2]=l[f+25040>>2],l[f+2404>>2]=b,b=l[f+25012>>2],l[f+2384>>2]=l[f+25008>>2],l[f+2388>>2]=b,Vb(f+25024|0,f+2400|0,f+2384|0),t=l[4+(b=f+25032|0)>>2],l[n>>2]=l[b>>2],l[n+4>>2]=t,s=l[f+25028>>2],l[f+25040>>2]=l[f+25024>>2],l[f+25044>>2]=s,l[(s=f+24992|0)>>2]=4,l[s+4>>2]=0,m[s+8>>3]=2,t=l[n+4>>2],l[(s=f+2376|0)>>2]=l[n>>2],l[s+4>>2]=t,o=l[4+(t=f+25e3|0)>>2],l[(s=f+2360|0)>>2]=l[t>>2],l[s+4>>2]=o,s=l[f+25044>>2],l[f+2368>>2]=l[f+25040>>2],l[f+2372>>2]=s,s=l[f+24996>>2],l[f+2352>>2]=l[f+24992>>2],l[f+2356>>2]=s,Vb(f+25024|0,f+2368|0,f+2352|0),s=l[b+4>>2],b=l[b>>2],l[n>>2]=b,l[n+4>>2]=s,l[(t=f+2344|0)>>2]=b,l[t+4>>2]=s,b=l[f+25028>>2],s=l[f+25024>>2],l[f+25040>>2]=s,l[f+25044>>2]=b,l[f+2336>>2]=s,l[f+2340>>2]=b,Nb(f+25024|0,f+2336|0),l[(b=f+24960|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=3,s=l[n+4>>2],l[(b=f+2328|0)>>2]=l[n>>2],l[b+4>>2]=s,t=l[4+(s=f+24968|0)>>2],l[(b=f+2312|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25044>>2],l[f+2320>>2]=l[f+25040>>2],l[f+2324>>2]=b,b=l[f+24964>>2],l[f+2304>>2]=l[f+24960>>2],l[f+2308>>2]=b,Vb(f+24976|0,f+2320|0,f+2304|0),s=l[4+(b=f+24984|0)>>2],t=l[b>>2],l[n>>2]=t,l[n+4>>2]=s,l[(o=f+2296|0)>>2]=t,l[o+4>>2]=s,s=l[f+24980>>2],t=l[f+24976>>2],l[f+25040>>2]=t,l[f+25044>>2]=s,l[f+2288>>2]=t,l[f+2292>>2]=s,eb(f+24976|0,f+2288|0,0,1),s=l[b+4>>2],t=l[b>>2],l[n>>2]=t,l[n+4>>2]=s,l[(n=f+2280|0)>>2]=t,l[n+4>>2]=s,n=l[f+24980>>2],s=l[f+24976>>2],l[f+25040>>2]=s,l[f+25044>>2]=n,l[f+2272>>2]=s,l[f+2276>>2]=n,Nb(f+24976|0,f+2272|0),s=l[b+4>>2],l[(n=f+2264|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24980>>2],l[f+2256>>2]=l[f+24976>>2],l[f+2260>>2]=n,1!=(0|Zb(f+2256|0)))break w;if(l[(n=f+24928|0)>>2]=4,l[n+4>>2]=0,m[n+8>>3]=4,t=l[4+(n=f+25048|0)>>2],l[(b=f+2248|0)>>2]=l[n>>2],l[b+4>>2]=t,t=l[4+(s=f+24936|0)>>2],l[(b=f+2232|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+25044>>2],l[f+2240>>2]=l[f+25040>>2],l[f+2244>>2]=b,b=l[f+24932>>2],l[f+2224>>2]=l[f+24928>>2],l[f+2228>>2]=b,Vb(f+24944|0,f+2240|0,f+2224|0),s=l[4+(b=f+24952|0)>>2],t=l[b>>2],l[n>>2]=t,l[n+4>>2]=s,l[(n=f+2216|0)>>2]=t,l[n+4>>2]=s,n=l[f+24948>>2],s=l[f+24944>>2],l[f+25040>>2]=s,l[f+25044>>2]=n,l[f+2208>>2]=s,l[f+2212>>2]=n,Nb(f+24944|0,f+2208|0),s=l[b+4>>2],l[(n=f+2200|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24948>>2],l[f+2192>>2]=l[f+24944>>2],l[f+2196>>2]=n,2!=(0|Zb(f+2192|0)))break p;if(s=l[4+(b=f+25032|0)>>2],l[(n=f+2184|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25028>>2],l[f+2176>>2]=l[f+25024>>2],l[f+2180>>2]=n,Nb(f+24912|0,f+2176|0),s=l[4+(b=f+24920|0)>>2],l[(n=f+2168|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24916>>2],l[f+2160>>2]=l[f+24912>>2],l[f+2164>>2]=n,2!=(0|Zb(f+2160|0)))break g;if(s=l[4+(b=f+25048|0)>>2],l[(n=f+2152|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25044>>2],l[f+2144>>2]=l[f+25040>>2],l[f+2148>>2]=n,zb(f+2144|0),s=l[4+(b=f+25032|0)>>2],l[(n=f+2136|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25028>>2],l[f+2128>>2]=l[f+25024>>2],l[f+2132>>2]=n,zb(f+2128|0),t=l[4+(n=f+4568|0)>>2],l[(b=f+2120|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+4564>>2],l[f+2112>>2]=l[f+4560>>2],l[f+2116>>2]=b,Nb(f+24896|0,f+2112|0),t=l[4+(s=f+24904|0)>>2],l[(b=f+2104|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24900>>2],l[f+2096>>2]=l[f+24896>>2],l[f+2100>>2]=b,2!=(0|Zb(f+2096|0)))break y;if(s=l[n+4>>2],l[(b=f+2088|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+4564>>2],l[f+2080>>2]=l[f+4560>>2],l[f+2084>>2]=n,Nb(f+24864|0,f+2080|0),s=l[4+(b=f+24872|0)>>2],l[(n=f+2072|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24868>>2],l[f+2064>>2]=l[f+24864>>2],l[f+2068>>2]=n,Kb(f+24880|0,f+2064|0,0),s=l[4+(b=f+24888|0)>>2],l[(n=f+2056|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24884>>2],l[f+2048>>2]=l[f+24880>>2],l[f+2052>>2]=n,42!=Wb(f+2048|0))break E;if(t=l[4+(n=f+4568|0)>>2],l[(b=f+2040|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+4564>>2],l[f+2032>>2]=l[f+4560>>2],l[f+2036>>2]=b,Nb(f+24832|0,f+2032|0),t=l[4+(s=f+24840|0)>>2],l[(b=f+2024|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24836>>2],l[f+2016>>2]=l[f+24832>>2],l[f+2020>>2]=b,Kb(f+24848|0,f+2016|0,1),t=l[4+(s=f+24856|0)>>2],l[(b=f+2008|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24852>>2],l[f+2e3>>2]=l[f+24848>>2],l[f+2004>>2]=b,1!=(0|Zb(f+2e3|0)))break _;if(s=l[n+4>>2],l[(b=f+1992|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+4564>>2],l[f+1984>>2]=l[f+4560>>2],l[f+1988>>2]=n,zb(f+1984|0),jb(f+25856|0,29994),Uk(f+25520|0,29994,3),s=l[4+(b=f+25864|0)>>2],l[(n=f+1976|0)>>2]=l[b>>2],l[n+4>>2]=s,s=l[4+(b=f+25528|0)>>2],l[(n=f+1960|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25860>>2],l[f+1968>>2]=l[f+25856>>2],l[f+1972>>2]=n,n=l[f+25524>>2],l[f+1952>>2]=l[f+25520>>2],l[f+1956>>2]=n,!gn(f+1968|0,f+1952|0))break D;if(k[f+4468|0]=v[43256],l[f+4464>>2]=v[43252]|v[43253]<<8|v[43254]<<16|v[43255]<<24,jb(f+25376|0,f+4464|0),Uk(f+25216|0,f+4464|0,5),s=l[4+(b=f+25384|0)>>2],l[(n=f+1944|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25380>>2],l[f+1936>>2]=l[f+25376>>2],l[f+1940>>2]=n,Nb(f+25040|0,f+1936|0),s=l[4+(b=f+25048|0)>>2],l[(n=f+1928|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25044>>2],l[f+1920>>2]=l[f+25040>>2],l[f+1924>>2]=n,(0|vn(f+1920|0))!=(0|on(f+4464|0)))break S;if(s=l[4+(b=f+25224|0)>>2],l[(n=f+1912|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25220>>2],l[f+1904>>2]=l[f+25216>>2],l[f+1908>>2]=n,Nb(f+25024|0,f+1904|0),s=l[4+(b=f+25032|0)>>2],l[(n=f+1896|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25028>>2],l[f+1888>>2]=l[f+25024>>2],l[f+1892>>2]=n,5!=(0|vn(f+1888|0)))break F;if(s=l[4+(b=f+25384|0)>>2],l[(n=f+1880|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25380>>2],l[f+1872>>2]=l[f+25376>>2],l[f+1876>>2]=n,zb(f+1872|0),s=l[4+(b=f+25224|0)>>2],l[(n=f+1864|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+25220>>2],l[f+1856>>2]=l[f+25216>>2],l[f+1860>>2]=n,zb(f+1856|0),n=v[43261]|v[43262]<<8,u[f+4500>>1]=n,b=v[43257]|v[43258]<<8|v[43259]<<16|v[43260]<<24,l[f+4496>>2]=b,u[f+4484>>1]=n,l[f+4480>>2]=b,l[f+4512>>2]=1685024615,l[f+4516>>2]=6650210,jb(f+24816|0,f+4496|0),jb(f+24800|0,f+4480|0),jb(f+24784|0,f+4512|0),t=l[4+(n=f+24824|0)>>2],l[(b=f+1848|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+24820>>2],l[f+1840>>2]=l[f+24816>>2],l[f+1844>>2]=b,Nb(f+24768|0,f+1840|0),o=l[4+(b=f+24808|0)>>2],l[(s=f+1832|0)>>2]=l[b>>2],l[s+4>>2]=o,s=l[f+24804>>2],l[f+1824>>2]=l[f+24800>>2],l[f+1828>>2]=s,Nb(f+24752|0,f+1824|0),o=l[4+(t=f+24776|0)>>2],l[(s=f+1816|0)>>2]=l[t>>2],l[s+4>>2]=o,o=l[4+(t=f+24760|0)>>2],l[(s=f+1800|0)>>2]=l[t>>2],l[s+4>>2]=o,s=l[f+24772>>2],l[f+1808>>2]=l[f+24768>>2],l[f+1812>>2]=s,s=l[f+24756>>2],l[f+1792>>2]=l[f+24752>>2],l[f+1796>>2]=s,!gn(f+1808|0,f+1792|0))break M;if(t=l[b+4>>2],l[(s=f+1784|0)>>2]=l[b>>2],l[s+4>>2]=t,b=l[f+24804>>2],l[f+1776>>2]=l[f+24800>>2],l[f+1780>>2]=b,Nb(f+24736|0,f+1776|0),s=l[n+4>>2],l[(b=f+1768|0)>>2]=l[n>>2],l[b+4>>2]=s,n=l[f+24820>>2],l[f+1760>>2]=l[f+24816>>2],l[f+1764>>2]=n,Nb(f+24720|0,f+1760|0),s=l[4+(b=f+24744|0)>>2],l[(n=f+1752|0)>>2]=l[b>>2],l[n+4>>2]=s,s=l[4+(b=f+24728|0)>>2],l[(n=f+1736|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24740>>2],l[f+1744>>2]=l[f+24736>>2],l[f+1748>>2]=n,n=l[f+24724>>2],l[f+1728>>2]=l[f+24720>>2],l[f+1732>>2]=n,!gn(f+1744|0,f+1728|0))break A;if(t=l[4+(n=f+24824|0)>>2],l[(b=f+1720|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+24820>>2],l[f+1712>>2]=l[f+24816>>2],l[f+1716>>2]=b,Nb(f+24704|0,f+1712|0),t=l[4+(s=f+24792|0)>>2],l[(b=f+1704|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24788>>2],l[f+1696>>2]=l[f+24784>>2],l[f+1700>>2]=b,Nb(f+24688|0,f+1696|0),t=l[4+(s=f+24712|0)>>2],l[(b=f+1688|0)>>2]=l[s>>2],l[b+4>>2]=t,t=l[4+(s=f+24696|0)>>2],l[(b=f+1672|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24708>>2],l[f+1680>>2]=l[f+24704>>2],l[f+1684>>2]=b,b=l[f+24692>>2],l[f+1664>>2]=l[f+24688>>2],l[f+1668>>2]=b,gn(f+1680|0,f+1664|0))break x;if(s=l[n+4>>2],l[(b=f+1656|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+24820>>2],l[f+1648>>2]=l[f+24816>>2],l[f+1652>>2]=b,Nb(f+24672|0,f+1648|0),t=l[4+(s=f+24680|0)>>2],l[(b=f+1640|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24676>>2],l[f+1632>>2]=l[f+24672>>2],l[f+1636>>2]=b,b=Zi(f+1632|0),t=l[n+4>>2],l[(s=f+1624|0)>>2]=l[n>>2],l[s+4>>2]=t,n=l[f+24820>>2],l[f+1616>>2]=l[f+24816>>2],l[f+1620>>2]=n,Nb(f+24656|0,f+1616|0),t=l[4+(s=f+24664|0)>>2],l[(n=f+1608|0)>>2]=l[s>>2],l[n+4>>2]=t,n=l[f+24660>>2],l[f+1600>>2]=l[f+24656>>2],l[f+1604>>2]=n,(0|Zi(f+1600|0))!=(0|b))break P;if(t=l[4+(n=f+24824|0)>>2],l[(b=f+1592|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+24820>>2],l[f+1584>>2]=l[f+24816>>2],l[f+1588>>2]=b,Nb(f+24640|0,f+1584|0),t=l[4+(s=f+24648|0)>>2],l[(b=f+1576|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24644>>2],l[f+1568>>2]=l[f+24640>>2],l[f+1572>>2]=b,b=Zi(f+1568|0),o=l[4+(t=f+24808|0)>>2],l[(s=f+1560|0)>>2]=l[t>>2],l[s+4>>2]=o,s=l[f+24804>>2],l[f+1552>>2]=l[f+24800>>2],l[f+1556>>2]=s,Nb(f+24624|0,f+1552|0),o=l[4+(t=f+24632|0)>>2],l[(s=f+1544|0)>>2]=l[t>>2],l[s+4>>2]=o,s=l[f+24628>>2],l[f+1536>>2]=l[f+24624>>2],l[f+1540>>2]=s,(0|Zi(f+1536|0))!=(0|b))break T;if(t=l[4+(s=f+24792|0)>>2],l[(b=f+1528|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24788>>2],l[f+1520>>2]=l[f+24784>>2],l[f+1524>>2]=b,Nb(f+24608|0,f+1520|0),t=l[4+(s=f+24616|0)>>2],l[(b=f+1512|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+24612>>2],l[f+1504>>2]=l[f+24608>>2],l[f+1508>>2]=b,b=Zi(f+1504|0),t=l[n+4>>2],l[(s=f+1496|0)>>2]=l[n>>2],l[s+4>>2]=t,n=l[f+24820>>2],l[f+1488>>2]=l[f+24816>>2],l[f+1492>>2]=n,Nb(f+24592|0,f+1488|0),t=l[4+(s=f+24600|0)>>2],l[(n=f+1480|0)>>2]=l[s>>2],l[n+4>>2]=t,n=l[f+24596>>2],l[f+1472>>2]=l[f+24592>>2],l[f+1476>>2]=n,(0|Zi(f+1472|0))==(0|b))break R;if(s=l[4+(b=f+24824|0)>>2],l[(n=f+1464|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24820>>2],l[f+1456>>2]=l[f+24816>>2],l[f+1460>>2]=n,zb(f+1456|0),s=l[4+(b=f+24808|0)>>2],l[(n=f+1448|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24804>>2],l[f+1440>>2]=l[f+24800>>2],l[f+1444>>2]=n,zb(f+1440|0),s=l[4+(b=f+24792|0)>>2],l[(n=f+1432|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24788>>2],l[f+1424>>2]=l[f+24784>>2],l[f+1428>>2]=n,zb(f+1424|0),jb(f+24576|0,33297),l[f+1412>>2]=33577,l[f+1408>>2]=42,Yb(f+24560|0,33440,f+1408|0),s=l[4+(b=f+24584|0)>>2],l[(n=f+1400|0)>>2]=l[b>>2],l[n+4>>2]=s,s=l[4+(b=f+24568|0)>>2],l[(n=f+1384|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+24580>>2],l[f+1392>>2]=l[f+24576>>2],l[f+1396>>2]=n,n=l[f+24564>>2],l[f+1376>>2]=l[f+24560>>2],l[f+1380>>2]=n,!gn(f+1392|0,f+1376|0))break O;if(wn(f+4560|0,97,2e4),k[f+24559|0]=0,l[f+1360>>2]=f+4560,Yb(f+4544|0,22063,f+1360|0),s=l[4+(b=f+4552|0)>>2],l[(n=f+1352|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+4548>>2],l[f+1344>>2]=l[f+4544>>2],l[f+1348>>2]=n,Nb(f+4528|0,f+1344|0),s=l[4+(b=f+4536|0)>>2],l[(n=f+1336|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+4532>>2],l[f+1328>>2]=l[f+4528>>2],l[f+1332>>2]=n,19999!=(0|vn(f+1328|0)))break I;if(t=l[4+(b=f+4552|0)>>2],l[(n=f+1320|0)>>2]=l[b>>2],l[n+4>>2]=t,n=l[f+4548>>2],l[f+1312>>2]=l[f+4544>>2],l[f+1316>>2]=n,fn(f+4560|0,Gb(f+1312|0)))break z;if(s=l[b+4>>2],l[(n=f+1304|0)>>2]=l[b>>2],l[n+4>>2]=s,n=l[f+4548>>2],l[f+1296>>2]=l[f+4544>>2],l[f+1300>>2]=n,zb(f+1296|0),mn(f+4560|0),jb(f+25216|0,29994),l[(n=f+24816|0)>>2]=4,l[n+4>>2]=0,m[n+8>>3]=42,o=l[4+(n=f+4568|0)>>2],l[(s=f+1288|0)>>2]=l[n>>2],l[s+4>>2]=o,o=l[4+(t=f+25224|0)>>2],l[(s=f+1272|0)>>2]=l[t>>2],l[s+4>>2]=o,o=l[4+(t=f+24824|0)>>2],l[(s=f+1256|0)>>2]=l[t>>2],l[s+4>>2]=o,s=l[f+4564>>2],l[f+1280>>2]=l[f+4560>>2],l[f+1284>>2]=s,s=l[f+25220>>2],l[f+1264>>2]=l[f+25216>>2],l[f+1268>>2]=s,s=l[f+24820>>2],l[f+1248>>2]=l[f+24816>>2],l[f+1252>>2]=s,en(f+25376|0,f+1280|0,f+1264|0,f+1248|0),o=l[4+(s=f+25384|0)>>2],l[n>>2]=l[s>>2],l[n+4>>2]=o,t=l[f+25380>>2],l[f+4560>>2]=l[f+25376>>2],l[f+4564>>2]=t,jb(f+24800|0,36167),l[(t=f+24784|0)>>2]=4,l[t+4>>2]=0,m[t+8>>3]=24,o=l[n+4>>2],l[(t=f+1240|0)>>2]=l[n>>2],l[t+4>>2]=o,h=l[4+(o=f+24808|0)>>2],l[(t=f+1224|0)>>2]=l[o>>2],l[t+4>>2]=h,h=l[4+(o=f+24792|0)>>2],l[(t=f+1208|0)>>2]=l[o>>2],l[t+4>>2]=h,t=l[f+4564>>2],l[f+1232>>2]=l[f+4560>>2],l[f+1236>>2]=t,t=l[f+24804>>2],l[f+1216>>2]=l[f+24800>>2],l[f+1220>>2]=t,t=l[f+24788>>2],l[f+1200>>2]=l[f+24784>>2],l[f+1204>>2]=t,en(f+25376|0,f+1232|0,f+1216|0,f+1200|0),t=l[s+4>>2],o=l[s>>2],l[n>>2]=o,l[n+4>>2]=t,l[(n=f+1192|0)>>2]=o,l[n+4>>2]=t,n=l[f+25380>>2],t=l[f+25376>>2],l[f+4560>>2]=t,l[f+4564>>2]=n,l[f+1184>>2]=t,l[f+1188>>2]=n,Nb(f+4544|0,f+1184|0),jb(f+4512|0,29994),t=l[b+4>>2],l[(n=f+1176|0)>>2]=l[b>>2],l[n+4>>2]=t,t=l[4+(b=f+4520|0)>>2],l[(n=f+1160|0)>>2]=l[b>>2],l[n+4>>2]=t,n=l[f+4548>>2],l[f+1168>>2]=l[f+4544>>2],l[f+1172>>2]=n,n=l[f+4516>>2],l[f+1152>>2]=l[f+4512>>2],l[f+1156>>2]=n,dn(f+25376|0,f+1168|0,f+1152|0),b=l[s+4>>2],l[(n=f+1144|0)>>2]=l[s>>2],l[n+4>>2]=b,n=l[f+25380>>2],l[f+1136>>2]=l[f+25376>>2],l[f+1140>>2]=n,42!=Wb(f+1136|0))break N;if(t=l[4+(n=f+4568|0)>>2],l[(b=f+1128|0)>>2]=l[n>>2],l[b+4>>2]=t,b=l[f+4564>>2],l[f+1120>>2]=l[f+4560>>2],l[f+1124>>2]=b,Nb(f+4480|0,f+1120|0),jb(f+4464|0,36167),t=l[4+(s=f+4488|0)>>2],l[(b=f+1112|0)>>2]=l[s>>2],l[b+4>>2]=t,t=l[4+(s=f+4472|0)>>2],l[(b=f+1096|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+4484>>2],l[f+1104>>2]=l[f+4480>>2],l[f+1108>>2]=b,b=l[f+4468>>2],l[f+1088>>2]=l[f+4464>>2],l[f+1092>>2]=b,dn(f+4496|0,f+1104|0,f+1088|0),t=l[4+(s=f+4504|0)>>2],l[(b=f+1080|0)>>2]=l[s>>2],l[b+4>>2]=t,b=l[f+4500>>2],l[f+1072>>2]=l[f+4496>>2],l[f+1076>>2]=b,24!=Wb(f+1072|0))break j;if(s=l[n+4>>2],l[(b=f+1064|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+4564>>2],l[f+1056>>2]=l[f+4560>>2],l[f+1060>>2]=b,Nb(f+4432|0,f+1056|0),jb(f+4416|0,29994),l[(b=f+4400|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=420,t=l[4+(s=f+4440|0)>>2],l[(b=f+1048|0)>>2]=l[s>>2],l[b+4>>2]=t,t=l[4+(s=f+4424|0)>>2],l[(b=f+1032|0)>>2]=l[s>>2],l[b+4>>2]=t,s=l[4+(b=f+4408|0)>>2],l[f+1016>>2]=l[b>>2],l[f+1020>>2]=s,b=l[f+4436>>2],l[f+1040>>2]=l[f+4432>>2],l[f+1044>>2]=b,b=l[f+4420>>2],l[f+1024>>2]=l[f+4416>>2],l[f+1028>>2]=b,b=l[f+4404>>2],l[f+1008>>2]=l[f+4400>>2],l[f+1012>>2]=b,en(f+4448|0,f+1040|0,f+1024|0,f+1008|0),jb(f+4368|0,36167),l[(b=f+4352|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=240,t=l[4+(b=f+4456|0)>>2],l[f+1e3>>2]=l[b>>2],l[f+1004>>2]=t,t=l[4+(s=f+4376|0)>>2],l[f+984>>2]=l[s>>2],l[f+988>>2]=t,t=l[4+(s=f+4360|0)>>2],l[f+968>>2]=l[s>>2],l[f+972>>2]=t,s=l[f+4452>>2],l[f+992>>2]=l[f+4448>>2],l[f+996>>2]=s,s=l[f+4372>>2],l[f+976>>2]=l[f+4368>>2],l[f+980>>2]=s,s=l[f+4356>>2],l[f+960>>2]=l[f+4352>>2],l[f+964>>2]=s,en(f+4384|0,f+992|0,f+976|0,f+960|0),o=l[4+(s=f+4392|0)>>2],l[b>>2]=l[s>>2],l[b+4>>2]=o,b=l[n+4>>2],l[f+952>>2]=l[n>>2],l[f+956>>2]=b,n=l[f+4388>>2],l[f+4448>>2]=l[f+4384>>2],l[f+4452>>2]=n,n=l[f+4564>>2],l[f+944>>2]=l[f+4560>>2],l[f+948>>2]=n,Nb(f+4336|0,f+944|0),jb(f+4320|0,29994),b=l[4+(n=f+4344|0)>>2],l[f+936>>2]=l[n>>2],l[f+940>>2]=b,b=l[4+(n=f+4328|0)>>2],l[f+920>>2]=l[n>>2],l[f+924>>2]=b,n=l[f+4340>>2],l[f+928>>2]=l[f+4336>>2],l[f+932>>2]=n,n=l[f+4324>>2],l[f+912>>2]=l[f+4320>>2],l[f+916>>2]=n,dn(f+4384|0,f+928|0,f+912|0),n=l[s+4>>2],l[f+904>>2]=l[s>>2],l[f+908>>2]=n,n=l[f+4388>>2],l[f+896>>2]=l[f+4384>>2],l[f+900>>2]=n,42!=Wb(f+896|0))break U;if(b=l[4+(n=f+4568|0)>>2],l[f+888>>2]=l[n>>2],l[f+892>>2]=b,n=l[f+4564>>2],l[f+880>>2]=l[f+4560>>2],l[f+884>>2]=n,Nb(f+4288|0,f+880|0),jb(f+4272|0,36167),b=l[4+(n=f+4296|0)>>2],l[f+872>>2]=l[n>>2],l[f+876>>2]=b,b=l[4+(n=f+4280|0)>>2],l[f+856>>2]=l[n>>2],l[f+860>>2]=b,n=l[f+4292>>2],l[f+864>>2]=l[f+4288>>2],l[f+868>>2]=n,n=l[f+4276>>2],l[f+848>>2]=l[f+4272>>2],l[f+852>>2]=n,dn(f+4304|0,f+864|0,f+848|0),b=l[4+(n=f+4312|0)>>2],l[f+840>>2]=l[n>>2],l[f+844>>2]=b,n=l[f+4308>>2],l[f+832>>2]=l[f+4304>>2],l[f+836>>2]=n,24!=Wb(f+832|0))break B;if(b=l[4+(n=f+4456|0)>>2],l[f+824>>2]=l[n>>2],l[f+828>>2]=b,n=l[f+4452>>2],l[f+816>>2]=l[f+4448>>2],l[f+820>>2]=n,Nb(f+4240|0,f+816|0),jb(f+4224|0,29994),b=l[4+(n=f+4248|0)>>2],l[f+808>>2]=l[n>>2],l[f+812>>2]=b,b=l[4+(n=f+4232|0)>>2],l[f+792>>2]=l[n>>2],l[f+796>>2]=b,n=l[f+4244>>2],l[f+800>>2]=l[f+4240>>2],l[f+804>>2]=n,n=l[f+4228>>2],l[f+784>>2]=l[f+4224>>2],l[f+788>>2]=n,dn(f+4256|0,f+800|0,f+784|0),b=l[4+(n=f+4264|0)>>2],l[f+776>>2]=l[n>>2],l[f+780>>2]=b,n=l[f+4260>>2],l[f+768>>2]=l[f+4256>>2],l[f+772>>2]=n,420!=Wb(f+768|0))break C;if(b=l[4+(n=f+4568|0)>>2],l[f+760>>2]=l[n>>2],l[f+764>>2]=b,n=l[f+4564>>2],l[f+752>>2]=l[f+4560>>2],l[f+756>>2]=n,zb(f+752|0),s=l[4+(b=n=f+4456|0)>>2],l[f+744>>2]=l[b>>2],l[f+748>>2]=s,b=l[f+4452>>2],l[f+736>>2]=l[f+4448>>2],l[f+740>>2]=b,Nb(f+4192|0,f+736|0),jb(f+4176|0,36167),s=l[4+(b=f+4200|0)>>2],l[f+728>>2]=l[b>>2],l[f+732>>2]=s,s=l[4+(b=f+4184|0)>>2],l[f+712>>2]=l[b>>2],l[f+716>>2]=s,b=l[f+4196>>2],l[f+720>>2]=l[f+4192>>2],l[f+724>>2]=b,b=l[f+4180>>2],l[f+704>>2]=l[f+4176>>2],l[f+708>>2]=b,dn(f+4208|0,f+720|0,f+704|0),s=l[4+(b=f+4216|0)>>2],l[f+696>>2]=l[b>>2],l[f+700>>2]=s,b=l[f+4212>>2],l[f+688>>2]=l[f+4208>>2],l[f+692>>2]=b,240!=Wb(f+688|0))break L;if(b=l[n+4>>2],l[f+680>>2]=l[n>>2],l[f+684>>2]=b,n=l[f+4452>>2],l[f+672>>2]=l[f+4448>>2],l[f+676>>2]=n,zb(f+672|0),(0|a)>=1&&!(c=$a(l[i>>2],13988)))break H;if(n=l[e+12>>2],l[(i=a=f+25704|0)>>2]=l[e+8>>2],l[i+4>>2]=n,i=l[e+4>>2],l[f+25696>>2]=l[e>>2],l[f+25700>>2]=i,b=Ce(),l[f+25680>>2]=b,!b)break q;e=l[a+4>>2],l[f+664>>2]=l[a>>2],l[f+668>>2]=e,e=l[f+25700>>2],l[f+656>>2]=l[f+25696>>2],l[f+660>>2]=e,1==(15&v[f+656|0])&&(rn(f+4560|0),i=l[4+(a=f+4568|0)>>2],l[(e=f+25704|0)>>2]=l[a>>2],l[e+4>>2]=i,e=l[f+4564>>2],l[f+25696>>2]=l[f+4560>>2],l[f+25700>>2]=e,b=l[f+25680>>2]),jb(f+25920|0,15614),a=l[4+(e=f+25928|0)>>2],l[f+648>>2]=l[e>>2],l[f+652>>2]=a,a=l[4+(e=f+25704|0)>>2],l[f+632>>2]=l[e>>2],l[f+636>>2]=a,e=l[f+25924>>2],l[f+640>>2]=l[f+25920>>2],l[f+644>>2]=e,e=l[f+25700>>2],l[f+624>>2]=l[f+25696>>2],l[f+628>>2]=e,$i(b,f+640|0,f+624|0);Y:if(fb(f+4560|0,c))for(h=0!=(0|r),a=0,n=0,s=0;;){for(b=a,i=0;;){for(a=b,e=n;;){n=e+1|0,b=0;W:{for(;;){if((t=v[(f+4560|0)+b|0])>>>0>35)break W;G:switch(t-1|0){case 8:case 31:b=b+1|0;continue;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 32:case 33:break W}break}if(e=n,fb(f+4560|0,c))continue;break Y}break}if((b=1095116069==l[f+4560>>2]&674889==l[f+4564>>2])||!pn(f+4560|0,21606,19)){if(e=l[f+25680>>2],l[e+16>>2]=f+25936,l[e+12>>2]=5,i=1,fb(f+4560|0,c))continue;break Y}break}b=4559+(on(f+4560|0)+f|0)|0,10==v[0|b]&&(k[0|b]=0),l[f+612>>2]=n,l[f+608>>2]=f+4560,tn(16006,f+608|0),g=g+1|0,b=Gi(l[f+25680>>2],f+4560|0);W:{G:{if(i){if(i=l[f+25680>>2],l[i+12>>2]=4,l[i+16>>2]=l[75398],!fb(f+30032|0,c)){s=s+1|0;break Y}if(i=30031+(on(f+30032|0)+f|0)|0,10==v[0|i]&&(k[0|i]=0),n=e+2|0,b){l[f+592>>2]=n,l[f+596>>2]=f+4560,tn(16386,f+592|0);break G}if(a&&fn(f+30032|0,f+25936|0)){l[f+580>>2]=n,l[f+584>>2]=f+4560,l[f+576>>2]=f+25936,tn(16799,f+576|0);break G}p=p+1|0,a=0;break W}if(!b){if(l[f+16>>2]=n,l[f+20>>2]=f+4560,tn(17121,f+16|0),s=s+1|0,!fb(f+30032|0,c))break W;for(;;){n=n+1|0,e=v[f+30032|0]+-10|0;X:if(!(e>>>0>3)){J:switch(e-1|0){case 0:case 1:break X;case 2:break J;default:break W}if(10==v[f+30033|0])break W}if(!fb(f+30032|0,c))break}break W}if(r&&(_k(35356),Ne(l[f+25680>>2],2),Ab(10)),!fb(f+30032|0,c)){s=s+1|0;break Y}if(wb(f+25904|0,f+30032|0),b=l[4+(n=i=f+25912|0)>>2],l[f+568>>2]=l[n>>2],l[f+572>>2]=b,n=l[f+25908>>2],l[f+560>>2]=l[f+25904>>2],l[f+564>>2]=n,n=e+2|0,!(15&v[f+560|0])){l[f+32>>2]=n,l[f+36>>2]=f+30032,tn(18136,f+32|0),s=s+1|0;break W}e=l[i+4>>2],l[f+552>>2]=l[i>>2],l[f+556>>2]=e,e=l[f+25908>>2],l[f+544>>2]=l[f+25904>>2],l[f+548>>2]=e,Be(l[f+25680>>2],f+544|0,h),e=1;X:{for(;;){J:if(fb(f+30032|0,c)){for(n=n+1|0,b=0;;){V:if(!((i=v[(f+30032|0)+b|0])>>>0>35)){K:switch(i-1|0){case 8:case 31:break K;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 32:case 33:break V;default:break J}b=b+1|0;continue}break}if(wb(f+25888|0,f+30032|0),t=l[4+(b=f+25896|0)>>2],l[f+536>>2]=l[b>>2],l[f+540>>2]=t,i=l[f+25892>>2],l[f+528>>2]=l[f+25888>>2],l[f+532>>2]=i,15&v[f+528|0])if(nk(f+25872|0,l[f+25680>>2]),o=l[4+(t=f+25880|0)>>2],l[f+520>>2]=l[t>>2],l[f+524>>2]=o,i=l[f+25876>>2],l[f+512>>2]=l[f+25872>>2],l[f+516>>2]=i,15&v[f+512|0]){if(i=l[b+4>>2],l[f+504>>2]=l[b>>2],l[f+508>>2]=i,i=l[f+25892>>2],l[f+496>>2]=l[f+25888>>2],l[f+500>>2]=i,Nb(f+25856|0,f+496|0),i=l[t+4>>2],l[f+488>>2]=l[t>>2],l[f+492>>2]=i,i=l[f+25876>>2],l[f+480>>2]=l[f+25872>>2],l[f+484>>2]=i,Nb(f+25840|0,f+480|0),o=l[4+(i=f+25864|0)>>2],l[f+472>>2]=l[i>>2],l[f+476>>2]=o,o=l[4+(i=f+25848|0)>>2],l[f+456>>2]=l[i>>2],l[f+460>>2]=o,i=l[f+25860>>2],l[f+464>>2]=l[f+25856>>2],l[f+468>>2]=i,i=l[f+25844>>2],l[f+448>>2]=l[f+25840>>2],l[f+452>>2]=i,gn(f+464|0,f+448|0)||(tn(19276,0),e=l[b+4>>2],l[f+440>>2]=l[b>>2],l[f+444>>2]=e,e=l[f+25892>>2],l[f+432>>2]=l[f+25888>>2],l[f+436>>2]=e,Nb(f+25824|0,f+432|0),i=l[4+(e=f+25832|0)>>2],l[f+424>>2]=l[e>>2],l[f+428>>2]=i,e=l[f+25828>>2],l[f+416>>2]=l[f+25824>>2],l[f+420>>2]=e,tb(f+416|0,0),tn(19600,0),e=l[t+4>>2],l[f+408>>2]=l[t>>2],l[f+412>>2]=e,e=l[f+25876>>2],l[f+400>>2]=l[f+25872>>2],l[f+404>>2]=e,Nb(f+25808|0,f+400|0),i=l[4+(e=f+25816|0)>>2],l[f+392>>2]=l[e>>2],l[f+396>>2]=i,e=l[f+25812>>2],l[f+384>>2]=l[f+25808>>2],l[f+388>>2]=e,tb(f+384|0,0),l[f+368>>2]=n,l[f+372>>2]=f+4560,tn(19835,f+368|0),e=0),i=l[b+4>>2],l[f+360>>2]=l[b>>2],l[f+364>>2]=i,i=l[f+25892>>2],l[f+352>>2]=l[f+25888>>2],l[f+356>>2]=i,Nb(f+25776|0,f+352|0),i=zi(l[82954],l[82955],1284865837,1481765933)+1|0,o=se,o=i>>>0<1?o+1|0:o,l[82954]=i,l[82955]=o,w=l[4+(d=f+25784|0)>>2],l[f+344>>2]=l[d>>2],l[f+348>>2]=w,d=l[f+25780>>2],l[f+336>>2]=l[f+25776>>2],l[f+340>>2]=d,jk(f+25792|0,f+336|0,o>>>1&-37),d=l[4+(i=f+25800|0)>>2],l[f+328>>2]=l[i>>2],l[f+332>>2]=d,o=l[f+25796>>2],l[f+320>>2]=l[f+25792>>2],l[f+324>>2]=o,o=Gb(f+320|0),d=l[i+4>>2],l[f+312>>2]=l[i>>2],l[f+316>>2]=d,d=l[f+25796>>2],l[f+304>>2]=l[f+25792>>2],l[f+308>>2]=d,Nb(f+25744|0,f+304|0),w=l[4+(d=f+25752|0)>>2],l[f+296>>2]=l[d>>2],l[f+300>>2]=w,d=l[f+25748>>2],l[f+288>>2]=l[f+25744>>2],l[f+292>>2]=d,wf(f+25760|0,o,vn(f+288|0)),o=l[b+4>>2],l[f+280>>2]=l[b>>2],l[f+284>>2]=o,o=l[f+25892>>2],l[f+272>>2]=l[f+25888>>2],l[f+276>>2]=o,Nb(f+25728|0,f+272|0),w=l[4+(o=f+25768|0)>>2],l[f+264>>2]=l[o>>2],l[f+268>>2]=w,d=l[f+25764>>2],l[f+256>>2]=l[f+25760>>2],l[f+260>>2]=d,Nb(f+25712|0,f+256|0),w=l[4+(d=f+25736|0)>>2],l[f+248>>2]=l[d>>2],l[f+252>>2]=w,w=l[4+(d=f+25720|0)>>2],l[f+232>>2]=l[d>>2],l[f+236>>2]=w,d=l[f+25732>>2],l[f+240>>2]=l[f+25728>>2],l[f+244>>2]=d,d=l[f+25716>>2],l[f+224>>2]=l[f+25712>>2],l[f+228>>2]=d,!gn(f+240|0,f+224|0))break X;d=l[i+4>>2],l[f+216>>2]=l[i>>2],l[f+220>>2]=d,i=l[f+25796>>2],l[f+208>>2]=l[f+25792>>2],l[f+212>>2]=i,zb(f+208|0),i=l[o+4>>2],l[f+200>>2]=l[o>>2],l[f+204>>2]=i,i=l[f+25764>>2],l[f+192>>2]=l[f+25760>>2],l[f+196>>2]=i,zb(f+192|0),i=l[b+4>>2],l[f+184>>2]=l[b>>2],l[f+188>>2]=i,i=l[f+25892>>2],l[f+176>>2]=l[f+25888>>2],l[f+180>>2]=i,zb(f+176|0),i=l[t+4>>2],l[f+168>>2]=l[t>>2],l[f+172>>2]=i,i=l[f+25876>>2],l[f+160>>2]=l[f+25872>>2],l[f+164>>2]=i,zb(f+160|0),i=0}else e=l[t+4>>2],l[f+152>>2]=l[t>>2],l[f+156>>2]=e,e=l[f+25876>>2],l[f+144>>2]=l[f+25872>>2],l[f+148>>2]=e,zb(f+144|0),l[f+128>>2]=n,l[f+132>>2]=f+4560,tn(18865,f+128|0),e=0,i=7;else l[f+112>>2]=n,l[f+116>>2]=f+30032,tn(18516,f+112|0),s=s+1|0,i=6;if(7!=(0|i))continue}break}e?(nk(f+25888|0,l[f+25680>>2]),t=l[4+(b=i=f+25896|0)>>2],l[f+104>>2]=l[b>>2],l[f+108>>2]=t,b=l[f+25892>>2],l[f+96>>2]=l[f+25888>>2],l[f+100>>2]=b,15&v[f+96|0]?(e=0,tn(20452,0),b=l[i+4>>2],l[f+88>>2]=l[i>>2],l[f+92>>2]=b,i=l[f+25892>>2],l[f+80>>2]=l[f+25888>>2],l[f+84>>2]=i,tb(f+80|0,0),l[f+64>>2]=n,l[f+68>>2]=f+4560,tn(20678,f- -64|0)):(b=l[i+4>>2],l[f+56>>2]=l[i>>2],l[f+60>>2]=b,i=l[f+25892>>2],l[f+48>>2]=l[f+25888>>2],l[f+52>>2]=i,zb(f+48|0))):e=0,p=e+p|0;break W}P(20163,15261,162,43231),M()}s=s+1|0,a=0}if(!fb(f+4560|0,c))break}else s=0;if(Ue(f+25680|0),l[f+8>>2]=s,l[f+4>>2]=g,l[f>>2]=p,tn(20962,f),(0|p)==(0|g))return ne=f+34128|0,0;T(1),M()}P(24399,15261,225,43244),M()}P(14846,15261,67,43231),M()}Fk(14319),T(1),M()}P(37777,15261,341,43244),M()}P(34244,15261,339,43244),M()}P(34060,15261,338,43244),M()}P(33896,15261,337,43244),M()}P(34060,15261,333,43244),M()}P(33896,15261,332,43244),M()}P(36044,15261,323,43244),M()}P(33767,15261,322,43244),M()}P(33627,15261,317,43244),M()}P(31984,15261,312,43244),M()}P(31831,15261,311,43244),M()}P(30998,15261,310,43244),M()}P(30887,15261,308,43244),M()}P(30723,15261,307,43244),M()}P(30576,15261,306,43244),M()}P(35879,15261,299,43244),M()}P(30405,15261,298,43244),M()}P(30152,15261,295,43244),M()}P(29791,15261,285,43244),M()}P(24399,15261,284,43244),M()}P(26022,15261,283,43244),M()}P(29639,15261,278,43244),M()}P(29467,15261,277,43244),M()}P(29262,15261,275,43244),M()}P(28981,15261,265,43244),M()}P(28695,15261,264,43244),M()}P(28469,15261,263,43244),M()}P(28194,15261,262,43244),M()}P(28017,15261,258,43244),M()}P(26788,15261,251,43244),M()}P(26564,15261,250,43244),M()}P(26300,15261,249,43244),M()}P(27720,15261,247,43244),M()}P(27478,15261,246,43244),M()}P(27262,15261,245,43244),M()}P(27092,15261,244,43244),M()}P(26788,15261,239,43244),M()}P(26564,15261,238,43244),M()}P(26300,15261,237,43244),M()}P(26788,15261,231,43244),M()}P(26564,15261,230,43244),M()}P(26300,15261,229,43244),M()}P(26022,15261,224,43244),M()}P(25759,15261,222,43244),M()}P(25759,15261,220,43244),M()}P(25558,15261,216,43244),M()}P(25390,15261,215,43244),M()}P(25239,15261,211,43244),M()}P(25022,15261,210,43244),M()}P(24840,15261,209,43244),M()}P(24675,15261,208,43244),M()}P(24399,15261,205,43244),M()}P(24244,15261,204,43244),M()}P(23990,15261,201,43244),M()}P(23990,15261,200,43244),M()}P(23702,15261,199,43244),M()}P(23318,15261,193,43244),M()}P(22698,15261,191,43244),M()}function Gi(e,r){var a,i=0;return ne=a=ne-32|0,mn(a+16|0),i=l[a+28>>2],l[a+8>>2]=l[a+24>>2],l[a+12>>2]=i,i=l[a+20>>2],l[a>>2]=l[a+16>>2],l[a+4>>2]=i,e=da(e,r,a),ne=a+32|0,e}function Xi(e,r,a,i,f){var k,b=0,n=0;ne=k=ne-272|0,!l[r+96>>2]&&(b=l[r+76>>2],l[k+232>>2]=l[r+72>>2],l[k+236>>2]=b,b=l[r+68>>2],l[k+224>>2]=l[r+64>>2],l[k+228>>2]=b,6==(15&v[k+224|0])&&(b=l[f+12>>2],l[k+216>>2]=l[f+8>>2],l[k+220>>2]=b,b=l[f+4>>2],l[k+208>>2]=l[f>>2],l[k+212>>2]=b,15&v[k+208|0]))?(b=l[r+92>>2],l[k+200>>2]=l[r+88>>2],l[k+204>>2]=b,b=l[r+84>>2],l[k+192>>2]=l[r+80>>2],l[k+196>>2]=b,Nb(k+256|0,k+192|0),b=l[a+12>>2],l[k+184>>2]=l[a+8>>2],l[k+188>>2]=b,b=l[a>>2],a=l[a+4>>2],n=l[k+268>>2],l[k+168>>2]=l[k+264>>2],l[k+172>>2]=n,l[k+176>>2]=b,l[k+180>>2]=a,a=l[k+260>>2],l[k+160>>2]=l[k+256>>2],l[k+164>>2]=a,ik(k+176|0,k+160|0)?(a=r- -64|0,b=l[i+12>>2],l[k+152>>2]=l[i+8>>2],l[k+156>>2]=b,b=l[i+4>>2],l[k+144>>2]=l[i>>2],l[k+148>>2]=b,6!=(15&v[k+144|0])?(b=l[a+12>>2],l[k+136>>2]=l[a+8>>2],l[k+140>>2]=b,b=l[a+4>>2],l[k+128>>2]=l[a>>2],l[k+132>>2]=b,b=l[i+12>>2],l[k+120>>2]=l[i+8>>2],l[k+124>>2]=b,b=l[i+4>>2],l[k+112>>2]=l[i>>2],l[k+116>>2]=b,Vb(k+240|0,k+128|0,k+112|0)):(b=l[a+12>>2],l[k+104>>2]=l[a+8>>2],l[k+108>>2]=b,b=l[a+4>>2],l[k+96>>2]=l[a>>2],l[k+100>>2]=b,b=l[i+12>>2],l[k+88>>2]=l[i+8>>2],l[k+92>>2]=b,b=l[i+4>>2],l[k+80>>2]=l[i>>2],l[k+84>>2]=b,la(k+240|0,k+96|0,k+80|0)),i=l[k+252>>2],l[a+8>>2]=l[k+248>>2],l[a+12>>2]=i,i=l[k+244>>2],l[a>>2]=l[k+240>>2],l[a+4>>2]=i,a=l[r+92>>2],l[k+72>>2]=l[r+88>>2],l[k+76>>2]=a,a=l[r+84>>2],l[k+64>>2]=l[r+80>>2],l[k+68>>2]=a,zb(k- -64|0),a=l[f+12>>2],l[r+88>>2]=l[f+8>>2],l[r+92>>2]=a,a=l[f+4>>2],l[r+80>>2]=l[f>>2],l[r+84>>2]=a,r=l[f+12>>2],l[k+56>>2]=l[f+8>>2],l[k+60>>2]=r,r=l[f+4>>2],l[k+48>>2]=l[f>>2],l[k+52>>2]=r,Nb(e,k+48|0)):(r=l[i+12>>2],l[k+40>>2]=l[i+8>>2],l[k+44>>2]=r,r=l[i+4>>2],l[k+32>>2]=l[i>>2],l[k+36>>2]=r,zb(k+32|0),r=l[f+12>>2],l[e+8>>2]=l[f+8>>2],l[e+12>>2]=r,r=l[f+4>>2],l[e>>2]=l[f>>2],l[e+4>>2]=r)):(r=l[a+12>>2],l[k+24>>2]=l[a+8>>2],l[k+28>>2]=r,r=l[a+4>>2],l[k+16>>2]=l[a>>2],l[k+20>>2]=r,zb(k+16|0),r=l[i+12>>2],l[k+8>>2]=l[i+8>>2],l[k+12>>2]=r,r=l[i+4>>2],l[k>>2]=l[i>>2],l[k+4>>2]=r,zb(k),r=l[f+12>>2],l[e+8>>2]=l[f+8>>2],l[e+12>>2]=r,r=l[f+4>>2],l[e>>2]=l[f>>2],l[e+4>>2]=r),ne=k+272|0}function Ji(e){var r=0,a=0;if(r=l[e+32>>2])for(;l[e+32>>2]=l[r>>2],(0|(a=l[r+4>>2]))>=8?Lb(r):(a=(a<<2)+e|0,l[r>>2]=l[a>>2],l[a>>2]=r),r=l[e+32>>2];);for(;r=l[e>>2];)l[e>>2]=l[r>>2],Lb(r);for(;r=l[e+4>>2];)l[e+4>>2]=l[r>>2],Lb(r);for(;r=l[e+8>>2];)l[e+8>>2]=l[r>>2],Lb(r);for(;r=l[e+12>>2];)l[e+12>>2]=l[r>>2],Lb(r);for(;r=l[e+16>>2];)l[e+16>>2]=l[r>>2],Lb(r);for(;r=l[e+20>>2];)l[e+20>>2]=l[r>>2],Lb(r);for(;r=l[e+24>>2];)l[e+24>>2]=l[r>>2],Lb(r);for(;r=l[e+28>>2];)l[e+28>>2]=l[r>>2],Lb(r)}function Vi(e,r,a){var i,f=0,k=0,b=0,n=0,s=0,t=0,c=0;if(ne=i=ne-4592|0,-1!=(0|(f=function(e){var r;return ne=r=ne-16|0,l[r+8>>2]=0,l[r>>2]=e,l[r+4>>2]=32768,(e=0|I(5,0|r))>>>0>=4294963201&&(l[82952]=0-e,e=-1),ne=r+16|0,e}(r))))if(t=-1!=(0|ii(f,i+4504|0)),c=0,16384!=(61440&l[i+4516>>2])?t:c)if(b=Za(f,14890)){a?(jb(i+336|0,15306),f=l[i+348>>2],l[(n=i+4464|0)>>2]=l[i+344>>2],l[n+4>>2]=f,f=l[i+340>>2],l[i+4456>>2]=l[i+336>>2],l[i+4460>>2]=f,n=0):(rn(i+336|0),f=l[i+348>>2],l[(n=i+4464|0)>>2]=l[i+344>>2],l[n+4>>2]=f,f=l[i+340>>2],l[i+4456>>2]=l[i+336>>2],l[i+4460>>2]=f,n=me(0));e:if(!(l[b>>2]>>>4&1))for(;;){if(l[b>>2]>>>5&1)break e;if(f=Nf(i+336|0,4096,b),l[i+332>>2]=0,f)if(!Cr(335+(i+f|0)|0,i+336|0,i+332|0)|l[i+332>>2]<1|l[b>>2]>>>4&1|l[b>>2]>>>5&1||(f=Nf((i+336|0)+f|0,l[i+332>>2],b)+f|0),a)s=l[4+(k=i+4464|0)>>2],l[i+144>>2]=l[k>>2],l[i+148>>2]=s,s=l[i+4460>>2],l[i+136>>2]=l[i+4456>>2],l[i+140>>2]=s,Qb(i+312|0,i+136|0,i+336|0,f),f=l[i+324>>2],l[k>>2]=l[i+320>>2],l[k+4>>2]=f,f=l[i+316>>2],l[i+4456>>2]=l[i+312>>2],l[i+4460>>2]=f;else{if(ve(n,i+336|0,f,!(l[b>>2]>>>4&1)),gf(i+296|0,n),f=l[i+308>>2],k=l[i+304>>2],l[i+320>>2]=k,l[i+324>>2]=f,l[i+256>>2]=k,l[i+260>>2]=f,f=l[i+300>>2],k=l[i+296>>2],l[i+312>>2]=k,l[i+316>>2]=f,l[i+248>>2]=k,l[i+252>>2]=f,15&v[i+248|0])for(;s=l[4+(f=i+4464|0)>>2],l[i+240>>2]=l[f>>2],l[i+244>>2]=s,k=l[i+324>>2],l[i+224>>2]=l[i+320>>2],l[i+228>>2]=k,k=l[i+4460>>2],l[i+232>>2]=l[i+4456>>2],l[i+236>>2]=k,k=l[i+316>>2],l[i+216>>2]=l[i+312>>2],l[i+220>>2]=k,Vb(i+296|0,i+232|0,i+216|0),k=l[i+308>>2],l[f>>2]=l[i+304>>2],l[f+4>>2]=k,f=l[i+300>>2],l[i+4456>>2]=l[i+296>>2],l[i+4460>>2]=f,gf(i+296|0,n),f=l[i+308>>2],k=l[i+304>>2],l[i+320>>2]=k,l[i+324>>2]=f,l[i+208>>2]=k,l[i+212>>2]=f,f=l[i+300>>2],k=l[i+296>>2],l[i+312>>2]=k,l[i+316>>2]=f,l[i+200>>2]=k,l[i+204>>2]=f,15&v[i+200|0];);if(f=l[i+324>>2],l[i+192>>2]=l[i+320>>2],l[i+196>>2]=f,f=l[i+316>>2],l[i+184>>2]=l[i+312>>2],l[i+188>>2]=f,Nb(i+280|0,i+184|0),f=l[i+292>>2],l[i+176>>2]=l[i+288>>2],l[i+180>>2]=f,f=l[i+284>>2],l[i+168>>2]=l[i+280>>2],l[i+172>>2]=f,rb(i+168|0)){s=l[4+(f=i+4464|0)>>2],l[i+160>>2]=l[f>>2],l[i+164>>2]=s,k=l[i+4460>>2],l[i+152>>2]=l[i+4456>>2],l[i+156>>2]=k,zb(i+152|0),k=l[i+324>>2],l[f>>2]=l[i+320>>2],l[f+4>>2]=k,f=l[i+316>>2],l[i+4456>>2]=l[i+312>>2],l[i+4460>>2]=f;break e}}if(l[b>>2]>>>4&1)break}a||he(n),l[b>>2]>>>5&1|xk(b)?(b=l[4+(a=i+4464|0)>>2],l[i+128>>2]=l[a>>2],l[i+132>>2]=b,a=l[i+4460>>2],l[i+120>>2]=l[i+4456>>2],l[i+124>>2]=a,zb(i+120|0),l[i+112>>2]=r,Yb(i+264|0,15684,i+112|0),r=l[i+276>>2],l[i+104>>2]=l[i+272>>2],l[i+108>>2]=r,r=l[i+268>>2],l[i+96>>2]=l[i+264>>2],l[i+100>>2]=r,Hb(e,i+96|0)):(r=l[i+4460>>2],l[e>>2]=l[i+4456>>2],l[e+4>>2]=r,a=l[4+(r=i+4464|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a)}else Ya(f),l[i+84>>2]=lr(l[82952]),l[i+80>>2]=r,Yb(i+4440|0,14087,i+80|0),a=l[4+(r=i+4448|0)>>2],l[i+72>>2]=l[r>>2],l[i+76>>2]=a,r=l[i+4444>>2],l[i+64>>2]=l[i+4440>>2],l[i+68>>2]=r,Hb(e,i- -64|0);else Ya(f),l[i+52>>2]=14387,l[i+48>>2]=r,Yb(i+4472|0,14087,i+48|0),a=l[4+(r=i+4480|0)>>2],l[i+40>>2]=l[r>>2],l[i+44>>2]=a,r=l[i+4476>>2],l[i+32>>2]=l[i+4472>>2],l[i+36>>2]=r,Hb(e,i+32|0);else l[i+20>>2]=lr(l[82952]),l[i+16>>2]=r,Yb(i+4488|0,14087,i+16|0),a=l[4+(r=i+4496|0)>>2],l[i+8>>2]=l[r>>2],l[i+12>>2]=a,r=l[i+4492>>2],l[i>>2]=l[i+4488>>2],l[i+4>>2]=r,Hb(e,i);ne=i+4592|0}function Ki(e,r){var a,i=0,f=0,k=0,b=0;if(ne=a=ne-32|0,r=l[r>>2])for(b=l[e>>2];i=(0|r)!=(0|b)?(l[r+60>>2]==(0|b))+i|0:i,f=l[e+4>>2],l[a+24>>2]=l[e>>2],l[a+28>>2]=f,f=l[r+80>>2],l[a+16>>2]=l[r+76>>2],l[a+20>>2]=f,f=Ki(a+24|0,a+16|0),k=l[e+4>>2],l[a+8>>2]=l[e>>2],l[a+12>>2]=k,k=l[r+88>>2],l[a>>2]=l[r+84>>2],l[a+4>>2]=k,i=Ki(a+8|0,a)+(i+f|0)|0,r=l[r>>2];);return ne=a+32|0,i}function Zi(e){var r,a=0,i=0;return ne=r=ne-32|0,5!=(15&v[0|e])&&(P(19611,17172,738,43505),M()),a=l[e+12>>2],l[r+24>>2]=l[e+8>>2],l[r+28>>2]=a,a=l[e+4>>2],l[r+16>>2]=l[e>>2],l[r+20>>2]=a,a=Rk(r+16|0),i=l[e+12>>2],l[r+8>>2]=l[e+8>>2],l[r+12>>2]=i,i=l[e+4>>2],l[r>>2]=l[e>>2],l[r+4>>2]=i,zb(r),ne=r+32|0,a}function $i(e,r,a){var i,f=0;ne=i=ne+-64|0,f=l[e+164>>2],l[i+40>>2]=l[e+160>>2],l[i+44>>2]=f,f=l[e+156>>2],l[i+32>>2]=l[e+152>>2],l[i+36>>2]=f,f=l[r+12>>2],l[i+24>>2]=l[r+8>>2],l[i+28>>2]=f,f=l[r+4>>2],l[i+16>>2]=l[r>>2],l[i+20>>2]=f,r=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=r,r=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=r,en(i+48|0,i+32|0,i+16|0,i),r=l[i+60>>2],l[e+160>>2]=l[i+56>>2],l[e+164>>2]=r,r=l[i+52>>2],l[e+152>>2]=l[i+48>>2],l[e+156>>2]=r,ne=i- -64|0}function Qi(e,r,a){var i;4&v[9+(r>>>0<41?w(r,24)+34336|0:35320)|0]||(P(17730,14282,211,35526),M()),i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=r,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,l[i+64>>2]=En(a),l[e+4>>2]=i,l[e>>2]=i}function ef(e,r,a,i){var f=0,k=0;if(f=l[i>>2])for(k=l[r>>2],r=l[r+4>>2];-1!=l[f+52>>2]|-1!=l[f+56>>2]||(l[f+52>>2]=k,l[f+56>>2]=r,l[a+40>>2]=l[a+40>>2]+1,l[f+48>>2]=a),f=l[f>>2];);r=l[i+4>>2],l[e>>2]=l[i>>2],l[e+4>>2]=r}function rf(e,r,a){var i=0,f=0,k=0,b=0;i=0!=(0|a);e:{r:{a:{i:if(!(!a|!(3&e)))for(f=255&r;;){if((0|f)==v[0|e])break a;if(e=e+1|0,i=0!=(0|(a=a+-1|0)),!a)break i;if(!(3&e))break}if(!i)break r}if(v[0|e]==(255&r))break e;a:{if(a>>>0>=4){for(b=w(255&r,16843009),i=(i=a+-4|0)-(f=-4&i)|0,f=4+(e+f|0)|0;;){if((-1^(k=l[e>>2]^b))&k+-16843009&-2139062144)break a;if(e=e+4|0,!((a=a+-4|0)>>>0>3))break}a=i,e=f}if(!a)break r}for(r&=255;;){if((0|r)==v[0|e])break e;if(e=e+1|0,!(a=a+-1|0))break}}return 0}return e}function af(e,r){var a=0;if((a=k[0|r])&&(a=hn(e,a),e=0,a)){if(!v[r+1|0])return a;if(v[a+1|0]){if(!v[r+2|0])return function(e,r){var a=0,i=0,f=0,k=0;f=0!=(0|(a=v[e+1|0]));e:if(a&&(0|(a|=v[0|e]<<8))!=(0|(k=v[r+1|0]|v[0|r]<<8)))for(r=e+1|0;;){if(f=0!=(0|(i=v[(e=r)+1|0])),!i)break e;if(r=e+1|0,(0|k)==(0|(a=a<<8&65280|i)))break}return f?e:0}(a,r);if(v[a+2|0]){if(!v[r+3|0])return function(e,r){var a,i=0,f=0,k=0;f=e+2|0,k=0!=(0|(i=v[e+2|0])),e=v[e+1|0]<<16|v[0|e]<<24|i<<8,a=v[r+1|0]<<16|v[0|r]<<24|v[r+2|0]<<8;e:if(!i|(0|e)==(0|a))r=f;else for(;;){if(r=f+1|0,k=0!=(0|(i=v[f+1|0])),(0|a)==(0|(e=(e|i)<<8)))break e;if(f=r,!i)break}return k?r+-2|0:0}(a,r);if(v[a+3|0]){if(!v[r+4|0])return function(e,r){var a=0,i=0,f=0,k=0;i=e+3|0,k=0!=(0|(a=v[e+3|0])),f=a|v[e+1|0]<<16|v[0|e]<<24|v[e+2|0]<<8,e=v[0|r]|v[r+1|0]<<8|v[r+2|0]<<16|v[r+3|0]<<24;e:if(!a|(0|f)==(0|(r=e<<24|e<<8&16711680|e>>>8&65280|e>>>24)))e=i;else for(;;){if(e=i+1|0,k=0!=(0|(a=v[i+1|0])),(0|r)==(0|(f=a|f<<8)))break e;if(i=e,!a)break}return k?e+-3|0:0}(a,r);e=er(a,r)}}}}return e}function ff(e){var r=0,a=0;return t(+e),r=0|b(1),b(0),(r&=2147483647)>>>0>=2146435072?1/(e*e):(e=g(e),r>>>0>=1073741824?ja(r,e,0):r>>>0>=1059061760?(1+(a=.5*e))*(1-a)+(e*=e)*(e*(e*(e*(-4.618326885321032e-9*e+18295404953270067e-22)-.00018997929423885472)+.015624999999999995)/(e*(e*(e*(1.1661400333379e-9*e+5.135465502073181e-7)+.00011692678466333745)+.015619102946489001)+1)):1-(r>>>0>939524095?e*(.25*e):e))}function kf(e){var r,a=0,i=0;return t(+e),i=0|b(1),b(0),r=i,(i&=2147483647)>>>0>=2146435072?1/(e*e):i>>>0>=1073741824?Ua(i,g(e),0,r>>>31):((a=i>>>0>=939524096?(a=e*e)*(a*(a*(4.9672799960958445e-8*a-1599556310840356e-20)+.001407056669551897)-.0625)/(a*(a*(a*(a*(1.2354227442613791e-11*a+5.0463625707621704e-9)+11771846404262368e-22)+.00018594678558863092)+.019153759953836346)+1):e)+.5)*e}function bf(e){var r,a=0;return ne=r=ne-32|0,((e=0|N(0|e,r+8|0))||(e=59,a=1,2!=v[r+8|0]))&&(l[82952]=e,a=0),ne=r+32|0,e=a}function nf(e){var r=0,a=0,i=0;if(e){if((0|(a=l[e+16>>2]))>=1)for(;(i=l[l[e+20>>2]+(r<<2)>>2])&&(nf(i),a=l[e+16>>2]),(0|(r=r+1|0))<(0|a););if(!((0|(a=l[e+12>>2]))<1))for(r=0;l[l[e+20>>2]+(r<<2)>>2]=0,(0|(r=r+1|0))<(0|a););}Lb(e)}function sf(e,r,a){var i,f=0,b=0,n=0,s=0;i=l[r+20>>2];e:{if(a){if((f=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)f=l[r>>2];else{for(;(f<<=1)>>>0<n>>>0;);if(l[r+8>>2]=f,f=Ub(l[r>>2],f),l[r>>2]=f,!f)break e;b=l[r+4>>2]}if(k[f+b|0]=66,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),s=l[r+20>>2],(f=l[r+8>>2])>>>0<(n=b+2|0)>>>0){for(;(f<<=1)>>>0<n>>>0;);if(l[r+8>>2]=f,f=Ub(l[r>>2],f),l[r>>2]=f,!f)break e;b=l[r+4>>2]}else f=l[r>>2];k[0|(b=f+b|0)]=s,k[b+1|0]=s>>>8,h[r+4>>2]<n>>>0&&(l[r+4>>2]=n),l[r+20>>2]=l[r+20>>2]+1}if(!((f=Pk(e,r))|!a)){r:{a:{i:{f:{if((e=a+-1|0)>>>0<=2)switch(e-1|0){case 1:break a;case 0:break i;default:break f}a=l[r+4>>2];break r}if((f=l[r+8>>2])>>>0>=(e=(a=l[r+4>>2])+1|0)>>>0)f=l[r>>2];else{for(;(f<<=1)>>>0<e>>>0;);if(l[r+8>>2]=f,f=Ub(l[r>>2],f),l[r>>2]=f,!f)break e;a=l[r+4>>2]}if(k[a+f|0]=67,(a=l[r+4>>2])>>>0>=e>>>0)break r;l[r+4>>2]=e,a=e;break r}if((f=l[r+8>>2])>>>0>=(e=(a=l[r+4>>2])+1|0)>>>0)f=l[r>>2];else{for(;(f<<=1)>>>0<e>>>0;);if(l[r+8>>2]=f,f=Ub(l[r>>2],f),l[r>>2]=f,!f)break e;a=l[r+4>>2]}if(k[a+f|0]=68,(a=l[r+4>>2])>>>0>=e>>>0)break r;l[r+4>>2]=e,a=e;break r}if((f=l[r+8>>2])>>>0>=(e=(a=l[r+4>>2])+1|0)>>>0)f=l[r>>2];else{for(;(f<<=1)>>>0<e>>>0;);if(l[r+8>>2]=f,f=Ub(l[r>>2],f),l[r>>2]=f,!f)break e;a=l[r+4>>2]}k[a+f|0]=69,(a=l[r+4>>2])>>>0>=e>>>0||(l[r+4>>2]=e,a=e)}if((f=l[r+8>>2])>>>0<(e=a+2|0)>>>0){for(;(f<<=1)>>>0<e>>>0;);if(l[r+8>>2]=f,f=Ub(l[r>>2],f),l[r>>2]=f,!f)break e;a=l[r+4>>2]}else f=l[r>>2];k[0|(a=a+f|0)]=i,k[a+1|0]=i>>>8,f=0,h[r+4>>2]>=e>>>0||(l[r+4>>2]=e)}return f}return-5}function tf(e,r,a){for(var i=0,f=0;;){e:if(i=0,!((f=l[e>>2])>>>0>8)){r:switch(f-1|0){case 0:case 1:return r?0:e;case 7:e=l[e+4>>2];continue;default:if(h[e+8>>2]<=h[e+4>>2]|(1&k[a+60|0]?!(!r|1&k[e+12|0]):0))break e;i=e;break e;case 4:if(l[e+12>>2]<1)break e;if(i=l[e+28>>2])break e;e=l[e+8>>2];continue;case 5:if((f=l[e+8>>2]+-1|0)>>>0>3)break e;a:switch(f-1|0){case 0:return i=l[a+60>>2],l[a+60>>2]=l[e+16>>2],e=tf(l[e+20>>2],r,a),l[a+60>>2]=i,e;case 1:break e}e=l[e+20>>2];continue;case 2:case 3:break e;case 6:}if(1024==l[e+4>>2]){e=l[e+8>>2];continue}}break}return i}function cf(e,r,a){var i=0,f=0,k=0,b=0,n=0,s=0;if(i=l[a+24>>2]){if(!(b=l[r+24>>2]))return e=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=e,l[r+48>>2]=l[a+48>>2],e=l[a+44>>2],l[r+40>>2]=l[a+40>>2],l[r+44>>2]=e,e=l[a+36>>2],l[r+32>>2]=l[a+32>>2],l[r+36>>2]=e,e=l[a+28>>2],l[r+24>>2]=l[a+24>>2],l[r+28>>2]=e,e=l[a+20>>2],l[r+16>>2]=l[a+16>>2],l[r+20>>2]=e,e=l[a+12>>2],l[r+8>>2]=l[a+8>>2],void(l[r+12>>2]=e);(0|b)>2|(0|i)>2||(k=4,f=4,(0|(s=(n=v[r+28|0])<<24>>24))<0||!s&&(f=20,l[e+12>>2]>1)||(f=u[59344+(n<<1)>>1]),(0|(s=(n=v[a+28|0])<<24>>24))<0||!s&&(k=20,l[e+12>>2]>1)||(k=u[59344+(n<<1)>>1]),i=(0|i)>1?f+5|0:f,b=(0|b)>1?k+5|0:k),(0|(f=i<<!l[a+20>>2]))<1||((0|(i=b<<!l[r+20>>2]))<1||(b=0,e=0,-1!=(0|(k=l[r+4>>2]))&&(e=1,(k=k-l[r>>2]|0)>>>0>99||(e=u[59136+(k<<1)>>1])),e=w(e,i),-1!=(0|(i=l[a+4>>2]))&&(b=1,(i=i-l[a>>2]|0)>>>0>99||(b=u[59136+(i<<1)>>1])),(0|(f=w(b,f)))>(0|e)||!((0|f)<(0|e)|h[a>>2]>=h[r>>2])))&&(e=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=e,l[r+48>>2]=l[a+48>>2],e=l[a+44>>2],l[r+40>>2]=l[a+40>>2],l[r+44>>2]=e,e=l[a+36>>2],l[r+32>>2]=l[a+32>>2],l[r+36>>2]=e,e=l[a+28>>2],l[r+24>>2]=l[a+24>>2],l[r+28>>2]=e,e=l[a+20>>2],l[r+16>>2]=l[a+16>>2],l[r+20>>2]=e,e=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=e)}}function of(e,r){var a=0;if((0|r)<=0)l[e>>2]=0,r=0;else if(a=Cb(r),l[e>>2]=a,!a)return-5;return l[e+4>>2]=0,l[e+8>>2]=r,0}function uf(e,r,a,i){var b,n=0,s=0,t=0,c=0,o=0,u=0;ne=b=ne-16|0,n=l[i+8>>2],s=0|f[l[n+52>>2]](r,b+8|0,b+12|0);e:if(!((i=s+2|0)>>>0>2)){r:{a:{i:switch(i-1|0){case 1:if(n=l[b+12>>2],t=l[n>>2],r=l[b+8>>2],a){i=0;f:{if((0|t)>0)for(a=0;;){if(i>>>0<h[(s=n+(a<<3|4)|0)>>2])for(;;){if(i>>>0>=r>>>0)break f;if(k[8+(c=(i>>>3)+e|0)|0]=v[c+8|0]|1<<(7&i),!((i=i+1|0)>>>0<h[s>>2]))break}if(i=l[8+(n+(a<<3)|0)>>2]+1|0,(0|t)==(0|(a=a+1|0)))break}if(!(i>>>0>=r>>>0))for(;k[8+(a=(i>>>3)+e|0)|0]=v[a+8|0]|1<<(7&i),(0|(i=i+1|0))!=(0|r););}f:{if((0|t)>=1)for(a=e+40|0,i=0;;){if(r>>>0<(s=l[n+(i<<3|4)>>2])>>>0&&(r=Fn(a,r,s+-1|0)))break f;if(r=l[8+(n+(i<<3)|0)>>2]+1|0,(0|t)==(0|(i=i+1|0)))break}if(s=0,r>>>0>2147483646)break e;if(!(r=Fn(e+40|0,r,2147483647)))break e}s=r;break e}if(s=0,a=0,(0|t)<1)break a;for(;;){f:if(!((i=l[(u=n+(4|(c=a<<3))|0)>>2])>>>0>h[8+(c=n+c|0)>>2])){if(i>>>0>=r>>>0)break a;for(;;){if(k[8+(o=(i>>>3)+e|0)|0]=v[o+8|0]|1<<(7&i),i>>>0>=(o=l[c+8>>2])>>>0)break f;if((0|(i=i+1|0))==(0|r))break}if(r>>>0<=h[u>>2])break a;if(s=Fn(e+40|0,r,o))break e;a=a+1|0;break a}if((0|t)==(0|(a=a+1|0)))break}break e;case 0:break e}if(s=-11,r>>>0>14)break e;i:{f:{if(!(28510&(i=1<<r))){if(160&i)break f;if(12!=(0|r))break e;if(!a)break i;for(i=0;(0|f[l[n+24>>2]](i))<1||f[l[n+48>>2]](i,12)||(k[8+(r=(i>>>3)+e|0)|0]=v[r+8|0]|1<<(7&i)),256!=(0|(i=i+1|0)););break r}if(i=0,!a)for(;;)if(f[l[n+48>>2]](i,r)&&(k[8+(a=(i>>>3)+e|0)|0]=v[a+8|0]|1<<(7&i)),256==(0|(i=i+1|0)))break r;for(;f[l[n+48>>2]](i,r)||(k[8+(a=(i>>>3)+e|0)|0]=v[a+8|0]|1<<(7&i)),256!=(0|(i=i+1|0)););if(1==l[n+8>>2])break r;if(!(s=Fn(e+40|0,(l[n+12>>2]<2)<<7,-1)))break r;break e}if(i=0,!a){for(;f[l[n+48>>2]](i,r)&&(k[8+(a=(i>>>3)+e|0)|0]=v[a+8|0]|1<<(7&i)),256!=(0|(i=i+1|0)););if(1==l[n+8>>2])break r;if(!(s=Fn(e+40|0,(l[n+12>>2]<2)<<7,-1)))break r;break e}for(;f[l[n+48>>2]](i,r)||(k[8+(a=(i>>>3)+e|0)|0]=v[a+8|0]|1<<(7&i)),256!=(0|(i=i+1|0)););break r}for(i=0;i>>>0>127||f[l[n+48>>2]](i,12)&&(k[8+(r=(i>>>3)+e|0)|0]=v[r+8|0]|1<<(7&i)),256!=(0|(i=i+1|0)););if(1==l[n+8>>2])break r;if(s=Fn(e+40|0,(l[n+12>>2]<2)<<7,-1))break e;break r}if(!((0|a)>=(0|t)))for(e=e+40|0;;){if(s=Fn(e,l[n+(4|(r=a<<3))>>2],l[8+(r+n|0)>>2]))break e;if((0|t)==(0|(a=a+1|0)))break}}s=0}return ne=b+16|0,s}function lf(e,r,a,i,f,k){var b,n=0,s=0,t=0;ne=b=ne-16|0,l[e>>2]=0,s=l[k+108>>2]+1|0,l[k+108>>2]=s,n=-16;e:if(!(s>>>0>h[78162]))if((0|(n=gi(b+12|0,r,a,i,f,k)))<=-1)kn(l[b+12>>2]);else{r:{a:{if((0|a)!=(0|n)){if(t=l[b+12>>2],13!=(0|n))break a;for((s=Cb(44))&&(l[s+8>>2]=0,l[s+4>>2]=t,l[s>>2]=9),l[e>>2]=s;;){if((0|(n=An(r,i,f,k)))<0)break e;if(n=gi(b+12|0,r,a,i,f,k),t=l[b+12>>2],(0|n)<=-1){kn(t);break e}if((e=Cb(44))&&(l[e+8>>2]=0,l[e+4>>2]=t,l[e>>2]=9),l[s+8>>2]=e,s=e,13!=(0|n))break}if(l[r>>2]!=(0|a))break r}else l[e>>2]=l[b+12>>2],n=a;l[k+108>>2]=l[k+108>>2]+-1;break e}kn(t)}n=15==(0|a)?-117:-11}return ne=b+16|0,n}function vf(e,r,a,i){var f,k=0;ne=f=ne-208|0,Hn(f+200|0,29678),ln(f+176|0,1),k=l[f+180>>2],l[f+112>>2]=l[f+176>>2],l[f+116>>2]=k,k=l[a+4>>2],l[f+104>>2]=l[a>>2],l[f+108>>2]=k,$b(f+184|0,f+112|0,f+104|0),a=l[f+188>>2],l[f+96>>2]=l[f+184>>2],l[f+100>>2]=a,a=l[f+204>>2],l[f+88>>2]=l[f+200>>2],l[f+92>>2]=a,$b(f+192|0,f+96|0,f+88|0),a=l[r+4>>2],l[f+80>>2]=l[r>>2],l[f+84>>2]=a,Jk(f+152|0,f+80|0),l[f+128>>2]=0,l[f+132>>2]=0,r=l[f+204>>2],l[f+72>>2]=l[f+200>>2],l[f+76>>2]=r,Gk(f+120|0,6,f+72|0),r=l[f+132>>2],l[f+64>>2]=l[f+128>>2],l[f+68>>2]=r,r=l[f+124>>2],l[f+56>>2]=l[f+120>>2],l[f+60>>2]=r,Yk(f+136|0,f- -64|0,f+56|0,i),r=l[f+140>>2],l[f+48>>2]=l[f+136>>2],l[f+52>>2]=r,Jk(f+144|0,f+48|0),r=l[f+156>>2],l[f+40>>2]=l[f+152>>2],l[f+44>>2]=r,r=l[f+148>>2],l[f+32>>2]=l[f+144>>2],l[f+36>>2]=r,$b(f+160|0,f+40|0,f+32|0),r=l[f+164>>2],l[f+24>>2]=l[f+160>>2],l[f+28>>2]=r,Nk(f+168|0,17657,f+24|0),r=l[f+196>>2],l[f+16>>2]=l[f+192>>2],l[f+20>>2]=r,r=l[f+172>>2],l[f+8>>2]=l[f+168>>2],l[f+12>>2]=r,$b(e,f+16|0,f+8|0),ne=f+208|0}function df(e,r,a,i){var f,k,b,n=0;if(ne=k=ne-16|0,f=Bb(48),l[f+36>>2]=e,jb(k,r),e=l[k+12>>2],l[f+8>>2]=l[k+8>>2],l[f+12>>2]=e,e=l[k+4>>2],l[f>>2]=l[k>>2],l[f+4>>2]=e,e=Bb(i),l[f+16>>2]=e,qb(e,a,i),n=1,l[f+40>>2]=1,l[f+28>>2]=1,l[f+20>>2]=i,r=0,e=1,(0|i)>0)for(;10==v[r+a|0]&&(e=e+1|0,l[f+28>>2]=e),(0|i)!=(0|(r=r+1|0)););if(b=gb(4,e+1|0),l[f+24>>2]=b,e=0,l[b>>2]=0,(0|i)>0)for(;r=e+1|0,10==v[e+a|0]&&(l[(n<<2)+b>>2]=r,n=n+1|0),(0|i)!=(0|(e=r)););return l[(l[f+28>>2]<<2)+b>>2]=i+1,ne=k+16|0,f}function hf(e){var r=0;return r=1,128&e&&(r=2,192!=(224&e)&&(r=224==(240&e)?3:4)),r}function mf(e,r,a,i){var f,b=0,n=0,s=0,t=0,c=0;ne=f=ne-432|0,n=l[e+12>>2],l[f+344>>2]=l[e+8>>2],l[f+348>>2]=n,n=l[e+4>>2],l[f+336>>2]=l[e>>2],l[f+340>>2]=n;e:{r:{if(5==(15&v[f+336|0])){if(n=l[e+12>>2],l[f+328>>2]=l[e+8>>2],l[f+332>>2]=n,n=l[e+4>>2],l[f+320>>2]=l[e>>2],l[f+324>>2]=n,n=Gb(f+320|0),b=l[e+12>>2],l[f+312>>2]=l[e+8>>2],l[f+316>>2]=b,b=l[e+4>>2],l[f+304>>2]=l[e>>2],l[f+308>>2]=b,Nb(f+392|0,f+304|0),e=l[f+404>>2],l[f+296>>2]=l[f+400>>2],l[f+300>>2]=e,e=l[f+396>>2],l[f+288>>2]=l[f+392>>2],l[f+292>>2]=e,e=vn(f+288|0),l[f+388>>2]=0,k[f+416|0]=34,c=e+n|0,i?(e=l[i+12>>2],l[f+280>>2]=l[i+8>>2],l[f+284>>2]=e,e=l[i+4>>2],l[f+272>>2]=l[i>>2],l[f+276>>2]=e,Qb(f+352|0,f+272|0,f+416|0,1),e=l[f+364>>2],l[i+8>>2]=l[f+360>>2],l[i+12>>2]=e,e=l[f+356>>2],l[i>>2]=l[f+352>>2],l[i+4>>2]=e):bn(34,a),b=Vk(n,c,f+388|0),s=-1!=(0|(e=l[f+388>>2])),b)for(;;){if(t=n,n=b,!s)break r;a:if(e+-32>>>0<=94){if(34!=(0|e)&&92!=(0|e)||(k[f+415|0]=92,i?(e=l[i+12>>2],l[f+40>>2]=l[i+8>>2],l[f+44>>2]=e,e=l[i+4>>2],l[f+32>>2]=l[i>>2],l[f+36>>2]=e,Qb(f+416|0,f+32|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e):bn(92,a),e=l[f+388>>2]),k[f+415|0]=e,i){e=l[i+12>>2],l[f+24>>2]=l[i+8>>2],l[f+28>>2]=e,e=l[i+4>>2],l[f+16>>2]=l[i>>2],l[f+20>>2]=e,Qb(f+416|0,f+16|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e;break a}bn(e<<24>>24,a)}else{i:{if(!(127!=(0|e)&&(0|e)>=32)){if((b=e+-8|0)>>>0>5)break i;f:switch(b-1|0){default:if(k[f+415|0]=92,i){e=l[i+12>>2],l[f+120>>2]=l[i+8>>2],l[f+124>>2]=e,e=l[i+4>>2],l[f+112>>2]=l[i>>2],l[f+116>>2]=e,Qb(f+416|0,f+112|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e,k[f+415|0]=98,e=l[i+12>>2],l[f+104>>2]=l[i+8>>2],l[f+108>>2]=e,e=l[i+4>>2],l[f+96>>2]=l[i>>2],l[f+100>>2]=e,Qb(f+416|0,f+96|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e;break a}bn(92,a),k[f+415|0]=98,bn(98,a);break a;case 0:if(k[f+415|0]=92,i){e=l[i+12>>2],l[f+152>>2]=l[i+8>>2],l[f+156>>2]=e,e=l[i+4>>2],l[f+144>>2]=l[i>>2],l[f+148>>2]=e,Qb(f+416|0,f+144|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e,k[f+415|0]=116,e=l[i+12>>2],l[f+136>>2]=l[i+8>>2],l[f+140>>2]=e,e=l[i+4>>2],l[f+128>>2]=l[i>>2],l[f+132>>2]=e,Qb(f+416|0,f+128|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e;break a}bn(92,a),k[f+415|0]=116,bn(116,a);break a;case 4:if(k[f+415|0]=92,i){e=l[i+12>>2],l[f+184>>2]=l[i+8>>2],l[f+188>>2]=e,e=l[i+4>>2],l[f+176>>2]=l[i>>2],l[f+180>>2]=e,Qb(f+416|0,f+176|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e,k[f+415|0]=114,e=l[i+12>>2],l[f+168>>2]=l[i+8>>2],l[f+172>>2]=e,e=l[i+4>>2],l[f+160>>2]=l[i>>2],l[f+164>>2]=e,Qb(f+416|0,f+160|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e;break a}bn(92,a),k[f+415|0]=114,bn(114,a);break a;case 1:if(k[f+415|0]=92,i){e=l[i+12>>2],l[f+216>>2]=l[i+8>>2],l[f+220>>2]=e,e=l[i+4>>2],l[f+208>>2]=l[i>>2],l[f+212>>2]=e,Qb(f+416|0,f+208|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e,k[f+415|0]=110,e=l[i+12>>2],l[f+200>>2]=l[i+8>>2],l[f+204>>2]=e,e=l[i+4>>2],l[f+192>>2]=l[i>>2],l[f+196>>2]=e,Qb(f+416|0,f+192|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e;break a}bn(92,a),k[f+415|0]=110,bn(110,a);break a;case 2:break i;case 3:}if(k[f+415|0]=92,i){e=l[i+12>>2],l[f+248>>2]=l[i+8>>2],l[f+252>>2]=e,e=l[i+4>>2],l[f+240>>2]=l[i>>2],l[f+244>>2]=e,Qb(f+416|0,f+240|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e,k[f+415|0]=102,e=l[i+12>>2],l[f+232>>2]=l[i+8>>2],l[f+236>>2]=e,e=l[i+4>>2],l[f+224>>2]=l[i>>2],l[f+228>>2]=e,Qb(f+416|0,f+224|0,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e;break a}bn(92,a),k[f+415|0]=102,bn(102,a);break a}if(!r){if(e=n-t|0,i){b=l[i+12>>2],l[f+264>>2]=l[i+8>>2],l[f+268>>2]=b,b=l[i+4>>2],l[f+256>>2]=l[i>>2],l[f+260>>2]=b,Qb(f+416|0,f+256|0,t,e),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e;break a}cn(t,1,e,a);break a}}(0|e)<=65535?(l[f+64>>2]=e,ib(f+352|0,32,23124,f- -64|0)):(e=e+-65536|0,l[f+388>>2]=e,l[f+84>>2]=1023&e|56320,l[f+80>>2]=e>>>10&1023|55296,ib(f+352|0,32,23499,f+80|0)),e=on(f+352|0),i?(b=l[i+12>>2],l[f+56>>2]=l[i+8>>2],l[f+60>>2]=b,b=l[i+4>>2],l[f+48>>2]=l[i>>2],l[f+52>>2]=b,Qb(f+416|0,f+48|0,f+352|0,e),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e):cn(f+352|0,1,e,a)}if(b=Vk(n,c,f+388|0),s=-1!=(0|(e=l[f+388>>2])),!b)break}if(!s)break e;return k[f+415|0]=34,i?(e=l[i+12>>2],l[f+8>>2]=l[i+8>>2],l[f+12>>2]=e,e=l[i+4>>2],l[f>>2]=l[i>>2],l[f+4>>2]=e,Qb(f+416|0,f,f+415|0,1),e=l[f+428>>2],l[i+8>>2]=l[f+424>>2],l[i+12>>2]=e,e=l[f+420>>2],l[i>>2]=l[f+416>>2],l[i+4>>2]=e):bn(34,a),void(ne=f+432|0)}P(22416,18709,117,44657),M()}P(22789,18709,125,44657),M()}P(22789,18709,179,44657),M()}function wf(e,r,a){var i,f,b=0,n=0,s=0;if(ne=i=ne-656|0,l[i+504>>2]=0,l[i+640>>2]=0,l[i+644>>2]=0,l[i+648>>2]=0,l[i+652>>2]=0,b=l[i+652>>2],l[i+528>>2]=l[i+648>>2],l[i+532>>2]=b,b=l[i+644>>2],l[i+520>>2]=l[i+640>>2],l[i+524>>2]=b,l[i+536>>2]=0,l[i+516>>2]=0,l[i+508>>2]=0,l[i+512>>2]=0,l[i+504>>2]=-5&l[i+504>>2],l[i+640>>2]=0,l[i+644>>2]=0,l[i+648>>2]=0,l[i+652>>2]=0,b=l[i+652>>2],l[i+552>>2]=l[i+648>>2],l[i+556>>2]=b,b=l[i+644>>2],l[i+544>>2]=l[i+640>>2],l[i+548>>2]=b,l[i+640>>2]=0,l[i+644>>2]=0,l[i+648>>2]=0,l[i+652>>2]=0,b=l[i+652>>2],l[i+568>>2]=l[i+648>>2],l[i+572>>2]=b,l[i+488>>2]=0,l[i+492>>2]=0,l[i+496>>2]=0,l[i+500>>2]=0,b=l[i+644>>2],l[i+560>>2]=l[i+640>>2],l[i+564>>2]=b,l[i+584>>2]=0,l[i+576>>2]=0,l[i+580>>2]=0,l[i+480>>2]=0,l[i+484>>2]=0,l[i+588>>2]=1,l[i+592>>2]=0,k[i+636|0]=254&v[i+636|0],l[i+632>>2]=0-(1&l[i+504>>2])&3,l[(b=f=i+596|0)>>2]=0,l[b+4>>2]=0,l[b+32>>2]=0,l[b+24>>2]=0,l[b+28>>2]=0,l[b+16>>2]=0,l[b+20>>2]=0,l[b+8>>2]=0,l[b+12>>2]=0,l[i+488>>2]==l[i+484>>2]||!l[i+480>>2]){e:if((0|a)<1)b=r;else for(n=l[i+500>>2],b=r;;){if(n>>>0>2)break e;if(n=(s=v[0|b]==v[n+44582|0])?n+1|0:n?255:3,l[i+500>>2]=n,b=s?b+1|0:b,!((0|(a=a-s|0))>0))break}l[i+488>>2]=0,l[i+492>>2]=0,l[i+484>>2]=a,l[i+480>>2]=b,gf(e,i+480|0),a=l[e+12>>2],l[i+360>>2]=l[e+8>>2],l[i+364>>2]=a,a=l[e+4>>2],l[i+352>>2]=l[e>>2],l[i+356>>2]=a;e:if(15&v[i+352|0]){if(gf(i+640|0,i+480|0),a=l[i+652>>2],l[i+344>>2]=l[i+648>>2],l[i+348>>2]=a,a=l[i+644>>2],l[i+336>>2]=l[i+640>>2],l[i+340>>2]=a,15&v[i+336|0]){a=l[e+12>>2],l[i+328>>2]=l[e+8>>2],l[i+332>>2]=a,a=l[e+4>>2],l[i+320>>2]=l[e>>2],l[i+324>>2]=a,zb(i+320|0),a=l[i+652>>2],l[i+312>>2]=l[i+648>>2],l[i+316>>2]=a,a=l[i+644>>2],l[i+304>>2]=l[i+640>>2],l[i+308>>2]=a,zb(i+304|0),jb(i+448|0,18994),a=l[i+460>>2],l[i+296>>2]=l[i+456>>2],l[i+300>>2]=a,a=l[i+452>>2],l[i+288>>2]=l[i+448>>2],l[i+292>>2]=a,Hb(i+464|0,i+288|0),a=l[i+476>>2],l[e+8>>2]=l[i+472>>2],l[e+12>>2]=a,a=l[i+468>>2],l[e>>2]=l[i+464>>2],l[e+4>>2]=a;break e}if(a=l[i+652>>2],l[i+280>>2]=l[i+648>>2],l[i+284>>2]=a,a=l[i+644>>2],l[i+272>>2]=l[i+640>>2],l[i+276>>2]=a,Nb(i+432|0,i+272|0),a=l[i+444>>2],l[i+264>>2]=l[i+440>>2],l[i+268>>2]=a,a=l[i+436>>2],l[i+256>>2]=l[i+432>>2],l[i+260>>2]=a,rb(i+256|0)){a=l[e+12>>2],l[i+248>>2]=l[e+8>>2],l[i+252>>2]=a,a=l[e+4>>2],l[i+240>>2]=l[e>>2],l[i+244>>2]=a,zb(i+240|0),a=l[i+652>>2],l[e+8>>2]=l[i+648>>2],l[e+12>>2]=a,a=l[i+644>>2],l[e>>2]=l[i+640>>2],l[e+4>>2]=a;break e}a=l[i+652>>2],l[i+232>>2]=l[i+648>>2],l[i+236>>2]=a,a=l[i+644>>2],l[i+224>>2]=l[i+640>>2],l[i+228>>2]=a,zb(i+224|0)}else a=l[e+12>>2],l[i+216>>2]=l[e+8>>2],l[i+220>>2]=a,a=l[e+4>>2],l[i+208>>2]=l[e>>2],l[i+212>>2]=a,Nb(i+416|0,i+208|0),a=l[i+428>>2],l[i+200>>2]=l[i+424>>2],l[i+204>>2]=a,a=l[i+420>>2],l[i+192>>2]=l[i+416>>2],l[i+196>>2]=a,rb(i+192|0)||(a=l[e+12>>2],l[i+184>>2]=l[e+8>>2],l[i+188>>2]=a,a=l[e+4>>2],l[i+176>>2]=l[e>>2],l[i+180>>2]=a,zb(i+176|0),jb(i+400|0,19379),a=l[i+412>>2],l[i+168>>2]=l[i+408>>2],l[i+172>>2]=a,a=l[i+404>>2],l[i+160>>2]=l[i+400>>2],l[i+164>>2]=a,Hb(i+640|0,i+160|0),a=l[i+652>>2],l[e+8>>2]=l[i+648>>2],l[e+12>>2]=a,a=l[i+644>>2],l[e>>2]=l[i+640>>2],l[e+4>>2]=a);return On(i+480|0),a=l[i+532>>2],l[i+152>>2]=l[i+528>>2],l[i+156>>2]=a,a=l[i+524>>2],l[i+144>>2]=l[i+520>>2],l[i+148>>2]=a,zb(i+144|0),a=l[i+556>>2],l[i+136>>2]=l[i+552>>2],l[i+140>>2]=a,a=l[i+548>>2],l[i+128>>2]=l[i+544>>2],l[i+132>>2]=a,zb(i+128|0),Lb(l[i+508>>2]),Lb(l[i+576>>2]),Ji(f),a=l[e+12>>2],l[i+120>>2]=l[e+8>>2],l[i+124>>2]=a,a=l[e+4>>2],l[i+112>>2]=l[e>>2],l[i+116>>2]=a,15&v[i+112|0]||(a=l[e+12>>2],l[i+104>>2]=l[e+8>>2],l[i+108>>2]=a,a=l[e+4>>2],l[i+96>>2]=l[e>>2],l[i+100>>2]=a,Nb(i+384|0,i+96|0),a=l[i+396>>2],l[i+88>>2]=l[i+392>>2],l[i+92>>2]=a,a=l[i+388>>2],l[i+80>>2]=l[i+384>>2],l[i+84>>2]=a,rb(i+80|0)&&(a=l[e+12>>2],l[i+72>>2]=l[e+8>>2],l[i+76>>2]=a,a=l[e+4>>2],l[i+64>>2]=l[e>>2],l[i+68>>2]=a,Ck(i+640|0,i- -64|0),a=l[i+652>>2],l[i+56>>2]=l[i+648>>2],l[i+60>>2]=a,a=l[i+644>>2],l[i+48>>2]=l[i+640>>2],l[i+52>>2]=a,a=Gb(i+48|0),l[i+36>>2]=r,l[i+32>>2]=a,Yb(i+368|0,19681,i+32|0),r=l[i+380>>2],l[i+24>>2]=l[i+376>>2],l[i+28>>2]=r,r=l[i+372>>2],l[i+16>>2]=l[i+368>>2],l[i+20>>2]=r,Hb(i+464|0,i+16|0),r=l[i+476>>2],l[e+8>>2]=l[i+472>>2],l[e+12>>2]=r,r=l[i+468>>2],l[e>>2]=l[i+464>>2],l[e+4>>2]=r,e=l[i+652>>2],l[i+8>>2]=l[i+648>>2],l[i+12>>2]=e,e=l[i+644>>2],l[i>>2]=l[i+640>>2],l[i+4>>2]=e,zb(i))),void(ne=i+656|0)}P(14410,14895,685,44564),M()}function pf(e,r){var a,i=0,f=0,k=0,b=0;ne=a=ne-288|0;e:{if(!l[e+36>>2]&&(f=v[e+92|0]|v[e+93|0]<<8|v[e+94|0]<<16|v[e+95|0]<<24,k=v[e+88|0]|v[e+89|0]<<8|v[e+90|0]<<16|v[e+91|0]<<24,l[a+280>>2]=k,l[a+284>>2]=f,b=v[e+80|0]|v[e+81|0]<<8|v[e+82|0]<<16|v[e+83|0]<<24,i=v[e+84|0]|v[e+85|0]<<8|v[e+86|0]<<16|v[e+87|0]<<24,l[a+184>>2]=k,l[a+188>>2]=f,l[a+272>>2]=b,l[a+276>>2]=i,l[a+176>>2]=b,l[a+180>>2]=i,15&v[a+176|0]))rn(a+240|0),i=l[e+52>>2],l[a+168>>2]=l[e+48>>2],l[a+172>>2]=i,i=l[e+44>>2],l[a+160>>2]=l[e+40>>2],l[a+164>>2]=i,Nb(a+224|0,a+160|0),i=l[a+252>>2],l[a+152>>2]=l[a+248>>2],l[a+156>>2]=i,i=l[a+236>>2],l[a+136>>2]=l[a+232>>2],l[a+140>>2]=i,i=l[a+244>>2],l[a+144>>2]=l[a+240>>2],l[a+148>>2]=i,i=l[a+228>>2],l[a+128>>2]=l[a+224>>2],l[a+132>>2]=i,Vb(a+256|0,a+144|0,a+128|0),i=l[a+268>>2],l[a+120>>2]=l[a+264>>2],l[a+124>>2]=i,i=l[a+260>>2],l[a+112>>2]=l[a+256>>2],l[a+116>>2]=i,i=l[e+92>>2],l[a+104>>2]=l[e+88>>2],l[a+108>>2]=i,i=l[e+84>>2],l[a+96>>2]=l[e+80>>2],l[a+100>>2]=i,Vb(a+272|0,a+112|0,a+96|0),i=l[a+284>>2],l[r+8>>2]=l[a+280>>2],l[r+12>>2]=i,i=l[a+276>>2],l[r>>2]=l[a+272>>2],l[r+4>>2]=i,l[a+272>>2]=0,l[a+276>>2]=0,l[a+280>>2]=0,l[a+284>>2]=0,r=l[a+284>>2],l[e+88>>2]=l[a+280>>2],l[e+92>>2]=r,r=l[a+276>>2],l[e+80>>2]=l[a+272>>2],l[e+84>>2]=r;else{if(i=v[e+76|0]|v[e+77|0]<<8|v[e+78|0]<<16|v[e+79|0]<<24,k=v[e+72|0]|v[e+73|0]<<8|v[e+74|0]<<16|v[e+75|0]<<24,l[a+280>>2]=k,l[a+284>>2]=i,f=v[e+64|0]|v[e+65|0]<<8|v[e+66|0]<<16|v[e+67|0]<<24,b=v[e+68|0]|v[e+69|0]<<8|v[e+70|0]<<16|v[e+71|0]<<24,l[a+88>>2]=k,l[a+92>>2]=i,l[a+272>>2]=f,l[a+276>>2]=b,l[a+80>>2]=f,l[a+84>>2]=b,i=0,!(15&v[a+80|0]))break e;if(f=l[12+(e=e- -64|0)>>2],l[a+72>>2]=l[e+8>>2],l[a+76>>2]=f,f=l[e+4>>2],l[a+64>>2]=l[e>>2],l[a+68>>2]=f,Nb(a+208|0,a- -64|0),i=l[a+220>>2],l[a+56>>2]=l[a+216>>2],l[a+60>>2]=i,i=l[a+212>>2],l[a+48>>2]=l[a+208>>2],l[a+52>>2]=i,(0|Zb(a+48|0))>=3){i=l[e+12>>2],l[a+40>>2]=l[e+8>>2],l[a+44>>2]=i,i=l[e+4>>2],l[a+32>>2]=l[e>>2],l[a+36>>2]=i,Nb(a+192|0,a+32|0),i=l[a+204>>2],l[a+24>>2]=l[a+200>>2],l[a+28>>2]=i,i=l[a+196>>2],l[a+16>>2]=l[a+192>>2],l[a+20>>2]=i,eb(a+272|0,a+16|0,0,2),i=l[a+284>>2],l[r+8>>2]=l[a+280>>2],l[r+12>>2]=i,i=l[a+276>>2],l[r>>2]=l[a+272>>2],l[r+4>>2]=i,r=l[e+12>>2],l[a+8>>2]=l[e+8>>2],l[a+12>>2]=r,r=l[e+4>>2],l[a>>2]=l[e>>2],l[a+4>>2]=r,eb(a+272|0,a,0,1),r=l[a+284>>2],l[e+8>>2]=l[a+280>>2],l[e+12>>2]=r,r=l[a+276>>2],l[e>>2]=l[a+272>>2],l[e+4>>2]=r,i=1;break e}i=l[e+4>>2],l[r>>2]=l[e>>2],l[r+4>>2]=i,i=l[e+12>>2],l[r+8>>2]=l[e+8>>2],l[r+12>>2]=i,l[a+272>>2]=0,l[a+276>>2]=0,l[a+280>>2]=0,l[a+284>>2]=0,r=l[a+284>>2],l[e+8>>2]=l[a+280>>2],l[e+12>>2]=r,r=l[a+276>>2],l[e>>2]=l[a+272>>2],l[e+4>>2]=r}i=1}return ne=a+288|0,i}function gf(e,r){var a,i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,w=0;ne=a=ne-2544|0;e:{r:{a:{i:{f:if(l[r+16>>2])l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0;else if(l[r>>2]){if(255==l[r+20>>2]){if(!(1&k[r+24|0])){jb(a+2336|0,15307),i=l[4+(r=a+2344|0)>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=i,r=l[a+2340>>2],l[a>>2]=l[a+2336>>2],l[a+4>>2]=r,Hb(e,a);break f}l[r+152>>2]=3,On(r)}if(l[(i=a+2320|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,2&v[r+24|0]&&pf(r,a+2320|0))r=l[a+2324>>2],l[e>>2]=l[a+2320>>2],l[e+4>>2]=r,i=l[4+(r=a+2328|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=i;else{c=r- -64|0;k:{b:{n:{s:{for(;;){t:{c:{o:{u:{l:{v:{d:{h:{m:{w:{p:{if((0|(i=l[r+8>>2]))<(0|(f=l[r+4>>2]))){if(l[r+8>>2]=i+1,d=k[i+l[r>>2]|0],3==(0|(i=l[r+152>>2]))){if(10==(0|d)){t=0,l[r+112>>2]=0,l[r+108>>2]=l[r+108>>2]+1;break c}if(l[r+112>>2]=l[r+112>>2]+1,t=0,30!=(0|d))break c;l[r+152>>2]=0;break c}l[r+112>>2]=l[r+112>>2]+1;g:{if(10!=(0|(f=255&d))){if(30!=(0|f))break g;i=l[r+24>>2];y:{if(2&i){if(f=l[r+92>>2],l[(i=a+2040|0)>>2]=l[r+88>>2],l[i+4>>2]=f,f=l[r+84>>2],l[a+2032>>2]=l[r+80>>2],l[a+2036>>2]=f,(15&v[a+2032|0])-1>>>0<4|l[r+36>>2]>0)break y;break o}if(!(1&i)|1&k[r+156|0])break o;if(!(l[r+32>>2]>0|l[r+100>>2]>0)&&(f=l[r+92>>2],l[(i=a+2024|0)>>2]=l[r+88>>2],l[i+4>>2]=f,i=l[r+84>>2],l[a+2016>>2]=l[r+80>>2],l[a+2020>>2]=i,4!=(15&v[a+2016|0])))break o}y:if(!$f(r)){if(2&v[r+24|0]){if(l[r+36>>2])break y;if(f=l[r+92>>2],l[(i=a+2008|0)>>2]=l[r+88>>2],l[i+4>>2]=f,i=l[r+84>>2],l[a+2e3>>2]=l[r+80>>2],l[a+2004>>2]=i,t=19939,4!=(15&v[a+2e3|0]))break y;break u}if(!l[r+32>>2]&&(f=l[r+92>>2],l[(i=a+1992|0)>>2]=l[r+88>>2],l[i+4>>2]=f,i=l[r+84>>2],l[a+1984>>2]=l[r+80>>2],l[a+1988>>2]=i,t=19939,4==(15&v[a+1984|0])))break u}t=20280;break u}l[r+112>>2]=0,l[r+108>>2]=l[r+108>>2]+1}f=v[r+156|0],k[r+156|0]=254&f;g:{if(!i){if((t=d+-9|0)>>>0<=84)break g;if((i=d+-123|0)>>>0>2)break m;if(i-1)break d;break m}if(34!=(0|d)|1!=(0|i))break p;if(i=l[r+96>>2],(0|(f=l[r+100>>2]))<1)f=i;else{for(o=i+f|0,f=i;;){t=i+1|0;y:{E:{if(92==(0|(b=v[0|i]))){if(t>>>0>=o>>>0){t=27834;break s}if(t=28779,(s=(n=k[i+1|0])+-34|0)>>>0>83)break s;b=i+2|0;_:switch(s-1|0){default:k[0|f]=n;break E;case 63:k[0|f]=8;break E;case 67:k[0|f]=12;break E;case 81:k[0|f]=9;break E;case 75:k[0|f]=10;break E;case 79:k[0|f]=13;break E;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 58:case 59:case 60:case 61:case 62:case 64:case 65:case 66:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 76:case 77:case 78:case 80:break s;case 82:}if((n=i+6|0)>>>0>o>>>0){t=28042;break s}if((0|(s=le(b)))<0){t=28288;break s}if(55296!=(-1024&s))i=n;else{if(t=28521,b=i+12|0,92!=v[0|n]|b>>>0>o>>>0|117!=v[i+7|0])break s;if(56320!=(-1024&(i=le(i+8|0))))break s;s=65536+(i+-56320|(s<<10)-56623104)|0,i=b}f=Zf(s>>>0>1114111?65533:s,f)+f|0;break y}if((b+-1&255)>>>0<30){t=29033;break s}k[0|f]=b,i=t,f=f+1|0;break y}i=b,f=f+1|0}if(!(i>>>0<o>>>0))break}i=l[r+96>>2]}Uk(a+2496|0,i,f-i|0),b=l[4+(t=a+2504|0)>>2],l[(i=a+2520|0)>>2]=l[t>>2],l[i+4>>2]=b,f=l[a+2500>>2],l[a+2512>>2]=l[a+2496>>2],l[a+2516>>2]=f,s=l[r+24>>2],t=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,o=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=o,l[f+4>>2]=t,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(u=a+1912|0)>>2]=o,l[u+4>>2]=t,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+1904>>2]=b,l[a+1908>>2]=n,t=15&v[a+1904|0];y:{if(2&s){if(86==l[r+56>>2]|t)break y;l[r+56>>2]=l[r+36>>2]>0?86:0;break w}if(!t)break w}t=26637;break s}switch(i=3,t-2|0){case 23:break v;case 33:case 47:case 80:case 82:break d;case 0:case 1:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 22:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 81:break m;default:break h}}g:{y:{if(l[r+12>>2]){if((0|i)!=(0|f))break y;l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0;break f}if(l[r+16>>2]=1,(0|i)!=(0|f))break g;b=l[4+(i=a+2328|0)>>2],l[(f=a+2264|0)>>2]=l[i>>2],l[f+4>>2]=b,f=l[a+2324>>2],l[a+2256>>2]=l[a+2320>>2],l[a+2260>>2]=f,zb(a+2256|0);E:{_:if(!((f=l[r+152>>2])>>>0>3)){D:switch(f-1|0){case 0:case 1:break _;case 2:break D;default:break E}i=l[r+112>>2],l[a+2064>>2]=l[r+108>>2],l[a+2068>>2]=i,pb(e,r,17196,a+2064|0);break f}f=l[r+112>>2],l[a+2048>>2]=l[r+108>>2],l[a+2052>>2]=f,pb(a+2528|0,r,17531,a+2048|0),t=l[4+(f=a+2536|0)>>2],l[i>>2]=l[f>>2],l[i+4>>2]=t,f=l[a+2532>>2],l[a+2320>>2]=l[a+2528>>2],l[a+2324>>2]=f,On(r),l[r+152>>2]=3,r=l[i+4>>2],l[e+8>>2]=l[i>>2],l[e+12>>2]=r,r=l[a+2324>>2],l[e>>2]=l[a+2320>>2],l[e+4>>2]=r;break f}if(i=$f(r)){f=l[r+112>>2],l[a+2244>>2]=l[r+108>>2],l[a+2248>>2]=f,l[a+2240>>2]=i,pb(a+2528|0,r,17857,a+2240|0),b=l[4+(t=a+2536|0)>>2],l[(i=a+2328|0)>>2]=l[t>>2],l[i+4>>2]=b,f=l[a+2532>>2],l[a+2320>>2]=l[a+2528>>2],l[a+2324>>2]=f,On(r),l[r+152>>2]=3,r=l[i+4>>2],l[e+8>>2]=l[i>>2],l[e+12>>2]=r,r=l[a+2324>>2],l[e>>2]=l[a+2320>>2],l[e+4>>2]=r;break f}E:{_:{D:{if(2&v[r+24|0]){if(l[r+36>>2])break D;if(f=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,i=a+2536|0,n=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[i>>2]=n,l[i+4>>2]=f,t=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,b=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(c=a+2232|0)>>2]=n,l[c+4>>2]=f,l[a+2528>>2]=t,l[a+2532>>2]=b,l[a+2224>>2]=t,l[a+2228>>2]=b,!(15&v[a+2224|0]))break _;rn(a+2288|0),t=l[r+52>>2],l[(f=a+2216|0)>>2]=l[r+48>>2],l[f+4>>2]=t,f=l[r+44>>2],l[a+2208>>2]=l[r+40>>2],l[a+2212>>2]=f,Nb(a+2272|0,a+2208|0),b=l[4+(t=a+2296|0)>>2],l[(f=a+2200|0)>>2]=l[t>>2],l[f+4>>2]=b,b=l[4+(t=a+2280|0)>>2],l[(f=a+2184|0)>>2]=l[t>>2],l[f+4>>2]=b,f=l[a+2292>>2],l[a+2192>>2]=l[a+2288>>2],l[a+2196>>2]=f,f=l[a+2276>>2],l[a+2176>>2]=l[a+2272>>2],l[a+2180>>2]=f,Vb(a+2304|0,a+2192|0,a+2176|0),b=l[4+(t=a+2312|0)>>2],l[(f=a+2168|0)>>2]=l[t>>2],l[f+4>>2]=b,f=l[a+2308>>2],l[a+2160>>2]=l[a+2304>>2],l[a+2164>>2]=f,t=l[r+92>>2],l[(f=a+2152|0)>>2]=l[r+88>>2],l[f+4>>2]=t,f=l[r+84>>2],l[a+2144>>2]=l[r+80>>2],l[a+2148>>2]=f,Vb(a+2528|0,a+2160|0,a+2144|0),t=l[i+4>>2],l[(f=a+2328|0)>>2]=l[i>>2],l[f+4>>2]=t,i=l[a+2532>>2],l[a+2320>>2]=l[a+2528>>2],l[a+2324>>2]=i;break E}if(!l[r+32>>2])break _}i=l[r+112>>2],l[a+2128>>2]=l[r+108>>2],l[a+2132>>2]=i,pb(a+2528|0,r,18240,a+2128|0),b=l[4+(t=a+2536|0)>>2],l[(i=a+2328|0)>>2]=l[t>>2],l[i+4>>2]=b,f=l[a+2532>>2],l[a+2320>>2]=l[a+2528>>2],l[a+2324>>2]=f,On(r),l[r+152>>2]=3,r=l[i+4>>2],l[e+8>>2]=l[i>>2],l[e+12>>2]=r,r=l[a+2324>>2],l[e>>2]=l[a+2320>>2],l[e+4>>2]=r;break f}f=l[r+92>>2],l[(i=a+2328|0)>>2]=l[r+88>>2],l[i+4>>2]=f,i=l[r+84>>2],l[a+2320>>2]=l[r+80>>2],l[a+2324>>2]=i}if(l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,f=l[4+(i=a+2536|0)>>2],l[r+88>>2]=l[i>>2],l[r+92>>2]=f,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i,!(!(1&k[r+24|0])|1&k[r+156|0])&&(b=l[4+(i=a+2328|0)>>2],l[(f=a+2120|0)>>2]=l[i>>2],l[f+4>>2]=b,f=l[a+2324>>2],l[a+2112>>2]=l[a+2320>>2],l[a+2116>>2]=f,4==(15&v[a+2112|0]))){t=l[i+4>>2],l[(f=a+2104|0)>>2]=l[i>>2],l[f+4>>2]=t,i=l[a+2324>>2],l[a+2096>>2]=l[a+2320>>2],l[a+2100>>2]=i,zb(a+2096|0),i=l[r+112>>2],l[a+2080>>2]=l[r+108>>2],l[a+2084>>2]=i,pb(e,r,18634,a+2080|0);break f}r=l[a+2324>>2],l[e>>2]=l[a+2320>>2],l[e+4>>2]=r,i=l[4+(r=a+2328|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=i;break f}P(16931,14895,772,44585),M()}P(16931,14895,778,44585),M()}p:{if((0|(i=l[r+100>>2]))<=(0|(f=l[r+104>>2]))){if((0|i)>=(f+-1|0)&&(i=256+(f<<1)|0,l[r+104>>2]=i,l[r+96>>2]=an(l[r+96>>2],i),f=l[r+104>>2],i=l[r+100>>2]),(0|i)>=(0|f))break p;if(l[r+100>>2]=i+1,k[l[r+96>>2]+i|0]=d,!(92!=(0|d)|1!=l[r+152>>2])){l[r+152>>2]=2,t=0;break c}l[r+152>>2]=1,t=0;break c}break i}break a}if(b=l[r+92>>2],l[(t=a+1896|0)>>2]=l[r+88>>2],l[t+4>>2]=b,t=l[r+84>>2],l[a+1888>>2]=l[r+80>>2],l[a+1892>>2]=t,zb(a+1888|0),t=l[i+4>>2],l[r+88>>2]=l[i>>2],l[r+92>>2]=t,i=l[a+2516>>2],l[r+80>>2]=l[a+2512>>2],l[r+84>>2]=i,l[r+100>>2]=0,l[r+152>>2]=0,2&v[r+24|0]){if(t=0,!pf(r,a+2320|0))break c;break n}if(t=0,l[r+32>>2])break c;if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,n=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=n,l[f+4>>2]=i,f=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,b=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(s=a+1880|0)>>2]=n,l[s+4>>2]=i,l[a+2528>>2]=f,l[a+2532>>2]=b,l[a+1872>>2]=f,l[a+1876>>2]=b,!(15&v[a+1872|0]))break c;f=l[r+92>>2],l[(i=a+2328|0)>>2]=l[r+88>>2],l[i+4>>2]=f,i=l[r+84>>2],l[a+2320>>2]=l[r+80>>2],l[a+2324>>2]=i,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,f=l[4+(i=a+2536|0)>>2],l[r+88>>2]=l[i>>2],l[r+92>>2]=f,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i;break n}m:{if((0|(i=l[r+100>>2]))<=(0|(f=l[r+104>>2]))){if((0|i)>=(f+-1|0)&&(i=256+(f<<1)|0,l[r+104>>2]=i,l[r+96>>2]=an(l[r+96>>2],i),f=l[r+104>>2],i=l[r+100>>2]),(0|i)>=(0|f))break m;l[r+100>>2]=i+1,k[l[r+96>>2]+i|0]=d,t=0;break l}break i}break a}i=1,k[r+156|0]=1|f;break v}i=2}if(t=$f(r))break t;v:{d:{if(2&v[r+24|0]){if(pf(r,a+2320|0))break d;t=0;break v}if(t=0,l[r+32>>2])break v;if(f=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,b=a+2536|0,o=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[b>>2]=o,l[b+4>>2]=f,n=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,s=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(u=a+1864|0)>>2]=o,l[u+4>>2]=f,l[a+2528>>2]=n,l[a+2532>>2]=s,l[a+1856>>2]=n,l[a+1860>>2]=s,!(15&v[a+1856|0]))break v;t=l[r+92>>2],l[(f=a+2328|0)>>2]=l[r+88>>2],l[f+4>>2]=t,f=l[r+84>>2],l[a+2320>>2]=l[r+80>>2],l[a+2324>>2]=f,l[(f=a+2528|0)>>2]=0,l[f+4>>2]=0,l[f+8>>2]=0,l[f+12>>2]=0,f=l[b+4>>2],l[r+88>>2]=l[b>>2],l[r+92>>2]=f,f=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=f}t=15706}if(!((i=i+-2|0)>>>0>1)){v:{d:{h:{m:{w:{p:{g:{y:{E:{_:{D:{S:{F:{M:{A:{x:{if(i-1){if(2&v[r+24|0]){if(i=0,(f=d+-91|0)>>>0<=34)break x;if((f=d+-44|0)>>>0>14)break v;P:switch(f-1|0){case 13:if(i=21913,!l[r+36>>2])break v;if(f=l[r+52>>2],l[a+760>>2]=l[r+48>>2],l[a+764>>2]=f,f=l[r+44>>2],l[a+752>>2]=l[r+40>>2],l[a+756>>2]=f,Nb(a+2496|0,a+752|0),f=l[r+36>>2],n=l[4+(b=a+2504|0)>>2],l[a+744>>2]=l[b>>2],l[a+748>>2]=n,b=l[a+2500>>2],l[a+736>>2]=l[a+2496>>2],l[a+740>>2]=b,Kb(a+2512|0,a+736|0,f+-1|0),b=l[4+(f=a+2520|0)>>2],l[a+728>>2]=l[f>>2],l[a+732>>2]=b,f=l[a+2516>>2],l[a+720>>2]=l[a+2512>>2],l[a+724>>2]=f,4==(15&v[a+720|0]))break v;if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,s=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=s,l[f+4>>2]=i,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+712>>2]=s,l[a+716>>2]=i,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+704>>2]=b,l[a+708>>2]=n,i=22137,!(15&v[a+704|0])|!l[r+56>>2])break v;if(i=l[r+92>>2],l[a+696>>2]=l[r+88>>2],l[a+700>>2]=i,i=l[r+84>>2],l[a+688>>2]=l[r+80>>2],l[a+692>>2]=i,i=22388,5!=(15&v[a+688|0]))break v;if(i=22765,86!=l[r+56>>2])break v;l[r+56>>2]=58,i=l[r+36>>2],b=l[r+52>>2],l[a+680>>2]=l[r+48>>2],l[a+684>>2]=b,b=l[r+44>>2],l[a+672>>2]=l[r+40>>2],l[a+676>>2]=b,b=l[r+92>>2],l[a+664>>2]=l[r+88>>2],l[a+668>>2]=b,b=l[r+84>>2],l[a+656>>2]=l[r+80>>2],l[a+660>>2]=b,Dn(a+2528|0,a+672|0,i+-1|0,a+656|0),i=l[f+4>>2],l[r+48>>2]=l[f>>2],l[r+52>>2]=i,i=l[a+2532>>2],l[r+40>>2]=l[a+2528>>2],l[r+44>>2]=i,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i;break d;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:break v}if(i=23098,86!=l[r+56>>2])break v;if(!l[r+36>>2]){i=23461;break v}f=l[r+52>>2],l[(i=a+1112|0)>>2]=l[r+48>>2],l[i+4>>2]=f,i=l[r+44>>2],l[a+1104>>2]=l[r+40>>2],l[a+1108>>2]=i,Nb(a+2496|0,a+1104|0),i=l[r+36>>2],n=l[4+(b=a+2504|0)>>2],l[(f=a+1096|0)>>2]=l[b>>2],l[f+4>>2]=n,f=l[a+2500>>2],l[a+1088>>2]=l[a+2496>>2],l[a+1092>>2]=f,Kb(a+2528|0,a+1088|0,i+-1|0),i=l[4+(f=a+2536|0)>>2],b=a+2520|0,s=l[f>>2],l[b>>2]=s,l[b+4>>2]=i,l[(n=a+1080|0)>>2]=s,l[n+4>>2]=i,i=l[a+2532>>2],n=l[a+2528>>2],l[a+2512>>2]=n,l[a+2516>>2]=i,l[a+1072>>2]=n,l[a+1076>>2]=i;P:{T:if(!((i=(15&v[a+1072|0])-1|0)>>>0>4)){R:{O:switch(i-1|0){case 2:i=l[b+4>>2],l[a+920>>2]=l[b>>2],l[a+924>>2]=i,i=l[a+2516>>2],l[a+912>>2]=l[a+2512>>2],l[a+916>>2]=i,h=Wb(a+912|0),i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,o=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=o,l[f+4>>2]=i,n=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,s=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+904>>2]=o,l[a+908>>2]=i,l[a+2528>>2]=n,l[a+2532>>2]=s,l[a+896>>2]=n,l[a+900>>2]=s,n=15&v[a+896|0],i=g(h)<2147483648?~~h:-2147483648,n&&(rn(a+2464|0),n=l[r+52>>2],l[a+888>>2]=l[r+48>>2],l[a+892>>2]=n,n=l[r+44>>2],l[a+880>>2]=l[r+40>>2],l[a+884>>2]=n,Nb(a+2448|0,a+880|0),s=l[4+(n=a+2472|0)>>2],l[a+872>>2]=l[n>>2],l[a+876>>2]=s,s=l[4+(n=a+2456|0)>>2],l[a+856>>2]=l[n>>2],l[a+860>>2]=s,n=l[a+2468>>2],l[a+864>>2]=l[a+2464>>2],l[a+868>>2]=n,n=l[a+2452>>2],l[a+848>>2]=l[a+2448>>2],l[a+852>>2]=n,Vb(a+2480|0,a+864|0,a+848|0),s=l[4+(n=a+2488|0)>>2],l[a+840>>2]=l[n>>2],l[a+844>>2]=s,n=l[a+2484>>2],l[a+832>>2]=l[a+2480>>2],l[a+836>>2]=n,n=l[r+92>>2],l[a+824>>2]=l[r+88>>2],l[a+828>>2]=n,n=l[r+84>>2],l[a+816>>2]=l[r+80>>2],l[a+820>>2]=n,Vb(a+2528|0,a+832|0,a+816|0),n=l[f+4>>2],l[c+8>>2]=l[f>>2],l[c+12>>2]=n,n=l[a+2532>>2],l[c>>2]=l[a+2528>>2],l[c+4>>2]=n,l[(n=a+2528|0)>>2]=0,l[n+4>>2]=0,l[n+8>>2]=0,l[n+12>>2]=0,n=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=n,n=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=n),s=l[r+36>>2],l[(n=a+2432|0)>>2]=4,l[n+4>>2]=0,m[n+8>>3]=i+1|0,i=l[r+52>>2],l[a+808>>2]=l[r+48>>2],l[a+812>>2]=i,i=l[r+40>>2],n=l[r+44>>2],u=l[4+(o=a+2440|0)>>2],l[a+792>>2]=l[o>>2],l[a+796>>2]=u,l[a+800>>2]=i,l[a+804>>2]=n,i=l[a+2436>>2],l[a+784>>2]=l[a+2432>>2],l[a+788>>2]=i,Dn(a+2528|0,a+800|0,s+-1|0,a+784|0);break R;case 0:case 1:break T;case 3:break O;default:break P}i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,o=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=o,l[f+4>>2]=i,n=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,s=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(u=a+1048|0)>>2]=o,l[u+4>>2]=i,l[a+2528>>2]=n,l[a+2532>>2]=s,l[a+1040>>2]=n,l[a+1044>>2]=s,15&v[a+1040|0]&&(rn(a+2464|0),n=l[r+52>>2],l[(i=a+1032|0)>>2]=l[r+48>>2],l[i+4>>2]=n,i=l[r+44>>2],l[a+1024>>2]=l[r+40>>2],l[a+1028>>2]=i,Nb(a+2448|0,a+1024|0),n=l[4+(i=a+2472|0)>>2],l[a+1016>>2]=l[i>>2],l[a+1020>>2]=n,n=l[4+(i=a+2456|0)>>2],l[a+1e3>>2]=l[i>>2],l[a+1004>>2]=n,i=l[a+2468>>2],l[a+1008>>2]=l[a+2464>>2],l[a+1012>>2]=i,i=l[a+2452>>2],l[a+992>>2]=l[a+2448>>2],l[a+996>>2]=i,Vb(a+2480|0,a+1008|0,a+992|0),n=l[4+(i=a+2488|0)>>2],l[a+984>>2]=l[i>>2],l[a+988>>2]=n,i=l[a+2484>>2],l[a+976>>2]=l[a+2480>>2],l[a+980>>2]=i,i=l[r+92>>2],l[a+968>>2]=l[r+88>>2],l[a+972>>2]=i,i=l[r+84>>2],l[a+960>>2]=l[r+80>>2],l[a+964>>2]=i,Vb(a+2528|0,a+976|0,a+960|0),i=l[f+4>>2],l[c+8>>2]=l[f>>2],l[c+12>>2]=i,i=l[a+2532>>2],l[c>>2]=l[a+2528>>2],l[c+4>>2]=i,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i),n=l[r+36>>2],o=l[10939],l[8+(i=a+2432|0)>>2]=l[10938],l[i+12>>2]=o,s=l[10937],l[i>>2]=l[10936],l[i+4>>2]=s,i=l[r+52>>2],l[a+952>>2]=l[r+48>>2],l[a+956>>2]=i,i=l[r+40>>2],s=l[r+44>>2],u=l[4+(o=a+2440|0)>>2],l[a+936>>2]=l[o>>2],l[a+940>>2]=u,l[a+944>>2]=i,l[a+948>>2]=s,i=l[a+2436>>2],l[a+928>>2]=l[a+2432>>2],l[a+932>>2]=i,Dn(a+2528|0,a+944|0,n+-1|0,a+928|0)}i=l[f+4>>2],l[r+48>>2]=l[f>>2],l[r+52>>2]=i,i=l[a+2532>>2],l[r+40>>2]=l[a+2528>>2],l[r+44>>2]=i,l[r+56>>2]=44,i=l[b+4>>2],l[a+776>>2]=l[b>>2],l[a+780>>2]=i,i=l[a+2516>>2],l[a+768>>2]=l[a+2512>>2],l[a+772>>2]=i,zb(a+768|0);break d}P(23806,14895,296,44614),M()}f=l[b+4>>2],l[(i=a+1064|0)>>2]=l[b>>2],l[i+4>>2]=f,i=l[a+2516>>2],l[a+1056>>2]=l[a+2512>>2],l[a+1060>>2]=i,zb(a+1056|0),i=24056;break v}if(i=0,(f=d+-91|0)>>>0<=34)break A;if((f=d+-44|0)>>>0>14)break v;P:switch(f-1|0){case 13:if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,s=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=s,l[f+4>>2]=i,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+168>>2]=s,l[a+172>>2]=i,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+160>>2]=b,l[a+164>>2]=n,!(15&v[a+160|0])){i=22137;break v}if(i=21913,!(b=l[r+32>>2]))break v;if(b=(l[r+28>>2]+(b<<4)|0)-16|0,n=l[b+12>>2],l[a+152>>2]=l[b+8>>2],l[a+156>>2]=n,n=l[b+4>>2],l[a+144>>2]=l[b>>2],l[a+148>>2]=n,7!=(15&v[a+144|0]))break v;if(i=l[r+92>>2],l[a+136>>2]=l[r+88>>2],l[a+140>>2]=i,i=l[r+84>>2],l[a+128>>2]=l[r+80>>2],l[a+132>>2]=i,i=22388,5!=(15&v[a+128|0]))break v;if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,l[f>>2]=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f+4>>2]=i,i=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+2528>>2]=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,l[a+2532>>2]=i,(0|(i=l[r+32>>2]))>(0|(s=l[r+36>>2])))break r;if((0|i)==(0|s)&&(i=10+(i<<1)|0,l[r+36>>2]=i,l[r+28>>2]=an(l[r+28>>2],i<<4),s=l[r+36>>2],i=l[r+32>>2]),(0|i)>=(0|s))break e;l[r+32>>2]=i+1,n=l[f+4>>2],i=l[r+28>>2]+(i<<4)|0,l[i+8>>2]=l[f>>2],l[i+12>>2]=n,b=l[a+2532>>2],l[i>>2]=l[a+2528>>2],l[i+4>>2]=b,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i;break d;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:break v}if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,s=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=s,l[f+4>>2]=i,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+312>>2]=s,l[a+316>>2]=i,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+304>>2]=b,l[a+308>>2]=n,!(15&v[a+304|0])){i=23098;break v}if(!(i=l[r+32>>2])){i=23461;break v}if(i=(l[r+28>>2]+(i<<4)|0)-16|0,b=l[i+12>>2],l[a+296>>2]=l[i+8>>2],l[a+300>>2]=b,b=l[i+4>>2],l[a+288>>2]=l[i>>2],l[a+292>>2]=b,i=(l[r+28>>2]+(l[r+32>>2]<<4)|0)-16|0,6==(15&v[a+288|0])){b=l[i+12>>2],l[a+200>>2]=l[i+8>>2],l[a+204>>2]=b,b=l[i+4>>2],l[a+192>>2]=l[i>>2],l[a+196>>2]=b,b=l[r+92>>2],l[a+184>>2]=l[r+88>>2],l[a+188>>2]=b,b=l[r+84>>2],l[a+176>>2]=l[r+80>>2],l[a+180>>2]=b,Vb(a+2528|0,a+192|0,a+176|0),b=l[f+4>>2],l[i+8>>2]=l[f>>2],l[i+12>>2]=b,b=l[a+2532>>2],l[i>>2]=l[a+2528>>2],l[i+4>>2]=b,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i;break d}if(b=l[i+12>>2],l[a+280>>2]=l[i+8>>2],l[a+284>>2]=b,b=l[i+4>>2],l[a+272>>2]=l[i>>2],l[a+276>>2]=b,i=24056,5!=(15&v[a+272|0]))break v;if((0|(i=l[r+32>>2]))<2)break M;if(i=(l[r+28>>2]+(i<<4)|0)-32|0,b=l[i+12>>2],l[a+264>>2]=l[i+8>>2],l[a+268>>2]=b,b=l[i+4>>2],l[a+256>>2]=l[i>>2],l[a+260>>2]=b,7!=(15&v[a+256|0]))break M;b=l[r+28>>2]+(l[r+32>>2]<<4)|0,n=l[12+(i=b+-32|0)>>2],l[a+248>>2]=l[i+8>>2],l[a+252>>2]=n,n=l[i+4>>2],l[a+240>>2]=l[i>>2],l[a+244>>2]=n,n=l[12+(b=b+-16|0)>>2],l[a+232>>2]=l[b+8>>2],l[a+236>>2]=n,n=l[b+4>>2],l[a+224>>2]=l[b>>2],l[a+228>>2]=n,b=l[r+92>>2],l[a+216>>2]=l[r+88>>2],l[a+220>>2]=b,b=l[r+84>>2],l[a+208>>2]=l[r+80>>2],l[a+212>>2]=b,en(a+2528|0,a+240|0,a+224|0,a+208|0),b=l[f+4>>2],l[i+8>>2]=l[f>>2],l[i+12>>2]=b,b=l[a+2532>>2],l[i>>2]=l[a+2528>>2],l[i+4>>2]=b,l[r+32>>2]=l[r+32>>2]+-1,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i;break d}l[r+152>>2]=1;break l}switch(f-1|0){case 0:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 32:break v;case 31:break m;case 1:break y;case 33:break E;default:break h}}switch(f-1|0){case 0:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 32:break v;case 31:break D;case 1:break S;case 33:break F;default:break _}}P(26890,14895,185,44627),M()}if(i=26095,!l[r+32>>2])break v;b=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,o=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=o,l[f+4>>2]=b,n=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,s=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+568>>2]=o,l[a+572>>2]=b,l[a+2528>>2]=n,l[a+2532>>2]=s,l[a+560>>2]=n,l[a+564>>2]=s,n=15&v[a+560|0],b=(l[r+28>>2]+(l[r+32>>2]<<4)|0)-16|0,s=l[b+12>>2],l[a+552>>2]=l[b+8>>2],l[a+556>>2]=s,s=l[b+4>>2],l[a+544>>2]=l[b>>2],l[a+548>>2]=s,b=15&v[a+544|0];F:{if(n){if(i=24056,5!=(0|b))break v;if((0|(i=l[r+32>>2]))<2)break F;if(i=(l[r+28>>2]+(i<<4)|0)-32|0,b=l[i+12>>2],l[a+536>>2]=l[i+8>>2],l[a+540>>2]=b,b=l[i+4>>2],l[a+528>>2]=l[i>>2],l[a+532>>2]=b,7!=(15&v[a+528|0]))break F;b=l[r+28>>2]+(l[r+32>>2]<<4)|0,n=l[12+(i=b+-32|0)>>2],l[a+520>>2]=l[i+8>>2],l[a+524>>2]=n,n=l[i+4>>2],l[a+512>>2]=l[i>>2],l[a+516>>2]=n,n=l[12+(b=b+-16|0)>>2],l[a+504>>2]=l[b+8>>2],l[a+508>>2]=n,n=l[b+4>>2],l[a+496>>2]=l[b>>2],l[a+500>>2]=n,b=l[r+92>>2],l[a+488>>2]=l[r+88>>2],l[a+492>>2]=b,b=l[r+84>>2],l[a+480>>2]=l[r+80>>2],l[a+484>>2]=b,en(a+2528|0,a+512|0,a+496|0,a+480|0),b=l[f+4>>2],l[i+8>>2]=l[f>>2],l[i+12>>2]=b,b=l[a+2532>>2],l[i>>2]=l[a+2528>>2],l[i+4>>2]=b,l[r+32>>2]=l[r+32>>2]+-1,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i}else{if(7!=(0|b))break v;if(i=(l[r+28>>2]+(l[r+32>>2]<<4)|0)-16|0,b=l[i+12>>2],l[a+472>>2]=l[i+8>>2],l[a+476>>2]=b,b=l[i+4>>2],l[a+464>>2]=l[i>>2],l[a+468>>2]=b,Nb(a+2528|0,a+464|0),i=l[f+4>>2],l[a+456>>2]=l[f>>2],l[a+460>>2]=i,i=l[a+2532>>2],l[a+448>>2]=l[a+2528>>2],l[a+452>>2]=i,i=25814,Sf(a+448|0))break v}i=l[r+92>>2],l[a+440>>2]=l[r+88>>2],l[a+444>>2]=i,i=l[r+84>>2],l[a+432>>2]=l[r+80>>2],l[a+436>>2]=i,zb(a+432|0),i=l[r+32>>2]+-1|0,l[r+32>>2]=i,i=l[r+28>>2]+(i<<4)|0,f=l[i+4>>2],l[r+80>>2]=l[i>>2],l[r+84>>2]=f,f=l[i+12>>2],l[r+88>>2]=l[i+8>>2],l[r+92>>2]=f;break d}P(26890,14895,218,44627),M()}if(i=27132,!(f=l[r+32>>2]))break v;if(f=(l[r+28>>2]+(f<<4)|0)-16|0,b=l[f+12>>2],l[a+424>>2]=l[f+8>>2],l[a+428>>2]=b,b=l[f+4>>2],l[a+416>>2]=l[f>>2],l[a+420>>2]=b,6!=(15&v[a+416|0]))break v;if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,s=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=s,l[f+4>>2]=i,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+408>>2]=s,l[a+412>>2]=i,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+400>>2]=b,l[a+404>>2]=n,i=(l[r+28>>2]+(l[r+32>>2]<<4)|0)-16|0,15&v[a+400|0])b=l[i+12>>2],l[a+392>>2]=l[i+8>>2],l[a+396>>2]=b,b=l[i+4>>2],l[a+384>>2]=l[i>>2],l[a+388>>2]=b,b=l[r+92>>2],l[a+376>>2]=l[r+88>>2],l[a+380>>2]=b,b=l[r+84>>2],l[a+368>>2]=l[r+80>>2],l[a+372>>2]=b,Vb(a+2528|0,a+384|0,a+368|0),b=l[f+4>>2],l[i+8>>2]=l[f>>2],l[i+12>>2]=b,b=l[a+2532>>2],l[i>>2]=l[a+2528>>2],l[i+4>>2]=b,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i;else if(b=l[i+12>>2],l[a+360>>2]=l[i+8>>2],l[a+364>>2]=b,b=l[i+4>>2],l[a+352>>2]=l[i>>2],l[a+356>>2]=b,Nb(a+2528|0,a+352|0),i=l[f+4>>2],l[a+344>>2]=l[f>>2],l[a+348>>2]=i,i=l[a+2532>>2],l[a+336>>2]=l[a+2528>>2],l[a+340>>2]=i,i=24450,Zb(a+336|0))break v;i=l[r+92>>2],l[a+328>>2]=l[r+88>>2],l[a+332>>2]=i,i=l[r+84>>2],l[a+320>>2]=l[r+80>>2],l[a+324>>2]=i,zb(a+320|0),i=l[r+32>>2]+-1|0,l[r+32>>2]=i,i=l[r+28>>2]+(i<<4)|0,f=l[i+4>>2],l[r+80>>2]=l[i>>2],l[r+84>>2]=f,f=l[i+12>>2],l[r+88>>2]=l[i+8>>2],l[r+92>>2]=f;break d}if(i=26376,l[r+32>>2]>255)break v;if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,s=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=s,l[f+4>>2]=i,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+120>>2]=s,l[a+124>>2]=i,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+112>>2]=b,l[a+116>>2]=n,i=26637,15&v[a+112|0])break v;mn(a+2512|0),b=l[4+(i=a+2520|0)>>2],l[f>>2]=l[i>>2],l[f+4>>2]=b,i=l[a+2516>>2],l[a+2528>>2]=l[a+2512>>2],l[a+2532>>2]=i;D:{if((0|(i=l[r+32>>2]))<=(0|(s=l[r+36>>2]))){if((0|i)==(0|s)&&(i=10+(i<<1)|0,l[r+36>>2]=i,l[r+28>>2]=an(l[r+28>>2],i<<4),s=l[r+36>>2],i=l[r+32>>2]),(0|i)>=(0|s))break D;l[r+32>>2]=i+1,n=l[f+4>>2],i=l[r+28>>2]+(i<<4)|0,l[i+8>>2]=l[f>>2],l[i+12>>2]=n,f=l[a+2532>>2],l[i>>2]=l[a+2528>>2],l[i+4>>2]=f;break d}break r}break e}if(i=26376,l[r+32>>2]>255)break v;if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,s=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=s,l[f+4>>2]=i,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+104>>2]=s,l[a+108>>2]=i,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+96>>2]=b,l[a+100>>2]=n,i=26637,15&v[a+96|0])break v;rn(a+2512|0),b=l[4+(i=a+2520|0)>>2],l[f>>2]=l[i>>2],l[f+4>>2]=b,i=l[a+2516>>2],l[a+2528>>2]=l[a+2512>>2],l[a+2532>>2]=i;_:{if((0|(i=l[r+32>>2]))<=(0|(s=l[r+36>>2]))){if((0|i)==(0|s)&&(i=10+(i<<1)|0,l[r+36>>2]=i,l[r+28>>2]=an(l[r+28>>2],i<<4),s=l[r+36>>2],i=l[r+32>>2]),(0|i)>=(0|s))break _;l[r+32>>2]=i+1,n=l[f+4>>2],i=l[r+28>>2]+(i<<4)|0,l[i+8>>2]=l[f>>2],l[i+12>>2]=n,f=l[a+2532>>2],l[i>>2]=l[a+2528>>2],l[i+4>>2]=f;break d}break r}break e}if(!l[r+36>>2]){i=25096;break v}if(44==(0|(i=l[r+56>>2]))){i=25273;break v}E:{_:{if(!(123==(0|i)&&(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,n=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=n,l[f+4>>2]=i,f=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,b=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(s=a+1848|0)>>2]=n,l[s+4>>2]=i,l[a+2528>>2]=f,l[a+2532>>2]=b,l[a+1840>>2]=f,l[a+1844>>2]=b,15&v[a+1840|0]))){if(f=l[r+52>>2],l[(i=a+1832|0)>>2]=l[r+48>>2],l[i+4>>2]=f,i=l[r+44>>2],l[a+1824>>2]=l[r+40>>2],l[a+1828>>2]=i,Nb(a+2496|0,a+1824|0),i=l[r+36>>2],n=l[4+(b=a+2504|0)>>2],l[(f=a+1816|0)>>2]=l[b>>2],l[f+4>>2]=n,f=l[a+2500>>2],l[a+1808>>2]=l[a+2496>>2],l[a+1812>>2]=f,Kb(a+2528|0,a+1808|0,i+-1|0),b=l[4+(f=a+2536|0)>>2],i=a+2520|0,s=l[f>>2],l[i>>2]=s,l[i+4>>2]=b,l[(n=a+1800|0)>>2]=s,l[n+4>>2]=b,b=l[a+2532>>2],n=l[a+2528>>2],l[a+2512>>2]=n,l[a+2516>>2]=b,l[a+1792>>2]=n,l[a+1796>>2]=b,b=15&v[a+1792|0],s=l[i+4>>2],l[(n=a+1784|0)>>2]=l[i>>2],l[n+4>>2]=s,i=l[a+2516>>2],l[a+1776>>2]=l[a+2512>>2],l[a+1780>>2]=i,zb(a+1776|0),i=25438,4==(0|b))break v;n=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,u=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=u,l[f+4>>2]=n,s=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,o=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(w=a+1768|0)>>2]=u,l[w+4>>2]=n,l[a+2528>>2]=s,l[a+2532>>2]=o,l[a+1760>>2]=s,l[a+1764>>2]=o;D:if(15&v[a+1760|0]){if(i=24056,5!=(0|b))break v;rn(a+2448|0),b=l[r+52>>2],l[(i=a+1752|0)>>2]=l[r+48>>2],l[i+4>>2]=b,i=l[r+44>>2],l[a+1744>>2]=l[r+40>>2],l[a+1748>>2]=i,Nb(a+2432|0,a+1744|0),n=l[4+(b=a+2456|0)>>2],l[(i=a+1736|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2440|0)>>2],l[(i=a+1720|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2452>>2],l[a+1728>>2]=l[a+2448>>2],l[a+1732>>2]=i,i=l[a+2436>>2],l[a+1712>>2]=l[a+2432>>2],l[a+1716>>2]=i,Vb(a+2464|0,a+1728|0,a+1712|0),n=l[4+(b=a+2472|0)>>2],l[(i=a+1704|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2468>>2],l[a+1696>>2]=l[a+2464>>2],l[a+1700>>2]=i,b=l[r+92>>2],l[(i=a+1688|0)>>2]=l[r+88>>2],l[i+4>>2]=b,i=l[r+84>>2],l[a+1680>>2]=l[r+80>>2],l[a+1684>>2]=i,Vb(a+2480|0,a+1696|0,a+1680|0),n=l[10939],l[8+(i=a+2416|0)>>2]=l[10938],l[i+12>>2]=n,b=l[10937],l[i>>2]=l[10936],l[i+4>>2]=b,n=l[4+(b=a+2488|0)>>2],l[(i=a+1672|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2424|0)>>2],l[(i=a+1656|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2484>>2],l[a+1664>>2]=l[a+2480>>2],l[a+1668>>2]=i,i=l[a+2420>>2],l[a+1648>>2]=l[a+2416>>2],l[a+1652>>2]=i,Vb(a+2528|0,a+1664|0,a+1648|0),i=l[f+4>>2],l[c+8>>2]=l[f>>2],l[c+12>>2]=i,i=l[a+2532>>2],l[c>>2]=l[a+2528>>2],l[c+4>>2]=i,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i}else{if((n=(b=l[r+56>>2])+-44|0)>>>0<=14)break _;if((n=b+-86|0)>>>0>5){if(123==(0|b))break D;break E}S:switch(n-1|0){case 0:case 1:case 2:case 3:break E;case 4:break v}rn(a+2480|0),b=l[r+52>>2],l[(i=a+1640|0)>>2]=l[r+48>>2],l[i+4>>2]=b,i=l[r+44>>2],l[a+1632>>2]=l[r+40>>2],l[a+1636>>2]=i,Nb(a+2464|0,a+1632|0),n=l[4+(b=a+2488|0)>>2],l[(i=a+1624|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2472|0)>>2],l[(i=a+1608|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2484>>2],l[a+1616>>2]=l[a+2480>>2],l[a+1620>>2]=i,i=l[a+2468>>2],l[a+1600>>2]=l[a+2464>>2],l[a+1604>>2]=i,Vb(a+2528|0,a+1616|0,a+1600|0),i=l[f+4>>2],l[c+8>>2]=l[f>>2],l[c+12>>2]=i,i=l[a+2532>>2],l[c>>2]=l[a+2528>>2],l[c+4>>2]=i}if(i=l[r+36>>2]+-1|0,l[r+36>>2]=i,n=l[r+52>>2],l[(b=a+1592|0)>>2]=l[r+48>>2],l[b+4>>2]=n,b=l[r+44>>2],l[a+1584>>2]=l[r+40>>2],l[a+1588>>2]=b,eb(a+2528|0,a+1584|0,0,i),i=l[f+4>>2],l[r+48>>2]=l[f>>2],l[r+52>>2]=i,i=l[a+2532>>2],l[r+40>>2]=l[a+2528>>2],l[r+44>>2]=i,b=l[r+92>>2],l[(i=a+1576|0)>>2]=l[r+88>>2],l[i+4>>2]=b,i=l[r+84>>2],l[a+1568>>2]=l[r+80>>2],l[a+1572>>2]=i,zb(a+1568|0),l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i,123==l[r+56>>2]&&(rn(a+2384|0),b=l[r+52>>2],l[(i=a+1560|0)>>2]=l[r+48>>2],l[i+4>>2]=b,i=l[r+44>>2],l[a+1552>>2]=l[r+40>>2],l[a+1556>>2]=i,Nb(a+2368|0,a+1552|0),n=l[4+(b=a+2392|0)>>2],l[(i=a+1544|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2376|0)>>2],l[(i=a+1528|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2388>>2],l[a+1536>>2]=l[a+2384>>2],l[a+1540>>2]=i,i=l[a+2372>>2],l[a+1520>>2]=l[a+2368>>2],l[a+1524>>2]=i,Vb(a+2400|0,a+1536|0,a+1520|0),mn(a+2352|0),n=l[4+(b=a+2408|0)>>2],l[(i=a+1512|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2360|0)>>2],l[(i=a+1496|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2404>>2],l[a+1504>>2]=l[a+2400>>2],l[a+1508>>2]=i,i=l[a+2356>>2],l[a+1488>>2]=l[a+2352>>2],l[a+1492>>2]=i,Vb(a+2528|0,a+1504|0,a+1488|0),i=l[f+4>>2],l[c+8>>2]=l[f>>2],l[c+12>>2]=i,i=l[a+2532>>2],l[c>>2]=l[a+2528>>2],l[c+4>>2]=i),!l[r+36>>2])break g;break p}P(24708,14895,346,44614),M()}i=25619;_:switch(n-1|0){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:break E;case 13:break v}i=25814;break v}i=26095;break v}if(!l[r+36>>2]){i=24277;break v}if(44==(0|(i=l[r+56>>2]))){i=24450;break v}if(91==(0|i)&&(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,n=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=n,l[f+4>>2]=i,f=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,b=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(s=a+1480|0)>>2]=n,l[s+4>>2]=i,l[a+2528>>2]=f,l[a+2532>>2]=b,l[a+1472>>2]=f,l[a+1476>>2]=b,15&v[a+1472|0]))break w;if(f=l[r+52>>2],l[(i=a+1464|0)>>2]=l[r+48>>2],l[i+4>>2]=f,i=l[r+44>>2],l[a+1456>>2]=l[r+40>>2],l[a+1460>>2]=i,Nb(a+2496|0,a+1456|0),i=l[r+36>>2],n=l[4+(b=a+2504|0)>>2],l[(f=a+1448|0)>>2]=l[b>>2],l[f+4>>2]=n,f=l[a+2500>>2],l[a+1440>>2]=l[a+2496>>2],l[a+1444>>2]=f,Kb(a+2528|0,a+1440|0,i+-1|0),b=l[4+(f=a+2536|0)>>2],i=a+2520|0,s=l[f>>2],l[i>>2]=s,l[i+4>>2]=b,l[(n=a+1432|0)>>2]=s,l[n+4>>2]=b,b=l[a+2532>>2],n=l[a+2528>>2],l[a+2512>>2]=n,l[a+2516>>2]=b,l[a+1424>>2]=n,l[a+1428>>2]=b,b=15&v[a+1424|0],s=l[i+4>>2],l[(n=a+1416|0)>>2]=l[i>>2],l[n+4>>2]=s,i=l[a+2516>>2],l[a+1408>>2]=l[a+2512>>2],l[a+1412>>2]=i,zb(a+1408|0),i=24875,4!=(0|b))break v;if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,s=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=s,l[f+4>>2]=i,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(o=a+1400|0)>>2]=s,l[o+4>>2]=i,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+1392>>2]=b,l[a+1396>>2]=n,15&v[a+1392|0]?(rn(a+2448|0),b=l[r+52>>2],l[(i=a+1384|0)>>2]=l[r+48>>2],l[i+4>>2]=b,i=l[r+44>>2],l[a+1376>>2]=l[r+40>>2],l[a+1380>>2]=i,Nb(a+2432|0,a+1376|0),n=l[4+(b=a+2456|0)>>2],l[(i=a+1368|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2440|0)>>2],l[(i=a+1352|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2452>>2],l[a+1360>>2]=l[a+2448>>2],l[a+1364>>2]=i,i=l[a+2436>>2],l[a+1344>>2]=l[a+2432>>2],l[a+1348>>2]=i,Vb(a+2464|0,a+1360|0,a+1344|0),n=l[4+(b=a+2472|0)>>2],l[(i=a+1336|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2468>>2],l[a+1328>>2]=l[a+2464>>2],l[a+1332>>2]=i,b=l[r+92>>2],l[(i=a+1320|0)>>2]=l[r+88>>2],l[i+4>>2]=b,i=l[r+84>>2],l[a+1312>>2]=l[r+80>>2],l[a+1316>>2]=i,Vb(a+2480|0,a+1328|0,a+1312|0),n=l[10939],l[8+(i=a+2416|0)>>2]=l[10938],l[i+12>>2]=n,b=l[10937],l[i>>2]=l[10936],l[i+4>>2]=b,n=l[4+(b=a+2488|0)>>2],l[(i=a+1304|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2424|0)>>2],l[(i=a+1288|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2484>>2],l[a+1296>>2]=l[a+2480>>2],l[a+1300>>2]=i,i=l[a+2420>>2],l[a+1280>>2]=l[a+2416>>2],l[a+1284>>2]=i,Vb(a+2528|0,a+1296|0,a+1280|0),i=l[f+4>>2],l[c+8>>2]=l[f>>2],l[c+12>>2]=i,i=l[a+2532>>2],l[c>>2]=l[a+2528>>2],l[c+4>>2]=i,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i):91!=l[r+56>>2]&&(rn(a+2480|0),b=l[r+52>>2],l[(i=a+1272|0)>>2]=l[r+48>>2],l[i+4>>2]=b,i=l[r+44>>2],l[a+1264>>2]=l[r+40>>2],l[a+1268>>2]=i,Nb(a+2464|0,a+1264|0),n=l[4+(b=a+2488|0)>>2],l[(i=a+1256|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2472|0)>>2],l[(i=a+1240|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2484>>2],l[a+1248>>2]=l[a+2480>>2],l[a+1252>>2]=i,i=l[a+2468>>2],l[a+1232>>2]=l[a+2464>>2],l[a+1236>>2]=i,Vb(a+2528|0,a+1248|0,a+1232|0),i=l[f+4>>2],l[c+8>>2]=l[f>>2],l[c+12>>2]=i,i=l[a+2532>>2],l[c>>2]=l[a+2528>>2],l[c+4>>2]=i),i=l[r+36>>2]+-1|0,l[r+36>>2]=i,n=l[r+52>>2],l[(b=a+1224|0)>>2]=l[r+48>>2],l[b+4>>2]=n,b=l[r+44>>2],l[a+1216>>2]=l[r+40>>2],l[a+1220>>2]=b,eb(a+2528|0,a+1216|0,0,i),i=l[f+4>>2],l[r+48>>2]=l[f>>2],l[r+52>>2]=i,i=l[a+2532>>2],l[r+40>>2]=l[a+2528>>2],l[r+44>>2]=i,b=l[r+92>>2],l[(i=a+1208|0)>>2]=l[r+88>>2],l[i+4>>2]=b,i=l[r+84>>2],l[a+1200>>2]=l[r+80>>2],l[a+1204>>2]=i,zb(a+1200|0),l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i,91==l[r+56>>2]&&(rn(a+2384|0),b=l[r+52>>2],l[(i=a+1192|0)>>2]=l[r+48>>2],l[i+4>>2]=b,i=l[r+44>>2],l[a+1184>>2]=l[r+40>>2],l[a+1188>>2]=i,Nb(a+2368|0,a+1184|0),n=l[4+(b=a+2392|0)>>2],l[(i=a+1176|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2376|0)>>2],l[(i=a+1160|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2388>>2],l[a+1168>>2]=l[a+2384>>2],l[a+1172>>2]=i,i=l[a+2372>>2],l[a+1152>>2]=l[a+2368>>2],l[a+1156>>2]=i,Vb(a+2400|0,a+1168|0,a+1152|0),rn(a+2352|0),n=l[4+(b=a+2408|0)>>2],l[(i=a+1144|0)>>2]=l[b>>2],l[i+4>>2]=n,n=l[4+(b=a+2360|0)>>2],l[(i=a+1128|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[a+2404>>2],l[a+1136>>2]=l[a+2400>>2],l[a+1140>>2]=i,i=l[a+2356>>2],l[a+1120>>2]=l[a+2352>>2],l[a+1124>>2]=i,Vb(a+2528|0,a+1136|0,a+1120|0),i=l[f+4>>2],l[c+8>>2]=l[f>>2],l[c+12>>2]=i,i=l[a+2532>>2],l[c>>2]=l[a+2528>>2],l[c+4>>2]=i),l[r+36>>2])break p}i=0,l[r+56>>2]=0;break v}l[r+56>>2]=86;break d}P(24708,14895,311,44614),M()}if(i=21723,86==l[r+56>>2])break v;b=l[10947],l[8+(i=a+2512|0)>>2]=l[10946],l[i+12>>2]=b,f=l[10945],l[i>>2]=l[10944],l[i+4>>2]=f,i=l[r+52>>2],l[a+648>>2]=l[r+48>>2],l[a+652>>2]=i,i=l[r+40>>2],f=l[r+44>>2],n=l[4+(b=a+2520|0)>>2],l[a+632>>2]=l[b>>2],l[a+636>>2]=n,l[a+640>>2]=i,l[a+644>>2]=f,i=l[a+2516>>2],l[a+624>>2]=l[a+2512>>2],l[a+628>>2]=i,Vb(a+2528|0,a+640|0,a+624|0),f=l[4+(i=a+2536|0)>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=f,i=l[a+2532>>2],l[r+40>>2]=l[a+2528>>2],l[r+44>>2]=i,l[r+56>>2]=123,l[r+36>>2]=l[r+36>>2]+1;break d}if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,s=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=s,l[f+4>>2]=i,b=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,n=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+616>>2]=s,l[a+620>>2]=i,l[a+2528>>2]=b,l[a+2532>>2]=n,l[a+608>>2]=b,l[a+612>>2]=n,i=21723,15&v[a+608|0])break v;l[(i=a+2512|0)>>2]=4,l[i+4>>2]=0,m[i+8>>3]=0,i=l[r+52>>2],l[a+600>>2]=l[r+48>>2],l[a+604>>2]=i,i=l[r+40>>2],b=l[r+44>>2],s=l[4+(n=a+2520|0)>>2],l[a+584>>2]=l[n>>2],l[a+588>>2]=s,l[a+592>>2]=i,l[a+596>>2]=b,i=l[a+2516>>2],l[a+576>>2]=l[a+2512>>2],l[a+580>>2]=i,Vb(a+2528|0,a+592|0,a+576|0),i=l[f+4>>2],l[r+48>>2]=l[f>>2],l[r+52>>2]=i,i=l[a+2532>>2],l[r+40>>2]=l[a+2528>>2],l[r+44>>2]=i,l[r+56>>2]=91,l[r+36>>2]=l[r+36>>2]+1}i=0}if(i){t=l[4+(f=a+2328|0)>>2],l[a+88>>2]=l[f>>2],l[a+92>>2]=t,f=l[a+2324>>2],l[a+80>>2]=l[a+2320>>2],l[a+84>>2]=f,zb(a+80|0),t=i;break b}}}if(2&v[r+24|0]){if(!pf(r,a+2320|0))break c;break n}if(l[r+32>>2])break c;if(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,n=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=n,l[f+4>>2]=i,f=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,b=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[a+72>>2]=n,l[a+76>>2]=i,l[a+2528>>2]=f,l[a+2532>>2]=b,l[a+64>>2]=f,l[a+68>>2]=b,!(15&v[a- -64|0]))break c;f=l[r+92>>2],l[(i=a+2328|0)>>2]=l[r+88>>2],l[i+4>>2]=f,i=l[r+84>>2],l[a+2320>>2]=l[r+80>>2],l[a+2324>>2]=i,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,f=l[4+(i=a+2536|0)>>2],l[r+88>>2]=l[i>>2],l[r+92>>2]=f,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i;break n}b=l[4+(f=a+2328|0)>>2],l[(i=a+1976|0)>>2]=l[f>>2],l[i+4>>2]=b,i=l[a+2324>>2],l[a+1968>>2]=l[a+2320>>2],l[a+1972>>2]=i,zb(a+1968|0);break k}if(t=$f(r))break t;o:if(!l[r+152>>2]){if(2&v[r+24|0]){if(!pf(r,a+2320|0))break o;break n}if(!l[r+32>>2]&&(i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,f=a+2536|0,n=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[f>>2]=n,l[f+4>>2]=i,t=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,b=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(c=a+1960|0)>>2]=n,l[c+4>>2]=i,l[a+2528>>2]=t,l[a+2532>>2]=b,l[a+1952>>2]=t,l[a+1956>>2]=b,15&v[a+1952|0])){t=l[r+92>>2],l[(i=a+2328|0)>>2]=l[r+88>>2],l[i+4>>2]=t,i=l[r+84>>2],l[a+2320>>2]=l[r+80>>2],l[a+2324>>2]=i,l[(i=a+2528|0)>>2]=0,l[i+4>>2]=0,l[i+8>>2]=0,l[i+12>>2]=0,i=l[f+4>>2],l[r+88>>2]=l[f>>2],l[r+92>>2]=i,i=l[a+2532>>2],l[r+80>>2]=l[a+2528>>2],l[r+84>>2]=i;break n}}if(b=l[4+(i=a+2328|0)>>2],l[(f=a+1944|0)>>2]=l[i>>2],l[f+4>>2]=b,f=l[a+2324>>2],l[a+1936>>2]=l[a+2320>>2],l[a+1940>>2]=f,!(15&v[a+1936|0])){On(r),f=l[i+4>>2],l[(r=a+1928|0)>>2]=l[i>>2],l[r+4>>2]=f,r=l[a+2324>>2],l[a+1920>>2]=l[a+2320>>2],l[a+1924>>2]=r,zb(a+1920|0),l[(r=a+2528|0)>>2]=0,l[r+4>>2]=0,l[r+8>>2]=0,l[r+12>>2]=0,f=l[4+(r=a+2536|0)>>2],l[i>>2]=l[r>>2],l[i+4>>2]=f,r=l[a+2532>>2],l[a+2320>>2]=l[a+2528>>2],l[a+2324>>2]=r;break n}P(20545,14895,614,44600),M()}if(!t)continue}break}if(15706==(0|t))break n}if(f=l[4+(i=a+2328|0)>>2],l[a+56>>2]=l[i>>2],l[a+60>>2]=f,i=l[a+2324>>2],l[a+48>>2]=l[a+2320>>2],l[a+52>>2]=i,zb(a+48|0),30==(0|d))break k;break b}r=l[a+2324>>2],l[e>>2]=l[a+2320>>2],l[e+4>>2]=r,i=l[4+(r=a+2328|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=i;break f}if(1&k[r+24|0]){l[r+152>>2]=3,i=l[r+112>>2],l[a+36>>2]=l[r+108>>2],l[a+40>>2]=i,l[a+32>>2]=t,pb(a+2528|0,r,16057,a+32|0),b=l[4+(t=a+2536|0)>>2],l[(i=a+2328|0)>>2]=l[t>>2],l[i+4>>2]=b,f=l[a+2532>>2],l[a+2320>>2]=l[a+2528>>2],l[a+2324>>2]=f,On(r),r=l[i+4>>2],l[e+8>>2]=l[i>>2],l[e+12>>2]=r,r=l[a+2324>>2],l[e>>2]=l[a+2320>>2],l[e+4>>2]=r;break f}}i=l[r+112>>2],l[a+20>>2]=l[r+108>>2],l[a+24>>2]=i,l[a+16>>2]=t,pb(a+2528|0,r,16511,a+16|0),b=l[4+(t=a+2536|0)>>2],l[(i=a+2328|0)>>2]=l[t>>2],l[i+4>>2]=b,f=l[a+2532>>2],l[a+2320>>2]=l[a+2528>>2],l[a+2324>>2]=f,On(r),1&k[r+24|0]||(l[r+8>>2]=0,l[r>>2]=0),r=l[a+2324>>2],l[e>>2]=l[a+2320>>2],l[e+4>>2]=r,r=l[i+4>>2],l[e+8>>2]=l[i>>2],l[e+12>>2]=r}}else l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0;return void(ne=a+2544|0)}P(21013,14895,391,44605),M()}P(21433,14895,396,44605),M()}P(27336,14895,142,44639),M()}P(27566,14895,147,44639),M()}function yf(e,r){var a=0,i=0,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,v=0,d=0,h=0,m=0;a=l[e+16>>2],b=l[r+16>>2];e:if(!((0|a)<(0|b))){if(u=((s=l[(t=(n=e+20|0)+(i=(b=b+-1|0)<<2)|0)>>2])>>>0)/((i=l[(v=i+(c=r+20|0)|0)>>2]+1|0)>>>0)|0,!(i>>>0>s>>>0)){for(s=u,a=n,i=c;h=l[a>>2],d=zi(l[i>>2],0,s,0)+k|0,f=f+se|0,f=d>>>0<k>>>0?f+1|0:f,m=h-d|0,l[a>>2]=m-o,a=a+4|0,k=f,f=0,o=0-(h>>>0<d>>>0)-((m>>>0<o>>>0)+0)&1,(i=i+4|0)>>>0<=v>>>0;);if(l[t>>2])a=l[e+16>>2];else{r:if((i=t+-4|0)>>>0<=n>>>0)a=b;else for(a=b;;){if(l[i>>2])break r;if(a=a+-1|0,!((i=i+-4|0)>>>0>n>>>0))break}l[e+16>>2]=a,b=a}}k=a,a=l[r+16>>2];r:if(f=k-a|0){if((0|f)<0)break e}else for(i=20+((k=r)+(r=a<<2)|0)|0,a=20+(e+r|0)|0;;){if((0|(r=l[(a=a+-4|0)>>2]))!=(0|(f=l[(i=i+-4|0)>>2]))){if(r>>>0>=f>>>0)break r;break e}if(!(a>>>0>n>>>0))break}for(o=0,a=n,k=0,f=0;(k=(i=l[c>>2])+k|0)>>>0<i>>>0&&(f=f+1|0),t=(s=l[a>>2])-(i=k)|0,l[a>>2]=t-o,a=a+4|0,r=f,f=0,k=r,o=0-(s>>>0<i>>>0)-((t>>>0<o>>>0)+0)&1,(c=c+4|0)>>>0<=v>>>0;);if(u=u+1|0,!l[(r=20+((b<<2)+e|0)|0)>>2]){r:if(!((a=r+-4|0)>>>0<=n>>>0))for(;;){if(l[a>>2])break r;if(b=b+-1|0,!((a=a+-4|0)>>>0>n>>>0))break}l[e+16>>2]=b}}return u}function Ef(e,r){var a,i=0,f=0,k=0,b=0,n=0,s=0;ne=a=ne-352|0,f=l[r+12>>2],l[a+264>>2]=l[r+8>>2],l[a+268>>2]=f,f=l[r+4>>2],l[a+256>>2]=l[r>>2],l[a+260>>2]=f;e:{r:if(7!=(15&v[a+256|0])){if(f=l[r+12>>2],l[a+248>>2]=l[r+8>>2],l[a+252>>2]=f,f=l[r+4>>2],l[a+240>>2]=l[r>>2],l[a+244>>2]=f,6==(15&v[a+240|0])){if(f=l[r+12>>2],l[a+232>>2]=l[r+8>>2],l[a+236>>2]=f,f=l[r+4>>2],l[a+224>>2]=l[r>>2],l[a+228>>2]=f,f=Zb(a+224|0),rn(e),(0|f)<1)break e;for(r=0;l[a+272>>2]=4,l[a+276>>2]=0,m[a+280>>3]=0|r,b=l[e+12>>2],l[a+216>>2]=l[e+8>>2],l[a+220>>2]=b,b=l[e>>2],n=l[e+4>>2],k=l[a+284>>2],l[a+200>>2]=l[a+280>>2],l[a+204>>2]=k,l[a+208>>2]=b,l[a+212>>2]=n,b=l[a+276>>2],l[a+192>>2]=l[a+272>>2],l[a+196>>2]=b,Dn(a+320|0,a+208|0,r,a+192|0),b=l[a+332>>2],l[e+8>>2]=l[a+328>>2],l[e+12>>2]=b,b=l[a+324>>2],l[e>>2]=l[a+320>>2],l[e+4>>2]=b,(0|f)!=(0|(r=r+1|0)););break e}P(19322,16044,490,44178),M()}else{if(f=l[r+12>>2],l[a+184>>2]=l[r+8>>2],l[a+188>>2]=f,f=l[r+4>>2],l[a+176>>2]=l[r>>2],l[a+180>>2]=f,Nb(a+336|0,a+176|0),f=l[a+348>>2],l[a+168>>2]=l[a+344>>2],l[a+172>>2]=f,f=l[a+340>>2],l[a+160>>2]=l[a+336>>2],l[a+164>>2]=f,n=gb(16,b=Sf(a+160|0)),f=l[r+12>>2],l[a+152>>2]=l[r+8>>2],l[a+156>>2]=f,f=l[r+4>>2],l[a+144>>2]=l[r>>2],l[a+148>>2]=f,f=Df(a+144|0),i=l[r+12>>2],l[a+136>>2]=l[r+8>>2],l[a+140>>2]=i,i=l[r+4>>2],l[a+128>>2]=l[r>>2],l[a+132>>2]=i,-2!=(0|f))for(;i=l[r+12>>2],l[a+120>>2]=l[r+8>>2],l[a+124>>2]=i,i=l[r+4>>2],l[a+112>>2]=l[r>>2],l[a+116>>2]=i,_f(a+288|0,a+112|0,f),i=l[a+300>>2],l[a+328>>2]=l[a+296>>2],l[a+332>>2]=i,i=l[a+292>>2],l[a+320>>2]=l[a+288>>2],l[a+324>>2]=i,i=l[r+12>>2],l[a+104>>2]=l[r+8>>2],l[a+108>>2]=i,i=l[r+4>>2],l[a+96>>2]=l[r>>2],l[a+100>>2]=i,fk(a+288|0,a+96|0,f),i=l[a+300>>2],l[a+312>>2]=l[a+296>>2],l[a+316>>2]=i,i=l[a+292>>2],l[a+304>>2]=l[a+288>>2],l[a+308>>2]=i,s=l[a+332>>2],l[8+(i=(k<<4)+n|0)>>2]=l[a+328>>2],l[i+12>>2]=s,s=l[a+324>>2],l[i>>2]=l[a+320>>2],l[i+4>>2]=s,i=l[a+316>>2],l[a+88>>2]=l[a+312>>2],l[a+92>>2]=i,i=l[a+308>>2],l[a+80>>2]=l[a+304>>2],l[a+84>>2]=i,zb(a+80|0),i=l[r+12>>2],l[a+72>>2]=l[r+8>>2],l[a+76>>2]=i,i=l[r+4>>2],l[a+64>>2]=l[r>>2],l[a+68>>2]=i,f=jn(a- -64|0,f),i=l[r+12>>2],l[a+56>>2]=l[r+8>>2],l[a+60>>2]=i,i=l[r+4>>2],l[a+48>>2]=l[r>>2],l[a+52>>2]=i,k=k+1|0,-2!=(0|f););if(za(n,b,16,7),Oe(e,b),f=0,(0|b)<=0)break r;for(;k=l[e+12>>2],l[a+40>>2]=l[e+8>>2],l[a+44>>2]=k,k=l[e+4>>2],l[a+32>>2]=l[e>>2],l[a+36>>2]=k,i=l[12+(k=(f<<4)+n|0)>>2],l[a+24>>2]=l[k+8>>2],l[a+28>>2]=i,i=l[k+4>>2],l[a+16>>2]=l[k>>2],l[a+20>>2]=i,Vb(a+320|0,a+32|0,a+16|0),k=l[a+332>>2],l[e+8>>2]=l[a+328>>2],l[e+12>>2]=k,k=l[a+324>>2],l[e>>2]=l[a+320>>2],l[e+4>>2]=k,(0|b)!=(0|(f=f+1|0)););}Lb(n),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a)}ne=a+352|0}function _f(e,r,a){var i,f=0;ne=i=ne-16|0;e:{r:{a:{if(-1==(0|a))r=0;else{if((0|a)<0)break r;if(7!=(15&v[0|r]))break a;if(l[r+4>>2]<=(0|a))break r;r=8+(l[r+8>>2]+w(a,40)|0)|0}if(f=v[r+8|0],a=v[r+12|0]|v[r+13|0]<<8|v[r+14|0]<<16|v[r+15|0]<<24,k[i+11|0]=a,k[i+12|0]=a>>>8,k[i+13|0]=a>>>16,k[i+14|0]=a>>>24,l[i+8>>2]=v[r+9|0]|v[r+10|0]<<8|v[r+11|0]<<16|v[r+12|0]<<24,5!=(15&f))break e;return a=v[r+20|0]|v[r+21|0]<<8|v[r+22|0]<<16|v[r+23|0]<<24,r=v[r+16|0]|v[r+17|0]<<8|v[r+18|0]<<16|v[r+19|0]<<24,l[r>>2]=l[r>>2]+1,k[0|e]=f,f=l[i+8>>2],k[e+1|0]=f,k[e+2|0]=f>>>8,k[e+3|0]=f>>>16,k[e+4|0]=f>>>24,f=v[i+11|0]|v[i+12|0]<<8|v[i+13|0]<<16|v[i+14|0]<<24,k[e+4|0]=f,k[e+5|0]=f>>>8,k[e+6|0]=f>>>16,k[e+7|0]=f>>>24,l[e+12>>2]=a,l[e+8>>2]=r,void(ne=i+16|0)}P(26604,17172,912,44048),M()}P(28228,17172,925,44064),M()}P(24023,17172,1231,43724),M()}function Df(e){var r=0,a=0,i=0;e:{if(7==(15&v[0|e])){for(a=l[e+8>>2],i=l[e+4>>2],e=-1;;){if((0|(e=e+1|0))>=(0|i)){e=-2;break e}r:if(!((r=(15&v[16+(w(e,40)+a|0)|0])-1|0)>>>0>4))switch(r-1|0){case 3:break e;case 0:case 1:case 2:break r;default:continue}break}P(23734,17172,1225,43704),M()}P(22066,17172,1210,43689),M()}return e}function Sf(e){var r,a=0,i=0,f=0,k=0;if(ne=r=ne-16|0,7==(15&v[0|e])){if((0|(i=l[e+4>>2]))>=1)for(k=l[e+8>>2];f=(1!=(15&v[16+(w(a,40)+k|0)|0]))+f|0,(0|i)!=(0|(a=a+1|0)););return a=l[e+12>>2],l[r+8>>2]=l[e+8>>2],l[r+12>>2]=a,a=l[e+4>>2],l[r>>2]=l[e>>2],l[r+4>>2]=a,zb(r),ne=r+16|0,f}P(22066,17172,1146,43611),M()}function Ff(e,r,a,i){var f=0,b=0,n=0,s=0,t=0;e:{r:{if(5==(15&v[0|r])){if(n=l[r+8>>2],(0|(f=l[n>>2]))<=0)break r;if(b=l[n+8>>2]>>>1,1==(0|f)){if((f=l[n+12>>2])>>>0<b>>>0)break e;if(!(f-b>>>0<i>>>0))return qb((f=n+16|0)+b|0,a,i),k[(a=i+b|0)+f|0]=0,l[n+8>>2]=a<<1,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],void(l[e+4>>2]=a)}return r=Bb((s=(f=(t=i+b|0)<<1)>>>0>32?f:32)+17|0),l[r+12>>2]=s,l[r>>2]=1,l[r+8>>2]=f,qb((s=b)+(b=qb(r+16|0,n+16|0,b))|0,a,i),k[b+t|0]=0,a=l[n>>2]+-1|0,l[n>>2]=a,a||Lb(n),l[e+8>>2]=r,l[e>>2]=5,void(l[e+4>>2]=0)}P(25781,17172,444,43888),M()}P(25425,17172,36,43824),M()}P(26055,17172,512,43903),M()}function Mf(e,r){var a,i,k=0;ne=a=ne-16|0,(i=l[e+12>>2])||(P(15995,14305,326,43077),M()),e=l[e+16>>2],k=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=k,k=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=k,f[i](e,a),ne=a+16|0}function Af(e){var r,a=0,i=0;if(ne=r=ne-48|0,e){if(Lb(l[e>>2]),i=l[e+28>>2],l[r+40>>2]=l[e+24>>2],l[r+44>>2]=i,i=l[e+20>>2],l[r+32>>2]=l[e+16>>2],l[r+36>>2]=i,zb(r+32|0),l[e+40>>2]>=1)for(;Af(l[l[e+36>>2]+(a<<2)>>2]),(0|(a=a+1|0))<l[e+40>>2];);l[e+44>>2]||(a=l[e+32>>2],Lb(l[a>>2]),i=l[a+20>>2],l[r+24>>2]=l[a+16>>2],l[r+28>>2]=i,i=l[a+12>>2],l[r+16>>2]=l[a+8>>2],l[r+20>>2]=i,zb(r+16|0),Lb(a)),Lb(l[e+36>>2]),a=l[e+60>>2],l[r+8>>2]=l[e+56>>2],l[r+12>>2]=a,a=l[e+52>>2],l[r>>2]=l[e+48>>2],l[r+4>>2]=a,zb(r),Lb(e)}ne=r+48|0}function xf(e,r){return function(e,r){var a=0;e:{if(!(3&(e^r))){if(3&r)for(;;){if(a=v[0|r],k[0|e]=a,!a)break e;if(e=e+1|0,!(3&(r=r+1|0)))break}if(!((-1^(a=l[r>>2]))&a+-16843009&-2139062144))for(;l[e>>2]=a,a=l[r+4>>2],e=e+4|0,r=r+4|0,!(a+-16843009&(-1^a)&-2139062144););}if(a=v[0|r],k[0|e]=a,a)for(;a=v[r+1|0],k[e+1|0]=a,e=e+1|0,r=r+1|0,a;);}}(e,r),e}function Pf(e,r,a){var i=0,f=0,k=0;e:{r:{a:{i:{f:{if(!((i=l[a+4>>2])|l[a>>2])){if(1!=l[8593])break f;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=1,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,1!=l[8617])break f;if(i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=5,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,i)if(f){if(l[f>>2])break i;l[f>>2]=i,l[i+4>>2]=f}else f=i;else i=f;l[a+4>>2]=i,l[a>>2]=f}if(!(8&v[34728]))break a;if(!i)break r;if(f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=16,l[f>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+20>>2]=i,l[f+84>>2]=0,l[f+88>>2]=0,i=l[r+4>>2],k=l[r>>2],f)if(i){if(l[i>>2])break i;l[i>>2]=f,l[f+4>>2]=i}else k=f;else f=i;if(l[r+4>>2]=f,l[r>>2]=k,!(8&v[34704]))break a;if(!f)break r;if(i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=15,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+20>>2]=f,l[i+84>>2]=0,l[i+88>>2]=0,k)if(i){if(l[k+4>>2])break e;l[i>>2]=k,l[k+4>>2]=i}else i=k;else f=i;if(r=l[a+4>>2],k=l[a>>2],l[(a=e)>>2]=i,l[a+4>>2]=f,k){if(f){if(l[f>>2])break i;if(l[k+4>>2])break e;l[f>>2]=k,l[k+4>>2]=f}else l[e>>2]=k;l[e+4>>2]=r}return}P(1044,14282,141,35388),M()}P(25534,14282,237,35660),M()}P(16334,14282,190,35477),M()}P(16744,14282,191,35477),M()}P(25731,14282,238,35660),M()}function Tf(e,r){var a,i=0,f=0;a=e,r>>>0<=31?(i=l[e+4>>2],f=l[e>>2]):(i=l[e>>2],l[e+4>>2]=i,l[e>>2]=0,r=r+-32|0,f=0),l[a>>2]=f<<r,l[e+4>>2]=i<<r|f>>>32-r}function Rf(e,r,a,i,k,b,n){var s,t=0,c=0,o=0,u=0;ne=s=ne-240|0,t=l[i>>2],l[s+232>>2]=t,i=l[i+4>>2],l[s>>2]=e,l[s+236>>2]=i,c=1;e:{r:{a:{if((i||1!=(0|t))&&(t=e-l[(k<<2)+n>>2]|0,!((0|f[a](t,e))<1))){for(u=0-r|0,o=!b;;){i:{if(i=t,!(!o|(0|k)<2)){if(b=l[((k<<2)+n|0)-8>>2],t=e+u|0,(0|f[a](t,i))>-1)break i;if((0|f[a](t-b|0,i))>-1)break i}if(l[(c<<2)+s>>2]=i,c=c+1|0,Of(s+232|0,e=Ia(s+232|0)),k=e+k|0,!l[s+236>>2]&&1==l[s+232>>2])break r;if(b=0,o=1,e=i,t=i-l[(k<<2)+n>>2]|0,(0|f[a](t,l[s>>2]))>0)continue;break a}break}i=e;break r}i=e}if(b)break e}Oa(r,s,c),hk(i,r,a,k,n)}ne=s+240|0}function Of(e,r){var a,i=0,f=0;a=e,r>>>0<=31?(i=l[e>>2],f=l[e+4>>2]):(i=l[e+4>>2],l[e+4>>2]=0,l[e>>2]=i,r=r+-32|0,f=0),l[a+4>>2]=f>>>r,l[e>>2]=f<<32-r|i>>>r}function If(e){var r=0,a=0,i=0,f=0,k=0,c=0,o=0,u=0,l=0,v=0;e:{r:{a:{t(+e),r=f=0|b(1);i:{if(l=1,v=b(0)>>>0<0?0:1,!(r>>>0>1071284857&&((0|r)>0?l:(0|r)>=0&&v))){if(r>>>0>=3220176896){if(i=-x,-1==e)break e;return(e-e)/0}if(r<<1>>>0<2034237440)break i;if(r>>>0>=3218259653)break a;i=0;break r}if(r>>>0<=2146435071)break a}return e}t(+(a=e+1)),r=0|b(1),f=0|b(0),(0|(k=((r=r+614242|0)>>>20)-1023|0))<=53&&(u=((0|k)>1?e-a+1:e-(a+-1))/a),n(0,0|f),n(1,1072079006+(1048575&r)|0),e=+s()-1,i=+(0|k)}i=.6931471803691238*i+(e+(u+1.9082149292705877e-10*i+(c=e/(e+2))*((e*=.5*e)+((a=(o=c*c)*o)*(a*(.15313837699209373*a+.22222198432149784)+.3999999999940942)+o*(a*(a*(.14798198605116586*a+.1818357216161805)+.2857142874366239)+.6666666666666735)))-e))}return i}function zf(e,r,a,i){var f,k=0,b=0,n=0,s=0,t=0;ne=f=ne+-64|0;e:{r:{if(1==l[8593]&&(b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=1,l[(k=b)>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0,k=l[r+4>>2],l[f+24>>2]=l[r>>2],l[f+28>>2]=k,yn(f+56|0,f+24|0),1==l[8617])){r=Bb(104),l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+96>>2]=-1,l[r+8>>2]=5,l[r>>2]=0,l[r+4>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,k=l[f+60>>2],n=l[f+56>>2];a:{if(r){if(!k){k=r;break a}if(l[k>>2])break r;l[k>>2]=r,l[r+4>>2]=k,k=r}r=n}if(r)if(b){if(l[b>>2])break r;if(l[r+4>>2])break e;l[b>>2]=r,l[r+4>>2]=b}else b=r;else k=b;if(1==l[8617]){if(n=Bb(104),l[n+96>>2]=-1,l[n+8>>2]=5,l[(r=n)>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,s=l[a+4>>2],t=l[a>>2],l[f+40>>2]=r,l[f+44>>2]=r,t){if(n){if(l[t+4>>2])break e;l[n>>2]=t,l[t+4>>2]=n}else l[f+40>>2]=t;l[f+44>>2]=s}if(1==l[8617]){if(a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=5,l[(r=a)>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,t=l[i+4>>2],s=l[i>>2],l[f+32>>2]=r,l[f+36>>2]=r,s){if(a){if(l[s+4>>2])break e;l[a>>2]=s,l[s+4>>2]=a}else l[f+32>>2]=s;l[f+36>>2]=t}if(r=l[f+44>>2],l[f+16>>2]=l[f+40>>2],l[f+20>>2]=r,r=l[f+36>>2],l[f+8>>2]=l[f+32>>2],l[f+12>>2]=r,Pb(f+48|0,f+16|0,f+8|0),n=l[f+52>>2],i=l[f+48>>2],l[(a=e)>>2]=b,l[a+4>>2]=k,i){if(k){if(l[k>>2])break r;if(l[i+4>>2])break e;l[k>>2]=i,l[i+4>>2]=k}else l[e>>2]=i;l[e+4>>2]=n}return void(ne=f- -64|0)}}}P(1044,14282,141,35388),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function Nf(e,r,a){var i=0,b=0,n=0;if(i=v[a+74|0],k[a+74|0]=i+-1|i,i=l[a+4>>2],n=r,(0|(b=l[a+8>>2]-i|0))<1||(qb(e,n=i,i=b>>>0<r>>>0?b:r),l[a+4>>2]=i+l[a+4>>2],e=e+i|0,n=r-i|0),i=n)for(;;){if(Ka(a)||!(1+(b=0|f[l[a+32>>2]](a,e,i))>>>0>1))return r-i|0;if(e=e+b|0,!(i=i-b|0))break}return r}function jf(e){var r=0;if(e)return l[e+76>>2],Mk(e);if(l[82240]&&(r=jf(l[82240])),e=l[Sk()>>2])for(;h[e+20>>2]>h[e+28>>2]&&(r=Mk(e)|r),e=l[e+56>>2];);return O(330744),r}function Uf(e,r,a,i){var f,b=0;ne=f=ne-160|0,qb(f+8|0,300888,144);e:{r:{if(r+-1>>>0>=2147483647){if(r)break r;r=1,e=f+159|0}if(l[f+52>>2]=e,l[f+28>>2]=e,r=r>>>0>(b=-2-e|0)>>>0?b:r,l[f+56>>2]=r,e=e+r|0,l[f+36>>2]=e,l[f+24>>2]=e,e=Va(f+8|0,a,i,175,176),!r)break e;r=l[f+28>>2],k[r-((0|r)==l[f+24>>2])|0]=0;break e}l[82952]=61,e=-1}return ne=f+160|0,e}function Bf(e,r){var a;return ne=a=ne-16|0,l[a+4>>2]=r,l[a>>2]=e,(e=0|U(195,0|a))>>>0>=4294963201&&(l[82952]=0-e,e=-1),ne=a+16|0,e}function Cf(e){var r;return ne=r=ne-16|0,l[r+12>>2]=e,e=kb(r+12|0,2),(e=(d[79458+((255&kb(r+12|0,1))<<1)>>1]+d[79526+((255&e)<<1)>>1]|0)+d[79456+((255&kb(r+12|0,0))<<1)>>1]|0)>>>0<=1544&&(e=w(e,12)+60912|0,l[r+12>>2]==l[e>>2])||(e=0),ne=r+16|0,e}function Lf(e,r,a){var i=0,k=0,b=0,n=0,s=0,t=0,c=0;if((0|(k=l[e+4>>2]))>=1)for(;;){i=l[(s=b<<2)+l[e+12>>2]>>2];e:{if(i){for(t=0,n=i;;){k=i,i=0|f[r](l[i+4>>2],l[i+8>>2],a);r:if(i>>>0>3)i=k;else{a:{i:{f:switch(i-1|0){case 2:break f;case 0:break e;case 1:break a;default:break i}if((0|b)>=l[e+4>>2])return;if(!(i=l[l[e+12>>2]+s>>2]))return;for(;;){if((0|i)==(0|k))break i;if(!(i=l[i+12>>2]))break}return}i=n=l[k+12>>2],t=k;break r}i=l[k+12>>2],c=t?t+12|0:l[e+12>>2]+s|0,l[c>>2]=i,i=l[k+12>>2],Lb(n),l[e+8>>2]=l[e+8>>2]+-1,n=i}if(!i)break}k=l[e+4>>2]}if((0|(b=b+1|0))<(0|k))continue}break}}function Hf(e,r,a){var i,k=0,b=0,n=0;i=0|f[l[l[e>>2]+4>>2]](r),b=l[l[e+12>>2]+((i>>>0)%h[e+4>>2]<<2)>>2];e:if(b){r:{if(l[b>>2]==(0|i)){if((0|(k=l[b+4>>2]))==(0|r)){k=b;break r}if(!f[l[l[e>>2]>>2]](r,k)){k=b;break r}}if(!(k=l[b+12>>2]))break e;for(n=b+12|0;;){a:{if(l[k>>2]==(0|i)){if((0|(b=l[k+4>>2]))==(0|r))break r;if(b=0|f[l[l[e>>2]>>2]](r,b),k=l[n>>2],!b)break a}if(n=k+12|0,k=l[k+12>>2])continue;break e}break}if(!k)break e}a&&(l[a>>2]=l[k+8>>2])}}function qf(e){var r=0,a=0,i=0;for(r=e;;){e:if(!v[0|r]){if(1!=(0|(a=l[78179]))){if(i=r,(0|a)<2)break e;for(;;){if(v[i+1|0])break e;if(i=i+1|0,!((0|(a=a+-1|0))>1))break}}return r-e|0}r=(0|f[l[78176]](r))+r|0}}function Yf(e,r){var a,i,f=0,k=0,b=0;if(i=e+4|0,a=l[e>>2])for(e=a;b=(k=e+f|0)>>>1,(f=(k=h[(k<<2|4)+i>>2]<r>>>0)?b+1|0:f)>>>0<(e=k?e:b)>>>0;);return f>>>0<a>>>0?h[(f<<3)+i>>2]<=r>>>0:0}function Wf(e,r){var a;4&v[35065]||(P(17730,14282,211,35526),M()),a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=30,l[a>>2]=0,l[a+4>>2]=0,l[a+76>>2]=0,l[a+80>>2]=0,l[a+68>>2]=-1,l[a+72>>2]=-1,l[a+60>>2]=0,l[a+64>>2]=0,l[a+52>>2]=-1,l[a+56>>2]=-1,l[a+48>>2]=0,l[a+84>>2]=0,l[a+88>>2]=0,l[a+64>>2]=En(r),l[e+4>>2]=a,l[e>>2]=a}function Gf(e,r,a){var i=0,f=0,k=0,b=0;if(l[a>>2]=0,r&&(r=l[r>>2],!((0|(f=l[r>>2]))<1))){k=r+4|0,e=(l[e+12>>2]<2)<<7,r=0;e:{for(;;){if(b=l[(4|(i=r<<3))+k>>2],e>>>0<=(i=l[i+k>>2]+-1|0)>>>0&&(e=Fn(a,e,i)))break e;if(-1==(0|b))return 0;if(e=b+1|0,(0|f)==(0|(r=r+1|0)))break}e=Fn(a,e,-1)}return e}return Fn(a,(l[e+12>>2]<2)<<7,-1)}function Xf(e,r,a,i){var k,b,n=0,s=0,t=0,c=0;ne=k=ne-16|0,b=l[a+8>>2],n=l[e>>2],l[k+8>>2]=n,s=-104;e:if(!(n>>>0>=r>>>0)){t=0|f[l[b+20>>2]](n,r),l[k+12>>2]=t,n=(0|f[l[b>>2]](n))+n|0,l[k+8>>2]=n;r:{a:{i:{f:{if((s=t+-67|0)>>>0>10){if(99!=(0|t))break i;if(s=l[a+12>>2],!(8&v[s+3|0]))break a}else{k:switch(s-1|0){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:break i;case 9:break f}if(s=l[a+12>>2],!(8&v[s+5|0]))break a;if(s=-106,n>>>0>=r>>>0)break e;if(t=0|f[l[b+20>>2]](n,r),l[k+12>>2]=t,n=(0|f[l[b>>2]](n))+n|0,l[k+8>>2]=n,s=-109,45!=(0|t))break e}if(s=-106,n>>>0>=r>>>0)break e;if(t=0|f[l[b+20>>2]](n,r),l[k+12>>2]=t,l[k+8>>2]=(0|f[l[b>>2]](n))+n,63==(0|t)){n=127;break r}if((0|t)==l[l[a+12>>2]+16>>2]){if((0|(s=Xf(k+8|0,r,a,k+12|0)))<0)break e;t=l[k+12>>2]}n=159&t;break r}if(s=l[a+12>>2],!(16&v[s+5|0]))break a;if(s=-105,n>>>0>=r>>>0)break e;if(c=0|f[l[b+20>>2]](n,r),l[k+12>>2]=c,t=(0|f[l[b>>2]](n))+n|0,l[k+8>>2]=t,s=-108,45!=(0|c))break e;if(s=-105,t>>>0>=r>>>0)break e;if(n=0|f[l[b+20>>2]](t,r),l[k+12>>2]=n,l[k+8>>2]=(0|f[l[b>>2]](t))+t,(0|n)==l[l[a+12>>2]+16>>2]){if((0|(s=Xf(k+8|0,r,a,k+12|0)))<0)break e;n=l[k+12>>2]}n=127&n|128;break r}s=l[a+12>>2]}a:if(4&v[s+3|0]&&!((r=t+-97|0)>>>0>21)){n=10;i:switch(r-1|0){case 18:n=9;break r;case 16:n=13;break r;case 4:n=12;break r;default:n=7;break r;case 0:n=8;break r;case 3:n=27;break r;case 1:case 2:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 13:case 14:case 15:case 17:case 19:break a;case 20:break i;case 12:break r}if(n=11,32&v[s+5|0])break r}n=t}l[k+12>>2]=n,l[e>>2]=l[k+8>>2],l[i>>2]=n,s=0}return ne=k+16|0,s}function Jf(e,r){var a=0,i=0;a=Cb(44);e:{if(a){if(l[a>>2]=0,l[a+12>>2]=0,l[a+16>>2]=0,i=a+20|0,l[a+8>>2]=i,l[a+4>>2]=i,!qk(a,e,r))break e;kn(a)}a=0}return a}function Vf(e,r){var a,i=0;return ne=a=ne-32|0,(i=Mi(e,r))||(i=l[r+4>>2],l[a+24>>2]=l[r>>2],l[a+28>>2]=i,function(e){var r=0;e=l[e>>2];e:if(e){for(;;){if(34!=l[e+8>>2]){if(e=l[e>>2])continue;break e}break}r=1}return r}(a+24|0)?(r=l[8846],l[a+16>>2]=l[8845],l[a+20>>2]=r,_n(e,a+16|0,29111,0),i=1):(e=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=e,i=0,function(e){var r=0;if(e=l[e>>2])for(;;){if(r=l[e+8>>2],!(1152==(1152&l[8+(r>>>0<41?w(r,24)+34336|0:35320)>>2])|36==(-2&l[e+8>>2])))return 0;if(!(e=l[e>>2]))break}return 1}(a+8|0)||(P(29301,29507,977,58297),M()))),ne=a+32|0,i}function Kf(e,r){var a,i=0;ne=a=ne-304|0;e:if(!((e=e+-4|0)>>>0>94)){r:switch(e-1|0){default:e=l[r+12>>2],l[a+16>>2]=l[r+8>>2],l[a+20>>2]=e,e=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=e,zb(a+8|0);break e;case 0:e=l[r+12>>2],l[a+32>>2]=l[r+8>>2],l[a+36>>2]=e,e=l[r+4>>2],l[a+24>>2]=l[r>>2],l[a+28>>2]=e,zb(a+24|0);break e;case 1:e=l[r+12>>2],l[a+48>>2]=l[r+8>>2],l[a+52>>2]=e,e=l[r+4>>2],l[a+40>>2]=l[r>>2],l[a+44>>2]=e,zb(a+40|0);break e;case 2:i=l[r+12>>2],l[(e=a- -64|0)>>2]=l[r+8>>2],l[e+4>>2]=i,e=l[r+4>>2],l[a+56>>2]=l[r>>2],l[a+60>>2]=e,zb(a+56|0);break e;case 37:e=l[r+12>>2],l[a+80>>2]=l[r+8>>2],l[a+84>>2]=e,e=l[r+4>>2],l[a+72>>2]=l[r>>2],l[a+76>>2]=e,zb(a+72|0);break e;case 66:e=l[r+4>>2],l[a+88>>2]=l[r>>2],l[a+92>>2]=e,sn(a+88|0);break e;case 67:e=l[r+4>>2],l[a+96>>2]=l[r>>2],l[a+100>>2]=e,sn(a+96|0);break e;case 68:e=l[r+4>>2],l[a+104>>2]=l[r>>2],l[a+108>>2]=e,sn(a+104|0);break e;case 69:e=l[r+4>>2],l[a+112>>2]=l[r>>2],l[a+116>>2]=e,sn(a+112|0);break e;case 70:e=l[r+4>>2],l[a+120>>2]=l[r>>2],l[a+124>>2]=e,sn(a+120|0);break e;case 71:e=l[r+4>>2],l[a+128>>2]=l[r>>2],l[a+132>>2]=e,sn(a+128|0);break e;case 72:e=l[r+4>>2],l[a+136>>2]=l[r>>2],l[a+140>>2]=e,sn(a+136|0);break e;case 73:e=l[r+4>>2],l[a+144>>2]=l[r>>2],l[a+148>>2]=e,sn(a+144|0);break e;case 74:e=l[r+4>>2],l[a+152>>2]=l[r>>2],l[a+156>>2]=e,sn(a+152|0);break e;case 75:e=l[r+4>>2],l[a+160>>2]=l[r>>2],l[a+164>>2]=e,sn(a+160|0);break e;case 76:e=l[r+4>>2],l[a+168>>2]=l[r>>2],l[a+172>>2]=e,sn(a+168|0);break e;case 79:e=l[r+4>>2],l[a+176>>2]=l[r>>2],l[a+180>>2]=e,sn(a+176|0);break e;case 80:e=l[r+4>>2],l[a+184>>2]=l[r>>2],l[a+188>>2]=e,sn(a+184|0);break e;case 81:e=l[r+4>>2],l[a+192>>2]=l[r>>2],l[a+196>>2]=e,sn(a+192|0);break e;case 82:e=l[r+4>>2],l[a+200>>2]=l[r>>2],l[a+204>>2]=e,sn(a+200|0);break e;case 83:e=l[r+4>>2],l[a+208>>2]=l[r>>2],l[a+212>>2]=e,sn(a+208|0);break e;case 84:e=l[r+4>>2],l[a+216>>2]=l[r>>2],l[a+220>>2]=e,sn(a+216|0);break e;case 85:e=l[r+4>>2],l[a+224>>2]=l[r>>2],l[a+228>>2]=e,sn(a+224|0);break e;case 86:e=l[r+4>>2],l[a+232>>2]=l[r>>2],l[a+236>>2]=e,sn(a+232|0);break e;case 87:e=l[r+4>>2],l[a+240>>2]=l[r>>2],l[a+244>>2]=e,sn(a+240|0);break e;case 88:e=l[r+4>>2],l[a+248>>2]=l[r>>2],l[a+252>>2]=e,sn(a+248|0);break e;case 89:e=l[r+4>>2],l[a+256>>2]=l[r>>2],l[a+260>>2]=e,sn(a+256|0);break e;case 90:e=l[r+4>>2],l[a+264>>2]=l[r>>2],l[a+268>>2]=e,sn(a+264|0);break e;case 91:e=l[r+12>>2],l[a+280>>2]=l[r+8>>2],l[a+284>>2]=e,e=l[r+4>>2],l[a+272>>2]=l[r>>2],l[a+276>>2]=e,zb(a+272|0);break e;case 92:e=l[r+4>>2],l[a+288>>2]=l[r>>2],l[a+292>>2]=e,sn(a+288|0);break e;case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 77:case 78:break e;case 93:}e=l[r+4>>2],l[a+296>>2]=l[r>>2],l[a+300>>2]=e,sn(a+296|0)}ne=a+304|0}function Zf(e,r){var a=0,i=0,f=0,b=0;if(e>>>0<1114112){e:{if((0|e)>=128){b=r;r:{a:{if((0|e)>=2048){if((0|e)>65535)break a;k[0|r]=e>>>12|224,a=r+3|0,i=e>>>6,f=e;break r}return k[r+1|0]=63&e|128,k[0|r]=e>>>6|192,2}k[r+3|0]=63&e|128,k[0|r]=e>>>18|240,a=r+4|0,i=e>>>12,f=e>>>6}if(k[b+2|0]=63&f|128,k[r+1|0]=63&i|128,(0|(r=a-r|0))==(0|((0|e)<65536?3:4)))break e;P(16110,14517,118,44740),M()}k[0|r]=e,r=1}return r}P(15730,14517,101,44740),M()}function $f(e){var r,a=0,i=0,f=0,c=0,o=0,u=0;ne=r=ne-128|0,a=l[e+100>>2];e:if(a){r:{a:{i:{f:if(f=l[e+96>>2],!((i=k[0|f]+-102|0)>>>0>14)){k:{b:{n:switch(i-1|0){case 13:a=l[10939],l[r+120>>2]=l[10938],l[r+124>>2]=a,a=l[10937],l[r+112>>2]=l[10936],l[r+116>>2]=a,a=l[r+124>>2],l[r+88>>2]=l[r+120>>2],l[r+92>>2]=a,a=l[r+116>>2],l[r+80>>2]=l[r+112>>2],l[r+84>>2]=a,a=29296;break b;default:a=l[10943],l[r+120>>2]=l[10942],l[r+124>>2]=a,a=l[10941],l[r+112>>2]=l[10940],l[r+116>>2]=a,a=l[r+124>>2],l[r+88>>2]=l[r+120>>2],l[r+92>>2]=a,a=l[r+116>>2],l[r+80>>2]=l[r+112>>2],l[r+84>>2]=a,a=29501,f=5;break k;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:case 12:break f;case 7:}a=l[10947],l[r+120>>2]=l[10946],l[r+124>>2]=a,a=l[10945],l[r+112>>2]=l[10944],l[r+116>>2]=a,a=l[r+124>>2],l[r+88>>2]=l[r+120>>2],l[r+92>>2]=a,a=l[r+116>>2],l[r+80>>2]=l[r+112>>2],l[r+84>>2]=a,a=29673}f=4}if(i=29841,(0|f)!=l[e+100>>2])break e;if(pn(l[e+96>>2],a,f))break e;if(a=l[r+92>>2],l[r+104>>2]=l[r+88>>2],l[r+108>>2]=a,a=l[r+84>>2],l[r+96>>2]=l[r+80>>2],l[r+100>>2]=a,o=l[e+24>>2],a=v[e+92|0]|v[e+93|0]<<8|v[e+94|0]<<16|v[e+95|0]<<24,c=v[e+88|0]|v[e+89|0]<<8|v[e+90|0]<<16|v[e+91|0]<<24,l[r+120>>2]=c,l[r+124>>2]=a,f=v[e+80|0]|v[e+81|0]<<8|v[e+82|0]<<16|v[e+83|0]<<24,i=v[e+84|0]|v[e+85|0]<<8|v[e+86|0]<<16|v[e+87|0]<<24,l[r+56>>2]=c,l[r+60>>2]=a,l[r+112>>2]=f,l[r+116>>2]=i,l[r+48>>2]=f,l[r+52>>2]=i,a=15&v[r+48|0],2&o){if(86==l[e+56>>2]|a)break i;l[e+56>>2]=l[e+36>>2]>0?86:0;break a}if(!a)break a;break i}if(k[a+f|0]=0,l[r+80>>2]=0,u=function(e,r,a){var i,f=0,c=0,o=0,u=0,d=0,h=0,p=0,y=0,E=0,_=0,D=0,S=0,F=0,M=0,A=0,x=0,P=0,T=0,R=0,O=0,I=0,z=0,N=0,j=0,U=0,B=0,C=0,L=0,H=0,q=0,Y=0,W=0,G=0;ne=i=ne-32|0,l[i+8>>2]=0,l[i+12>>2]=0,h=1,P=r;f:{k:{b:{n:{s:{t:{c:{o:{u:{l:{for(;;){v:{d:if(!((o=k[0|P])+-9>>>0<5)){h:{if((F=o+-32|0)>>>0>13){if(o)break h;break u}m:switch(F-1|0){case 10:h=0;break;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 11:break h;case 12:break m;default:break d}if(!(o=v[P+1|0]))break u;P=P+1|0,C=h}h:{if(48==(255&o)){for(R=1;o=v[P+1|0],P=F=P+1|0,48==(0|o););if(!o)break h;P=F}c=o<<24>>24;m:if((o+-48&255)>>>0>9)y=P,h=0;else{for(y=P,h=0;F=y,D>>>0<=8?h=(w(h,10)+c|0)-48|0:D>>>0>15||(f=(w(f,10)+c|0)-48|0),y=F+1|0,D=D+1|0,((c=k[F+1|0])+-48&255)>>>0<10;);if(A=y-P|0,y>>>0<=P>>>0)o=c;else{for(F=y-P|0,o=y;;){if(48!=v[0|(o=o+-1|0)]){o=c;break m}if(N=N+1|0,!(o>>>0>P>>>0))break}o=c,N=F}}if(46!=(255&o)){d=y,j=A,E=D;break l}if(I=(j=(d=y+1|0)-P|0)-A|0,c=k[y+1|0],D){E=D,o=0;break v}if(48==(0|c)){for(;x=x+1|0,c=k[d+1|0],d=F=d+1|0,48==(0|c););d=F}if(c+-49>>>0>8)break l;j=I+(A=P-d|0)|0,P=d,o=1;break v}r=F;break f}P=P+1|0;continue}break}for(;;){v:{if(!o){if(c+-48>>>0<=9)break v;M=x,x=_;break l}if(F=d,u=_+1|0,S=c+-48|0){d=E+1|0,x=u+x|0;d:{h:{if((0|_)>=1){for(y=(0|E)<9,u=E+_|0,o=1;h=(y&=1)?w(h,10):h,c=d,f=y?f:(0|c)<17?w(f,10):f,y=(0|c)<9,d=c+1|0,E=(0|o)!=(0|_),o=o+1|0,E;);if(d=u+1|0,(0|c)<9)break h}else if((0|E)<=8)break h;if(_=0,(0|d)>16)break d;f=S+w(f,10)|0;break d}h=S+w(h,10)|0,_=0}E=d,N=0}else _=u;d=F+1|0,c=k[F+1|0],o=0;continue}o=1}}if(101==(32|c)){if(!(x|R|E))break u;o=d+1|0,c=k[d+1|0];l:if((F=c+-43|0)>>>0>2)r=0;else{switch(_=0,r=0,F-1|0){case 1:_=1;break;case 0:break l}o=d+2|0,c=k[d+2|0],r=_}if(c+-48>>>0>9)F=d;else{if(48==(0|c))for(;c=k[o+1|0],o=y=o+1|0,48==(0|c););else y=o;if(c+-49>>>0>8)F=y;else{if(o=y+1|0,_=c+-48|0,((c=k[y+1|0])+-48&255)>>>0>9)F=o;else for(;_=(w(_,10)+c|0)-48|0,c=k[o+1|0],o=F=o+1|0,(c+-48&255)>>>0<10;);u=(0|_)>19999?19999:(F-y|0)>8?19999:_,z=r?0-u|0:u}}r=d}else F=d;if(E)break o;if(x|R){r=F;break f}if(!(I||(e=c+-73|0)>>>0>37)){l:switch(e-1|0){default:for(d=F+2|0,f=14109,o=F;;){if(14111==(0|f)){r=F+8|0,f=14404;v:{for(;;){if(14409==(0|f))break v;if(c=k[0|f],f=f+1|0,(0|c)!=(0|(((e=k[0|(d=d+1|0)])+-65&255)>>>0<26?e+32|0:e)))break}r=F+3|0}l[i+8>>2]=0,l[i+12>>2]=2146435072;break f}if(c=k[0|f],f=f+1|0,(0|c)!=(0|(((e=k[0|(o=o+1|0)])+-65&255)>>>0<26?e+32|0:e)))break}break u;case 4:case 36:break l;case 0:case 1:case 2:case 3:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 32:case 33:case 34:case 35:break u}for(e=F+3|0,f=14892;;){if(14894==(0|f))break c;if(d=k[0|f],f=f+1|0,(0|d)!=(0|(((c=k[0|(F=F+1|0)])+-65&255)>>>0<26?c+32|0:c)))break}}}C=0;break f}p=+(h>>>0),m[i+8>>3]=p,(0|(c=(0|E)<16?E:16))>=10&&(p=m[44200+(c<<3)>>3]*p+ +(f>>>0),m[i+8>>3]=p),O=z-M|0;o:if(!((0|E)>15)){if(!O){r=F;break f}if((0|O)>=1){if((0|O)<=22){m[i+8>>3]=m[44272+(O<<3)>>3]*p,r=F;break f}if((0|O)>(37-E|0))break o;e=15-E|0,m[i+8>>3]=m[44272+(e<<3)>>3]*p*m[44272+(O-e<<3)>>3],r=F;break f}if(!((0|O)<-22)){m[i+8>>3]=p/m[44272-(O<<3)>>3],r=F;break f}}t(+p),r=0|b(1),u=0|b(0),x=r;o:{u:{l:{if((0|(f=O+(E-c|0)|0))>=1){if((r=15&f)&&(p=m[44272+(r<<3)>>3]*p,m[i+8>>3]=p,t(+p),r=0|b(1),b(0),x=r),!(r=-16&f))break u;if((0|r)>=309){M=0,f=i+8|0,y=0,c=0,d=0,_=0;break b}if(M=0,f>>>0<32)o=0;else for(f>>>=4,o=0;1&f&&(p=m[44464+(o<<3)>>3]*p,m[i+8>>3]=p,t(+p),r=0|b(1),b(0),x=r),o=o+1|0,r=f>>>0>3,f>>>=1,r;);if(l[i+12>>2]=x+-55574528,p=m[44464+(o<<3)>>3]*m[i+8>>3],m[i+8>>3]=p,f=i+8|0,y=0,c=0,d=0,_=0,t(+p),r=0|b(1),b(0),(u=2146435072&r)>>>0>2090860544)break b;if(u>>>0<2089811969)break l;l[i+8>>2]=-1,l[i+12>>2]=2146435071;break u}if(R=0,(0|f)>-1)break o;if((r=15&(S=0-f|0))&&(p/=m[44272+(r<<3)>>3],m[i+8>>3]=p,t(+p),r=0|b(1),u=0|b(0),x=r),!(o=S>>4))break o;if(M=0,y=0,c=0,d=0,_=0,(0|f)<-511)break n;if(c=u,(0|f)<=-16)for(f=0;1&o&&(p=m[44512+(f<<3)>>3]*p,m[i+8>>3]=p,t(+p),u=0|b(1),c=0|b(0),x=u),f=f+1|0,o>>>=1;);v:if(256&S&&!((r=x>>>20&2047)>>>0>106))if(r>>>0<=75){if(c=0,r>>>0<53)break n;if(l[i+8>>2]=0,r>>>0<=54){l[i+12>>2]=57671680;break v}l[i+12>>2]=-1<<75-r&x}else l[i+8>>2]=-1<<107-r&c;if(0!=m[i+8>>3]){R=S<<23>>31&106;break o}c=0;break n}l[i+12>>2]=r+55574528}R=0}if(z=D||E,(0|E)<41){x=O,D=E,y=z;break s}for(o=18,f=(0|z)<18?I+18|0:18,r=A+-1|0;D=o,o=o+-1|0,c=f+-1|0,48==v[P+(f=(0|f)>(0|j)?c:(0|f)>(0|A)?r:c)|0];);if(y=(0|z)>(0|D)?D:z,x=O+(E-D|0)|0,(0|D)>8)break s;if(h=0,(0|y)<=0){o=0;break t}for(f=0;h=(k[f+P|0]+w(h,10)|0)-48|0,(0|(f=f+1|0))<(0|y););o=y;break t}l[i+8>>2]=0,l[i+12>>2]=2146959360,r=e;break f}if(!((0|o)>=(0|D)))for(f=j;h=(k[f+P|0]+w(h,10)|0)-48|0,f=f+1|0,(0|D)!=(0|(o=o+1|0)););}c=(0|(r=D+8|0))/9|0,f=0;s:{t:{if((0|r)>=18){for(o=1;f=f+1|0,(0|c)>(0|(o<<=1)););if(f>>>0>7)break t}if(d=l[(r=(f<<2)+e|0)>>2]){l[r>>2]=l[d>>2];break s}}d=Bb(20+((r=1<<f)<<2)|0),l[d+8>>2]=r,l[d+4>>2]=f}if(l[d+20>>2]=h,l[d+12>>2]=0,l[d+16>>2]=1,(0|y)>=10){for(M=9,_=P+9|0,o=1;;){for(f=d+20|0,S=((c=k[0|_])>>31)-1|0,u=r=c+-48|0,r=r>>>0<4294967248?S+1|0:S,h=0;c=zi(l[f>>2],0,10,0)+u|0,r=r+se|0,r=c>>>0<u>>>0?r+1|0:r,l[f>>2]=c,f=f+4|0,u=r,r=0,(0|(h=h+1|0))<(0|o););if(r|u?((0|o)<l[d+8>>2]?c=d:((0|(r=l[d+4>>2]+1|0))>7||!(c=l[(f=(r<<2)+e|0)>>2])?(c=Bb(20+((f=1<<r)<<2)|0),l[c+8>>2]=f,l[c+4>>2]=r):l[f>>2]=l[c>>2],l[c+12>>2]=0,l[c+16>>2]=0,qb(c+12|0,d+12|0,8+(l[d+16>>2]<<2)|0),(0|(r=l[d+4>>2]))>=8?Lb(d):(r=(r<<2)+e|0,l[d>>2]=l[r>>2],l[r>>2]=d)),l[20+((o<<2)+c|0)>>2]=u,l[c+16>>2]=o+1):c=d,_=_+1|0,(0|(M=M+1|0))==(0|y))break;o=l[c+16>>2],d=c}_=_+I|0}else y=9,c=d,_=9+(P+I|0)|0;if((0|y)<(0|D))for(;;){for(f=c+20|0,o=((d=k[0|_])>>31)-1|0,u=r=d+-48|0,r=r>>>0<4294967248?o+1|0:o,d=l[c+16>>2],h=0;o=zi(l[f>>2],0,10,0)+u|0,S=r+se|0,l[f>>2]=o,f=f+4|0,r=0,u=o>>>0<u>>>0?S+1|0:S,(0|(h=h+1|0))<(0|d););if(r|u&&((0|d)>=l[c+8>>2]&&((0|(r=l[c+4>>2]+1|0))>7||!(f=l[(o=(r<<2)+e|0)>>2])?(f=Bb(20+((o=1<<r)<<2)|0),l[f+8>>2]=o,l[f+4>>2]=r):l[o>>2]=l[f>>2],l[f+12>>2]=0,l[f+16>>2]=0,qb(f+12|0,c+12|0,8+(l[c+16>>2]<<2)|0),(0|(r=l[c+4>>2]))>=8?Lb(c):(r=(r<<2)+e|0,l[c>>2]=l[r>>2],l[r>>2]=c),c=f),l[20+((d<<2)+c|0)>>2]=u,l[c+16>>2]=d+1),_=_+1|0,(0|D)==(0|(y=y+1|0)))break}B=(r=(0|x)>-1)?0:0-x|0,H=c+12|0,q=(x=r?x:0)+R|0,Y=0!=(0|R)^1,W=!R&(0|(N=E-N|0))==(0|D)^1;s:{t:{for(;;){(0|(r=l[c+4>>2]))>7||!(y=l[(d=(r<<2)+e|0)>>2])?(y=Bb(20+((d=1<<r)<<2)|0),l[y+8>>2]=d,l[y+4>>2]=r):l[d>>2]=l[y>>2],l[y+12>>2]=0,l[y+16>>2]=0,qb(y+12|0,H,8+(l[c+16>>2]<<2)|0),r=na(e,i+8|0,i+20|0,i+16|0),(d=l[e+4>>2])?l[e+4>>2]=l[d>>2]:(d=Bb(28),l[d+4>>2]=1,l[d+8>>2]=2),S=1,l[d+20>>2]=1,l[d+12>>2]=0,l[d+16>>2]=1,I=0,_=(u=(0|(f=l[i+20>>2]))>-1)?0:0-f|0,o=54-(M=l[i+16>>2])|0,u=(u?f:0)+B|0,(0|(f=M+(f-R|0)|0))>-1022||(o=o-(M=-1021-f|0)|0,(0|f)>=-1052?S=1<<M:(I=2146435072,(0|f)<-1072||(I=1<<-1053-f))),f=(f=o+u|0)-(o=(0|(o=(0|(o=(0|f)<(0|(_=(_+q|0)+o|0))?f:_))>(0|u)?u:o))>0?o:0)|0,(0|B)<1?M=r:(M=Qf(e,d=Ib(e,d,B),r),r&&((0|(h=l[r+4>>2]))>=8?Lb(r):(h=(h<<2)+e|0,l[r>>2]=l[h>>2],l[h>>2]=r))),(0|f)>=1&&(M=Kk(e,M,f)),(0|x)>=1&&(y=Ib(e,y,x)),(0|(r=_-o|0))>=1&&(y=Kk(e,y,r)),(0|(r=u-o|0))>=1&&(d=Kk(e,d,r)),_=ge(e,M,y),A=l[_+12>>2],l[_+12>>2]=0,r=l[_+16>>2],u=l[d+16>>2];c:if(!(f=r-u|0)){for(f=(o=_+20|0)+(u<<=2)|0,h=20+(u+d|0)|0;;){if((0|(u=l[(f=f+-4|0)>>2]))!=(0|(L=l[(h=h+-4|0)>>2]))){f=u>>>0<L>>>0?-1:1;break c}if(!(f>>>0>o>>>0))break}f=0}c:{o:{u:{l:{v:{if(!((0|N)<=(0|D)|(0|f)>0)){if(!A)break v;I=1;break s}if((0|f)>-1)break l;if(A)break t}if(l[i+8>>2])break c;if(I=0,1048575&(u=l[i+12>>2])){A=0;break s}if((2146435072&u)>>>0<112197633){A=0;break s}if(!(l[_+20>>2]|(0|r)>1)){A=0;break s}if(_=Kk(e,_,1),r=l[d+16>>2],!(o=l[_+16>>2]-r|0)){for(f=(o=_+20|0)+(r<<=2)|0,h=20+(r+d|0)|0;;){if((0|(r=l[(f=f+-4|0)>>2]))!=(0|(S=l[(h=h+-4|0)>>2]))){if(r>>>0<S>>>0)break s;break u}if(!(f>>>0>o>>>0))break}break s}if((0|o)>0)break u;A=0;break s}l:{if(!f){r=1048575&(u=l[i+12>>2]);v:{if(A){if(h=0,1048575!=(0|r))break v;if(f=-1,r=l[i+8>>2],R&&((o=2146435072&u)>>>0>111149056||(f=-1<<107-(o>>>20))),(0|r)!=(0|f))break v;if(2146435071==(0|u)&&(f=i+8|0,-1==(0|r)))break b;A=0,l[i+8>>2]=0,l[i+12>>2]=(2146435072&u)- -1048576;break t}if(!(r|l[i+8>>2]))break u;h=1}v:{if(I){if(u&I)break v;break t}if(!(l[i+8>>2]&S))break t}if(n(0,0),n(1,(2146435072&u)-54525952|0),p=+s(),R&&((r=u>>>20&2047)>>>0>106||(n(0,0),n(1,1184890880-(r<<20)|0),p*=+s())),T=m[i+8>>3],!h){m[i+8>>3]=p+T;break l}if(p=T-p,m[i+8>>3]=p,0!=p)break l;if(A=0,(0|N)<=(0|D))break n;break t}p=pe(_,i+28|0),T=pe(d,i+24|0),r=(u=(l[i+28>>2]-l[i+24>>2]|0)+(l[_+16>>2]-l[d+16>>2]<<5)|0)<<20,(0|u)>=1?(o=r,t(+p),r=o+(r=0|b(1))|0,n(0,0|(u=0|b(0))),n(1,0|r),p=+s()):(t(+T),S=(u=0|b(1))-r|0,n(0,0|(o=0|b(0))),n(1,0|S),T=+s());v:if((U=p/T)<=2){if(p=1,A){T=1;break v}if(T=-1,(r=l[i+8>>2])>>>0>1)break v;if(!(r-1)){if(l[i+12>>2])break v;if(A=0,(0|N)<=(0|D))break n;break t}if(1048575&l[i+12>>2])break v;T=-(p=U<1?.5:.5*U)}else p=.5*U,T=A?p:-.5*U;v:{d:{if(2145386496!=(0|(o=2146435072&(r=l[i+12>>2]))))if(!R|o>>>0>111149056)n(0,0),n(1,o+-54525952|0),T=T*+s()+m[i+8>>3],m[i+8>>3]=T,t(+T),r=0|b(1),u=0|b(0),h=r;else{if(u=i,U=m[i+8>>3],n(0,0),n(1,o+-54525952|0),G=+s(),p<=2147483647&&(p=+(((r=p<4294967296&p>=0?~~p>>>0:0)||1)>>>0),T=A?p:-p),f=u,t(+T),r=112197632+((r=0|b(1))-o|0)|0,n(0,0|(u=0|b(0))),n(1,0|r),T=U+G*+s(),m[f+8>>3]=T,0==T)break v;t(+T),r=0|b(1),u=0|b(0),h=r}else{if(f=l[i+8>>2],S=l[i+12>>2],r=r+-55574528|0,l[i+12>>2]=r,n(0,0),n(1,(2146435072&r)-54525952|0),T=T*+s()+m[i+8>>3],m[i+8>>3]=T,t(+T),r=0|b(1),u=0|b(0),(2145386496&r)>>>0>=2090860544){if(-1!=(0|f)|2146435071!=(0|S))break d;f=i+8|0;break b}h=r+55574528|0,l[i+12>>2]=h}if((0|o)!=(2146435072&h)|W)break o;if(p=(T=p)-+(0|(r=g(p)<2147483648?~~p:-2147483648)),1048575&h|u||A){if(I=0,p<.4999999)break s;if(!(p>.5000001))break o;break s}if(p<.24999995)break c;break o}l[i+8>>2]=-1,l[i+12>>2]=2146435071;break o}A=(0|N)>(0|D)?1:A;break t}A=1-A|0;break t}if(!((r=2146435072&u)>>>0>112197632|Y)){if(I=0,(0|N)>(0|D))break s;if(r>>>0<=57671680)break n;break s}if(l[i+8>>2]=-1,l[i+12>>2]=r+-1048576|1048575,(0|N)<=(0|D))break t}if(M&&((0|(r=l[M+4>>2]))>=8?Lb(M):(r=(r<<2)+e|0,l[M>>2]=l[r>>2],l[r>>2]=M)),y&&((0|(r=l[y+4>>2]))>=8?Lb(y):(r=(r<<2)+e|0,l[y>>2]=l[r>>2],l[r>>2]=y)),d&&((0|(r=l[d+4>>2]))>=8?Lb(d):(r=(r<<2)+e|0,l[d>>2]=l[r>>2],l[r>>2]=d)),!_)continue;if((0|(r=l[_+4>>2]))>=8){Lb(_);continue}r=(r<<2)+e|0,l[_>>2]=l[r>>2],l[r>>2]=_;continue}break}A=0}I=0}if(M&&((0|(r=l[M+4>>2]))>=8?Lb(M):(r=(r<<2)+e|0,l[M>>2]=l[r>>2],l[r>>2]=M)),y&&((0|(r=l[y+4>>2]))>=8?Lb(y):(r=(r<<2)+e|0,l[y>>2]=l[r>>2],l[r>>2]=y)),d&&((0|(r=l[d+4>>2]))>=8?Lb(d):(r=(r<<2)+e|0,l[d>>2]=l[r>>2],l[r>>2]=d)),c&&((0|(r=l[c+4>>2]))>=8?Lb(c):(r=(r<<2)+e|0,l[c>>2]=l[r>>2],l[r>>2]=c)),_&&((0|(r=l[_+4>>2]))>=8?Lb(_):(r=(r<<2)+e|0,l[_>>2]=l[r>>2],l[r>>2]=_)),I){if(u=E+O|0,0!=m[i+8>>3]?(r=na(e,i+8|0,i+24|0,i+28|0),f=l[i+24>>2]-R|0,l[i+24>>2]=f,o=r,r=f+1074|0,E=Kk(e,o,c=((0|(c=53-l[i+28>>2]|0))>(0|r)?r:c)+1|0),l[E+20>>2]=1|l[E+20>>2],x=0):((E=l[e+4>>2])?l[e+4>>2]=l[E>>2]:(E=Bb(28),l[(r=E)+4>>2]=1,l[r+8>>2]=2),l[E+20>>2]=1,l[E+12>>2]=0,l[E+16>>2]=1,l[i+12>>2]=57671680,l[i+28>>2]=1,f=-1075,l[i+24>>2]=-1075,A=0,c=0,x=1),o=u+-1|0,r=(r=f)+((f=1-u|0)-c|0)|0,l[i+24>>2]=r,(D=l[e+4>>2])?l[e+4>>2]=l[D>>2]:(D=Bb(28),l[(c=D)+4>>2]=1,l[c+8>>2]=2),l[D+20>>2]=1,l[D+12>>2]=0,l[D+16>>2]=1,(0|o)>=1?D=Ib(e,D,o):(0|u)>0||(E=Ib(e,E,f)),c=(f=(0|r)>0)?0:0-r|0,h=o=((u=l[16+((l[D+16>>2]<<2)+D|0)>>2])>>>0<65536)<<4,S=8|o,S=(o=(u=u>>>0>65535?u:u<<16)>>>0>16777215)?h:S,h=S=(o=(u=o?u:u<<8)>>>0>268435455)?S:4|S,O=2|S,u=h=(S=(o=o?u:u<<4)>>>0>1073741823)?h:O,(0|(o=S?o:o<<2))<0||(u=32,1073741824&o&&(u=h+1|0)),(0|(r=(u=28+(u-((0|c)>0?c:0)|0)&31)+(f?r:0)|0))>=1&&(E=Kk(e,E,r)),r=E,(0|(c=c+u|0))>=1&&(D=Kk(e,D,c)),f=yf(r,D))c=E;else{for(f=E+20|0,o=l[E+16>>2],h=0,u=0,r=0;c=zi(l[f>>2],0,10,0)+u|0,S=r+se|0,l[f>>2]=c,f=f+4|0,u=c>>>0<u>>>0?S+1|0:S,(0|(h=h+1|0))<(0|o););r|u?((0|o)<l[E+8>>2]?c=E:((0|(r=l[E+4>>2]+1|0))>7||!(c=l[(f=(r<<2)+e|0)>>2])?(c=Bb(20+((f=1<<r)<<2)|0),l[c+8>>2]=f,l[c+4>>2]=r):l[f>>2]=l[c>>2],l[c+12>>2]=0,l[c+16>>2]=0,qb(c+12|0,E+12|0,8+(l[E+16>>2]<<2)|0),(0|(r=l[E+4>>2]))>=8?Lb(E):(r=(r<<2)+e|0,l[E>>2]=l[r>>2],l[r>>2]=E)),l[20+((o<<2)+c|0)>>2]=u,l[c+16>>2]=o+1):c=E,f=yf(c,D)}E=0;s:{t:{c:{o:{if((0|z)>=1){for(;;){if(h=(k[E+P|0]-f|0)-48|0)break o;if(E=E+1|0,r=l[c+20>>2],1==(0|(S=l[c+16>>2]))&&!r)break c;if(l[c+20>>2]=zi(r,0,10,0),r=0,u=se,(0|S)>=2)for(f=c+24|0,h=1;O=zi(l[f>>2],0,10,0)+u|0,o=r+se|0,l[f>>2]=O,f=f+4|0,u=O>>>0<u>>>0?o+1|0:o,(0|S)!=(0|(h=h+1|0)););if(r|u&&((0|S)>=l[c+8>>2]&&((0|(r=l[c+4>>2]+1|0))>7||!(f=l[(o=(r<<2)+e|0)>>2])?(f=Bb(20+((o=1<<r)<<2)|0),l[f+8>>2]=o,l[f+4>>2]=r):l[o>>2]=l[f>>2],l[f+12>>2]=0,l[f+16>>2]=0,qb(f+12|0,c+12|0,8+(l[c+16>>2]<<2)|0),(0|(r=l[c+4>>2]))>=8?Lb(c):(r=(r<<2)+e|0,l[c>>2]=l[r>>2],l[r>>2]=c),c=f),l[20+((S<<2)+c|0)>>2]=u,l[c+16>>2]=S+1),f=yf(c,D),(0|E)==(0|z))break}E=z}if((0|E)<(0|N))for(;;){if(h=(k[P+j|0]-f|0)-48|0)break o;if(E=E+1|0,r=l[c+20>>2],1==(0|(z=l[c+16>>2]))&&!r)break c;if(l[c+20>>2]=zi(r,0,10,0),u=se,r=0,(0|z)>=2)for(f=c+24|0,h=1;o=u,S=zi(l[f>>2],0,10,0)+o|0,u=r+se|0,l[f>>2]=S,f=f+4|0,u=S>>>0<o>>>0?u+1|0:u,(0|z)!=(0|(h=h+1|0)););if(r|u&&((0|z)>=l[c+8>>2]&&((0|(r=l[c+4>>2]+1|0))>7||!(f=l[(o=(r<<2)+e|0)>>2])?(f=Bb(20+((o=1<<r)<<2)|0),l[f+8>>2]=o,l[f+4>>2]=r):l[o>>2]=l[f>>2],l[f+12>>2]=0,l[f+16>>2]=0,qb(f+12|0,c+12|0,8+(l[c+16>>2]<<2)|0),(0|(r=l[c+4>>2]))>=8?Lb(c):(r=(r<<2)+e|0,l[c>>2]=l[r>>2],l[r>>2]=c),c=f),l[20+((z<<2)+c|0)>>2]=u,l[c+16>>2]=z+1),j=j+1|0,f=yf(c,D),(0|E)==(0|N))break}if(h=-1,!((0|f)>0)){if(!l[c+20>>2]&&(h=0,l[c+16>>2]<2))break t;h=-1;break t}}if(!c)break s;break t}h=(0|E)<(0|N)}(0|(r=l[c+4>>2]))>=8?Lb(c):(r=(r<<2)+e|0,l[c>>2]=l[r>>2],l[r>>2]=c)}D&&((0|(r=l[D+4>>2]))>=8?Lb(D):(r=(r<<2)+e|0,l[D>>2]=l[r>>2],l[r>>2]=D));s:if(x){if((0|h)>0)break s;l[i+8>>2]=0,l[i+12>>2]=0}else{t:{if(!((0|h)<=-1)){if(h){if(!A)break s;f=l[i+12>>2]}else{c:{o:{if((0|(r=((f=l[i+12>>2])>>>20&2047)-R|0))<=0){if((0|r)<-30)break o;if(l[i+8>>2]>>>1-r&1)break c;break s}if(!(1&k[i+8|0]))break s;break c}if(!(f>>>-31-r&1))break s}if(!A)break t}n(0,0),n(1,(2146435072&f)-54525952|0),p=+s(),R&&((r=f>>>20&2047)>>>0>106||(n(0,0),n(1,1184890880-(r<<20)|0),p*=+s())),m[i+8>>3]=p+m[i+8>>3];break s}if(A)break s;f=l[i+12>>2]}n(0,0),n(1,(2146435072&f)-54525952|0),p=+s(),R&&((r=f>>>20&2047)>>>0>106||(n(0,0),n(1,1184890880-(r<<20)|0),p*=+s())),m[i+8>>3]=m[i+8>>3]-p}if(2146435072==(0|(r=2146435072&l[i+12>>2]))){c=0,f=i+8|0;break b}if(!r&&(c=0,0==m[i+8>>3]))break n}if(!R){r=F;break f}m[i+8>>3]=1.232595164407831e-32*m[i+8>>3],r=F;break f}l[i+8>>2]=0,l[i+12>>2]=0;break k}l[f+4>>2]=2146435072,l[i+8>>2]=0}c?(M&&((0|(r=l[M+4>>2]))>=8?Lb(M):(r=(r<<2)+e|0,l[M>>2]=l[r>>2],l[r>>2]=M)),y&&((0|(r=l[y+4>>2]))>=8?Lb(y):(r=(r<<2)+e|0,l[y>>2]=l[r>>2],l[r>>2]=y)),d&&((0|(r=l[d+4>>2]))>=8?Lb(d):(r=(r<<2)+e|0,l[d>>2]=l[r>>2],l[r>>2]=d)),(0|(r=l[c+4>>2]))>=8?Lb(c):(r=(r<<2)+e|0,l[c>>2]=l[r>>2],l[r>>2]=c),_?(0|(r=l[_+4>>2]))>=8?(Lb(_),r=F):(e=(r<<2)+e|0,l[_>>2]=l[e>>2],l[e>>2]=_,r=F):r=F):r=F}return a&&(l[a>>2]=r),ne=i+32|0,p=m[i+8>>3],C?-p:p}(e+116|0,l[e+96>>2],r+80|0),!(!(a=l[r+80>>2])|v[0|a])){if(l[(a=r- -64|0)>>2]=4,l[a+4>>2]=0,m[a+8>>3]=u,a=l[r+76>>2],l[r+104>>2]=l[r+72>>2],l[r+108>>2]=a,a=l[r+68>>2],l[r+96>>2]=l[r+64>>2],l[r+100>>2]=a,o=l[e+24>>2],a=v[e+92|0]|v[e+93|0]<<8|v[e+94|0]<<16|v[e+95|0]<<24,c=v[e+88|0]|v[e+89|0]<<8|v[e+90|0]<<16|v[e+91|0]<<24,l[r+120>>2]=c,l[r+124>>2]=a,f=v[e+80|0]|v[e+81|0]<<8|v[e+82|0]<<16|v[e+83|0]<<24,i=v[e+84|0]|v[e+85|0]<<8|v[e+86|0]<<16|v[e+87|0]<<24,l[r+24>>2]=c,l[r+28>>2]=a,l[r+112>>2]=f,l[r+116>>2]=i,l[r+16>>2]=f,l[r+20>>2]=i,a=15&v[r+16|0],2&o){if(86==l[e+56>>2]|a)break i;l[e+56>>2]=l[e+36>>2]>0?86:0}else if(a)break i;f=l[12+(a=i=e+80|0)>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=f,a=l[e+84>>2],l[r>>2]=l[e+80>>2],l[r+4>>2]=a,zb(r);break r}i=29998;break e}i=26637;break e}f=l[12+(a=i=e+80|0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=f,a=l[e+84>>2],l[r+32>>2]=l[e+80>>2],l[r+36>>2]=a,zb(r+32|0)}a=l[r+108>>2],l[i+8>>2]=l[r+104>>2],l[i+12>>2]=a,a=l[r+100>>2],l[e+80>>2]=l[r+96>>2],l[e+84>>2]=a,i=0,l[e+100>>2]=0}return ne=r+128|0,i}function Qf(e,r,a){var i,f,k,b,n=0,s=0,t=0,c=0,o=0,u=0,v=0,d=0,h=0,m=0,w=0,p=0;if(u=l[r+16>>2]<l[a+16>>2],i=(s=(v=l[(c=u?r:a)+16>>2])+(a=l[(r=u?a:r)+16>>2])|0)<<2,f=e,k=l[r+4>>2]+((0|s)>l[r+8>>2])|0,b=0,(0|k)>7||!(f=l[(b=(k<<2)+f|0)>>2])?(f=Bb(20+((b=1<<k)<<2)|0),l[f+8>>2]=b,l[f+4>>2]=k):l[b>>2]=l[f>>2],l[f+12>>2]=0,l[f+16>>2]=0,u=(n=f)+20|0,(0|s)>=1&&wn(u,0,(((e=20+(n+i|0)|0)>>>0>(d=n+24|0)>>>0?e:d)-n|0)-17&-4),(0|v)>=1)for(m=(d=r+20|0)+(a<<2)|0,w=20+(c+(v<<2)|0)|0,r=c+20|0,e=u;;){if(v=r+4|0,r=l[r>>2]){for(p=r,t=0,c=0,a=d,r=e;(o=(o=t)+(t=l[r>>2])|0)>>>0<t>>>0&&(c=c+1|0),o=(h=zi(l[a>>2],0,p,0))+o|0,t=se+c|0,l[r>>2]=o,c=0,t=o>>>0<h>>>0?t+1|0:t,r=r+4|0,(a=a+4|0)>>>0<m>>>0;);l[r>>2]=t}if(e=e+4|0,!((r=v)>>>0<w>>>0))break}if((0|s)<=0)return l[n+16>>2]=s,n;for(r=u+i|0;;){if(l[(r=r+-4|0)>>2])return l[n+16>>2]=s,n;if(!((0|(s=s+-1|0))>0))break}return l[n+16>>2]=0,n}function ek(e,r,a,i){var f,k,b=0,n=0,s=0,t=0;ne=f=ne-416|0,b=l[r+12>>2],l[f+312>>2]=l[r+8>>2],l[f+316>>2]=b,b=l[r+4>>2],l[f+304>>2]=l[r>>2],l[f+308>>2]=b,Nb(f+384|0,f+304|0),jb(f+368|0,20712),b=l[f+396>>2],l[f+296>>2]=l[f+392>>2],l[f+300>>2]=b,b=l[f+380>>2],l[f+280>>2]=l[f+376>>2],l[f+284>>2]=b,b=l[f+388>>2],l[f+288>>2]=l[f+384>>2],l[f+292>>2]=b,b=l[f+372>>2],l[f+272>>2]=l[f+368>>2],l[f+276>>2]=b,dn(f+400|0,f+288|0,f+272|0),jb(f+336|0,21009),b=l[r+12>>2],l[f+264>>2]=l[r+8>>2],l[f+268>>2]=b,b=l[r>>2],r=l[r+4>>2],k=l[f+348>>2],l[f+248>>2]=l[f+344>>2],l[f+252>>2]=k,l[f+256>>2]=b,l[f+260>>2]=r,r=l[f+340>>2],l[f+240>>2]=l[f+336>>2],l[f+244>>2]=r,dn(f+352|0,f+256|0,f+240|0),r=l[f+412>>2],l[f+232>>2]=l[f+408>>2],l[f+236>>2]=r,r=l[f+404>>2],l[f+224>>2]=l[f+400>>2],l[f+228>>2]=r,1==(15&v[f+224|0])&&(r=l[f+412>>2],l[f+216>>2]=l[f+408>>2],l[f+220>>2]=r,r=l[f+404>>2],l[f+208>>2]=l[f+400>>2],l[f+212>>2]=r,zb(f+208|0),l[f+320>>2]=4,l[f+324>>2]=0,m[f+328>>3]=0,r=l[f+332>>2],l[f+408>>2]=l[f+328>>2],l[f+412>>2]=r,r=l[f+324>>2],l[f+400>>2]=l[f+320>>2],l[f+404>>2]=r),r=l[e+12>>2],l[f+200>>2]=l[e+8>>2],l[f+204>>2]=r,r=l[e+4>>2],l[f+192>>2]=l[e>>2],l[f+196>>2]=r;e:{r:{a:{if(6!=(15&v[f+192|0])){if(r=l[e+12>>2],l[f+184>>2]=l[e+8>>2],l[f+188>>2]=r,r=l[e+4>>2],l[f+176>>2]=l[e>>2],l[f+180>>2]=r,5!=(15&v[f+176|0]))break a;r=l[e+12>>2],l[f+152>>2]=l[e+8>>2],l[f+156>>2]=r,r=l[e+4>>2],l[f+144>>2]=l[e>>2],l[f+148>>2]=r,e=Re(f+144|0)}else r=l[e+12>>2],l[f+136>>2]=l[e+8>>2],l[f+140>>2]=r,r=l[e+4>>2],l[f+128>>2]=l[e>>2],l[f+132>>2]=r,e=Zb(f+128|0);if(r=l[f+364>>2],l[f+120>>2]=l[f+360>>2],l[f+124>>2]=r,r=l[f+356>>2],l[f+112>>2]=l[f+352>>2],l[f+116>>2]=r,1==(15&v[f+112|0])&&(r=l[f+364>>2],l[f+104>>2]=l[f+360>>2],l[f+108>>2]=r,r=l[f+356>>2],l[f+96>>2]=l[f+352>>2],l[f+100>>2]=r,zb(f+96|0),l[f+320>>2]=4,l[f+324>>2]=0,m[f+328>>3]=0|e,r=l[f+332>>2],l[f+360>>2]=l[f+328>>2],l[f+364>>2]=r,r=l[f+324>>2],l[f+352>>2]=l[f+320>>2],l[f+356>>2]=r),r=l[f+412>>2],l[f+88>>2]=l[f+408>>2],l[f+92>>2]=r,r=l[f+404>>2],l[f+80>>2]=l[f+400>>2],l[f+84>>2]=r,4!=(15&v[f+80|0])||(r=l[f+364>>2],l[f+72>>2]=l[f+360>>2],l[f+76>>2]=r,r=l[f+356>>2],l[f+64>>2]=l[f+352>>2],l[f+68>>2]=r,4!=(15&v[f- -64|0]))){e=l[f+412>>2],l[f+56>>2]=l[f+408>>2],l[f+60>>2]=e,e=l[f+404>>2],l[f+48>>2]=l[f+400>>2],l[f+52>>2]=e,zb(f+48|0),e=l[f+364>>2],l[f+40>>2]=l[f+360>>2],l[f+44>>2]=e,e=l[f+356>>2],l[f+32>>2]=l[f+352>>2],l[f+36>>2]=e,zb(f+32|0),e=0;break e}if(r=l[f+412>>2],l[f+24>>2]=l[f+408>>2],l[f+28>>2]=r,r=l[f+404>>2],l[f+16>>2]=l[f+400>>2],l[f+20>>2]=r,n=Wb(f+16|0),r=l[f+364>>2],l[f+8>>2]=l[f+360>>2],l[f+12>>2]=r,r=l[f+356>>2],l[f>>2]=l[f+352>>2],l[f+4>>2]=r,s=Wb(f),t=+(0|e),b=g(s=s<0?s+t:s)<2147483648?~~s:-2147483648,n=_(n<0?n+t:n,0),(0|(r=g(n=n>t?t:n)<2147483648?~~n:-2147483648))<0)break r;if((0|(b=(0|(b=(0|(b=(s>+(0|(b=s>t?e:b)))+b|0))>(0|e)?e:b))<(0|r)?r:b))>(0|e))break r;l[a>>2]=r,l[i>>2]=b,e=1;break e}r=l[e+12>>2],l[f+168>>2]=l[e+8>>2],l[f+172>>2]=r,r=l[e+4>>2],l[f+160>>2]=l[e>>2],l[f+164>>2]=r,zb(f+160|0),e=0;break e}P(21392,16044,47,44210),M()}return ne=f+416|0,e}function rk(e,r,a){var i,f=0,b=0,n=0;ne=i=ne-1040|0,f=l[r+12>>2],l[i+880>>2]=l[r+8>>2],l[i+884>>2]=f,f=l[r+4>>2],l[i+872>>2]=l[r>>2],l[i+876>>2]=f;e:if(7!=(15&v[i+872|0])||(f=l[a+12>>2],l[i+864>>2]=l[a+8>>2],l[i+868>>2]=f,f=l[a+4>>2],l[i+856>>2]=l[a>>2],l[i+860>>2]=f,5!=(15&v[i+856|0])))if(f=l[r+12>>2],l[i+848>>2]=l[r+8>>2],l[i+852>>2]=f,f=l[r+4>>2],l[i+840>>2]=l[r>>2],l[i+844>>2]=f,6!=(15&v[i+840|0])||(f=l[a+12>>2],l[i+832>>2]=l[a+8>>2],l[i+836>>2]=f,f=l[a+4>>2],l[i+824>>2]=l[a>>2],l[i+828>>2]=f,4!=(15&v[i+824|0])))if(f=l[r+12>>2],l[i+816>>2]=l[r+8>>2],l[i+820>>2]=f,f=l[r+4>>2],l[i+808>>2]=l[r>>2],l[i+812>>2]=f,6!=(15&v[i+808|0])||(f=l[a+12>>2],l[i+800>>2]=l[a+8>>2],l[i+804>>2]=f,f=l[a+4>>2],l[i+792>>2]=l[a>>2],l[i+796>>2]=f,7!=(15&v[i+792|0])))if(f=l[r+12>>2],l[i+784>>2]=l[r+8>>2],l[i+788>>2]=f,f=l[r+4>>2],l[i+776>>2]=l[r>>2],l[i+780>>2]=f,5!=(15&v[i+776|0])||(f=l[a+12>>2],l[i+768>>2]=l[a+8>>2],l[i+772>>2]=f,f=l[a+4>>2],l[i+760>>2]=l[a>>2],l[i+764>>2]=f,7!=(15&v[i+760|0])))f=l[r+12>>2],l[i+752>>2]=l[r+8>>2],l[i+756>>2]=f,f=l[r+4>>2],l[i+744>>2]=l[r>>2],l[i+748>>2]=f,6!=(15&v[i+744|0])||(f=l[a+12>>2],l[i+736>>2]=l[a+8>>2],l[i+740>>2]=f,f=l[a+4>>2],l[i+728>>2]=l[a>>2],l[i+732>>2]=f,6!=(15&v[i+728|0]))?(f=l[r+12>>2],l[i+720>>2]=l[r+8>>2],l[i+724>>2]=f,f=l[r+4>>2],l[i+712>>2]=l[r>>2],l[i+716>>2]=f,1!=(15&v[i+712|0])||(f=l[a+12>>2],l[i+704>>2]=l[a+8>>2],l[i+708>>2]=f,f=l[a+4>>2],l[i+696>>2]=l[a>>2],l[i+700>>2]=f,5!=(15&v[i+696|0])&&(f=l[a+12>>2],l[i+688>>2]=l[a+8>>2],l[i+692>>2]=f,f=l[a+4>>2],l[i+680>>2]=l[a>>2],l[i+684>>2]=f,4!=(15&v[i+680|0])&&(f=l[a+12>>2],l[i+672>>2]=l[a+8>>2],l[i+676>>2]=f,f=l[a+4>>2],l[i+664>>2]=l[a>>2],l[i+668>>2]=f,7!=(15&v[i+664|0]))))?(f=l[a+12>>2],l[i+656>>2]=l[a+8>>2],l[i+660>>2]=f,f=l[a+4>>2],l[i+648>>2]=l[a>>2],l[i+652>>2]=f,5!=(15&v[i+648|0])||(f=l[a+12>>2],l[i+640>>2]=l[a+8>>2],l[i+644>>2]=f,f=l[a+4>>2],l[i+632>>2]=l[a>>2],l[i+636>>2]=f,Nb(i+920|0,i+632|0),f=l[i+932>>2],l[i+624>>2]=l[i+928>>2],l[i+628>>2]=f,f=l[i+924>>2],l[i+616>>2]=l[i+920>>2],l[i+620>>2]=f,(0|vn(i+616|0))>29)?(f=l[r+12>>2],l[i+608>>2]=l[r+8>>2],l[i+612>>2]=f,f=l[r+4>>2],l[i+600>>2]=l[r>>2],l[i+604>>2]=f,f=Xb(15&v[i+600|0]),b=l[a+12>>2],l[i+592>>2]=l[a+8>>2],l[i+596>>2]=b,b=l[a+4>>2],l[i+584>>2]=l[a>>2],l[i+588>>2]=b,l[i+580>>2]=Xb(15&v[i+584|0]),l[i+576>>2]=f,Yb(i+888|0,15282,i+576|0),f=l[i+900>>2],l[i+568>>2]=l[i+896>>2],l[i+572>>2]=f,f=l[i+892>>2],l[i+560>>2]=l[i+888>>2],l[i+564>>2]=f,Hb(i+1024|0,i+560|0)):(f=l[r+12>>2],l[i+552>>2]=l[r+8>>2],l[i+556>>2]=f,f=l[r+4>>2],l[i+544>>2]=l[r>>2],l[i+548>>2]=f,f=Xb(15&v[i+544|0]),b=l[a+12>>2],l[i+536>>2]=l[a+8>>2],l[i+540>>2]=b,b=l[a+4>>2],l[i+528>>2]=l[a>>2],l[i+532>>2]=b,l[i+516>>2]=Gb(i+528|0),l[i+512>>2]=f,Yb(i+904|0,14857,i+512|0),f=l[i+916>>2],l[i+504>>2]=l[i+912>>2],l[i+508>>2]=f,f=l[i+908>>2],l[i+496>>2]=l[i+904>>2],l[i+500>>2]=f,Hb(i+1024|0,i+496|0)),b=l[4+(f=i+1032|0)>>2],l[e+8>>2]=l[f>>2],l[e+12>>2]=b,f=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=f,e=l[r+12>>2],l[i+488>>2]=l[r+8>>2],l[i+492>>2]=e,e=l[r+4>>2],l[i+480>>2]=l[r>>2],l[i+484>>2]=e,zb(i+480|0),e=l[a+12>>2],l[i+472>>2]=l[a+8>>2],l[i+476>>2]=e,e=l[a+4>>2],l[i+464>>2]=l[a>>2],l[i+468>>2]=e,zb(i+464|0)):(f=l[r+12>>2],l[i+456>>2]=l[r+8>>2],l[i+460>>2]=f,f=l[r+4>>2],l[i+448>>2]=l[r>>2],l[i+452>>2]=f,zb(i+448|0),r=l[a+12>>2],l[i+440>>2]=l[a+8>>2],l[i+444>>2]=r,r=l[a+4>>2],l[i+432>>2]=l[a>>2],l[i+436>>2]=r,zb(i+432|0),f=l[10947],l[8+(a=r=i+1024|0)>>2]=l[10946],l[a+12>>2]=f,a=l[10945],l[r>>2]=l[10944],l[r+4>>2]=a,a=l[4+(r=i+1032|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=r)):(f=l[r+12>>2],l[i+424>>2]=l[r+8>>2],l[i+428>>2]=f,f=l[r+4>>2],l[i+416>>2]=l[r>>2],l[i+420>>2]=f,r=l[a+12>>2],l[i+408>>2]=l[a+8>>2],l[i+412>>2]=r,r=l[a+4>>2],l[i+400>>2]=l[a>>2],l[i+404>>2]=r,function(e,r,a){var i,f,b,n,s=0,t=0,c=0,o=0,u=0,d=0,h=0,w=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,A=0,x=0,T=0,R=0,O=0,I=0,z=0,N=0,j=0,U=0,B=0;ne=i=ne-416|0,l[e>>2]=6,l[e+4>>2]=0,t=Bb(272),l[t+8>>2]=16,l[t>>2]=1,l[t+4>>2]=0,l[e+8>>2]=t,b=v[0|r],t=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[i+403|0]=t,k[i+404|0]=t>>>8,k[i+405|0]=t>>>16,k[i+406|0]=t>>>24,l[i+400>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,n=l[r+12>>2],f=l[r+8>>2];r:if(!((t=15&b)>>>0>7)){switch(t-1|0){default:if(!f)break r;break;case 0:case 1:case 2:case 3:break r;case 4:case 5:case 6:}l[f>>2]=l[f>>2]+1}if(s=v[i+403|0]|v[i+404|0]<<8|v[i+405|0]<<16|v[i+406|0]<<24,k[i+355|0]=s,k[i+356|0]=s>>>8,k[i+357|0]=s>>>16,k[i+358|0]=s>>>24,l[i+352>>2]=l[i+400>>2],k[i+400|0]=b,s=l[i+352>>2],k[i+401|0]=s,k[i+402|0]=s>>>8,k[i+403|0]=s>>>16,k[i+404|0]=s>>>24,s=v[i+355|0]|v[i+356|0]<<8|v[i+357|0]<<16|v[i+358|0]<<24,k[i+404|0]=s,k[i+405|0]=s>>>8,k[i+406|0]=s>>>16,k[i+407|0]=s>>>24,l[i+412>>2]=n,l[i+408>>2]=f,6==(0|t))r:{if(t=l[i+412>>2],l[i+216>>2]=l[i+408>>2],l[i+220>>2]=t,t=l[i+404>>2],l[i+208>>2]=l[i+400>>2],l[i+212>>2]=t,S=l[i+404>>2],zb(i+208|0),(0|S)>=1)for(o=i+400|1,R=i+360|1,O=i+272|1,I=i+288|1,z=i+224|1,N=i+240|1,j=i+304|1,U=i+328|1,B=(F=15&b)>>>0>7;;){t=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[i+379|0]=t,k[i+380|0]=t>>>8,k[i+381|0]=t>>>16,k[i+382|0]=t>>>24,l[i+376>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24;a:if(!B){switch(F-1|0){default:if(!f)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[f>>2]=l[f>>2]+1}k[i+328|0]=b,t=U,s=v[i+379|0]|v[i+380|0]<<8|v[i+381|0]<<16|v[i+382|0]<<24,k[t+3|0]=s,k[t+4|0]=s>>>8,k[t+5|0]=s>>>16,k[t+6|0]=s>>>24,s=l[i+376>>2],k[0|t]=s,k[t+1|0]=s>>>8,k[t+2|0]=s>>>16,k[t+3|0]=s>>>24,l[i+340>>2]=n,l[i+336>>2]=f,t=l[i+340>>2],l[i+200>>2]=l[i+336>>2],l[i+204>>2]=t,t=l[i+332>>2],l[i+192>>2]=l[i+328>>2],l[i+196>>2]=t,Kb(i+400|0,i+192|0,y),l[i+344>>2]=v[0|o]|v[o+1|0]<<8|v[o+2|0]<<16|v[o+3|0]<<24,t=v[o+3|0]|v[o+4|0]<<8|v[o+5|0]<<16|v[o+6|0]<<24,k[i+347|0]=t,k[i+348|0]=t>>>8,k[i+349|0]=t>>>16,k[i+350|0]=t>>>24,A=v[i+400|0],E=l[i+408>>2],u=l[i+412>>2],D=v[0|a],t=v[a+4|0]|v[a+5|0]<<8|v[a+6|0]<<16|v[a+7|0]<<24,k[i+403|0]=t,k[i+404|0]=t>>>8,k[i+405|0]=t>>>16,k[i+406|0]=t>>>24,l[i+400>>2]=v[a+1|0]|v[a+2|0]<<8|v[a+3|0]<<16|v[a+4|0]<<24,x=l[a+12>>2],w=l[a+8>>2];a:if(!((t=15&D)>>>0>7)){switch(t-1|0){default:if(!w)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[w>>2]=l[w>>2]+1}if(s=v[i+403|0]|v[i+404|0]<<8|v[i+405|0]<<16|v[i+406|0]<<24,k[i+323|0]=s,k[i+324|0]=s>>>8,k[i+325|0]=s>>>16,k[i+326|0]=s>>>24,l[i+320>>2]=l[i+400>>2],k[i+400|0]=D,s=v[i+323|0]|v[i+324|0]<<8|v[i+325|0]<<16|v[i+326|0]<<24,k[o+3|0]=s,k[o+4|0]=s>>>8,k[o+5|0]=s>>>16,k[o+6|0]=s>>>24,s=l[i+320>>2],k[0|o]=s,k[o+1|0]=s>>>8,k[o+2|0]=s>>>16,k[o+3|0]=s>>>24,l[i+412>>2]=x,l[i+408>>2]=w,6!=(0|t))break r;if(t=l[i+412>>2],l[i+184>>2]=l[i+408>>2],l[i+188>>2]=t,t=l[i+404>>2],l[i+176>>2]=l[i+400>>2],l[i+180>>2]=t,T=l[i+404>>2],zb(i+176|0),!((0|T)<=0)){for(p=15&A,t=-1,g=0;;){s=v[a+4|0]|v[a+5|0]<<8|v[a+6|0]<<16|v[a+7|0]<<24,k[i+379|0]=s,k[i+380|0]=s>>>8,k[i+381|0]=s>>>16,k[i+382|0]=s>>>24,l[i+376>>2]=v[a+1|0]|v[a+2|0]<<8|v[a+3|0]<<16|v[a+4|0]<<24,l[w>>2]=l[w>>2]+1,k[i+304|0]=D,s=j,d=v[i+379|0]|v[i+380|0]<<8|v[i+381|0]<<16|v[i+382|0]<<24,k[s+3|0]=d,k[s+4|0]=d>>>8,k[s+5|0]=d>>>16,k[s+6|0]=d>>>24,d=l[i+376>>2],k[0|s]=d,k[s+1|0]=d>>>8,k[s+2|0]=d>>>16,k[s+3|0]=d>>>24,l[i+316>>2]=x,l[i+312>>2]=w,s=l[i+316>>2],l[i+168>>2]=l[i+312>>2],l[i+172>>2]=s,s=l[i+308>>2],l[i+160>>2]=l[i+304>>2],l[i+164>>2]=s,Kb(i+400|0,i+160|0,g),l[i+360>>2]=v[0|o]|v[o+1|0]<<8|v[o+2|0]<<16|v[o+3|0]<<24,s=v[o+3|0]|v[o+4|0]<<8|v[o+5|0]<<16|v[o+6|0]<<24,k[i+363|0]=s,k[i+364|0]=s>>>8,k[i+365|0]=s>>>16,k[i+366|0]=s>>>24,_=v[i+400|0],h=l[i+408>>2],d=l[i+412>>2];a:{i:{if(!g){s=v[i+347|0]|v[i+348|0]<<8|v[i+349|0]<<16|v[i+350|0]<<24,k[i+403|0]=s,k[i+404|0]=s>>>8,k[i+405|0]=s>>>16,k[i+406|0]=s>>>24,l[i+400>>2]=l[i+344>>2];f:if(!(p>>>0>7)){switch(p-1|0){default:if(!E)break f;break;case 0:case 1:case 2:case 3:break f;case 4:case 5:case 6:}l[E>>2]=l[E>>2]+1}k[i+288|0]=A,s=I,c=v[i+403|0]|v[i+404|0]<<8|v[i+405|0]<<16|v[i+406|0]<<24,k[s+3|0]=c,k[s+4|0]=c>>>8,k[s+5|0]=c>>>16,k[s+6|0]=c>>>24,c=l[i+400>>2],k[0|s]=c,k[s+1|0]=c>>>8,k[s+2|0]=c>>>16,k[s+3|0]=c>>>24,l[i+300>>2]=u,l[i+296>>2]=E,s=v[i+363|0]|v[i+364|0]<<8|v[i+365|0]<<16|v[i+366|0]<<24,k[i+403|0]=s,k[i+404|0]=s>>>8,k[i+405|0]=s>>>16,k[i+406|0]=s>>>24,l[i+400>>2]=l[i+360>>2];f:if(!((s=15&_)>>>0>7)){switch(s-1|0){default:if(!h)break f;break;case 0:case 1:case 2:case 3:break f;case 4:case 5:case 6:}l[h>>2]=l[h>>2]+1}if(k[i+272|0]=_,s=O,c=v[i+403|0]|v[i+404|0]<<8|v[i+405|0]<<16|v[i+406|0]<<24,k[s+3|0]=c,k[s+4|0]=c>>>8,k[s+5|0]=c>>>16,k[s+6|0]=c>>>24,c=l[i+400>>2],k[0|s]=c,k[s+1|0]=c>>>8,k[s+2|0]=c>>>16,k[s+3|0]=c>>>24,s=l[i+300>>2],l[i+104>>2]=l[i+296>>2],l[i+108>>2]=s,l[i+284>>2]=d,l[i+280>>2]=h,s=l[i+284>>2],l[i+88>>2]=l[i+280>>2],l[i+92>>2]=s,s=l[i+292>>2],l[i+96>>2]=l[i+288>>2],l[i+100>>2]=s,s=l[i+276>>2],l[i+80>>2]=l[i+272>>2],l[i+84>>2]=s,gn(i+96|0,i+80|0))break i;t=-1;break a}l[i+400>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,s=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[i+403|0]=s,k[i+404|0]=s>>>8,k[i+405|0]=s>>>16,k[i+406|0]=s>>>24,l[f>>2]=l[f>>2]+1,k[i+240|0]=b,s=N,c=v[i+403|0]|v[i+404|0]<<8|v[i+405|0]<<16|v[i+406|0]<<24,k[s+3|0]=c,k[s+4|0]=c>>>8,k[s+5|0]=c>>>16,k[s+6|0]=c>>>24,c=l[i+400>>2],k[0|s]=c,k[s+1|0]=c>>>8,k[s+2|0]=c>>>16,k[s+3|0]=c>>>24,l[i+252>>2]=n,l[i+248>>2]=f,s=l[i+252>>2],l[i+152>>2]=l[i+248>>2],l[i+156>>2]=s,s=l[i+244>>2],l[i+144>>2]=l[i+240>>2],l[i+148>>2]=s,Kb(i+256|0,i+144|0,g+y|0),s=v[i+363|0]|v[i+364|0]<<8|v[i+365|0]<<16|v[i+366|0]<<24,k[i+403|0]=s,k[i+404|0]=s>>>8,k[i+405|0]=s>>>16,k[i+406|0]=s>>>24,l[i+400>>2]=l[i+360>>2];f:if(!((s=15&_)>>>0>7)){switch(s-1|0){default:if(!h)break f;break;case 0:case 1:case 2:case 3:break f;case 4:case 5:case 6:}l[h>>2]=l[h>>2]+1}if(k[i+224|0]=_,s=z,c=v[i+403|0]|v[i+404|0]<<8|v[i+405|0]<<16|v[i+406|0]<<24,k[s+3|0]=c,k[s+4|0]=c>>>8,k[s+5|0]=c>>>16,k[s+6|0]=c>>>24,c=l[i+400>>2],k[0|s]=c,k[s+1|0]=c>>>8,k[s+2|0]=c>>>16,k[s+3|0]=c>>>24,s=l[i+268>>2],l[i+136>>2]=l[i+264>>2],l[i+140>>2]=s,l[i+236>>2]=d,l[i+232>>2]=h,s=l[i+236>>2],l[i+120>>2]=l[i+232>>2],l[i+124>>2]=s,s=l[i+260>>2],l[i+128>>2]=l[i+256>>2],l[i+132>>2]=s,s=l[i+228>>2],l[i+112>>2]=l[i+224>>2],l[i+116>>2]=s,!gn(i+128|0,i+112|0)){t=-1;break a}}t=-1==(0|t)?g?t:y:t}if((0|T)==(0|(g=g+1|0)))break}if(!((0|t)<=-1)){m[i+384>>3]=0|t,l[i+376>>2]=4,l[i+380>>2]=0,t=l[e+12>>2],s=l[e+8>>2],l[i+368>>2]=s,l[i+372>>2]=t,u=l[e+4>>2],t=l[e>>2],l[i+360>>2]=t,l[i+364>>2]=u,u=R,l[i+400>>2]=v[0|u]|v[u+1|0]<<8|v[u+2|0]<<16|v[u+3|0]<<24,u=v[u+3|0]|v[u+4|0]<<8|v[u+5|0]<<16|v[u+6|0]<<24,k[i+403|0]=u,k[i+404|0]=u>>>8,k[i+405|0]=u>>>16,k[i+406|0]=u>>>24,u=l[i+372>>2];a:if(!((d=15&t)>>>0>7)){switch(d-1|0){default:if(!s)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[s>>2]=l[s>>2]+1}if(p=v[i+403|0]|v[i+404|0]<<8|v[i+405|0]<<16|v[i+406|0]<<24,k[i+395|0]=p,k[i+396|0]=p>>>8,k[i+397|0]=p>>>16,k[i+398|0]=p>>>24,l[i+392>>2]=l[i+400>>2],k[i+400|0]=t,t=v[i+395|0]|v[i+396|0]<<8|v[i+397|0]<<16|v[i+398|0]<<24,k[o+3|0]=t,k[o+4|0]=t>>>8,k[o+5|0]=t>>>16,k[o+6|0]=t>>>24,t=l[i+392>>2],k[0|o]=t,k[o+1|0]=t>>>8,k[o+2|0]=t>>>16,k[o+3|0]=t>>>24,l[i+412>>2]=u,l[i+408>>2]=s,6!=(0|d))break r;t=l[i+412>>2],l[i+72>>2]=l[i+408>>2],l[i+76>>2]=t,t=l[i+404>>2],l[i+64>>2]=l[i+400>>2],l[i+68>>2]=t,s=l[i+404>>2],zb(i- -64|0),t=l[i+372>>2],l[i+56>>2]=l[i+368>>2],l[i+60>>2]=t,t=l[i+388>>2],l[i+40>>2]=l[i+384>>2],l[i+44>>2]=t,t=l[i+364>>2],l[i+48>>2]=l[i+360>>2],l[i+52>>2]=t,t=l[i+380>>2],l[i+32>>2]=l[i+376>>2],l[i+36>>2]=t,Dn(e,i+48|0,s,i+32|0)}}if((0|S)==(0|(y=y+1|0)))break}return e=l[r+12>>2],l[i+24>>2]=l[r+8>>2],l[i+28>>2]=e,e=l[r+4>>2],l[i+16>>2]=l[r>>2],l[i+20>>2]=e,zb(i+16|0),e=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=e,e=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=e,zb(i),void(ne=i+416|0)}P(18173,17172,326,43311),M()}(i+1024|0,i+416|0,i+400|0),a=l[4+(r=i+1032|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=r);else{if(f=l[r+12>>2],l[i+392>>2]=l[r+8>>2],l[i+396>>2]=f,f=l[r+4>>2],l[i+384>>2]=l[r>>2],l[i+388>>2]=f,Nb(i+952|0,i+384|0),f=l[i+964>>2],l[i+376>>2]=l[i+960>>2],l[i+380>>2]=f,f=l[i+956>>2],l[i+368>>2]=l[i+952>>2],l[i+372>>2]=f,f=l[a+12>>2],l[i+360>>2]=l[a+8>>2],l[i+364>>2]=f,f=l[a+4>>2],l[i+352>>2]=l[a>>2],l[i+356>>2]=f,ek(i+368|0,i+352|0,i+1004|0,i+1e3|0)){a=l[r+12>>2],l[i+344>>2]=l[r+8>>2],l[i+348>>2]=a,a=l[r+4>>2],l[i+336>>2]=l[r>>2],l[i+340>>2]=a,function(e,r,a,i){var f,b=0,n=0,s=0,t=0,c=0;ne=f=ne-144|0;r:{if(5==(15&(n=v[0|r]))){if(b=l[r+12>>2],c=l[r+8>>2],l[c>>2]=l[c>>2]+1,k[f+128|0]=n,s=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,n=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,l[f+140>>2]=b,l[f+136>>2]=c,k[f+132|0]=s,k[f+133|0]=s>>>8,k[f+134|0]=s>>>16,k[f+135|0]=s>>>24,k[f+129|0]=n,k[f+130|0]=n>>>8,k[f+131|0]=n>>>16,k[f+132|0]=n>>>24,n=l[c+8>>2],b=l[f+140>>2],l[f+80>>2]=l[f+136>>2],l[f+84>>2]=b,b=l[f+132>>2],l[f+72>>2]=l[f+128>>2],l[f+76>>2]=b,zb(f+72|0),a=(b=(0|(a=(n=(0|(s=((t=n>>>1)&a>>31)+a|0))<0)?0:s))>(0|t))?t:a,(0|(s=n?a:b?a:s))<0)break r;if(n=a,i=(a=(0|(b=(t&i>>31)+i|0))>(0|t))?s:n,(0|s)>(0|(n=(0|(a=a?t:b))<(0|i)?i:a))|(0|n)>(0|t))break r;a=c+16|0;a:{if((0|s)>=1)for(b=16+(t+c|0)|0,i=0;;){if(!(a=Vk(a,b,f+124|0))){a=l[r+12>>2],l[f+16>>2]=l[r+8>>2],l[f+20>>2]=a,a=l[r+4>>2],l[f+8>>2]=l[r>>2],l[f+12>>2]=a,zb(f+8|0),r=Bb(33),l[r>>2]=1,l[r+16>>2]=0,l[r+20>>2]=0,l[r+8>>2]=0,l[r+12>>2]=16,l[r+24>>2]=0,l[r+28>>2]=0,l[e+8>>2]=r,l[e>>2]=5,l[e+4>>2]=0;break a}if(-1==l[f+124>>2]){if(a=l[r+12>>2],l[f+32>>2]=l[r+8>>2],l[f+36>>2]=a,a=l[r+4>>2],l[f+24>>2]=l[r>>2],l[f+28>>2]=a,zb(f+24|0),sb(21858,21878)?(r=Bb(37),l[r>>2]=1,l[r+8>>2]=40,l[r+12>>2]=20,i=v[21862]|v[21863]<<8|v[21864]<<16|v[21865]<<24,a=v[21858]|v[21859]<<8|v[21860]<<16|v[21861]<<24,k[r+16|0]=a,k[r+17|0]=a>>>8,k[r+18|0]=a>>>16,k[r+19|0]=a>>>24,k[r+20|0]=i,k[r+21|0]=i>>>8,k[r+22|0]=i>>>16,k[r+23|0]=i>>>24,i=v[21870]|v[21871]<<8|v[21872]<<16|v[21873]<<24,a=v[21866]|v[21867]<<8|v[21868]<<16|v[21869]<<24,k[r+24|0]=a,k[r+25|0]=a>>>8,k[r+26|0]=a>>>16,k[r+27|0]=a>>>24,k[r+28|0]=i,k[r+29|0]=i>>>8,k[r+30|0]=i>>>16,k[r+31|0]=i>>>24,a=v[21874]|v[21875]<<8|v[21876]<<16|v[21877]<<24,k[r+32|0]=a,k[r+33|0]=a>>>8,k[r+34|0]=a>>>16,k[r+35|0]=a>>>24,k[r+36|0]=0,l[f+112>>2]=r,l[f+104>>2]=5,l[f+108>>2]=0,r=5):(ob(f+104|0,21858,20),r=v[f+104|0]),a=v[f+109|0]|v[f+110|0]<<8|v[f+111|0]<<16|v[f+112|0]<<24,l[f+128>>2]=v[f+105|0]|v[f+106|0]<<8|v[f+107|0]<<16|v[f+108|0]<<24,l[f+132>>2]=a,i=v[f+116|0]|v[f+117|0]<<8|v[f+118|0]<<16|v[f+119|0]<<24,a=v[f+112|0]|v[f+113|0]<<8|v[f+114|0]<<16|v[f+115|0]<<24,k[f+135|0]=a,k[f+136|0]=a>>>8,k[f+137|0]=a>>>16,k[f+138|0]=a>>>24,k[f+139|0]=i,k[f+140|0]=i>>>8,k[f+141|0]=i>>>16,k[f+142|0]=i>>>24,1==(15&r)){l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0;break a}a=Bb(24),k[a+8|0]=r,l[a>>2]=1,i=l[f+132>>2],r=l[f+128>>2],k[a+9|0]=r,k[a+10|0]=r>>>8,k[a+11|0]=r>>>16,k[a+12|0]=r>>>24,k[a+13|0]=i,k[a+14|0]=i>>>8,k[a+15|0]=i>>>16,k[a+16|0]=i>>>24,i=v[f+139|0]|v[f+140|0]<<8|v[f+141|0]<<16|v[f+142|0]<<24,r=v[f+135|0]|v[f+136|0]<<8|v[f+137|0]<<16|v[f+138|0]<<24,k[a+16|0]=r,k[a+17|0]=r>>>8,k[a+18|0]=r>>>16,k[a+19|0]=r>>>24,k[a+20|0]=i,k[a+21|0]=i>>>8,k[a+22|0]=i>>>16,k[a+23|0]=i>>>24,l[e+8>>2]=a,l[e>>2]=0,l[e+4>>2]=0;break a}if((0|s)==(0|(i=i+1|0)))break}i=a;i:{f:{k:{b:if(!(!a|(0|s)>=(0|n)))for(b=16+(t+c|0)|0;;){if(!(i=Vk(i,b,f+124|0))){i=b;break b}if(-1==l[f+124>>2])break k;if(!((0|(s=s+1|0))<(0|n)))break}if(b=i-a|0,!sb(a,i))break f;i=Bb(b+17|0),l[i+12>>2]=b,l[i>>2]=1,l[i+8>>2]=b<<1,a&&qb(i+16|0,a,b),k[16+(i+b|0)|0]=0,l[f+136>>2]=i,l[f+128>>2]=5,l[f+132>>2]=0;break i}if(a=l[r+12>>2],l[(i=f- -64|0)>>2]=l[r+8>>2],l[i+4>>2]=a,a=l[r+4>>2],l[f+56>>2]=l[r>>2],l[f+60>>2]=a,zb(f+56|0),sb(21858,21878)?(r=Bb(37),l[r>>2]=1,l[r+8>>2]=40,l[r+12>>2]=20,i=v[21862]|v[21863]<<8|v[21864]<<16|v[21865]<<24,a=v[21858]|v[21859]<<8|v[21860]<<16|v[21861]<<24,k[r+16|0]=a,k[r+17|0]=a>>>8,k[r+18|0]=a>>>16,k[r+19|0]=a>>>24,k[r+20|0]=i,k[r+21|0]=i>>>8,k[r+22|0]=i>>>16,k[r+23|0]=i>>>24,i=v[21870]|v[21871]<<8|v[21872]<<16|v[21873]<<24,a=v[21866]|v[21867]<<8|v[21868]<<16|v[21869]<<24,k[r+24|0]=a,k[r+25|0]=a>>>8,k[r+26|0]=a>>>16,k[r+27|0]=a>>>24,k[r+28|0]=i,k[r+29|0]=i>>>8,k[r+30|0]=i>>>16,k[r+31|0]=i>>>24,a=v[21874]|v[21875]<<8|v[21876]<<16|v[21877]<<24,k[r+32|0]=a,k[r+33|0]=a>>>8,k[r+34|0]=a>>>16,k[r+35|0]=a>>>24,k[r+36|0]=0,l[f+96>>2]=r,l[f+88>>2]=5,l[f+92>>2]=0,r=5):(ob(f+88|0,21858,20),r=v[f+88|0]),a=v[f+93|0]|v[f+94|0]<<8|v[f+95|0]<<16|v[f+96|0]<<24,l[f+128>>2]=v[f+89|0]|v[f+90|0]<<8|v[f+91|0]<<16|v[f+92|0]<<24,l[f+132>>2]=a,i=v[f+100|0]|v[f+101|0]<<8|v[f+102|0]<<16|v[f+103|0]<<24,a=v[f+96|0]|v[f+97|0]<<8|v[f+98|0]<<16|v[f+99|0]<<24,k[f+135|0]=a,k[f+136|0]=a>>>8,k[f+137|0]=a>>>16,k[f+138|0]=a>>>24,k[f+139|0]=i,k[f+140|0]=i>>>8,k[f+141|0]=i>>>16,k[f+142|0]=i>>>24,1==(15&r)){l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0;break a}a=Bb(24),k[a+8|0]=r,l[a>>2]=1,i=l[f+132>>2],r=l[f+128>>2],k[a+9|0]=r,k[a+10|0]=r>>>8,k[a+11|0]=r>>>16,k[a+12|0]=r>>>24,k[a+13|0]=i,k[a+14|0]=i>>>8,k[a+15|0]=i>>>16,k[a+16|0]=i>>>24,i=v[f+139|0]|v[f+140|0]<<8|v[f+141|0]<<16|v[f+142|0]<<24,r=v[f+135|0]|v[f+136|0]<<8|v[f+137|0]<<16|v[f+138|0]<<24,k[a+16|0]=r,k[a+17|0]=r>>>8,k[a+18|0]=r>>>16,k[a+19|0]=r>>>24,k[a+20|0]=i,k[a+21|0]=i>>>8,k[a+22|0]=i>>>16,k[a+23|0]=i>>>24,l[e+8>>2]=a,l[e>>2]=0,l[e+4>>2]=0;break a}ob(f+128|0,a,b)}a=l[f+132>>2],l[e>>2]=l[f+128>>2],l[e+4>>2]=a,a=l[f+140>>2],l[e+8>>2]=l[f+136>>2],l[e+12>>2]=a,e=l[r+12>>2],l[f+48>>2]=l[r+8>>2],l[f+52>>2]=e,e=l[r+4>>2],l[f+40>>2]=l[r>>2],l[f+44>>2]=e,zb(f+40|0)}return void(ne=f+144|0)}P(19611,17172,750,43536),M()}P(21625,17172,759,43536),M()}(i+1024|0,i+336|0,l[i+1004>>2],l[i+1e3>>2]),a=l[4+(r=i+1032|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=r;break e}Yb(i+936|0,14330,0),a=l[i+948>>2],l[i+328>>2]=l[i+944>>2],l[i+332>>2]=a,a=l[i+940>>2],l[i+320>>2]=l[i+936>>2],l[i+324>>2]=a,Hb(i+1024|0,i+320|0),f=l[4+(a=i+1032|0)>>2],l[e+8>>2]=l[a>>2],l[e+12>>2]=f,a=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=a,e=l[r+12>>2],l[i+312>>2]=l[r+8>>2],l[i+316>>2]=e,e=l[r+4>>2],l[i+304>>2]=l[r>>2],l[i+308>>2]=e,zb(i+304|0)}else{if(f=l[r+12>>2],l[i+296>>2]=l[r+8>>2],l[i+300>>2]=f,f=l[r+4>>2],l[i+288>>2]=l[r>>2],l[i+292>>2]=f,Nb(i+984|0,i+288|0),f=l[i+996>>2],l[i+280>>2]=l[i+992>>2],l[i+284>>2]=f,f=l[i+988>>2],l[i+272>>2]=l[i+984>>2],l[i+276>>2]=f,f=l[a+12>>2],l[i+264>>2]=l[a+8>>2],l[i+268>>2]=f,f=l[a+4>>2],l[i+256>>2]=l[a>>2],l[i+260>>2]=f,ek(i+272|0,i+256|0,i+1004|0,i+1e3|0)){a=l[r+12>>2],l[i+248>>2]=l[r+8>>2],l[i+252>>2]=a,a=l[r+4>>2],l[i+240>>2]=l[r>>2],l[i+244>>2]=a,eb(i+1024|0,i+240|0,l[i+1004>>2],l[i+1e3>>2]),a=l[4+(r=i+1032|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=r;break e}a=l[r+12>>2],l[i+232>>2]=l[r+8>>2],l[i+236>>2]=a,a=l[r+4>>2],l[i+224>>2]=l[r>>2],l[i+228>>2]=a,zb(i+224|0),Yb(i+968|0,14031,0),r=l[i+980>>2],l[i+216>>2]=l[i+976>>2],l[i+220>>2]=r,r=l[i+972>>2],l[i+208>>2]=l[i+968>>2],l[i+212>>2]=r,Hb(i+1024|0,i+208|0),a=l[4+(r=i+1032|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=r}else{if(f=l[a+12>>2],l[i+200>>2]=l[a+8>>2],l[i+204>>2]=f,f=l[a+4>>2],l[i+192>>2]=l[a>>2],l[i+196>>2]=f,function(e){var r=0;return e=4==(15&v[0|e])?((r=m[e+8>>3])>2147483647^1)&r==r&(r<-2147483648^-1)&r==+(0|(e=g(r)<2147483648?~~r:-2147483648)):0}(i+192|0)){if(f=l[a+12>>2],l[i+184>>2]=l[a+8>>2],l[i+188>>2]=f,f=l[a+4>>2],l[i+176>>2]=l[a>>2],l[i+180>>2]=f,n=Wb(i+176|0),(0|(a=g(n)<2147483648?~~n:-2147483648))<=-1&&(f=l[r+12>>2],l[i+168>>2]=l[r+8>>2],l[i+172>>2]=f,f=l[r+4>>2],l[i+160>>2]=l[r>>2],l[i+164>>2]=f,Nb(i+1008|0,i+160|0),f=l[i+1020>>2],l[i+152>>2]=l[i+1016>>2],l[i+156>>2]=f,f=l[i+1012>>2],l[i+144>>2]=l[i+1008>>2],l[i+148>>2]=f,a=Zb(i+144|0)+a|0),f=l[r+12>>2],l[i+136>>2]=l[r+8>>2],l[i+140>>2]=f,f=l[r+4>>2],l[i+128>>2]=l[r>>2],l[i+132>>2]=f,Kb(i+1024|0,i+128|0,a),f=l[4+(a=r=i+1032|0)>>2],l[e+8>>2]=l[a>>2],l[e+12>>2]=f,a=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=a,a=l[e+12>>2],l[i+120>>2]=l[e+8>>2],l[i+124>>2]=a,a=l[e+4>>2],l[i+112>>2]=l[e>>2],l[i+116>>2]=a,15&v[i+112|0])break e;a=l[e+12>>2],l[i+104>>2]=l[e+8>>2],l[i+108>>2]=a,a=l[e+4>>2],l[i+96>>2]=l[e>>2],l[i+100>>2]=a,zb(i+96|0),b=l[10947],l[8+(a=i+1024|0)>>2]=l[10946],l[a+12>>2]=b,f=l[10945],l[a>>2]=l[10944],l[a+4>>2]=f,a=l[r+4>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=r;break e}f=l[r+12>>2],l[i+88>>2]=l[r+8>>2],l[i+92>>2]=f,f=l[r+4>>2],l[i+80>>2]=l[r>>2],l[i+84>>2]=f,zb(i+80|0),r=l[a+12>>2],l[i+72>>2]=l[a+8>>2],l[i+76>>2]=r,r=l[a+4>>2],l[i+64>>2]=l[a>>2],l[i+68>>2]=r,zb(i- -64|0),f=l[10947],l[8+(a=r=i+1024|0)>>2]=l[10946],l[a+12>>2]=f,a=l[10945],l[r>>2]=l[10944],l[r+4>>2]=a,a=l[4+(r=i+1032|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=r}else{if(f=l[r+12>>2],l[i+56>>2]=l[r+8>>2],l[i+60>>2]=f,f=l[r+4>>2],l[i+48>>2]=l[r>>2],l[i+52>>2]=f,r=l[a+12>>2],l[i+40>>2]=l[a+8>>2],l[i+44>>2]=r,r=l[a+4>>2],l[i+32>>2]=l[a>>2],l[i+36>>2]=r,dn(i+1024|0,i+48|0,i+32|0),f=l[4+(a=r=i+1032|0)>>2],l[e+8>>2]=l[a>>2],l[e+12>>2]=f,a=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=a,a=l[e+12>>2],l[i+24>>2]=l[e+8>>2],l[i+28>>2]=a,a=l[e+4>>2],l[i+16>>2]=l[e>>2],l[i+20>>2]=a,15&v[i+16|0])break e;a=l[e+12>>2],l[i+8>>2]=l[e+8>>2],l[i+12>>2]=a,a=l[e+4>>2],l[i>>2]=l[e>>2],l[i+4>>2]=a,zb(i),b=l[10947],l[8+(a=i+1024|0)>>2]=l[10946],l[a+12>>2]=b,f=l[10945],l[a>>2]=l[10944],l[a+4>>2]=f,a=l[r+4>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[i+1028>>2],l[e>>2]=l[i+1024>>2],l[e+4>>2]=r}ne=i+1040|0}function ak(){var e;(e=l[82342])&&f[e](0),cn(14e3,30,1,l[75398]),B(),M()}function ik(e,r){var a,i=0,f=0;ne=a=ne-32|0,i=v[0|e];e:if(!((0|i)!=v[0|r]|d[e+2>>1]!=d[r+2>>1]|l[e+4>>2]!=l[r+4>>2]))if((f=(15&i)-4|0)>>>0>3)f=1;else{r:switch(f-1|0){case 0:case 1:case 2:f=l[e+8>>2]==l[r+8>>2];break e}f=l[e+8>>2]==l[r+8>>2]&l[e+12>>2]==l[r+12>>2]}return i=l[e+12>>2],l[a+24>>2]=l[e+8>>2],l[a+28>>2]=i,i=l[e+4>>2],l[a+16>>2]=l[e>>2],l[a+20>>2]=i,zb(a+16|0),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a),ne=a+32|0,f}function fk(e,r,a){var i,f=0,b=0;ne=i=ne-16|0;e:{r:{if(-1==(0|a))r=0;else{if((0|a)<0)break e;if(7!=(15&v[0|r]))break r;if(l[r+4>>2]<=(0|a))break e;r=8+(l[r+8>>2]+w(a,40)|0)|0}f=v[r+24|0],a=v[r+28|0]|v[r+29|0]<<8|v[r+30|0]<<16|v[r+31|0]<<24,k[i+11|0]=a,k[i+12|0]=a>>>8,k[i+13|0]=a>>>16,k[i+14|0]=a>>>24,l[i+8>>2]=v[r+25|0]|v[r+26|0]<<8|v[r+27|0]<<16|v[r+28|0]<<24,b=v[r+36|0]|v[r+37|0]<<8|v[r+38|0]<<16|v[r+39|0]<<24,r=v[r+32|0]|v[r+33|0]<<8|v[r+34|0]<<16|v[r+35|0]<<24;a:if(!((a=15&f)>>>0>7)){i:switch(a-1|0){default:if(!r)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[r>>2]=l[r>>2]+1}return k[0|e]=f,a=l[i+8>>2],k[e+1|0]=a,k[e+2|0]=a>>>8,k[e+3|0]=a>>>16,k[e+4|0]=a>>>24,a=v[i+11|0]|v[i+12|0]<<8|v[i+13|0]<<16|v[i+14|0]<<24,k[e+4|0]=a,k[e+5|0]=a>>>8,k[e+6|0]=a>>>16,k[e+7|0]=a>>>24,l[e+12>>2]=b,l[e+8>>2]=r,void(ne=i+16|0)}P(26604,17172,912,44048),M()}P(28228,17172,925,44064),M()}function kk(e,r){var a,i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0;ne=a=ne-96|0;e:{r:{a:{i:{if(7==(15&v[0|e])){if(5!=(15&(s=v[0|r])))break i;if(n=v[(i=r)+5|0]|v[i+6|0]<<8|v[i+7|0]<<16|v[i+8|0]<<24,l[a+64>>2]=v[i+1|0]|v[i+2|0]<<8|v[i+3|0]<<16|v[i+4|0]<<24,l[a+68>>2]=n,n=v[i+12|0]|v[i+13|0]<<8|v[i+14|0]<<16|v[i+15|0]<<24,f=v[i+8|0]|v[i+9|0]<<8|v[i+10|0]<<16|v[i+11|0]<<24,k[a+71|0]=f,k[a+72|0]=f>>>8,k[a+73|0]=f>>>16,k[a+74|0]=f>>>24,k[a+75|0]=n,k[a+76|0]=n>>>8,k[a+77|0]=n>>>16,k[a+78|0]=n>>>24,o=l[e+8>>2],n=l[e+4>>2],k[a+80|0]=s,f=v[i+12|0]|v[i+13|0]<<8|v[i+14|0]<<16|v[i+15|0]<<24,b=v[i+8|0]|v[i+9|0]<<8|v[i+10|0]<<16|v[i+11|0]<<24,k[a+88|0]=b,k[a+89|0]=b>>>8,k[a+90|0]=b>>>16,k[a+91|0]=b>>>24,k[a+92|0]=f,k[a+93|0]=f>>>8,k[a+94|0]=f>>>16,k[a+95|0]=f>>>24,f=v[i+5|0]|v[i+6|0]<<8|v[i+7|0]<<16|v[i+8|0]<<24,i=v[i+1|0]|v[i+2|0]<<8|v[i+3|0]<<16|v[i+4|0]<<24,k[a+81|0]=i,k[a+82|0]=i>>>8,k[a+83|0]=i>>>16,k[a+84|0]=i>>>24,k[a+85|0]=f,k[a+86|0]=f>>>8,k[a+87|0]=f>>>16,k[a+88|0]=f>>>24,f=l[(i=a)+92>>2],b=l[i+88>>2],l[i+56>>2]=b,l[i+60>>2]=f,f=l[i+84>>2],l[i+48>>2]=l[i+80>>2],l[i+52>>2]=f,t=Rk(i+48|0),f=v[i+75|0]|v[i+76|0]<<8|v[i+77|0]<<16|v[i+78|0]<<24,b=v[i+71|0]|v[i+72|0]<<8|v[i+73|0]<<16|v[i+74|0]<<24,k[i+88|0]=b,k[i+89|0]=b>>>8,k[i+90|0]=b>>>16,k[i+91|0]=b>>>24,k[i+92|0]=f,k[i+93|0]=f>>>8,k[i+94|0]=f>>>16,k[i+95|0]=f>>>24,f=l[i+68>>2],b=l[i+64>>2],k[i+81|0]=b,k[i+82|0]=b>>>8,k[i+83|0]=b>>>16,k[i+84|0]=b>>>24,k[i+85|0]=f,k[i+86|0]=f>>>8,k[i+87|0]=f>>>16,k[i+88|0]=f>>>24,f=l[i+92>>2],l[i+40>>2]=l[i+88>>2],l[i+44>>2]=f,k[i+80|0]=s,f=l[i+84>>2],l[i+32>>2]=l[i+80>>2],l[i+36>>2]=f,f=Rk(i+32|0),-1==(0|(i=l[8+((w(n,40)+o|0)+((t&(n<<1)-1)<<2)|0)>>2])))break r;if((0|i)<0|(0|n)<=(0|i))break e;for(s=(b=l[a+88>>2])+16|0;;){if(c=8+(i=w(i,40)+o|0)|0,l[i+12>>2]==(0|f)){if(5!=(15&v[i+16|0]))break a;if(t=l[b+8>>2]>>>1,i=v[i+24|0]|v[i+25|0]<<8|v[i+26|0]<<16|v[i+27|0]<<24,(0|t)==l[i+8>>2]>>>1&&!pn(s,i+16|0,t))break r}if(-1==(0|(i=l[c>>2]))){c=0;break r}if(!((0|n)>(0|i)&&(0|i)>=0))break}break e}P(22066,17172,1118,43566),M()}P(22324,17172,1119,43566),M()}P(28746,17172,607,44115),M()}return i=l[e+12>>2],l[a+24>>2]=l[e+8>>2],l[a+28>>2]=i,i=l[e+4>>2],l[a+16>>2]=l[e>>2],l[a+20>>2]=i,zb(a+16|0),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a),ne=a+96|0,0!=(0|c)}P(28228,17172,925,44064),M()}function bk(e,r){var a,i=0;ne=a=ne-96|0,jb(a+48|0,25548),i=l[a+60>>2],l[a+72>>2]=l[a+56>>2],l[a+76>>2]=i,i=l[a+52>>2],l[a+64>>2]=l[a+48>>2],l[a+68>>2]=i,i=l[r+164>>2],l[a+40>>2]=l[r+160>>2],l[a+44>>2]=i,i=l[r+156>>2],l[a+32>>2]=l[r+152>>2],l[a+36>>2]=i,Nb(a+80|0,a+32|0),r=l[a+92>>2],l[a+24>>2]=l[a+88>>2],l[a+28>>2]=r,r=l[a+76>>2],l[a+8>>2]=l[a+72>>2],l[a+12>>2]=r,r=l[a+84>>2],l[a+16>>2]=l[a+80>>2],l[a+20>>2]=r,r=l[a+68>>2],l[a>>2]=l[a+64>>2],l[a+4>>2]=r,dn(e,a+16|0,a),ne=a+96|0}function nk(e,r){var a,i=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,h=0,p=0,y=0,E=0,_=0,D=0,S=0,F=0,A=0;ne=a=ne-5952|0,l[82342]=l[r>>2];e:{r:{a:{i:{f:{k:{b:{n:{s:{if(b=pa(r)){if(i=l[r+104>>2],l[r+104>>2]=0,n=l[r+36>>2],l[(y=a+4704|0)>>2]=l[r+32>>2],l[y+4>>2]=n,y=l[r+28>>2],l[a+4696>>2]=l[r+24>>2],l[a+4700>>2]=y,1==(15&v[a+4696|0])){if(l[r+112>>2])break s;for(h=r- -64|0,A=a+5840|0,y=a+5824|0,D=a+5808|0,_=a+5792|0,o=!i;;){t:{if(i=o,n=b,t=d[b>>1],l[r+100>>2]){b=(o=l[r+40>>2])+l[r+52>>2]|0,k=l[b+-4>>2];c:{if(k){if(s=l[b+12>>2],o=l[k+o>>2],s>>>0<(k=l[o>>2])+(l[o+4>>2]<<1)>>>0&&s>>>0>=k>>>0)break c;break k}if(l[b+12>>2])break f}Sa(l[b>>2],n),Ab(9),b=t>>>0<41?w(t,24)+34336|0:35320;c:if(i)tn(18500,0);else{-1==(0|(k=l[b+16>>2]))&&(k=d[n+2>>1]),b=l[r+56>>2],o=0;o:if(!((0|k)<1))for(;;){if(o&&(tn(17783,0),b=l[(l[r+40>>2]+b|0)-4>>2]),!b){b=0;break o}if(s=l[r+40>>2]+b|0,u=l[s+12>>2],l[(c=a+4688|0)>>2]=l[s+8>>2],l[c+4>>2]=u,c=l[s+4>>2],l[a+4680>>2]=l[s>>2],l[a+4684>>2]=c,Nb(a+5760|0,a+4680|0),u=l[4+(c=a+5768|0)>>2],l[(s=a+4672|0)>>2]=l[c>>2],l[s+4>>2]=u,s=l[a+5764>>2],l[a+4664>>2]=l[a+5760>>2],l[a+4668>>2]=s,tb(a+4664|0,32),(0|(o=o+1|0))==(0|k))break}if(!(2&v[r+100|0]))break c;if(!(b=l[(l[r+40>>2]+b|0)-4>>2]))break c;for(;tn(18131,0),o=l[r+40>>2]+b|0,s=l[o+12>>2],l[(k=a+4656|0)>>2]=l[o+8>>2],l[k+4>>2]=s,k=l[o+4>>2],l[a+4648>>2]=l[o>>2],l[a+4652>>2]=k,Nb(a+5744|0,a+4648|0),s=l[4+(k=a+5752|0)>>2],l[(o=a+4640|0)>>2]=l[k>>2],l[o+4>>2]=s,o=l[a+5748>>2],l[a+4632>>2]=l[a+5744>>2],l[a+4636>>2]=o,tb(a+4632|0,32),b=l[(l[r+40>>2]+b|0)-4>>2];);}Ab(10)}o=0,i?(b=v[r+36|0]|v[r+37|0]<<8|v[r+38|0]<<16|v[r+39|0]<<24,i=a+5128|0,s=v[r+32|0]|v[r+33|0]<<8|v[r+34|0]<<16|v[r+35|0]<<24,l[i>>2]=s,l[i+4>>2]=b,i=v[r+24|0]|v[r+25|0]<<8|v[r+26|0]<<16|v[r+27|0]<<24,k=v[r+28|0]|v[r+29|0]<<8|v[r+30|0]<<16|v[r+31|0]<<24,l[(c=a+4624|0)>>2]=s,l[c+4>>2]=b,l[a+5120>>2]=i,l[a+5124>>2]=k,l[a+4616>>2]=i,l[a+4620>>2]=k,t=t+41|0,k=!(15&v[a+4616|0])):k=0;c:{o:{u:{l:{v:{d:{h:{m:{w:{p:{g:{y:{E:{_:{D:{S:{F:{M:{A:{x:{P:{T:{R:{O:{I:{z:{N:{j:{U:{B:{C:{L:{H:{q:{Y:{W:{G:{X:{J:{V:{K:{Z:{$:{Q:{ee:{re:{ae:if(!((i=65535&t)>>>0>81))switch(b=n+2|0,i-1|0){case 33:break c;case 17:case 68:break o;case 15:break D;case 27:break S;case 26:case 28:break F;case 25:break M;case 54:break A;case 55:case 79:break x;case 13:case 14:case 38:break P;case 52:case 53:break T;case 11:case 12:break R;case 16:break O;case 9:case 10:break I;case 64:case 65:break z;case 24:break N;case 23:break j;case 8:break U;case 80:break B;case 7:break C;case 39:break L;case 6:break H;case 5:break q;case 20:case 61:break Y;case 19:break W;case 18:break G;case 4:break X;case 3:break J;case 22:break V;case 21:break K;case 2:break Z;case 1:break $;case 0:break Q;case 37:break ee;case 29:case 30:case 31:case 32:case 34:case 35:case 36:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 56:case 57:case 58:case 59:case 60:case 62:case 63:case 66:case 67:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:break ae;default:break re}P(19249,14305,401,43093),M()}i=(k=l[r+40>>2])+l[r+52>>2]|0,s=l[i+-4>>2];re:{if(s){if(t=l[i+12>>2],k=l[k+s>>2],t>>>0<(s=l[k>>2])+(l[k+4>>2]<<1)>>>0&&t>>>0>=s>>>0)break re;break k}if(l[i+12>>2])break f}if(i=l[i>>2],k=l[i+28>>2],l[a+104>>2]=l[i+24>>2],l[a+108>>2]=k,k=l[i+20>>2],l[a+96>>2]=l[i+16>>2],l[a+100>>2]=k,Nb(a+5728|0,a+96|0),b=d[b>>1],k=l[4+(i=a+5736|0)>>2],l[a+88>>2]=l[i>>2],l[a+92>>2]=k,i=l[a+5732>>2],l[a+80>>2]=l[a+5728>>2],l[a+84>>2]=i,Kb(a+5936|0,a+80|0,b),i=l[4+(b=a+5944|0)>>2],l[a+72>>2]=l[b>>2],l[a+76>>2]=i,b=l[a+5940>>2],l[a+64>>2]=l[a+5936>>2],l[a+68>>2]=b,!(15&v[a- -64|0]))break _;s=(b=l[r+56>>2])+l[r+40>>2]|0,t=l[(i=s)+12>>2],l[(k=a+5720|0)>>2]=l[i+8>>2],l[k+4>>2]=t,k=l[i+4>>2],l[a+5712>>2]=l[i>>2],l[a+5716>>2]=k;re:{if(l[r+48>>2]!=(0|b)){if(k=l[4+(i=b=a+5720|0)>>2],l[a+56>>2]=l[i>>2],l[a+60>>2]=k,i=l[a+5716>>2],l[a+48>>2]=l[a+5712>>2],l[a+52>>2]=i,Nb(a+5120|0,a+48|0),k=l[4+(i=a+5128|0)>>2],l[b>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5124>>2],l[a+5712>>2]=l[a+5120>>2],l[a+5716>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break re}else i=l[s+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,k=l[4+(i=b=a+5720|0)>>2],l[a+40>>2]=l[i>>2],l[a+44>>2]=k,i=l[a+5716>>2],l[a+32>>2]=l[a+5712>>2],l[a+36>>2]=i,!(15&v[a+32|0]))break i;if(i=l[b+4>>2],l[a+24>>2]=l[b>>2],l[a+28>>2]=i,b=l[a+5716>>2],l[a+16>>2]=l[a+5712>>2],l[a+20>>2]=b,zb(a+16|0),b=l[4+(k=a+5944|0)>>2],i=a+5128|0,k=l[k>>2],l[i>>2]=k,l[i+4>>2]=b,l[a+8>>2]=k,l[a+12>>2]=b,b=l[a+5940>>2],i=l[a+5936>>2],l[a+5120>>2]=i,l[a+5124>>2]=b,l[a>>2]=i,l[a+4>>2]=b,!(15&v[0|a]))break a;c=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?t=l[r+40>>2]:(i=583-(b<<1)&-8,nn((s=an((b+l[r+40>>2]|0)-8|0,i))+(i-(b=8-b|0)|0)|0,s,b),t=i+s|0,l[r+40>>2]=t,l[r+44>>2]=8-i),b=n+4|0,l[r+48>>2]=k,l[(i=k+t|0)-4>>2]=c,l[r+56>>2]=k,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}if(mn(a+5680|0),jb(a+5664|0,19830),n=l[r+108>>2],l[r+108>>2]=n+1,l[(i=a+5648|0)>>2]=4,l[i+4>>2]=0,m[i+8>>3]=n>>>0,n=l[4+(i=a+5688|0)>>2],l[a+168>>2]=l[i>>2],l[a+172>>2]=n,n=l[4+(i=a+5672|0)>>2],l[a+152>>2]=l[i>>2],l[a+156>>2]=n,n=l[4+(i=a+5656|0)>>2],l[a+136>>2]=l[i>>2],l[a+140>>2]=n,i=l[a+5684>>2],l[a+160>>2]=l[a+5680>>2],l[a+164>>2]=i,i=l[a+5668>>2],l[a+144>>2]=l[a+5664>>2],l[a+148>>2]=i,i=l[a+5652>>2],l[a+128>>2]=l[a+5648>>2],l[a+132>>2]=i,en(a+5696|0,a+160|0,a+144|0,a+128|0),i=l[4+(k=a+5704|0)>>2],n=a+5128|0,k=l[k>>2],l[n>>2]=k,l[n+4>>2]=i,l[a+120>>2]=k,l[a+124>>2]=i,i=l[a+5700>>2],n=l[a+5696>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+112>>2]=n,l[a+116>>2]=i,!(15&v[a+112|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}t=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(n=a+5944|0)>>2]=l[k+8>>2],l[n+4>>2]=c,s=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=s;Q:{if(l[r+48>>2]!=(0|i)){if(i=l[n+4>>2],l[a+248>>2]=l[n>>2],l[a+252>>2]=i,i=l[a+5940>>2],l[a+240>>2]=l[a+5936>>2],l[a+244>>2]=i,Nb(a+5120|0,a+240|0),k=l[4+(i=a+5128|0)>>2],l[n>>2]=l[i>>2],l[n+4>>2]=k,i=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break Q}else t=l[t+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,k=l[4+(i=a+5944|0)>>2],l[a+232>>2]=l[i>>2],l[a+236>>2]=k,n=l[a+5940>>2],l[a+224>>2]=l[a+5936>>2],l[a+228>>2]=n,!(15&v[a+224|0]))break i;if(n=l[i+4>>2],l[a+216>>2]=l[i>>2],l[a+220>>2]=n,i=l[a+5940>>2],l[a+208>>2]=l[a+5936>>2],l[a+212>>2]=i,Nb(a+5632|0,a+208|0),i=l[4+(k=a+5640|0)>>2],n=a+5128|0,k=l[k>>2],l[n>>2]=k,l[n+4>>2]=i,l[a+200>>2]=k,l[a+204>>2]=i,i=l[a+5636>>2],n=l[a+5632>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+192>>2]=n,l[a+196>>2]=i,!(15&v[a+192|0]))break a;if(c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,s=l[4+(k=n=a+5128|0)>>2],l[i+8>>2]=l[k>>2],l[i+12>>2]=s,k=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=k,i=l[4+(k=a+5944|0)>>2],k=l[k>>2],l[a+184>>2]=k,l[a+188>>2]=i,l[n>>2]=k,l[n+4>>2]=i,i=l[a+5940>>2],n=l[a+5936>>2],l[a+176>>2]=n,l[a+180>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=i,!(15&v[a+176|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}s=n=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=n)+12>>2],l[(t=a+5944|0)>>2]=l[k+8>>2],l[t+4>>2]=c,t=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=t;$:{if(l[r+48>>2]!=(0|i)){if(t=l[10947],l[8+(i=a+5120|0)>>2]=l[10946],l[i+12>>2]=t,k=l[10945],l[i>>2]=l[10944],l[i+4>>2]=k,k=l[4+(i=a+5128|0)>>2],l[s+8>>2]=l[i>>2],l[s+12>>2]=k,i=l[a+5124>>2],l[n>>2]=l[a+5120>>2],l[n+4>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break $}else t=l[n+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,k=l[4+(i=a+5944|0)>>2],l[a+312>>2]=l[i>>2],l[a+316>>2]=k,n=l[a+5940>>2],l[a+304>>2]=l[a+5936>>2],l[a+308>>2]=n,!(15&v[a+304|0]))break r;if(n=l[i+4>>2],l[a+296>>2]=l[i>>2],l[a+300>>2]=n,i=l[a+5940>>2],l[a+288>>2]=l[a+5936>>2],l[a+292>>2]=i,Nb(a+5616|0,a+288|0),i=l[4+(k=a+5624|0)>>2],n=a+5128|0,k=l[k>>2],l[n>>2]=k,l[n+4>>2]=i,l[a+280>>2]=k,l[a+284>>2]=i,i=l[a+5620>>2],n=l[a+5616>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+272>>2]=n,l[a+276>>2]=i,!(15&v[a+272|0]))break a;if(c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,s=l[4+(k=n=a+5128|0)>>2],l[i+8>>2]=l[k>>2],l[i+12>>2]=s,k=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=k,i=l[4+(k=a+5944|0)>>2],k=l[k>>2],l[a+264>>2]=k,l[a+268>>2]=i,l[n>>2]=k,l[n+4>>2]=i,i=l[a+5940>>2],n=l[a+5936>>2],l[a+256>>2]=n,l[a+260>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=i,!(15&v[a+256|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}t=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(n=a+5944|0)>>2]=l[k+8>>2],l[n+4>>2]=c,s=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=s;Z:{if(l[r+48>>2]!=(0|i)){if(i=l[n+4>>2],l[a+440>>2]=l[n>>2],l[a+444>>2]=i,i=l[a+5940>>2],l[a+432>>2]=l[a+5936>>2],l[a+436>>2]=i,Nb(a+5120|0,a+432|0),k=l[4+(i=a+5128|0)>>2],l[n>>2]=l[i>>2],l[n+4>>2]=k,i=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break Z}else t=l[t+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,n=l[4+(i=a+5944|0)>>2],l[a+424>>2]=l[i>>2],l[a+428>>2]=n,i=l[a+5940>>2],l[a+416>>2]=l[a+5936>>2],l[a+420>>2]=i,!(15&v[a+416|0]))break i;s=(i=l[r+56>>2])+l[r+40>>2]|0,t=l[(n=s)+12>>2],l[(k=a+5608|0)>>2]=l[n+8>>2],l[k+4>>2]=t,k=l[n+4>>2],l[a+5600>>2]=l[n>>2],l[a+5604>>2]=k;Z:{if(l[r+48>>2]!=(0|i)){if(k=l[4+(i=a+5608|0)>>2],l[a+408>>2]=l[i>>2],l[a+412>>2]=k,n=l[a+5604>>2],l[a+400>>2]=l[a+5600>>2],l[a+404>>2]=n,Nb(a+5120|0,a+400|0),k=l[4+(n=a+5128|0)>>2],l[i>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break Z}else t=l[s+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,k=l[4+(i=a+5608|0)>>2],l[a+392>>2]=l[i>>2],l[a+396>>2]=k,n=l[a+5604>>2],l[a+384>>2]=l[a+5600>>2],l[a+388>>2]=n,!(15&v[a+384|0]))break i;if(n=l[i+4>>2],l[a+376>>2]=l[i>>2],l[a+380>>2]=n,i=l[a+5604>>2],l[a+368>>2]=l[a+5600>>2],l[a+372>>2]=i,Nb(a+5584|0,a+368|0),i=l[4+(k=a+5592|0)>>2],n=a+5128|0,k=l[k>>2],l[n>>2]=k,l[n+4>>2]=i,l[a+360>>2]=k,l[a+364>>2]=i,i=l[a+5588>>2],n=l[a+5584>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+352>>2]=n,l[a+356>>2]=i,!(15&v[a+352|0]))break a;if(c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,s=l[4+(k=n=a+5128|0)>>2],l[i+8>>2]=l[k>>2],l[i+12>>2]=s,k=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=k,i=l[4+(k=a+5944|0)>>2],k=l[k>>2],l[a+344>>2]=k,l[a+348>>2]=i,l[n>>2]=k,l[n+4>>2]=i,i=l[a+5940>>2],n=l[a+5936>>2],l[a+336>>2]=n,l[a+340>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=i,!(15&v[a+336|0]))break a;if(c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,s=l[4+(k=n=a+5128|0)>>2],l[i+8>>2]=l[k>>2],l[i+12>>2]=s,k=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=k,i=l[4+(k=a+5608|0)>>2],k=l[k>>2],l[a+328>>2]=k,l[a+332>>2]=i,l[n>>2]=k,l[n+4>>2]=i,i=l[a+5604>>2],n=l[a+5600>>2],l[a+320>>2]=n,l[a+324>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=i,!(15&v[a+320|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}t=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(n=a+5944|0)>>2]=l[k+8>>2],l[n+4>>2]=c,s=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=s;K:{if(l[r+48>>2]!=(0|i)){if(i=l[n+4>>2],l[a+520>>2]=l[n>>2],l[a+524>>2]=i,i=l[a+5940>>2],l[a+512>>2]=l[a+5936>>2],l[a+516>>2]=i,Nb(a+5120|0,a+512|0),k=l[4+(i=a+5128|0)>>2],l[n>>2]=l[i>>2],l[n+4>>2]=k,i=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break K}else t=l[t+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,k=l[4+(i=a+5944|0)>>2],l[a+504>>2]=l[i>>2],l[a+508>>2]=k,n=l[a+5940>>2],l[a+496>>2]=l[a+5936>>2],l[a+500>>2]=n,!(15&v[a+496|0]))break i;if(n=l[i+4>>2],l[a+488>>2]=l[i>>2],l[a+492>>2]=n,i=l[a+5940>>2],l[a+480>>2]=l[a+5936>>2],l[a+484>>2]=i,Nb(a+5568|0,a+480|0),i=l[4+(k=a+5576|0)>>2],n=a+5128|0,k=l[k>>2],l[n>>2]=k,l[n+4>>2]=i,l[a+472>>2]=k,l[a+476>>2]=i,i=l[a+5572>>2],n=l[a+5568>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+464>>2]=n,l[a+468>>2]=i,!(15&v[a+464|0]))break a;if(c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,s=l[4+(k=n=a+5128|0)>>2],l[i+8>>2]=l[k>>2],l[i+12>>2]=s,k=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=k,i=l[4+(k=a+5944|0)>>2],k=l[k>>2],l[a+456>>2]=k,l[a+460>>2]=i,l[n>>2]=k,l[n+4>>2]=i,i=l[a+5940>>2],n=l[a+5936>>2],l[a+448>>2]=n,l[a+452>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=i,!(15&v[a+448|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n,l[r+96>>2]=l[r+96>>2]+1;break c}if((0|(i=l[r+96>>2]))<=0)break E;l[r+96>>2]=i+-1,s=(o=l[r+56>>2])+l[r+40>>2]|0,t=l[(n=s)+12>>2],l[(i=a+5944|0)>>2]=l[n+8>>2],l[i+4>>2]=t,k=l[n+4>>2],l[a+5936>>2]=l[n>>2],l[a+5940>>2]=k;V:{if(l[r+48>>2]!=(0|o)){if(n=l[i+4>>2],l[a+616>>2]=l[i>>2],l[a+620>>2]=n,n=l[a+5940>>2],l[a+608>>2]=l[a+5936>>2],l[a+612>>2]=n,Nb(a+5120|0,a+608|0),o=l[4+(n=a+5128|0)>>2],l[i>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=i,o=l[r+56>>2],i=l[(o+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|o))break V}else i=l[s+-4>>2];l[r+48>>2]=o+24}if(l[r+56>>2]=i,n=l[4+(i=a+5944|0)>>2],l[a+600>>2]=l[i>>2],l[a+604>>2]=n,i=l[a+5940>>2],l[a+592>>2]=l[a+5936>>2],l[a+596>>2]=i,!(15&v[a+592|0]))break i;k=(o=l[r+56>>2])+l[r+40>>2]|0,s=l[(i=k)+12>>2],l[(n=a+5608|0)>>2]=l[i+8>>2],l[n+4>>2]=s,n=l[i+4>>2],l[a+5600>>2]=l[i>>2],l[a+5604>>2]=n;V:{if(l[r+48>>2]!=(0|o)){if(o=l[4+(i=a+5608|0)>>2],l[a+584>>2]=l[i>>2],l[a+588>>2]=o,n=l[a+5604>>2],l[a+576>>2]=l[a+5600>>2],l[a+580>>2]=n,Nb(a+5120|0,a+576|0),o=l[4+(n=a+5128|0)>>2],l[i>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=i,o=l[r+56>>2],i=l[(o+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|o))break V}else i=l[k+-4>>2];l[r+48>>2]=o+24}if(l[r+56>>2]=i,n=l[4+(i=a+5608|0)>>2],l[a+568>>2]=l[i>>2],l[a+572>>2]=n,i=l[a+5604>>2],l[a+560>>2]=l[a+5600>>2],l[a+564>>2]=i,!(15&v[a+560|0]))break i;if(i=l[4+(o=a+5944|0)>>2],n=a+5128|0,o=l[o>>2],l[n>>2]=o,l[n+4>>2]=i,l[a+552>>2]=o,l[a+556>>2]=i,i=l[a+5940>>2],n=l[a+5936>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+544>>2]=n,l[a+548>>2]=i,!(15&v[a+544|0]))break a;if(s=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?i=l[r+40>>2]:(o=583-(i<<1)&-8,nn((k=an((i+l[r+40>>2]|0)-8|0,o))+(o-(i=8-i|0)|0)|0,k,i),i=k+o|0,l[r+40>>2]=i,l[r+44>>2]=8-o),l[r+48>>2]=n,l[(i=i+n|0)-4>>2]=s,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,o=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=o,i=l[4+(o=a+5608|0)>>2],o=l[o>>2],l[a+536>>2]=o,l[a+540>>2]=i,l[n>>2]=o,l[n+4>>2]=i,i=l[a+5604>>2],n=l[a+5600>>2],l[a+528>>2]=n,l[a+532>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=i,!(15&v[a+528|0]))break a;s=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?i=l[r+40>>2]:(o=583-(i<<1)&-8,nn((k=an((i+l[r+40>>2]|0)-8|0,o))+(o-(i=8-i|0)|0)|0,k,i),i=k+o|0,l[r+40>>2]=i,l[r+44>>2]=8-o),l[r+48>>2]=n,l[(i=i+n|0)-4>>2]=s,l[r+56>>2]=n,o=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=o,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n,o=0;break c}i=(k=l[r+40>>2])+l[r+52>>2]|0,s=l[i+-4>>2];J:{if(s){if(t=l[i+12>>2],k=l[k+s>>2],t>>>0<(s=l[k>>2])+(l[k+4>>2]<<1)>>>0&&t>>>0>=s>>>0)break J;break k}if(l[i+12>>2])break f}if(i=l[i>>2],k=l[i+28>>2],l[a+728>>2]=l[i+24>>2],l[a+732>>2]=k,k=l[i+20>>2],l[a+720>>2]=l[i+16>>2],l[a+724>>2]=k,Nb(a+5552|0,a+720|0),b=d[b>>1],k=l[4+(i=a+5560|0)>>2],l[a+712>>2]=l[i>>2],l[a+716>>2]=k,i=l[a+5556>>2],l[a+704>>2]=l[a+5552>>2],l[a+708>>2]=i,Kb(a+5936|0,a+704|0,b),i=l[4+(b=a+5944|0)>>2],l[a+696>>2]=l[b>>2],l[a+700>>2]=i,b=l[a+5940>>2],l[a+688>>2]=l[a+5936>>2],l[a+692>>2]=b,!(15&v[a+688|0]))break y;s=(b=l[r+56>>2])+l[r+40>>2]|0,t=l[(i=s)+12>>2],l[(k=a+5608|0)>>2]=l[i+8>>2],l[k+4>>2]=t,k=l[i+4>>2],l[a+5600>>2]=l[i>>2],l[a+5604>>2]=k;J:{if(l[r+48>>2]!=(0|b)){if(k=l[4+(i=b=a+5608|0)>>2],l[a+680>>2]=l[i>>2],l[a+684>>2]=k,i=l[a+5604>>2],l[a+672>>2]=l[a+5600>>2],l[a+676>>2]=i,Nb(a+5120|0,a+672|0),k=l[4+(i=a+5128|0)>>2],l[b>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break J}else i=l[s+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,i=l[4+(b=a+5608|0)>>2],l[a+664>>2]=l[b>>2],l[a+668>>2]=i,b=l[a+5604>>2],l[a+656>>2]=l[a+5600>>2],l[a+660>>2]=b,!(15&v[a+656|0]))break i;if(b=l[4+(k=a+5944|0)>>2],i=a+5128|0,k=l[k>>2],l[i>>2]=k,l[i+4>>2]=b,l[a+648>>2]=k,l[a+652>>2]=b,b=l[a+5940>>2],i=l[a+5936>>2],l[a+5120>>2]=i,l[a+5124>>2]=b,l[a+640>>2]=i,l[a+644>>2]=b,!(15&v[a+640|0]))break a;if(t=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?i=l[r+40>>2]:(s=583-(b<<1)&-8,nn((i=an((b+l[r+40>>2]|0)-8|0,s))+(s-(b=8-b|0)|0)|0,i,b),i=i+s|0,l[r+40>>2]=i,l[r+44>>2]=8-s),l[r+48>>2]=k,l[(b=i+k|0)-4>>2]=t,l[r+56>>2]=k,s=l[4+(i=a+5128|0)>>2],l[b+8>>2]=l[i>>2],l[b+12>>2]=s,k=l[a+5124>>2],l[b>>2]=l[a+5120>>2],l[b+4>>2]=k,b=l[4+(k=a+5608|0)>>2],k=l[k>>2],l[a+632>>2]=k,l[a+636>>2]=b,l[i>>2]=k,l[i+4>>2]=b,b=l[a+5604>>2],i=l[a+5600>>2],l[a+624>>2]=i,l[a+628>>2]=b,l[a+5120>>2]=i,l[a+5124>>2]=b,!(15&v[a+624|0]))break a;c=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?t=l[r+40>>2]:(i=583-(b<<1)&-8,nn((s=an((b+l[r+40>>2]|0)-8|0,i))+(i-(b=8-b|0)|0)|0,s,b),t=i+s|0,l[r+40>>2]=t,l[r+44>>2]=8-i),b=n+4|0,l[r+48>>2]=k,l[(i=k+t|0)-4>>2]=c,l[r+56>>2]=k,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}t=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(n=a+5544|0)>>2]=l[k+8>>2],l[n+4>>2]=c,s=l[k+4>>2],l[a+5536>>2]=l[k>>2],l[a+5540>>2]=s;X:{if(l[r+48>>2]!=(0|i)){if(i=l[n+4>>2],l[a+776>>2]=l[n>>2],l[a+780>>2]=i,i=l[a+5540>>2],l[a+768>>2]=l[a+5536>>2],l[a+772>>2]=i,Nb(a+5120|0,a+768|0),k=l[4+(i=a+5128|0)>>2],l[n>>2]=l[i>>2],l[n+4>>2]=k,i=l[a+5124>>2],l[a+5536>>2]=l[a+5120>>2],l[a+5540>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break X}else t=l[t+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,k=l[4+(i=a+5544|0)>>2],l[a+760>>2]=l[i>>2],l[a+764>>2]=k,n=l[a+5540>>2],l[a+752>>2]=l[a+5536>>2],l[a+756>>2]=n,!(15&v[a+752|0]))break i;n=l[i+4>>2],l[a+744>>2]=l[i>>2],l[a+748>>2]=n,i=l[a+5540>>2],l[a+736>>2]=l[a+5536>>2],l[a+740>>2]=i,zb(a+736|0);break c}t=(b=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(i=a+5944|0)>>2]=l[k+8>>2],l[i+4>>2]=c,s=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=s;G:{if(l[r+48>>2]!=(0|b)){if(b=l[i+4>>2],l[a+856>>2]=l[i>>2],l[a+860>>2]=b,b=l[a+5940>>2],l[a+848>>2]=l[a+5936>>2],l[a+852>>2]=b,Nb(a+5120|0,a+848|0),k=l[4+(b=a+5128|0)>>2],l[i>>2]=l[b>>2],l[i+4>>2]=k,b=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break G}else i=l[t+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,i=l[4+(b=a+5944|0)>>2],l[a+840>>2]=l[b>>2],l[a+844>>2]=i,b=l[a+5940>>2],l[a+832>>2]=l[a+5936>>2],l[a+836>>2]=b,!(15&v[a+832|0]))break i;if(k=l[r+40>>2],b=l[r+52>>2],s=d[n+4>>1],t=d[n+2>>1])for(c=k+4|0,i=0;b=l[b+c>>2],(0|t)!=(0|(i=i+1|0)););if(i=l[(b=k+b|0)>>2],l[i+8>>2]<=(0|s))break e;if(b=b+(s+l[i+12>>2]<<4)|0,k=l[(i=b)+28>>2],l[a+824>>2]=l[i+24>>2],l[a+828>>2]=k,k=l[i+20>>2],l[a+816>>2]=l[i+16>>2],l[a+820>>2]=k,6!=(15&v[a+816|0]))break g;i=l[b+28>>2],l[a+808>>2]=l[b+24>>2],l[a+812>>2]=i,i=l[b+16>>2],k=l[b+20>>2],t=l[4+(s=a+5944|0)>>2],l[a+792>>2]=l[s>>2],l[a+796>>2]=t,l[a+800>>2]=i,l[a+804>>2]=k,i=l[a+5940>>2],l[a+784>>2]=l[a+5936>>2],l[a+788>>2]=i,Vb(a+5120|0,a+800|0,a+784|0),k=l[4+(i=a+5128|0)>>2],l[b+24>>2]=l[i>>2],l[b+28>>2]=k,i=l[a+5124>>2],l[b+16>>2]=l[a+5120>>2],l[b+20>>2]=i,b=n+6|0;break c}t=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(n=a+5944|0)>>2]=l[k+8>>2],l[n+4>>2]=c,s=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=s;W:{if(l[r+48>>2]!=(0|i)){if(k=l[n+4>>2],l[(i=a+1264|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5940>>2],l[a+1256>>2]=l[a+5936>>2],l[a+1260>>2]=i,Nb(a+5120|0,a+1256|0),k=l[4+(i=a+5128|0)>>2],l[n>>2]=l[i>>2],l[n+4>>2]=k,i=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break W}else t=l[t+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,k=l[4+(n=a+5944|0)>>2],l[(i=a+1248|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5940>>2],l[a+1240>>2]=l[a+5936>>2],l[a+1244>>2]=i,!(15&v[a+1240|0]))break i;s=(i=l[r+56>>2])+l[r+40>>2]|0,t=l[(n=s)+12>>2],l[(k=a+5608|0)>>2]=l[n+8>>2],l[k+4>>2]=t,k=l[n+4>>2],l[a+5600>>2]=l[n>>2],l[a+5604>>2]=k;W:{if(l[r+48>>2]!=(0|i)){if(s=l[4+(i=a+5608|0)>>2],l[(n=a+1232|0)>>2]=l[i>>2],l[n+4>>2]=s,n=l[a+5604>>2],l[a+1224>>2]=l[a+5600>>2],l[a+1228>>2]=n,Nb(a+5120|0,a+1224|0),k=l[4+(n=a+5128|0)>>2],l[i>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break W}else t=l[s+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,k=l[4+(n=a+5608|0)>>2],l[(i=a+1216|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5604>>2],l[a+1208>>2]=l[a+5600>>2],l[a+1212>>2]=i,!(15&v[a+1208|0]))break i;s=(i=l[r+56>>2])+l[r+40>>2]|0,t=l[(n=s)+12>>2],l[(k=a+5528|0)>>2]=l[n+8>>2],l[k+4>>2]=t,k=l[n+4>>2],l[a+5520>>2]=l[n>>2],l[a+5524>>2]=k;W:{if(l[r+48>>2]!=(0|i)){if(s=l[4+(i=a+5528|0)>>2],l[(n=a+1200|0)>>2]=l[i>>2],l[n+4>>2]=s,n=l[a+5524>>2],l[a+1192>>2]=l[a+5520>>2],l[a+1196>>2]=n,Nb(a+5120|0,a+1192|0),k=l[4+(n=a+5128|0)>>2],l[i>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5124>>2],l[a+5520>>2]=l[a+5120>>2],l[a+5524>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break W}else t=l[s+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,k=l[4+(n=a+5528|0)>>2],l[(i=a+1184|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5524>>2],l[a+1176>>2]=l[a+5520>>2],l[a+1180>>2]=i,!(15&v[a+1176|0]))break i;s=(i=l[r+56>>2])+l[r+40>>2]|0,t=l[(n=s)+12>>2],l[(k=a+5512|0)>>2]=l[n+8>>2],l[k+4>>2]=t,k=l[n+4>>2],l[a+5504>>2]=l[n>>2],l[a+5508>>2]=k;W:{if(l[r+48>>2]!=(0|i)){if(s=l[4+(i=a+5512|0)>>2],l[(n=a+1168|0)>>2]=l[i>>2],l[n+4>>2]=s,n=l[a+5508>>2],l[a+1160>>2]=l[a+5504>>2],l[a+1164>>2]=n,Nb(a+5120|0,a+1160|0),k=l[4+(n=a+5128|0)>>2],l[i>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5124>>2],l[a+5504>>2]=l[a+5120>>2],l[a+5508>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break W}else t=l[s+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,s=l[4+(i=a+5512|0)>>2],l[(n=a+1152|0)>>2]=l[i>>2],l[n+4>>2]=s,n=l[a+5508>>2],l[a+1144>>2]=l[a+5504>>2],l[a+1148>>2]=n,!(15&v[a+1144|0]))break i;if(k=l[i+4>>2],l[(n=a+1136|0)>>2]=l[i>>2],l[n+4>>2]=k,i=l[a+5508>>2],l[a+1128>>2]=l[a+5504>>2],l[a+1132>>2]=i,7!=(15&v[a+1128|0]))break p;if(s=l[4+(i=a+5528|0)>>2],l[(n=a+1120|0)>>2]=l[i>>2],l[n+4>>2]=s,n=l[a+5524>>2],l[a+1112>>2]=l[a+5520>>2],l[a+1116>>2]=n,5==(15&v[a+1112|0])){if(k=l[4+(n=a+5512|0)>>2],l[a+936>>2]=l[n>>2],l[a+940>>2]=k,n=l[i+4>>2],l[a+920>>2]=l[i>>2],l[a+924>>2]=n,n=l[4+(i=a+5608|0)>>2],l[a+904>>2]=l[i>>2],l[a+908>>2]=n,i=l[a+5508>>2],l[a+928>>2]=l[a+5504>>2],l[a+932>>2]=i,i=l[a+5524>>2],l[a+912>>2]=l[a+5520>>2],l[a+916>>2]=i,i=l[a+5604>>2],l[a+896>>2]=l[a+5600>>2],l[a+900>>2]=i,en(a+5488|0,a+928|0,a+912|0,a+896|0),i=l[4+(k=a+5496|0)>>2],n=a+5128|0,k=l[k>>2],l[n>>2]=k,l[n+4>>2]=i,l[a+888>>2]=k,l[a+892>>2]=i,i=l[a+5492>>2],n=l[a+5488>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+880>>2]=n,l[a+884>>2]=i,!(15&v[a+880|0]))break a;if(c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,s=l[4+(k=n=a+5128|0)>>2],l[i+8>>2]=l[k>>2],l[i+12>>2]=s,k=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=k,i=l[4+(k=a+5944|0)>>2],k=l[k>>2],l[a+872>>2]=k,l[a+876>>2]=i,l[n>>2]=k,l[n+4>>2]=i,i=l[a+5940>>2],n=l[a+5936>>2],l[a+864>>2]=n,l[a+868>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=i,!(15&v[a+864|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}n=l[i+4>>2],l[(b=a+1104|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5524>>2],l[a+1096>>2]=l[a+5520>>2],l[a+1100>>2]=b,b=Xb(15&v[a+1096|0]),o=l[i+4>>2],l[(n=a+1088|0)>>2]=l[i>>2],l[n+4>>2]=o,n=l[a+5524>>2],l[a+1080>>2]=l[a+5520>>2],l[a+1084>>2]=n,Nb(a+5424|0,a+1080|0),k=l[4+(o=a+5432|0)>>2],l[(n=a+1072|0)>>2]=l[o>>2],l[n+4>>2]=k,n=l[a+5428>>2],l[a+1064>>2]=l[a+5424>>2],l[a+1068>>2]=n,l[a+1060>>2]=Jb(a+1064|0,a+5473|0,15),l[a+1056>>2]=b,Yb(a+5440|0,20929,a+1056|0),o=l[4+(n=a+5448|0)>>2],l[(b=a+1048|0)>>2]=l[n>>2],l[b+4>>2]=o,b=l[a+5444>>2],l[a+1040>>2]=l[a+5440>>2],l[a+1044>>2]=b,Hb(a+5456|0,a+1040|0),k=l[4+(o=a+5464|0)>>2],l[(b=a+5128|0)>>2]=l[o>>2],l[b+4>>2]=k,n=l[a+5460>>2],l[a+5120>>2]=l[a+5456>>2],l[a+5124>>2]=n,o=l[r+36>>2],l[(n=a+1032|0)>>2]=l[r+32>>2],l[n+4>>2]=o,n=l[r+28>>2],l[a+1024>>2]=l[r+24>>2],l[a+1028>>2]=n,zb(a+1024|0),n=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=n,b=l[a+5124>>2],l[r+24>>2]=l[a+5120>>2],l[r+28>>2]=b,n=l[4+(b=a+5944|0)>>2],l[a+1016>>2]=l[b>>2],l[a+1020>>2]=n,b=l[a+5940>>2],l[a+1008>>2]=l[a+5936>>2],l[a+1012>>2]=b,zb(a+1008|0),n=l[4+(b=a+5608|0)>>2],l[a+1e3>>2]=l[b>>2],l[a+1004>>2]=n,b=l[a+5604>>2],l[a+992>>2]=l[a+5600>>2],l[a+996>>2]=b,zb(a+992|0),b=l[i+4>>2],l[a+984>>2]=l[i>>2],l[a+988>>2]=b,b=l[a+5524>>2],l[a+976>>2]=l[a+5520>>2],l[a+980>>2]=b,zb(a+976|0),i=l[4+(b=a+5512|0)>>2],l[a+968>>2]=l[b>>2],l[a+972>>2]=i,b=l[a+5508>>2],l[a+960>>2]=l[a+5504>>2],l[a+964>>2]=b,zb(a+960|0);break o}if(s=l[r+40>>2],b=l[r+52>>2],t=d[n+4>>1],c=d[n+2>>1])for(u=s+4|0,i=0;b=l[b+u>>2],(0|c)!=(0|(i=i+1|0)););if(b=l[(c=b+s|0)>>2],l[b+8>>2]<=(0|t))break e;u=l[b+12>>2],b=l[r+56>>2],F=l[12+(s=E=s+b|0)>>2],l[(i=a+5944|0)>>2]=l[s+8>>2],l[i+4>>2]=F,p=l[s+4>>2],l[a+5936>>2]=l[s>>2],l[a+5940>>2]=p;Y:{if(l[r+48>>2]!=(0|b)){if(s=l[i+4>>2],l[(b=a+1528|0)>>2]=l[i>>2],l[b+4>>2]=s,b=l[a+5940>>2],l[a+1520>>2]=l[a+5936>>2],l[a+1524>>2]=b,Nb(a+5120|0,a+1520|0),s=l[4+(b=a+5128|0)>>2],l[i>>2]=l[b>>2],l[i+4>>2]=s,b=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break Y}else i=l[E+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,s=l[4+(i=a+5944|0)>>2],l[(b=a+1512|0)>>2]=l[i>>2],l[b+4>>2]=s,b=l[a+5940>>2],l[a+1504>>2]=l[a+5936>>2],l[a+1508>>2]=b,!(15&v[a+1504|0]))break i;if(k)break o;if(s=l[12+(k=16+(b=c+(t+u<<4)|0)|0)>>2],l[(i=a+1496|0)>>2]=l[k+8>>2],l[i+4>>2]=s,i=l[b+20>>2],l[a+1488>>2]=l[b+16>>2],l[a+1492>>2]=i,4!=(15&v[a+1488|0])||(s=l[4+(k=a+5944|0)>>2],l[(i=a+1480|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5940>>2],l[a+1472>>2]=l[a+5936>>2],l[a+1476>>2]=i,4!=(15&v[a+1472|0]))){Yb(a+5392|0,21330,0),n=l[4+(i=a+5400|0)>>2],l[(b=a+1464|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5396>>2],l[a+1456>>2]=l[a+5392>>2],l[a+1460>>2]=b,Hb(a+5408|0,a+1456|0),o=l[4+(n=a+5416|0)>>2],l[(i=b=a+5128|0)>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+5412>>2],l[a+5120>>2]=l[a+5408>>2],l[a+5124>>2]=i,n=l[r+36>>2],l[(i=a+1448|0)>>2]=l[r+32>>2],l[i+4>>2]=n,i=l[r+28>>2],l[a+1440>>2]=l[r+24>>2],l[a+1444>>2]=i,zb(a+1440|0),i=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=i,b=l[a+5124>>2],l[r+24>>2]=l[a+5120>>2],l[r+28>>2]=b,n=l[4+(i=a+5944|0)>>2],l[(b=a+1432|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5940>>2],l[a+1424>>2]=l[a+5936>>2],l[a+1428>>2]=b,zb(a+1424|0);break o}if(k=l[b+28>>2],l[(i=a+1416|0)>>2]=l[b+24>>2],l[i+4>>2]=k,i=l[b+20>>2],l[a+1408>>2]=l[b+16>>2],l[a+1412>>2]=i,Nb(a+5376|0,a+1408|0),s=l[4+(k=a+5384|0)>>2],l[(i=a+1400|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5380>>2],l[a+1392>>2]=l[a+5376>>2],l[a+1396>>2]=i,S=Wb(a+1392|0),t=l[4+(i=a+5944|0)>>2],l[(k=a+1384|0)>>2]=l[i>>2],l[k+4>>2]=t,k=l[a+5940>>2],l[a+1376>>2]=l[a+5936>>2],l[a+1380>>2]=k,Nb(a+5360|0,a+1376|0),t=l[4+(s=a+5368|0)>>2],l[(k=a+1368|0)>>2]=l[s>>2],l[k+4>>2]=t,k=l[a+5364>>2],l[a+1360>>2]=l[a+5360>>2],l[a+1364>>2]=k,S>=Wb(a+1360|0))break o;if(s=l[b+28>>2],l[(k=a+1352|0)>>2]=l[b+24>>2],l[k+4>>2]=s,k=l[b+20>>2],l[a+1344>>2]=l[b+16>>2],l[a+1348>>2]=k,Nb(a+5600|0,a+1344|0),s=l[b+28>>2],l[(k=a+1336|0)>>2]=l[b+24>>2],l[k+4>>2]=s,k=l[b+20>>2],l[a+1328>>2]=l[b+16>>2],l[a+1332>>2]=k,S=Wb(a+1328|0)+1,l[(k=a+5120|0)>>2]=4,l[k+4>>2]=0,m[k+8>>3]=S,t=l[4+(k=a+5128|0)>>2],l[b+24>>2]=l[k>>2],l[b+28>>2]=t,s=l[a+5124>>2],l[b+16>>2]=l[a+5120>>2],l[b+20>>2]=s,l[a+5520>>2]=l[r+56>>2],b=l[r+52>>2],t=l[i+4>>2],l[(s=a+1320|0)>>2]=l[i>>2],l[s+4>>2]=t,l[a+5524>>2]=b,b=l[a+5940>>2],l[a+1312>>2]=l[a+5936>>2],l[a+1316>>2]=b,Nb(a+5344|0,a+1312|0),b=l[4+(i=a+5352|0)>>2],i=l[i>>2],l[k>>2]=i,l[k+4>>2]=b,l[(k=a+1304|0)>>2]=i,l[k+4>>2]=b,b=l[a+5348>>2],i=l[a+5344>>2],l[a+5120>>2]=i,l[a+5124>>2]=b,l[a+1296>>2]=i,l[a+1300>>2]=b,!(15&v[a+1296|0]))break a;if(t=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?i=l[r+40>>2]:(s=583-(b<<1)&-8,nn((i=an((b+l[r+40>>2]|0)-8|0,s))+(s-(b=8-b|0)|0)|0,i,b),i=i+s|0,l[r+40>>2]=i,l[r+44>>2]=8-s),l[r+48>>2]=k,l[(b=i+k|0)-4>>2]=t,l[r+56>>2]=k,s=l[4+(i=a+5128|0)>>2],l[b+8>>2]=l[i>>2],l[b+12>>2]=s,k=l[a+5124>>2],l[b>>2]=l[a+5120>>2],l[b+4>>2]=k,b=l[a+5524>>2],l[a+1288>>2]=l[a+5520>>2],l[a+1292>>2]=b,Ln(r,n,a+1288|0),b=l[4+(k=a+5608|0)>>2],k=l[k>>2],l[i>>2]=k,l[i+4>>2]=b,l[(i=a+1280|0)>>2]=k,l[i+4>>2]=b,b=l[a+5604>>2],i=l[a+5600>>2],l[a+5120>>2]=i,l[a+5124>>2]=b,l[a+1272>>2]=i,l[a+1276>>2]=b,!(15&v[a+1272|0]))break a;c=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?t=l[r+40>>2]:(i=583-(b<<1)&-8,nn((s=an((b+l[r+40>>2]|0)-8|0,i))+(i-(b=8-b|0)|0)|0,s,b),t=i+s|0,l[r+40>>2]=t,l[r+44>>2]=8-i),b=n+6|0,l[r+48>>2]=k,l[(i=k+t|0)-4>>2]=c,l[r+56>>2]=k,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}if(c=l[r+40>>2],b=l[r+52>>2],s=d[n+4>>1],k=d[n+2>>1])for(t=c+4|0,i=0;b=l[b+t>>2],(0|k)!=(0|(i=i+1|0)););if(i=l[(b=b+c|0)>>2],l[i+8>>2]<=(0|s))break e;k=b+(s+l[i+12>>2]<<4)|0,l[r+100>>2]&&(l[a+1680>>2]=s,tn(21599,a+1680|0),i=l[k+28>>2],l[(b=a+1672|0)>>2]=l[k+24>>2],l[b+4>>2]=i,b=l[k+20>>2],l[a+1664>>2]=l[k+16>>2],l[a+1668>>2]=b,Nb(a+5328|0,a+1664|0),s=l[4+(i=a+5336|0)>>2],l[(b=a+1656|0)>>2]=l[i>>2],l[b+4>>2]=s,b=l[a+5332>>2],l[a+1648>>2]=l[a+5328>>2],l[a+1652>>2]=b,tb(a+1648|0,0),i=l[k+28>>2],l[(b=a+1640|0)>>2]=l[k+24>>2],l[b+4>>2]=i,b=l[k+20>>2],l[a+1632>>2]=l[k+16>>2],l[a+1636>>2]=b,s=a,i=(15&v[0|(i=a+1632|0)])-5>>>0<=2?l[l[i+8>>2]>>2]:1,l[s+1616>>2]=i,tn(21841,a+1616|0),c=l[r+40>>2]),i=l[r+56>>2],u=l[12+(s=c=i+c|0)>>2],l[(b=a+5320|0)>>2]=l[s+8>>2],l[b+4>>2]=u,t=l[s+4>>2],l[a+5312>>2]=l[s>>2],l[a+5316>>2]=t;q:{if(l[r+48>>2]!=(0|i)){if(s=l[b+4>>2],l[(i=a+1608|0)>>2]=l[b>>2],l[i+4>>2]=s,i=l[a+5316>>2],l[a+1600>>2]=l[a+5312>>2],l[a+1604>>2]=i,Nb(a+5120|0,a+1600|0),s=l[4+(i=a+5128|0)>>2],l[b>>2]=l[i>>2],l[b+4>>2]=s,b=l[a+5124>>2],l[a+5312>>2]=l[a+5120>>2],l[a+5316>>2]=b,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break q}else t=l[c+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,t=l[4+(b=a+5320|0)>>2],l[(i=a+1592|0)>>2]=l[b>>2],l[i+4>>2]=t,i=l[a+5316>>2],l[a+1584>>2]=l[a+5312>>2],l[a+1588>>2]=i,!(15&v[a+1584|0]))break i;if(s=l[b+4>>2],l[(i=a+1576|0)>>2]=l[b>>2],l[i+4>>2]=s,b=l[a+5316>>2],l[a+1568>>2]=l[a+5312>>2],l[a+1572>>2]=b,zb(a+1568|0),i=l[k+28>>2],l[(b=a+1560|0)>>2]=l[k+24>>2],l[b+4>>2]=i,b=l[k+20>>2],l[a+1552>>2]=l[k+16>>2],l[a+1556>>2]=b,Nb(a+5296|0,a+1552|0),b=l[4+(k=a+5304|0)>>2],i=a+5128|0,k=l[k>>2],l[i>>2]=k,l[i+4>>2]=b,l[(i=a+1544|0)>>2]=k,l[i+4>>2]=b,b=l[a+5300>>2],i=l[a+5296>>2],l[a+5120>>2]=i,l[a+5124>>2]=b,l[a+1536>>2]=i,l[a+1540>>2]=b,!(15&v[a+1536|0]))break a;c=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?t=l[r+40>>2]:(i=583-(b<<1)&-8,nn((s=an((b+l[r+40>>2]|0)-8|0,i))+(i-(b=8-b|0)|0)|0,s,b),t=i+s|0,l[r+40>>2]=t,l[r+44>>2]=8-i),b=n+6|0,l[r+48>>2]=k,l[(i=k+t|0)-4>>2]=c,l[r+56>>2]=k,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}if(c=l[r+40>>2],b=l[r+52>>2],k=d[n+4>>1],s=d[n+2>>1])for(t=c+4|0,i=0;b=l[b+t>>2],(0|s)!=(0|(i=i+1|0)););if(i=l[(b=b+c|0)>>2],l[i+8>>2]<=(0|k))break e;i=b+(k+l[i+12>>2]<<4)|0,l[r+100>>2]&&(l[a+1808>>2]=k,tn(21599,a+1808|0),k=l[i+28>>2],l[(b=a+1800|0)>>2]=l[i+24>>2],l[b+4>>2]=k,b=l[i+20>>2],l[a+1792>>2]=l[i+16>>2],l[a+1796>>2]=b,Nb(a+5280|0,a+1792|0),s=l[4+(k=a+5288|0)>>2],l[(b=a+1784|0)>>2]=l[k>>2],l[b+4>>2]=s,b=l[a+5284>>2],l[a+1776>>2]=l[a+5280>>2],l[a+1780>>2]=b,tb(a+1776|0,0),k=l[i+28>>2],l[(b=a+1768|0)>>2]=l[i+24>>2],l[b+4>>2]=k,b=l[i+20>>2],l[a+1760>>2]=l[i+16>>2],l[a+1764>>2]=b,s=a,k=(15&v[0|(k=a+1760|0)])-5>>>0<=2?l[l[k+8>>2]>>2]:1,l[s+1744>>2]=k,tn(21841,a+1744|0),c=l[r+40>>2]),s=k=c+(b=l[r+56>>2])|0,c=l[k+12>>2],l[(t=a+5272|0)>>2]=l[k+8>>2],l[t+4>>2]=c,t=l[k+4>>2],l[a+5264>>2]=l[k>>2],l[a+5268>>2]=t;H:{if(l[r+48>>2]!=(0|b)){if(c=l[10947],l[8+(b=a+5120|0)>>2]=l[10946],l[b+12>>2]=c,t=l[10945],l[b>>2]=l[10944],l[b+4>>2]=t,t=l[4+(b=a+5128|0)>>2],l[s+8>>2]=l[b>>2],l[s+12>>2]=t,b=l[a+5124>>2],l[k>>2]=l[a+5120>>2],l[k+4>>2]=b,b=l[r+56>>2],t=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break H}else t=l[k+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=t,t=l[4+(b=a+5272|0)>>2],l[(k=a+1736|0)>>2]=l[b>>2],l[k+4>>2]=t,k=l[a+5268>>2],l[a+1728>>2]=l[a+5264>>2],l[a+1732>>2]=k,!(15&v[a+1728|0]))break r;if(s=l[b+4>>2],l[(k=a+1720|0)>>2]=l[b>>2],l[k+4>>2]=s,b=l[a+5268>>2],l[a+1712>>2]=l[a+5264>>2],l[a+1716>>2]=b,zb(a+1712|0),k=v[i+28|0]|v[i+29|0]<<8|v[i+30|0]<<16|v[i+31|0]<<24,s=a+5128|0,t=v[i+24|0]|v[i+25|0]<<8|v[i+26|0]<<16|v[i+27|0]<<24,l[s>>2]=t,l[s+4>>2]=k,s=v[i+16|0]|v[i+17|0]<<8|v[i+18|0]<<16|v[i+19|0]<<24,b=v[i+20|0]|v[i+21|0]<<8|v[i+22|0]<<16|v[i+23|0]<<24,l[(c=a+1704|0)>>2]=t,l[c+4>>2]=k,l[a+5120>>2]=s,l[a+5124>>2]=b,l[a+1696>>2]=s,l[a+1700>>2]=b,!(15&v[a+1696|0]))break a;u=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?c=l[r+40>>2]:(s=583-(b<<1)&-8,nn((t=an((b+l[r+40>>2]|0)-8|0,s))+(s-(b=8-b|0)|0)|0,t,b),c=s+t|0,l[r+40>>2]=c,l[r+44>>2]=8-s),b=n+6|0,l[r+48>>2]=k,l[(n=k+c|0)-4>>2]=u,l[r+56>>2]=k,t=l[4+(k=a+5128|0)>>2],l[n+8>>2]=l[k>>2],l[n+12>>2]=t,s=l[a+5124>>2],l[n>>2]=l[a+5120>>2],l[n+4>>2]=s,t=l[10947],l[8+(n=a+5120|0)>>2]=l[10946],l[n+12>>2]=t,s=l[10945],l[n>>2]=l[10944],l[n+4>>2]=s,n=l[k+4>>2],l[i+24>>2]=l[k>>2],l[i+28>>2]=n,n=l[a+5124>>2],l[i+16>>2]=l[a+5120>>2],l[i+20>>2]=n;break c}l[a+5256>>2]=l[r+56>>2],l[a+5260>>2]=l[r+52>>2],b=l[a+5260>>2],l[a+1944>>2]=l[a+5256>>2],l[a+1948>>2]=b,Ln(r,n,a+1944|0)}if(k=l[r+40>>2],b=l[r+52>>2],s=d[n+4>>1],t=d[n+2>>1])for(c=k+4|0,i=0;b=l[b+c>>2],(0|t)!=(0|(i=i+1|0)););if(b=l[(t=k+b|0)>>2],l[b+8>>2]<=(0|s))break e;c=l[b+12>>2],b=l[r+56>>2],E=l[12+(k=p=k+b|0)>>2],l[(i=a+5944|0)>>2]=l[k+8>>2],l[i+4>>2]=E,u=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=u;C:{if(l[r+48>>2]!=(0|b)){if(k=l[i+4>>2],l[(b=a+1936|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5940>>2],l[a+1928>>2]=l[a+5936>>2],l[a+1932>>2]=b,Nb(a+5120|0,a+1928|0),k=l[4+(b=a+5128|0)>>2],l[i>>2]=l[b>>2],l[i+4>>2]=k,b=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break C}else i=l[p+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,k=l[4+(i=a+5944|0)>>2],l[(b=a+1920|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5940>>2],l[a+1912>>2]=l[a+5936>>2],l[a+1916>>2]=b,!(15&v[a+1912|0]))break i;l[r+100>>2]&&(l[a+1904>>2]=s,tn(21599,a+1904|0),u=l[4+(k=b=a+5944|0)>>2],l[(i=a+1896|0)>>2]=l[k>>2],l[i+4>>2]=u,i=l[a+5940>>2],l[a+1888>>2]=l[a+5936>>2],l[a+1892>>2]=i,Nb(a+5240|0,a+1888|0),u=l[4+(k=a+5248|0)>>2],l[(i=a+1880|0)>>2]=l[k>>2],l[i+4>>2]=u,i=l[a+5244>>2],l[a+1872>>2]=l[a+5240>>2],l[a+1876>>2]=i,tb(a+1872|0,0),k=l[b+4>>2],l[(i=a+1864|0)>>2]=l[b>>2],l[i+4>>2]=k,b=l[a+5940>>2],l[a+1856>>2]=l[a+5936>>2],l[a+1860>>2]=b,k=a,i=(15&v[0|(i=a+1856|0)])-5>>>0<=2?l[l[i+8>>2]>>2]:1,l[k+1840>>2]=i,tn(21841,a+1840|0)),b=n+6|0,s=l[12+(k=16+(i=t+(s+c<<4)|0)|0)>>2],l[(n=a+1832|0)>>2]=l[k+8>>2],l[n+4>>2]=s,n=l[i+20>>2],l[a+1824>>2]=l[i+16>>2],l[a+1828>>2]=n,zb(a+1824|0),k=l[4+(n=a+5944|0)>>2],l[i+24>>2]=l[n>>2],l[i+28>>2]=k,n=l[a+5940>>2],l[i+16>>2]=l[a+5936>>2],l[i+20>>2]=n;break c}if(i=l[r+40>>2],b=l[r+52>>2],k=d[n+4>>1],n=d[n+2>>1])for(s=i+4|0;b=l[b+s>>2],(0|n)!=(0|(o=o+1|0)););if(i=l[(b=i+b|0)>>2],l[i+8>>2]<=(0|k))break e;b=b+(k+l[i+12>>2]<<4)|0,i=l[b+28>>2],l[(n=a+1960|0)>>2]=l[b+24>>2],l[n+4>>2]=i,i=l[b+20>>2],l[a+1952>>2]=l[b+16>>2],l[a+1956>>2]=i,zb(a+1952|0),o=l[10947],l[8+(i=a+5120|0)>>2]=l[10946],l[i+12>>2]=o,n=l[10945],l[i>>2]=l[10944],l[i+4>>2]=n,n=l[4+(i=a+5128|0)>>2],l[b+24>>2]=l[i>>2],l[b+28>>2]=n,i=l[a+5124>>2],l[b+16>>2]=l[a+5120>>2],l[b+20>>2]=i;break o}i=(k=l[r+40>>2])+l[r+52>>2]|0,s=l[i+-4>>2];U:{if(s){if(t=l[i+12>>2],k=l[k+s>>2],t>>>0<(s=l[k>>2])+(l[k+4>>2]<<1)>>>0&&t>>>0>=s>>>0)break U;break k}if(l[i+12>>2])break f}if(i=l[i>>2],s=l[i+28>>2],l[(k=a+2096|0)>>2]=l[i+24>>2],l[k+4>>2]=s,k=l[i+20>>2],l[a+2088>>2]=l[i+16>>2],l[a+2092>>2]=k,Nb(a+5224|0,a+2088|0),b=d[b>>1],s=l[4+(k=a+5232|0)>>2],l[(i=a+2080|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5228>>2],l[a+2072>>2]=l[a+5224>>2],l[a+2076>>2]=i,Kb(a+5120|0,a+2072|0,b),k=l[4+(i=a+5128|0)>>2],l[(b=a+2064|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5124>>2],l[a+2056>>2]=l[a+5120>>2],l[a+2060>>2]=b,!(15&v[a+2056|0]))break w;if(s=l[r+40>>2],b=l[r+52>>2],k=d[n+6>>1],t=d[n+4>>1])for(c=s+4|0,i=0;b=l[b+c>>2],(0|t)!=(0|(i=i+1|0)););if(i=l[(b=b+s|0)>>2],l[i+8>>2]<=(0|k))break e;i=b+(k+l[i+12>>2]<<4)|0,l[r+100>>2]&&(l[a+2048>>2]=k,tn(21599,a+2048|0),t=l[4+(b=a+5128|0)>>2],l[(k=a+2040|0)>>2]=l[b>>2],l[k+4>>2]=t,k=l[a+5124>>2],l[a+2032>>2]=l[a+5120>>2],l[a+2036>>2]=k,Nb(a+5208|0,a+2032|0),t=l[4+(s=a+5216|0)>>2],l[(k=a+2024|0)>>2]=l[s>>2],l[k+4>>2]=t,k=l[a+5212>>2],l[a+2016>>2]=l[a+5208>>2],l[a+2020>>2]=k,tb(a+2016|0,0),s=l[b+4>>2],l[(k=a+2008|0)>>2]=l[b>>2],l[k+4>>2]=s,b=l[a+5124>>2],l[a+2e3>>2]=l[a+5120>>2],l[a+2004>>2]=b,s=a,k=(15&v[0|(k=a+2e3|0)])-5>>>0<=2?l[l[k+8>>2]>>2]:1,l[s+1984>>2]=k,tn(21841,a+1984|0)),b=n+8|0,k=l[i+28>>2],l[(n=a+1976|0)>>2]=l[i+24>>2],l[n+4>>2]=k,n=l[i+20>>2],l[a+1968>>2]=l[i+16>>2],l[a+1972>>2]=n,zb(a+1968|0),k=l[4+(n=a+5128|0)>>2],l[i+24>>2]=l[n>>2],l[i+28>>2]=k,n=l[a+5124>>2],l[i+16>>2]=l[a+5120>>2],l[i+20>>2]=n;break c}t=(o=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(i=a+5944|0)>>2]=l[k+8>>2],l[i+4>>2]=c,s=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=s;j:{if(l[r+48>>2]!=(0|o)){if(k=l[i+4>>2],l[(o=a+2216|0)>>2]=l[i>>2],l[o+4>>2]=k,o=l[a+5940>>2],l[a+2208>>2]=l[a+5936>>2],l[a+2212>>2]=o,Nb(a+5120|0,a+2208|0),k=l[4+(o=a+5128|0)>>2],l[i>>2]=l[o>>2],l[i+4>>2]=k,i=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=i,o=l[r+56>>2],i=l[(o+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|o))break j}else i=l[t+-4>>2];l[r+48>>2]=o+24}if(l[r+56>>2]=i,k=l[4+(o=a+5944|0)>>2],l[(i=a+2200|0)>>2]=l[o>>2],l[i+4>>2]=k,i=l[a+5940>>2],l[a+2192>>2]=l[a+5936>>2],l[a+2196>>2]=i,!(15&v[a+2192|0]))break i;if(i=v[h+12|0]|v[h+13|0]<<8|v[h+14|0]<<16|v[h+15|0]<<24,o=a+5128|0,s=v[h+8|0]|v[h+9|0]<<8|v[h+10|0]<<16|v[h+11|0]<<24,l[o>>2]=s,l[o+4>>2]=i,o=v[0|h]|v[h+1|0]<<8|v[h+2|0]<<16|v[h+3|0]<<24,k=v[h+4|0]|v[h+5|0]<<8|v[h+6|0]<<16|v[h+7|0]<<24,l[(t=a+2184|0)>>2]=s,l[t+4>>2]=i,l[a+5120>>2]=o,l[a+5124>>2]=k,l[a+2176>>2]=o,l[a+2180>>2]=k,!(15&v[a+2176|0]))break a;if(t=l[r+56>>2],(0|(o=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?i=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),i=k+s|0,l[r+40>>2]=i,l[r+44>>2]=8-k),l[r+48>>2]=o,l[(i=i+o|0)-4>>2]=t,l[r+56>>2]=o,s=l[4+(k=o=a+5128|0)>>2],l[i+8>>2]=l[k>>2],l[i+12>>2]=s,k=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=k,l[a+5200>>2]=l[r+56>>2],l[a+5204>>2]=l[r+52>>2],i=l[a+5204>>2],l[a+2168>>2]=l[a+5200>>2],l[a+2172>>2]=i,Ln(r,n,a+2168|0),S=+l[r+96>>2],l[(i=a+5184|0)>>2]=4,l[i+4>>2]=0,m[i+8>>3]=S,i=l[4+(n=a+5192|0)>>2],n=l[n>>2],l[o>>2]=n,l[o+4>>2]=i,l[(o=a+2160|0)>>2]=n,l[o+4>>2]=i,i=l[a+5188>>2],n=l[a+5184>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+2152>>2]=n,l[a+2156>>2]=i,!(15&v[a+2152|0]))break a;if(s=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?i=l[r+40>>2]:(o=583-(i<<1)&-8,nn((k=an((i+l[r+40>>2]|0)-8|0,o))+(o-(i=8-i|0)|0)|0,k,i),i=k+o|0,l[r+40>>2]=i,l[r+44>>2]=8-o),l[r+48>>2]=n,l[(i=i+n|0)-4>>2]=s,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,o=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=o,i=v[r+92|0]|v[r+93|0]<<8|v[r+94|0]<<16|v[r+95|0]<<24,k=v[r+88|0]|v[r+89|0]<<8|v[r+90|0]<<16|v[r+91|0]<<24,l[n>>2]=k,l[n+4>>2]=i,n=v[r+80|0]|v[r+81|0]<<8|v[r+82|0]<<16|v[r+83|0]<<24,o=v[r+84|0]|v[r+85|0]<<8|v[r+86|0]<<16|v[r+87|0]<<24,l[(s=a+2144|0)>>2]=k,l[s+4>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=o,l[a+2136>>2]=n,l[a+2140>>2]=o,!(15&v[a+2136|0]))break a;if(s=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?i=l[r+40>>2]:(o=583-(i<<1)&-8,nn((k=an((i+l[r+40>>2]|0)-8|0,o))+(o-(i=8-i|0)|0)|0,k,i),i=k+o|0,l[r+40>>2]=i,l[r+44>>2]=8-o),l[r+48>>2]=n,l[(i=i+n|0)-4>>2]=s,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,o=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=o,k=l[4+(o=a+5944|0)>>2],l[(i=a+2128|0)>>2]=l[o>>2],l[i+4>>2]=k,i=l[a+5940>>2],l[a+2120>>2]=l[a+5936>>2],l[a+2124>>2]=i,Nb(a+5168|0,a+2120|0),i=l[4+(o=a+5176|0)>>2],o=l[o>>2],l[n>>2]=o,l[n+4>>2]=i,l[(n=a+2112|0)>>2]=o,l[n+4>>2]=i,i=l[a+5172>>2],n=l[a+5168>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+2104>>2]=n,l[a+2108>>2]=i,!(15&v[a+2104|0]))break a;s=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?i=l[r+40>>2]:(o=583-(i<<1)&-8,nn((k=an((i+l[r+40>>2]|0)-8|0,o))+(o-(i=8-i|0)|0)|0,k,i),i=k+o|0,l[r+40>>2]=i,l[r+44>>2]=8-o),l[r+48>>2]=n,l[(i=i+n|0)-4>>2]=s,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,o=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=o,rn(a+5120|0),i=l[n+4>>2],l[h+8>>2]=l[n>>2],l[h+12>>2]=i,i=l[a+5124>>2],l[h>>2]=l[a+5120>>2],l[h+4>>2]=i,n=l[4+(i=a+5944|0)>>2],l[r+88>>2]=l[i>>2],l[r+92>>2]=n,i=l[a+5940>>2],l[r+80>>2]=l[a+5936>>2],l[r+84>>2]=i,o=0,l[r+96>>2]=0;break c}c=(i=l[r+56>>2])+l[r+40>>2]|0,u=l[(s=c)+12>>2],l[(k=a+5608|0)>>2]=l[s+8>>2],l[k+4>>2]=u,t=l[s+4>>2],l[a+5600>>2]=l[s>>2],l[a+5604>>2]=t;N:{if(l[r+48>>2]!=(0|i)){if(s=l[k+4>>2],l[(i=a+2600|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5604>>2],l[a+2592>>2]=l[a+5600>>2],l[a+2596>>2]=i,Nb(a+5120|0,a+2592|0),s=l[4+(i=a+5128|0)>>2],l[k>>2]=l[i>>2],l[k+4>>2]=s,i=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break N}else t=l[c+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,t=l[4+(i=a+5608|0)>>2],l[(k=a+2584|0)>>2]=l[i>>2],l[k+4>>2]=t,k=l[a+5604>>2],l[a+2576>>2]=l[a+5600>>2],l[a+2580>>2]=k,!(15&v[a+2576|0]))break i;s=l[i+4>>2],l[(k=a+2568|0)>>2]=l[i>>2],l[k+4>>2]=s,i=l[a+5604>>2],l[a+2560>>2]=l[a+5600>>2],l[a+2564>>2]=i,Nb(a+5152|0,a+2560|0),s=l[4+(k=a+5160|0)>>2],l[(i=a+5944|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5156>>2],l[a+5936>>2]=l[a+5152>>2],l[a+5940>>2]=i;N:{if(l[r+96>>2]||(k=l[h+12>>2],l[(i=a+2552|0)>>2]=l[h+8>>2],l[i+4>>2]=k,i=l[h+4>>2],l[a+2544>>2]=l[h>>2],l[a+2548>>2]=i,6!=(15&v[a+2544|0])))s=l[4+(k=a+5944|0)>>2],l[(i=a+2536|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5940>>2],l[a+2528>>2]=l[a+5936>>2],l[a+2532>>2]=i,zb(a+2528|0);else if(k=l[r+92>>2],l[(i=a+2520|0)>>2]=l[r+88>>2],l[i+4>>2]=k,i=l[r+84>>2],l[a+2512>>2]=l[r+80>>2],l[a+2516>>2]=i,Nb(a+5120|0,a+2512|0),s=l[4+(k=a+5944|0)>>2],l[(i=a+2504|0)>>2]=l[k>>2],l[i+4>>2]=s,s=l[4+(k=a+5128|0)>>2],l[(i=a+2488|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5940>>2],l[a+2496>>2]=l[a+5936>>2],l[a+2500>>2]=i,i=l[a+5124>>2],l[a+2480>>2]=l[a+5120>>2],l[a+2484>>2]=i,!ik(a+2496|0,a+2480|0))break N;s=l[4+(k=a+5608|0)>>2],l[(i=a+2472|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5604>>2],l[a+2464>>2]=l[a+5600>>2],l[a+2468>>2]=i,zb(a+2464|0),c=(i=l[r+56>>2])+l[r+40>>2]|0,u=l[(s=c)+12>>2],l[(k=a+5944|0)>>2]=l[s+8>>2],l[k+4>>2]=u,t=l[s+4>>2],l[a+5936>>2]=l[s>>2],l[a+5940>>2]=t;j:{if(l[r+48>>2]!=(0|i)){if(s=l[k+4>>2],l[(i=a+2456|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5940>>2],l[a+2448>>2]=l[a+5936>>2],l[a+2452>>2]=i,Nb(a+5120|0,a+2448|0),s=l[4+(i=a+5128|0)>>2],l[k>>2]=l[i>>2],l[k+4>>2]=s,i=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break j}else t=l[c+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,s=l[4+(k=a+5944|0)>>2],l[(i=a+2440|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5940>>2],l[a+2432>>2]=l[a+5936>>2],l[a+2436>>2]=i,!(15&v[a+2432|0]))break i;t=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(s=a+5096|0)>>2]=l[k+8>>2],l[s+4>>2]=c,s=l[k+4>>2],l[a+5088>>2]=l[k>>2],l[a+5092>>2]=s;j:{if(l[r+48>>2]!=(0|i)){if(t=l[4+(i=a+5096|0)>>2],l[(k=a+2424|0)>>2]=l[i>>2],l[k+4>>2]=t,k=l[a+5092>>2],l[a+2416>>2]=l[a+5088>>2],l[a+2420>>2]=k,Nb(a+5120|0,a+2416|0),s=l[4+(k=a+5128|0)>>2],l[i>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5124>>2],l[a+5088>>2]=l[a+5120>>2],l[a+5092>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break j}else t=l[t+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,t=l[4+(i=a+5096|0)>>2],l[(k=a+2408|0)>>2]=l[i>>2],l[k+4>>2]=t,k=l[a+5092>>2],l[a+2400>>2]=l[a+5088>>2],l[a+2404>>2]=k,!(15&v[a+2400|0]))break i;s=l[i+4>>2],l[(k=a+2392|0)>>2]=l[i>>2],l[k+4>>2]=s,i=l[a+5092>>2],l[a+2384>>2]=l[a+5088>>2],l[a+2388>>2]=i,S=Wb(a+2384|0),k=l[h+12>>2],l[(i=a+5528|0)>>2]=l[h+8>>2],l[i+4>>2]=k,i=l[h+4>>2],l[a+5520>>2]=l[h>>2],l[a+5524>>2]=i,t=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(s=a+5512|0)>>2]=l[k+8>>2],l[s+4>>2]=c,s=l[k+4>>2],l[a+5504>>2]=l[k>>2],l[a+5508>>2]=s,s=l[r+48>>2]!=(0|i),k=g(S)<2147483648?~~S:-2147483648;j:{if(s){if(c=l[4+(i=a+5512|0)>>2],l[(s=a+2376|0)>>2]=l[i>>2],l[s+4>>2]=c,s=l[a+5508>>2],l[a+2368>>2]=l[a+5504>>2],l[a+2372>>2]=s,Nb(a+5120|0,a+2368|0),t=l[4+(s=a+5128|0)>>2],l[i>>2]=l[s>>2],l[i+4>>2]=t,i=l[a+5124>>2],l[a+5504>>2]=l[a+5120>>2],l[a+5508>>2]=i,i=l[r+56>>2],t=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break j}else t=l[t+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=t,c=l[4+(i=a+5512|0)>>2],l[(s=a+2360|0)>>2]=l[i>>2],l[s+4>>2]=c,s=l[a+5508>>2],l[a+2352>>2]=l[a+5504>>2],l[a+2356>>2]=s,!(15&v[a+2352|0]))break i;if(s=l[a+5508>>2],l[h>>2]=l[a+5504>>2],l[h+4>>2]=s,s=l[i+4>>2],l[h+8>>2]=l[i>>2],l[h+12>>2]=s,l[a+5504>>2]=l[r+56>>2],i=l[r+52>>2],c=l[4+(t=a+5528|0)>>2],l[(s=a+2344|0)>>2]=l[t>>2],l[s+4>>2]=c,l[a+5508>>2]=i,i=l[a+5524>>2],l[a+2336>>2]=l[a+5520>>2],l[a+2340>>2]=i,Nb(a+5072|0,a+2336|0),i=l[4+(t=a+5080|0)>>2],s=a+5128|0,t=l[t>>2],l[s>>2]=t,l[s+4>>2]=i,l[(s=a+2328|0)>>2]=t,l[s+4>>2]=i,i=l[a+5076>>2],s=l[a+5072>>2],l[a+5120>>2]=s,l[a+5124>>2]=i,l[a+2320>>2]=s,l[a+2324>>2]=i,!(15&v[a+2320|0]))break a;if(u=l[r+56>>2],(0|(s=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(c=583-(i<<1)&-8,nn((t=an((i+l[r+40>>2]|0)-8|0,c))+(c-(i=8-i|0)|0)|0,t,i),t=t+c|0,l[r+40>>2]=t,l[r+44>>2]=8-c),l[r+48>>2]=s,l[(i=s+t|0)-4>>2]=u,l[r+56>>2]=s,c=l[4+(s=a+5128|0)>>2],l[i+8>>2]=l[s>>2],l[i+12>>2]=c,t=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=t,i=l[a+5508>>2],l[a+2312>>2]=l[a+5504>>2],l[a+2316>>2]=i,Ln(r,n,a+2312|0),i=l[4+(n=a+5528|0)>>2],n=l[n>>2],l[s>>2]=n,l[s+4>>2]=i,l[(s=a+2304|0)>>2]=n,l[s+4>>2]=i,i=l[a+5524>>2],n=l[a+5520>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+2296>>2]=n,l[a+2300>>2]=i,!(15&v[a+2296|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(s=583-(i<<1)&-8,nn((t=an((i+l[r+40>>2]|0)-8|0,s))+(s-(i=8-i|0)|0)|0,t,i),t=s+t|0,l[r+40>>2]=t,l[r+44>>2]=8-s),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,s=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=s,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n,l[r+96>>2]=k,n=l[r+92>>2],l[(i=a+2288|0)>>2]=l[r+88>>2],l[i+4>>2]=n,i=l[r+84>>2],l[a+2280>>2]=l[r+80>>2],l[a+2284>>2]=i,zb(a+2280|0),n=l[4+(i=a+5944|0)>>2],l[r+88>>2]=l[i>>2],l[r+92>>2]=n,i=l[a+5940>>2],l[r+80>>2]=l[a+5936>>2],l[r+84>>2]=i;break c}n=l[4+(i=a+5608|0)>>2],l[(b=a+2272|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5604>>2],l[a+2264>>2]=l[a+5600>>2],l[a+2268>>2]=b,l[a+2256>>2]=Jb(a+2264|0,a+5120|0,30),Yb(a+5520|0,22024,a+2256|0),n=l[4+(i=a+5528|0)>>2],l[(b=a+2248|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5524>>2],l[a+2240>>2]=l[a+5520>>2],l[a+2244>>2]=b,Hb(a+5104|0,a+2240|0),o=l[4+(n=a+5112|0)>>2],l[(i=b=a+5944|0)>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+5108>>2],l[a+5936>>2]=l[a+5104>>2],l[a+5940>>2]=i,n=l[r+36>>2],l[(i=a+2232|0)>>2]=l[r+32>>2],l[i+4>>2]=n,i=l[r+28>>2],l[a+2224>>2]=l[r+24>>2],l[a+2228>>2]=i,zb(a+2224|0),i=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=i,b=l[a+5940>>2],l[r+24>>2]=l[a+5936>>2],l[r+28>>2]=b;break o}i=l[h+12>>2],l[(b=a+2648|0)>>2]=l[h+8>>2],l[b+4>>2]=i,b=l[h+4>>2],l[a+2640>>2]=l[h>>2],l[a+2644>>2]=b,zb(a+2640|0),k=(b=l[r+56>>2])+l[r+40>>2]|0,s=l[k+12>>2],l[(i=a+5944|0)>>2]=l[k+8>>2],l[i+4>>2]=s,o=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=o;z:{if(l[r+48>>2]!=(0|b)){if(n=l[i+4>>2],l[(b=a+2632|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5940>>2],l[a+2624>>2]=l[a+5936>>2],l[a+2628>>2]=b,Nb(a+5120|0,a+2624|0),n=l[4+(b=a+5128|0)>>2],l[i>>2]=l[b>>2],l[i+4>>2]=n,b=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=b,b=l[r+56>>2],o=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break z}else o=l[k+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=o,o=l[4+(b=a+5944|0)>>2],l[(i=a+2616|0)>>2]=l[b>>2],l[i+4>>2]=o,i=l[a+5940>>2],l[a+2608>>2]=l[a+5936>>2],l[a+2612>>2]=i,!(15&v[a+2608|0]))break i;i=l[a+5940>>2],l[h>>2]=l[a+5936>>2],l[h+4>>2]=i,i=l[b+4>>2],l[h+8>>2]=l[b>>2],l[h+12>>2]=i;break o}c=(i=l[r+56>>2])+l[r+40>>2]|0,u=l[(k=c)+12>>2],l[(n=a+5608|0)>>2]=l[k+8>>2],l[n+4>>2]=u,s=l[k+4>>2],l[a+5600>>2]=l[k>>2],l[a+5604>>2]=s;I:{if(l[r+48>>2]!=(0|i)){if(k=l[n+4>>2],l[(i=a+3064|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5604>>2],l[a+3056>>2]=l[a+5600>>2],l[a+3060>>2]=i,Nb(a+5120|0,a+3056|0),k=l[4+(i=a+5128|0)>>2],l[n>>2]=l[i>>2],l[n+4>>2]=k,i=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=i,i=l[r+56>>2],n=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break I}else n=l[c+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=n,k=l[4+(n=a+5608|0)>>2],l[(i=a+3048|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5604>>2],l[a+3040>>2]=l[a+5600>>2],l[a+3044>>2]=i,!(15&v[a+3040|0]))break i;s=(i=l[r+56>>2])+l[r+40>>2]|0,c=l[(n=s)+12>>2],l[(k=a+5528|0)>>2]=l[n+8>>2],l[k+4>>2]=c,k=l[n+4>>2],l[a+5520>>2]=l[n>>2],l[a+5524>>2]=k;I:{if(l[r+48>>2]!=(0|i)){if(s=l[4+(i=a+5528|0)>>2],l[(n=a+3032|0)>>2]=l[i>>2],l[n+4>>2]=s,n=l[a+5524>>2],l[a+3024>>2]=l[a+5520>>2],l[a+3028>>2]=n,Nb(a+5120|0,a+3024|0),k=l[4+(n=a+5128|0)>>2],l[i>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5124>>2],l[a+5520>>2]=l[a+5120>>2],l[a+5524>>2]=i,i=l[r+56>>2],n=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break I}else n=l[s+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=n,k=l[4+(n=a+5528|0)>>2],l[(i=a+3016|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5524>>2],l[a+3008>>2]=l[a+5520>>2],l[a+3012>>2]=i,!(15&v[a+3008|0]))break i;if(k=l[4+(n=a+5608|0)>>2],l[(i=a+3e3|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5604>>2],l[a+2992>>2]=l[a+5600>>2],l[a+2996>>2]=i,Nb(a+5056|0,a+2992|0),k=l[4+(n=a+5064|0)>>2],l[(i=a+5944|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5060>>2],l[a+5936>>2]=l[a+5056>>2],l[a+5940>>2]=i,l[r+96>>2]||(n=l[h+12>>2],l[(i=a+2984|0)>>2]=l[h+8>>2],l[i+4>>2]=n,i=l[h+4>>2],l[a+2976>>2]=l[h>>2],l[a+2980>>2]=i,6!=(15&v[a+2976|0]))){k=l[4+(n=a+5944|0)>>2],l[(i=a+2968|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5940>>2],l[a+2960>>2]=l[a+5936>>2],l[a+2964>>2]=i,zb(a+2960|0);break u}if(n=l[r+92>>2],l[(i=a+2952|0)>>2]=l[r+88>>2],l[i+4>>2]=n,i=l[r+84>>2],l[a+2944>>2]=l[r+80>>2],l[a+2948>>2]=i,Nb(a+5120|0,a+2944|0),k=l[4+(n=a+5944|0)>>2],l[(i=a+2936|0)>>2]=l[n>>2],l[i+4>>2]=k,k=l[4+(n=a+5128|0)>>2],l[(i=a+2920|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5940>>2],l[a+2928>>2]=l[a+5936>>2],l[a+2932>>2]=i,i=l[a+5124>>2],l[a+2912>>2]=l[a+5120>>2],l[a+2916>>2]=i,ik(a+2928|0,a+2912|0))break u;n=l[4+(i=a+5528|0)>>2],l[(b=a+2728|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5524>>2],l[a+2720>>2]=l[a+5520>>2],l[a+2724>>2]=b,b=Jb(a+2720|0,a+5473|0,15),o=l[4+(n=a+5608|0)>>2],l[(i=a+2712|0)>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+5604>>2],l[a+2704>>2]=l[a+5600>>2],l[a+2708>>2]=i,l[a+2692>>2]=Jb(a+2704|0,a+5120|0,30),l[a+2688>>2]=b,Yb(a+5504|0,22249,a+2688|0),n=l[4+(i=a+5512|0)>>2],l[(b=a+2680|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5508>>2],l[a+2672>>2]=l[a+5504>>2],l[a+2676>>2]=b,Hb(a+5040|0,a+2672|0),o=l[4+(n=a+5048|0)>>2],l[(i=b=a+5944|0)>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+5044>>2],l[a+5936>>2]=l[a+5040>>2],l[a+5940>>2]=i,n=l[r+36>>2],l[(i=a+2664|0)>>2]=l[r+32>>2],l[i+4>>2]=n,i=l[r+28>>2],l[a+2656>>2]=l[r+24>>2],l[a+2660>>2]=i,zb(a+2656|0),i=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=i,b=l[a+5940>>2],l[r+24>>2]=l[a+5936>>2],l[r+28>>2]=b;break o}s=d[n+2>>1],c=(b=l[r+56>>2])+l[r+40>>2]|0,u=l[(k=c)+12>>2],l[(i=a+5944|0)>>2]=l[k+8>>2],l[i+4>>2]=u,t=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=t;O:{if(l[r+48>>2]!=(0|b)){if(k=l[i+4>>2],l[(b=a+3128|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5940>>2],l[a+3120>>2]=l[a+5936>>2],l[a+3124>>2]=b,Nb(a+5120|0,a+3120|0),k=l[4+(b=a+5128|0)>>2],l[i>>2]=l[b>>2],l[i+4>>2]=k,b=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break O}else i=l[c+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,t=l[4+(k=b=a+5944|0)>>2],l[(i=a+3112|0)>>2]=l[k>>2],l[i+4>>2]=t,i=l[a+5940>>2],l[a+3104>>2]=l[a+5936>>2],l[a+3108>>2]=i,!(15&v[a+3104|0]))break i;if(k=l[b+4>>2],l[(i=a+3096|0)>>2]=l[b>>2],l[i+4>>2]=k,i=l[a+5940>>2],l[a+3088>>2]=l[a+5936>>2],l[a+3092>>2]=i,k=v[a+3088|0],i=l[b+4>>2],t=a+5128|0,b=l[b>>2],l[t>>2]=b,l[t+4>>2]=i,l[(t=a+3080|0)>>2]=b,l[t+4>>2]=i,b=l[a+5940>>2],i=l[a+5936>>2],l[a+5120>>2]=i,l[a+5124>>2]=b,l[a+3072>>2]=i,l[a+3076>>2]=b,!(15&v[a+3072|0]))break a;t=(i=s<<1)+(s=n+4|0)|0,c=(15&k)-1>>>0<2,u=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?i=l[r+40>>2]:(k=583-(b<<1)&-8,nn((i=an((b+l[r+40>>2]|0)-8|0,k))+(k-(b=8-b|0)|0)|0,i,b),i=i+k|0,l[r+40>>2]=i,l[r+44>>2]=8-k),b=c?t:s,l[r+48>>2]=n,l[(i=i+n|0)-4>>2]=u,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}p=(i=l[r+56>>2])+l[r+40>>2]|0,E=l[(c=p)+12>>2],l[(s=a+5608|0)>>2]=l[c+8>>2],l[s+4>>2]=E,u=l[c+4>>2],l[a+5600>>2]=l[c>>2],l[a+5604>>2]=u;R:{if(l[r+48>>2]!=(0|i)){if(c=l[s+4>>2],l[(i=a+3912|0)>>2]=l[s>>2],l[i+4>>2]=c,i=l[a+5604>>2],l[a+3904>>2]=l[a+5600>>2],l[a+3908>>2]=i,Nb(a+5120|0,a+3904|0),c=l[4+(i=a+5128|0)>>2],l[s>>2]=l[i>>2],l[s+4>>2]=c,i=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=i,i=l[r+56>>2],c=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break R}else c=l[p+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=c,u=l[4+(i=a+5608|0)>>2],l[(s=a+3896|0)>>2]=l[i>>2],l[s+4>>2]=u,s=l[a+5604>>2],l[a+3888>>2]=l[a+5600>>2],l[a+3892>>2]=s,!(15&v[a+3888|0]))break i;if(c=l[i+4>>2],l[(s=a+3880|0)>>2]=l[i>>2],l[s+4>>2]=c,i=l[a+5604>>2],l[a+3872>>2]=l[a+5600>>2],l[a+3876>>2]=i,Nb(a+4992|0,a+3872|0),c=l[4+(s=a+5e3|0)>>2],l[(i=a+5944|0)>>2]=l[s>>2],l[i+4>>2]=c,i=l[a+4996>>2],l[a+5936>>2]=l[a+4992>>2],l[a+5940>>2]=i,l[r+96>>2]||(s=l[h+12>>2],l[(i=a+3864|0)>>2]=l[h+8>>2],l[i+4>>2]=s,i=l[h+4>>2],l[a+3856>>2]=l[h>>2],l[a+3860>>2]=i,6!=(15&v[a+3856|0])))c=l[4+(s=a+5944|0)>>2],l[(i=a+3848|0)>>2]=l[s>>2],l[i+4>>2]=c,i=l[a+5940>>2],l[a+3840>>2]=l[a+5936>>2],l[a+3844>>2]=i,zb(a+3840|0);else if(s=l[r+92>>2],l[(i=a+3832|0)>>2]=l[r+88>>2],l[i+4>>2]=s,i=l[r+84>>2],l[a+3824>>2]=l[r+80>>2],l[a+3828>>2]=i,Nb(a+5120|0,a+3824|0),c=l[4+(s=a+5944|0)>>2],l[(i=a+3816|0)>>2]=l[s>>2],l[i+4>>2]=c,c=l[4+(s=a+5128|0)>>2],l[(i=a+3800|0)>>2]=l[s>>2],l[i+4>>2]=c,i=l[a+5940>>2],l[a+3808>>2]=l[a+5936>>2],l[a+3812>>2]=i,i=l[a+5124>>2],l[a+3792>>2]=l[a+5120>>2],l[a+3796>>2]=i,!ik(a+3808|0,a+3792|0))break m;if(i=l[4+(c=a+5608|0)>>2],s=a+5128|0,c=l[c>>2],l[s>>2]=c,l[s+4>>2]=i,l[(s=a+3784|0)>>2]=c,l[s+4>>2]=i,i=l[a+5604>>2],s=l[a+5600>>2],l[a+5120>>2]=s,l[a+5124>>2]=i,l[a+3776>>2]=s,l[a+3780>>2]=i,!(15&v[a+3776|0]))break a;if(p=l[r+56>>2],(0|(s=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?c=l[r+40>>2]:(u=583-(i<<1)&-8,nn((c=an((i+l[r+40>>2]|0)-8|0,u))+(u-(i=8-i|0)|0)|0,c,i),c=c+u|0,l[r+40>>2]=c,l[r+44>>2]=8-u),l[r+48>>2]=s,l[(i=s+c|0)-4>>2]=p,l[r+56>>2]=s,u=l[4+(s=a+5128|0)>>2],l[i+8>>2]=l[s>>2],l[i+12>>2]=u,c=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=c,l[(i=a+4960|0)>>2]=4,l[i+4>>2]=0,m[i+8>>3]=-1,i=l[4+(c=a+4968|0)>>2],c=l[c>>2],l[s>>2]=c,l[s+4>>2]=i,l[(s=a+3768|0)>>2]=c,l[s+4>>2]=i,i=l[a+4964>>2],s=l[a+4960>>2],l[a+5120>>2]=s,l[a+5124>>2]=i,l[a+3760>>2]=s,l[a+3764>>2]=i,!(15&v[a+3760|0]))break a;p=l[r+56>>2],(0|(s=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?c=l[r+40>>2]:(u=583-(i<<1)&-8,nn((c=an((i+l[r+40>>2]|0)-8|0,u))+(u-(i=8-i|0)|0)|0,c,i),c=c+u|0,l[r+40>>2]=c,l[r+44>>2]=8-u),l[r+48>>2]=s,l[(i=s+c|0)-4>>2]=p,l[r+56>>2]=s,c=l[4+(s=a+5128|0)>>2],l[i+8>>2]=l[s>>2],l[i+12>>2]=c,s=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=s}p=(i=l[r+56>>2])+l[r+40>>2]|0,E=l[(c=p)+12>>2],l[(s=a+4952|0)>>2]=l[c+8>>2],l[s+4>>2]=E,u=l[c+4>>2],l[a+4944>>2]=l[c>>2],l[a+4948>>2]=u;T:{if(l[r+48>>2]!=(0|i)){if(c=l[s+4>>2],l[(i=a+3752|0)>>2]=l[s>>2],l[i+4>>2]=c,i=l[a+4948>>2],l[a+3744>>2]=l[a+4944>>2],l[a+3748>>2]=i,Nb(a+5120|0,a+3744|0),c=l[4+(i=a+5128|0)>>2],l[s>>2]=l[i>>2],l[s+4>>2]=c,i=l[a+5124>>2],l[a+4944>>2]=l[a+5120>>2],l[a+4948>>2]=i,i=l[r+56>>2],c=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break T}else c=l[p+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=c,u=l[4+(i=a+4952|0)>>2],l[(s=a+3736|0)>>2]=l[i>>2],l[s+4>>2]=u,s=l[a+4948>>2],l[a+3728>>2]=l[a+4944>>2],l[a+3732>>2]=s,!(15&v[a+3728|0]))break i;c=l[i+4>>2],l[(s=a+3720|0)>>2]=l[i>>2],l[s+4>>2]=c,i=l[a+4948>>2],l[a+3712>>2]=l[a+4944>>2],l[a+3716>>2]=i,S=Wb(a+3712|0),u=(i=l[r+56>>2])+l[r+40>>2]|0,p=l[(s=u)+12>>2],l[(c=a+5944|0)>>2]=l[s+8>>2],l[c+4>>2]=p,c=l[s+4>>2],l[a+5936>>2]=l[s>>2],l[a+5940>>2]=c,c=l[r+48>>2]!=(0|i),s=g(S)<2147483648?~~S:-2147483648;T:{if(c){if(p=l[4+(i=a+5944|0)>>2],l[(c=a+3704|0)>>2]=l[i>>2],l[c+4>>2]=p,c=l[a+5940>>2],l[a+3696>>2]=l[a+5936>>2],l[a+3700>>2]=c,Nb(a+5120|0,a+3696|0),u=l[4+(c=a+5128|0)>>2],l[i>>2]=l[c>>2],l[i+4>>2]=u,i=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=i,i=l[r+56>>2],c=l[(i+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|i))break T}else c=l[u+-4>>2];l[r+48>>2]=i+24}if(l[r+56>>2]=c,p=l[4+(i=a+5944|0)>>2],l[(c=a+3688|0)>>2]=l[i>>2],l[c+4>>2]=p,c=l[a+5940>>2],l[a+3680>>2]=l[a+5936>>2],l[a+3684>>2]=c,!(15&v[a+3680|0]))break i;u=l[i+4>>2],l[(c=a+3672|0)>>2]=l[i>>2],l[c+4>>2]=u,i=l[a+5940>>2],l[a+3664>>2]=l[a+5936>>2],l[a+3668>>2]=i;T:{R:{O:{I:{if(6!=(15&v[a+3664|0])){if(u=l[4+(c=a+5944|0)>>2],l[(i=a+3656|0)>>2]=l[c>>2],l[i+4>>2]=u,i=l[a+5940>>2],l[a+3648>>2]=l[a+5936>>2],l[a+3652>>2]=i,7!=(15&v[a+3648|0]))break I;if(12!=(65534&t)?(c=l[4+(t=a+5944|0)>>2],l[(i=a+3544|0)>>2]=l[t>>2],l[i+4>>2]=c,i=l[a+5940>>2],l[a+3536>>2]=l[a+5936>>2],l[a+3540>>2]=i,i=jn(a+3536|0,s)):(t=l[4+(s=a+5944|0)>>2],l[(i=a+3528|0)>>2]=l[s>>2],l[i+4>>2]=t,i=l[a+5940>>2],l[a+3520>>2]=l[a+5936>>2],l[a+3524>>2]=i,i=Df(a+3520|0)),u=l[4+(s=a+5944|0)>>2],l[(t=a+3512|0)>>2]=l[s>>2],l[t+4>>2]=u,t=l[a+5940>>2],l[a+3504>>2]=l[a+5936>>2],l[a+3508>>2]=t,!(c=-2!=(0|i)))break T;u=l[s+4>>2],l[(t=a+3496|0)>>2]=l[s>>2],l[t+4>>2]=u,t=l[a+5940>>2],l[a+3488>>2]=l[a+5936>>2],l[a+3492>>2]=t,_f(a+5120|0,a+3488|0,i),E=l[4+(t=a+5128|0)>>2],l[(u=a+5608|0)>>2]=l[t>>2],l[u+4>>2]=E,p=l[s+4>>2],l[(u=a+3480|0)>>2]=l[s>>2],l[u+4>>2]=p,s=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=s,s=l[a+5940>>2],l[a+3472>>2]=l[a+5936>>2],l[a+3476>>2]=s,fk(a+5120|0,a+3472|0,i),u=l[t+4>>2],l[(s=a+5528|0)>>2]=l[t>>2],l[s+4>>2]=u,s=l[a+5124>>2],l[a+5520>>2]=l[a+5120>>2],l[a+5524>>2]=s,s=0}else{if(p=l[4+(c=u=a+5944|0)>>2],l[(i=a+3464|0)>>2]=l[c>>2],l[i+4>>2]=p,i=l[a+5940>>2],l[a+3456>>2]=l[a+5936>>2],l[a+3460>>2]=i,Nb(a+4928|0,a+3456|0),p=l[4+(c=a+4936|0)>>2],l[(i=a+3448|0)>>2]=l[c>>2],l[i+4>>2]=p,i=l[a+4932>>2],l[a+3440>>2]=l[a+4928>>2],l[a+3444>>2]=i,c=1,(0|(i=12==(65534&t)?0:s+1|0))>=(0|(t=Zb(a+3440|0))))break T;l[(s=a+5120|0)>>2]=4,l[s+4>>2]=0,m[s+8>>3]=0|i,F=l[4+(s=a+5128|0)>>2],l[(p=a+5608|0)>>2]=l[s>>2],l[p+4>>2]=F,E=l[u+4>>2],l[(p=a+3432|0)>>2]=l[u>>2],l[p+4>>2]=E,u=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=u,u=l[a+5940>>2],l[a+3424>>2]=l[a+5936>>2],l[a+3428>>2]=u,Nb(a+4912|0,a+3424|0),E=l[4+(p=a+4920|0)>>2],l[(u=a+3416|0)>>2]=l[p>>2],l[u+4>>2]=E,u=l[a+4916>>2],l[a+3408>>2]=l[a+4912>>2],l[a+3412>>2]=u,Kb(a+5120|0,a+3408|0,i),p=l[s+4>>2],l[(u=a+5528|0)>>2]=l[s>>2],l[u+4>>2]=p,s=l[a+5124>>2],l[a+5520>>2]=l[a+5120>>2],l[a+5524>>2]=s,s=(t+-1|0)==(0|i)}if(c&&!k)break O;n=l[4+(i=a+5528|0)>>2],l[(b=a+3216|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5524>>2],l[a+3208>>2]=l[a+5520>>2],l[a+3212>>2]=b,zb(a+3208|0);break T}if((b=(65535&t)-12|0)>>>0<=1){if(b-1)break R;break T}P(22945,14305,754,43093),M()}if(s){if(k=l[4+(n=a+5944|0)>>2],l[(i=a+3400|0)>>2]=l[n>>2],l[i+4>>2]=k,i=l[a+5940>>2],l[a+3392>>2]=l[a+5936>>2],l[a+3396>>2]=i,zb(a+3392|0),s=l[4+(i=a+5528|0)>>2],l[(n=a+3384|0)>>2]=l[i>>2],l[n+4>>2]=s,n=l[a+5524>>2],l[a+3376>>2]=l[a+5520>>2],l[a+3380>>2]=n,Nb(a+4848|0,a+3376|0),s=l[4+(k=a+5608|0)>>2],l[(n=a+3368|0)>>2]=l[k>>2],l[n+4>>2]=s,s=l[4+(k=a+4856|0)>>2],l[(n=a+3352|0)>>2]=l[k>>2],l[n+4>>2]=s,n=l[a+5604>>2],l[a+3360>>2]=l[a+5600>>2],l[a+3364>>2]=n,n=l[a+4852>>2],l[a+3344>>2]=l[a+4848>>2],l[a+3348>>2]=n,ma(r,a+3360|0,a+3344|0),n=l[i+4>>2],k=a+5128|0,i=l[i>>2],l[k>>2]=i,l[k+4>>2]=n,l[(k=a+3336|0)>>2]=i,l[k+4>>2]=n,i=l[a+5524>>2],n=l[a+5520>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+3328>>2]=n,l[a+3332>>2]=i,!(15&v[a+3328|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}if(l[a+5504>>2]=l[r+56>>2],s=l[r+52>>2],k=l[4+(c=a+5944|0)>>2],t=a+3320|0,c=l[c>>2],l[t>>2]=c,l[t+4>>2]=k,l[a+5508>>2]=s,l[(s=a+5128|0)>>2]=c,l[s+4>>2]=k,k=l[a+5940>>2],s=l[a+5936>>2],l[a+3312>>2]=s,l[a+3316>>2]=k,l[a+5120>>2]=s,l[a+5124>>2]=k,!(15&v[a+3312|0]))break a;if(u=l[r+56>>2],(0|(s=l[r+48>>2]+-24|0))>=(0|(k=l[r+44>>2]))?k=l[r+40>>2]:(t=583-(k<<1)&-8,nn((c=an((k+l[r+40>>2]|0)-8|0,t))+(t-(k=8-k|0)|0)|0,c,k),k=t+c|0,l[r+40>>2]=k,l[r+44>>2]=8-t),l[r+48>>2]=s,l[(k=k+s|0)-4>>2]=u,l[r+56>>2]=s,c=l[4+(s=a+5128|0)>>2],l[k+8>>2]=l[s>>2],l[k+12>>2]=c,t=l[a+5124>>2],l[k>>2]=l[a+5120>>2],l[k+4>>2]=t,l[(k=a+4832|0)>>2]=4,l[k+4>>2]=0,m[k+8>>3]=0|i,i=l[4+(k=a+4840|0)>>2],k=l[k>>2],l[s>>2]=k,l[s+4>>2]=i,l[(s=a+3304|0)>>2]=k,l[s+4>>2]=i,i=l[a+4836>>2],k=l[a+4832>>2],l[a+5120>>2]=k,l[a+5124>>2]=i,l[a+3296>>2]=k,l[a+3300>>2]=i,!(15&v[a+3296|0]))break a;if(c=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(s=583-(i<<1)&-8,nn((t=an((i+l[r+40>>2]|0)-8|0,s))+(s-(i=8-i|0)|0)|0,t,i),t=s+t|0,l[r+40>>2]=t,l[r+44>>2]=8-s),l[r+48>>2]=k,l[(i=k+t|0)-4>>2]=c,l[r+56>>2]=k,t=l[4+(k=a+5128|0)>>2],l[i+8>>2]=l[k>>2],l[i+12>>2]=t,s=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=s,i=l[a+5508>>2],l[a+3288>>2]=l[a+5504>>2],l[a+3292>>2]=i,Ln(r,n,a+3288|0),t=l[4+(i=a+5528|0)>>2],l[(n=a+3280|0)>>2]=l[i>>2],l[n+4>>2]=t,n=l[a+5524>>2],l[a+3272>>2]=l[a+5520>>2],l[a+3276>>2]=n,Nb(a+4816|0,a+3272|0),t=l[4+(s=a+5608|0)>>2],l[(n=a+3264|0)>>2]=l[s>>2],l[n+4>>2]=t,t=l[4+(s=a+4824|0)>>2],l[(n=a+3248|0)>>2]=l[s>>2],l[n+4>>2]=t,n=l[a+5604>>2],l[a+3256>>2]=l[a+5600>>2],l[a+3260>>2]=n,n=l[a+4820>>2],l[a+3240>>2]=l[a+4816>>2],l[a+3244>>2]=n,ma(r,a+3256|0,a+3240|0),n=l[i+4>>2],i=l[i>>2],l[k>>2]=i,l[k+4>>2]=n,l[(k=a+3232|0)>>2]=i,l[k+4>>2]=n,i=l[a+5524>>2],n=l[a+5520>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+3224>>2]=n,l[a+3228>>2]=i,!(15&v[a+3224|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}o=l[4+(b=a+5944|0)>>2],l[(i=a+3640|0)>>2]=l[b>>2],l[i+4>>2]=o,i=l[a+5940>>2],l[a+3632>>2]=l[a+5936>>2],l[a+3636>>2]=i,i=Xb(15&v[a+3632|0]),o=l[b+4>>2],l[(n=a+3624|0)>>2]=l[b>>2],l[n+4>>2]=o,b=l[a+5940>>2],l[a+3616>>2]=l[a+5936>>2],l[a+3620>>2]=b,Nb(a+4864|0,a+3616|0),o=l[4+(n=a+4872|0)>>2],l[(b=a+3608|0)>>2]=l[n>>2],l[b+4>>2]=o,b=l[a+4868>>2],l[a+3600>>2]=l[a+4864>>2],l[a+3604>>2]=b,l[a+3588>>2]=Jb(a+3600|0,a+5504|0,15),l[a+3584>>2]=i,Yb(a+4880|0,23290,a+3584|0),n=l[4+(i=a+4888|0)>>2],l[(b=a+3576|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+4884>>2],l[a+3568>>2]=l[a+4880>>2],l[a+3572>>2]=b,Hb(a+4896|0,a+3568|0),o=l[4+(n=a+4904|0)>>2],l[(i=b=a+5128|0)>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+4900>>2],l[a+5120>>2]=l[a+4896>>2],l[a+5124>>2]=i,n=l[r+36>>2],l[(i=a+3560|0)>>2]=l[r+32>>2],l[i+4>>2]=n,i=l[r+28>>2],l[a+3552>>2]=l[r+24>>2],l[a+3556>>2]=i,zb(a+3552|0),i=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=i,b=l[a+5124>>2],l[r+24>>2]=l[a+5120>>2],l[r+28>>2]=b}n=l[4+(i=a+5944|0)>>2],l[(b=a+3200|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5940>>2],l[a+3192>>2]=l[a+5936>>2],l[a+3196>>2]=b,zb(a+3192|0);break o}l[a+4808>>2]=l[r+56>>2],l[a+4812>>2]=l[r+52>>2],b=l[a+4812>>2],l[a+3920>>2]=l[a+4808>>2],l[a+3924>>2]=b,Ln(r,n,a+3920|0),b=n+4|0;break c}if(b=v[r+36|0]|v[r+37|0]<<8|v[r+38|0]<<16|v[r+39|0]<<24,i=a+5128|0,s=v[r+32|0]|v[r+33|0]<<8|v[r+34|0]<<16|v[r+35|0]<<24,l[i>>2]=s,l[i+4>>2]=b,i=v[r+24|0]|v[r+25|0]<<8|v[r+26|0]<<16|v[r+27|0]<<24,k=v[r+28|0]|v[r+29|0]<<8|v[r+30|0]<<16|v[r+31|0]<<24,l[(c=a+4080|0)>>2]=s,l[c+4>>2]=b,l[a+5120>>2]=i,l[a+5124>>2]=k,l[a+4072>>2]=i,l[a+4076>>2]=k,15&v[a+4072|0]){o=(b=l[r+56>>2])+l[r+40>>2]|0,k=l[(i=o)+12>>2],l[(n=a+4800|0)>>2]=l[i+8>>2],l[n+4>>2]=k,n=l[i+4>>2],l[a+4792>>2]=l[i>>2],l[a+4796>>2]=n;x:{if(l[r+48>>2]!=(0|b)){if(o=l[4+(b=a+4800|0)>>2],l[(i=a+4064|0)>>2]=l[b>>2],l[i+4>>2]=o,i=l[a+4796>>2],l[a+4056>>2]=l[a+4792>>2],l[a+4060>>2]=i,Nb(a+5120|0,a+4056|0),n=l[4+(i=a+5128|0)>>2],l[b>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5124>>2],l[a+4792>>2]=l[a+5120>>2],l[a+4796>>2]=b,b=l[r+56>>2],o=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break x}else o=l[o+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=o,o=l[4+(b=a+4800|0)>>2],l[(i=a+4048|0)>>2]=l[b>>2],l[i+4>>2]=o,i=l[a+4796>>2],l[a+4040>>2]=l[a+4792>>2],l[a+4044>>2]=i,!(15&v[a+4040|0]))break i;n=l[b+4>>2],l[(i=a+4032|0)>>2]=l[b>>2],l[i+4>>2]=n,b=l[a+4796>>2],l[a+4024>>2]=l[a+4792>>2],l[a+4028>>2]=b,zb(a+4024|0);break o}if(80==(65535&t))i=l[r+36>>2],l[(b=a+3936|0)>>2]=l[r+32>>2],l[b+4>>2]=i,b=l[r+28>>2],l[a+3928>>2]=l[r+24>>2],l[a+3932>>2]=b,zb(a+3928|0);else{t=(b=l[r+56>>2])+l[r+40>>2]|0,c=l[(k=t)+12>>2],l[(i=a+4784|0)>>2]=l[k+8>>2],l[i+4>>2]=c,s=l[k+4>>2],l[a+4776>>2]=l[k>>2],l[a+4780>>2]=s;x:{if(l[r+48>>2]!=(0|b)){if(k=l[i+4>>2],l[(b=a+4016|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+4780>>2],l[a+4008>>2]=l[a+4776>>2],l[a+4012>>2]=b,Nb(a+5120|0,a+4008|0),k=l[4+(b=a+5128|0)>>2],l[i>>2]=l[b>>2],l[i+4>>2]=k,b=l[a+5124>>2],l[a+4776>>2]=l[a+5120>>2],l[a+4780>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break x}else i=l[t+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,s=l[4+(k=b=a+4784|0)>>2],l[(i=a+4e3|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+4780>>2],l[a+3992>>2]=l[a+4776>>2],l[a+3996>>2]=i,!(15&v[a+3992|0]))break i;if(k=l[b+4>>2],l[(i=a+3984|0)>>2]=l[b>>2],l[i+4>>2]=k,b=l[a+4780>>2],l[a+3976>>2]=l[a+4776>>2],l[a+3980>>2]=b,zb(a+3976|0),i=l[r+36>>2],l[(b=a+3968|0)>>2]=l[r+32>>2],l[b+4>>2]=i,b=l[r+28>>2],l[a+3960>>2]=l[r+24>>2],l[a+3964>>2]=b,Ck(a+4760|0,a+3960|0),b=l[4+(k=a+4768|0)>>2],i=a+5128|0,k=l[k>>2],l[i>>2]=k,l[i+4>>2]=b,l[(i=a+3952|0)>>2]=k,l[i+4>>2]=b,b=l[a+4764>>2],i=l[a+4760>>2],l[a+5120>>2]=i,l[a+5124>>2]=b,l[a+3944>>2]=i,l[a+3948>>2]=b,!(15&v[a+3944|0]))break a;t=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))>=(0|(b=l[r+44>>2]))?i=l[r+40>>2]:(s=583-(b<<1)&-8,nn((i=an((b+l[r+40>>2]|0)-8|0,s))+(s-(b=8-b|0)|0)|0,i,b),i=i+s|0,l[r+40>>2]=i,l[r+44>>2]=8-s),l[r+48>>2]=k,l[(b=i+k|0)-4>>2]=t,l[r+56>>2]=k,k=l[4+(i=a+5128|0)>>2],l[b+8>>2]=l[i>>2],l[b+12>>2]=k,i=l[a+5124>>2],l[b>>2]=l[a+5120>>2],l[b+4>>2]=i}k=l[10947],l[8+(i=b=a+5120|0)>>2]=l[10946],l[i+12>>2]=k,i=l[10945],l[b>>2]=l[10944],l[b+4>>2]=i,i=l[4+(b=a+5128|0)>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=i,b=l[a+5124>>2],l[r+24>>2]=l[a+5120>>2],l[r+28>>2]=b,b=4+(n+(d[n+2>>1]<<1)|0)|0;break c}if(k)break o;b=4+(n+(d[n+2>>1]<<1)|0)|0;break c}c=d[n+2>>1],t=(b=l[r+56>>2])+l[r+40>>2]|0,u=l[(k=t)+12>>2],l[(i=a+5944|0)>>2]=l[k+8>>2],l[i+4>>2]=u,s=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=s;M:{if(l[r+48>>2]!=(0|b)){if(k=l[i+4>>2],l[(b=a+4480|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5940>>2],l[a+4472>>2]=l[a+5936>>2],l[a+4476>>2]=b,Nb(a+5120|0,a+4472|0),k=l[4+(b=a+5128|0)>>2],l[i>>2]=l[b>>2],l[i+4>>2]=k,b=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break M}else i=l[t+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,s=l[4+(k=b=a+5944|0)>>2],l[(i=a+4464|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5940>>2],l[a+4456>>2]=l[a+5936>>2],l[a+4460>>2]=i,!(15&v[a+4456|0]))break i;if(i=l[a+5940>>2],l[a+5776>>2]=l[a+5936>>2],l[a+5780>>2]=i,i=l[b+4>>2],l[a+5784>>2]=l[b>>2],l[a+5788>>2]=i,i=1,c>>>0<=1)break l;for(;;){u=(b=l[r+56>>2])+l[r+40>>2]|0,p=l[(s=u)+12>>2],l[(k=a+5608|0)>>2]=l[s+8>>2],l[k+4>>2]=p,t=l[s+4>>2],l[a+5600>>2]=l[s>>2],l[a+5604>>2]=t;M:{if(l[r+48>>2]!=(0|b)){if(s=l[k+4>>2],l[(b=a+4448|0)>>2]=l[k>>2],l[b+4>>2]=s,b=l[a+5604>>2],l[a+4440>>2]=l[a+5600>>2],l[a+4444>>2]=b,Nb(a+5120|0,a+4440|0),s=l[4+(b=a+5128|0)>>2],l[k>>2]=l[b>>2],l[k+4>>2]=s,b=l[a+5124>>2],l[a+5600>>2]=l[a+5120>>2],l[a+5604>>2]=b,b=l[r+56>>2],t=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break M}else t=l[u+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=t,t=l[4+(b=a+5608|0)>>2],l[(k=a+4432|0)>>2]=l[b>>2],l[k+4>>2]=t,k=l[a+5604>>2],l[a+4424>>2]=l[a+5600>>2],l[a+4428>>2]=k,!(15&v[a+4424|0]))break i;if(t=l[b+4>>2],l[8+(k=(a+5776|0)+(i<<4)|0)>>2]=l[b>>2],l[k+12>>2]=t,b=l[a+5604>>2],l[k>>2]=l[a+5600>>2],l[k+4>>2]=b,(0|c)==(0|(i=i+1|0)))break}break l}c=(b=l[r+56>>2])+l[r+40>>2]|0,u=l[(k=c)+12>>2],l[(i=a+5944|0)>>2]=l[k+8>>2],l[i+4>>2]=u,s=l[k+4>>2],l[a+5936>>2]=l[k>>2],l[a+5940>>2]=s;F:{if(l[r+48>>2]!=(0|b)){if(k=l[i+4>>2],l[(b=a+4536|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5940>>2],l[a+4528>>2]=l[a+5936>>2],l[a+4532>>2]=b,Nb(a+5120|0,a+4528|0),k=l[4+(b=a+5128|0)>>2],l[i>>2]=l[b>>2],l[i+4>>2]=k,b=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break F}else i=l[c+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,k=l[4+(i=a+5944|0)>>2],l[(b=a+4520|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5940>>2],l[a+4512>>2]=l[a+5936>>2],l[a+4516>>2]=b,!(15&v[a+4512|0]))break i;if(u=d[n+2>>1],p=l[r+56>>2],s=l[r+40>>2],c=d[n+6>>1],b=k=l[r+52>>2],E=d[n+4>>1])for(F=s+4|0,i=0,b=k;b=l[b+F>>2],(0|E)!=(0|(i=i+1|0)););if(i=b+s|0,4096&c){if(c&=61439,i=l[i>>2],(0|c)>=l[i+40>>2])break h;i=l[l[i+36>>2]+(c<<2)>>2],l[a+5604>>2]=b,l[a+5600>>2]=i}else{if(l[l[i>>2]+12>>2]<=(0|c))break d;i=l[20+(b=i+(c<<4)|0)>>2],l[a+5600>>2]=l[b+16>>2],l[a+5604>>2]=i}if(n=n+8|0,29==(65535&t)){k=l[(b=k+s|0)-4>>2];F:{if(k){if(i=l[b+12>>2],k=l[k+s>>2],i>>>0<(s=l[k>>2])+(l[k+4>>2]<<1)>>>0&&i>>>0>=s>>>0)break F;break k}if(i=0,l[b+12>>2])break f}p=l[b+8>>2],wa(r)}else i=n+(u<<2)|0;if(b=l[a+5604>>2],l[a+4504>>2]=l[a+5600>>2],l[a+4508>>2]=b,b=Le(r,a+4504|0,n,u),l[b+12>>2]=i,l[b+8>>2]=p,b=l[l[b>>2]>>2],i=l[4+(k=a+5944|0)>>2],n=a+4496|0,k=l[k>>2],l[n>>2]=k,l[n+4>>2]=i,l[(n=a+5128|0)>>2]=k,l[n+4>>2]=i,i=l[a+5940>>2],n=l[a+5936>>2],l[a+4488>>2]=n,l[a+4492>>2]=i,l[a+5120>>2]=n,l[a+5124>>2]=i,!(15&v[a+4488|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}k=(b=l[r+56>>2])+l[r+40>>2]|0,s=l[(i=k)+4>>2],l[e>>2]=l[i>>2],l[e+4>>2]=s,s=l[i+12>>2],l[e+8>>2]=l[i+8>>2],l[e+12>>2]=s;S:{if(l[r+48>>2]!=(0|b)){if(i=l[e+12>>2],l[(b=a+4608|0)>>2]=l[e+8>>2],l[b+4>>2]=i,b=l[e+4>>2],l[a+4600>>2]=l[e>>2],l[a+4604>>2]=b,Nb(a+5120|0,a+4600|0),i=l[4+(b=a+5128|0)>>2],l[e+8>>2]=l[b>>2],l[e+12>>2]=i,b=l[a+5124>>2],l[e>>2]=l[a+5120>>2],l[e+4>>2]=b,b=l[r+56>>2],i=l[(b+l[r+40>>2]|0)-4>>2],l[r+48>>2]!=(0|b))break S}else i=l[k+-4>>2];l[r+48>>2]=b+24}if(l[r+56>>2]=i,i=l[e+12>>2],l[(b=a+4592|0)>>2]=l[e+8>>2],l[b+4>>2]=i,b=l[e+4>>2],l[a+4584>>2]=l[e>>2],l[a+4588>>2]=b,!(15&v[a+4584|0]))break i;s=l[r+56>>2],t=l[r+40>>2],c=l[r+52>>2],k=l[(i=t+c|0)-4>>2];S:{if(k){if(b=l[i+12>>2],u=l[k+t>>2],b>>>0<(p=l[u>>2])+(l[u+4>>2]<<1)>>>0&&b>>>0>=p>>>0)break S;break k}if(b=0,l[i+12>>2])break f}if((0|s)!=l[i+8>>2])break v;S:{F:{if(k){if(i=l[k+t>>2],b>>>0<(k=l[i>>2])+(l[i+4>>2]<<1)>>>0&&b>>>0>=k>>>0)break F;break k}if(!b)break S;break f}if(b){if(wa(r),n=l[e+12>>2],l[(i=a+5128|0)>>2]=l[e+8>>2],l[i+4>>2]=n,i=l[e+4>>2],l[a+5120>>2]=l[e>>2],l[a+5124>>2]=i,n=l[e+12>>2],l[(i=a+4576|0)>>2]=l[e+8>>2],l[i+4>>2]=n,i=l[e+4>>2],l[a+4568>>2]=l[e>>2],l[a+4572>>2]=i,!(15&v[a+4568|0]))break a;c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))>=(0|(i=l[r+44>>2]))?t=l[r+40>>2]:(k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k),l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}}if(l[a+5940>>2]=c,l[a+5936>>2]=s,y=l[10947],l[8+(b=e=a+4712|0)>>2]=l[10946],l[b+12>>2]=y,b=l[10945],l[e>>2]=l[10944],l[e+4>>2]=b,e=l[4+(y=a+4720|0)>>2],b=a+5128|0,y=l[y>>2],l[b>>2]=y,l[b+4>>2]=e,l[(b=a+4560|0)>>2]=y,l[b+4>>2]=e,e=l[a+4716>>2],b=l[a+4712>>2],l[a+5120>>2]=b,l[a+5124>>2]=e,l[a+4552>>2]=b,l[a+4556>>2]=e,!(15&v[a+4552|0]))break a;k=l[r+56>>2],(0|(b=l[r+48>>2]+-24|0))>=(0|(e=l[r+44>>2]))?o=l[r+40>>2]:(y=583-(e<<1)&-8,nn((i=an((e+l[r+40>>2]|0)-8|0,y))+(y-(e=8-e|0)|0)|0,i,e),o=i+y|0,l[r+40>>2]=o,l[r+44>>2]=8-y),l[r+48>>2]=b,l[(e=b+o|0)-4>>2]=k,l[r+56>>2]=b,y=l[4+(b=a+5128|0)>>2],l[e+8>>2]=l[b>>2],l[e+12>>2]=y,b=l[a+5124>>2],l[e>>2]=l[a+5120>>2],l[e+4>>2]=b,e=l[a+5940>>2],l[a+4544>>2]=l[a+5936>>2],l[a+4548>>2]=e,Ln(r,n,a+4544|0);break b}b=4+(n+(d[n+2>>1]<<1)|0)|0;break c}P(19585,14305,407,43093),M()}P(20143,14305,450,43093),M()}P(19585,14305,461,43093),M()}P(20417,14305,478,43093),M()}P(20642,14305,488,43093),M()}P(13971,14305,595,43093),M()}n=l[4+(i=a+5608|0)>>2],l[(b=a+3184|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5604>>2],l[a+3176>>2]=l[a+5600>>2],l[a+3180>>2]=b,l[a+3168>>2]=Jb(a+3176|0,a+5120|0,30),Yb(a+5520|0,22639,a+3168|0),n=l[4+(i=a+5528|0)>>2],l[(b=a+3160|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5524>>2],l[a+3152>>2]=l[a+5520>>2],l[a+3156>>2]=b,Hb(a+4976|0,a+3152|0),o=l[4+(n=a+4984|0)>>2],l[(i=b=a+5944|0)>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+4980>>2],l[a+5936>>2]=l[a+4976>>2],l[a+5940>>2]=i,n=l[r+36>>2],l[(i=a+3144|0)>>2]=l[r+32>>2],l[i+4>>2]=n,i=l[r+28>>2],l[a+3136>>2]=l[r+24>>2],l[a+3140>>2]=i,zb(a+3136|0),i=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=i,b=l[a+5940>>2],l[r+24>>2]=l[a+5936>>2],l[r+28>>2]=b;break o}P(28160,14305,117,43177),M()}P(28667,14305,126,43177),M()}P(23948,14305,922,43093),M()}b=(i=l[r+40>>2])+l[r+52>>2]|0,k=l[b+-4>>2];l:{if(k){if(s=l[b+12>>2],i=l[i+k>>2],s>>>0<(k=l[i>>2])+(l[i+4>>2]<<1)>>>0&&s>>>0>=k>>>0)break l;break k}if(l[b+12>>2])break f}l:{v:{if(b=l[l[l[b>>2]+32>>2]>>2]+w(d[n+4>>1],12)|0,(i=l[b+8>>2]+-1|0)>>>0<=4){d:switch(i-1|0){case 0:b=l[b>>2],k=l[a+5788>>2],l[(i=a+4224|0)>>2]=l[a+5784>>2],l[i+4>>2]=k,i=l[a+5780>>2],l[a+4216>>2]=l[a+5776>>2],l[a+4220>>2]=i,k=l[_+12>>2],l[(i=a+4208|0)>>2]=l[_+8>>2],l[i+4>>2]=k,i=l[_+4>>2],l[a+4200>>2]=l[_>>2],l[a+4204>>2]=i,f[b](a+5120|0,r,a+4216|0,a+4200|0);break l;case 1:b=l[b>>2],k=l[a+5788>>2],l[(i=a+4272|0)>>2]=l[a+5784>>2],l[i+4>>2]=k,i=l[a+5780>>2],l[a+4264>>2]=l[a+5776>>2],l[a+4268>>2]=i,k=l[_+12>>2],l[(i=a+4256|0)>>2]=l[_+8>>2],l[i+4>>2]=k,i=l[_+4>>2],l[a+4248>>2]=l[_>>2],l[a+4252>>2]=i,k=l[D+12>>2],l[(i=a+4240|0)>>2]=l[D+8>>2],l[i+4>>2]=k,i=l[D+4>>2],l[a+4232>>2]=l[D>>2],l[a+4236>>2]=i,f[b](a+5120|0,r,a+4264|0,a+4248|0,a+4232|0);break l;case 2:i=l[b>>2],k=l[a+5788>>2],l[(b=a+4336|0)>>2]=l[a+5784>>2],l[b+4>>2]=k,b=l[a+5780>>2],l[a+4328>>2]=l[a+5776>>2],l[a+4332>>2]=b,k=l[_+12>>2],l[(b=a+4320|0)>>2]=l[_+8>>2],l[b+4>>2]=k,b=l[_+4>>2],l[a+4312>>2]=l[_>>2],l[a+4316>>2]=b,k=l[D+12>>2],l[(b=a+4304|0)>>2]=l[D+8>>2],l[b+4>>2]=k,b=l[D+4>>2],l[a+4296>>2]=l[D>>2],l[a+4300>>2]=b,s=l[(b=y)+12>>2],l[(k=a+4288|0)>>2]=l[b+8>>2],l[k+4>>2]=s,k=l[b+4>>2],l[a+4280>>2]=l[b>>2],l[a+4284>>2]=k,f[i](a+5120|0,r,a+4328|0,a+4312|0,a+4296|0,a+4280|0);break l;case 3:break d;default:break v}i=l[b>>2],k=l[a+5788>>2],l[(b=a+4416|0)>>2]=l[a+5784>>2],l[b+4>>2]=k,b=l[a+5780>>2],l[a+4408>>2]=l[a+5776>>2],l[a+4412>>2]=b,k=l[_+12>>2],l[(b=a+4400|0)>>2]=l[_+8>>2],l[b+4>>2]=k,b=l[_+4>>2],l[a+4392>>2]=l[_>>2],l[a+4396>>2]=b,k=l[D+12>>2],l[(b=a+4384|0)>>2]=l[D+8>>2],l[b+4>>2]=k,b=l[D+4>>2],l[a+4376>>2]=l[D>>2],l[a+4380>>2]=b,s=l[(b=y)+12>>2],l[(k=a+4368|0)>>2]=l[b+8>>2],l[k+4>>2]=s,k=l[b+4>>2],l[a+4360>>2]=l[b>>2],l[a+4364>>2]=k,s=l[(b=A)+12>>2],l[(k=a+4352|0)>>2]=l[b+8>>2],l[k+4>>2]=s,k=l[b+4>>2],l[a+4344>>2]=l[b>>2],l[a+4348>>2]=k,f[i](a+5120|0,r,a+4408|0,a+4392|0,a+4376|0,a+4360|0,a+4344|0);break l}jb(a+4744|0,23668),y=l[4+(b=a+4752|0)>>2],l[(r=a+4096|0)>>2]=l[b>>2],l[r+4>>2]=y,r=l[a+4748>>2],l[a+4088>>2]=l[a+4744>>2],l[a+4092>>2]=r,Hb(e,a+4088|0);break b}b=l[b>>2],k=l[a+5788>>2],l[(i=a+4192|0)>>2]=l[a+5784>>2],l[i+4>>2]=k,i=l[a+5780>>2],l[a+4184>>2]=l[a+5776>>2],l[a+4188>>2]=i,f[b](a+5120|0,r,a+4184|0)}k=l[4+(i=a+5128|0)>>2],l[(b=a+5944|0)>>2]=l[i>>2],l[b+4>>2]=k,b=l[a+5124>>2],l[a+5936>>2]=l[a+5120>>2],l[a+5940>>2]=b,s=l[4+(k=b=a+5944|0)>>2],l[(i=a+4176|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5940>>2],l[a+4168>>2]=l[a+5936>>2],l[a+4172>>2]=i;l:{v:{d:{if(15&v[a+4168|0]){if(i=l[b+4>>2],k=a+5128|0,b=l[b>>2],l[k>>2]=b,l[k+4>>2]=i,l[(k=a+4160|0)>>2]=b,l[k+4>>2]=i,b=l[a+5940>>2],i=l[a+5936>>2],l[a+5120>>2]=i,l[a+5124>>2]=b,l[a+4152>>2]=i,l[a+4156>>2]=b,!(15&v[a+4152|0]))break l;if(c=l[r+56>>2],(0|(k=l[r+48>>2]+-24|0))<(0|(b=l[r+44>>2])))break d;t=l[r+40>>2];break v}if(n=l[b+4>>2],l[(i=a+4144|0)>>2]=l[b>>2],l[i+4>>2]=n,b=l[a+5940>>2],l[a+4136>>2]=l[a+5936>>2],l[a+4140>>2]=b,Nb(a+4728|0,a+4136|0),n=l[4+(i=a+4736|0)>>2],l[(b=a+4128|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+4732>>2],l[a+4120>>2]=l[a+4728>>2],l[a+4124>>2]=b,!rb(a+4120|0))break o;o=l[4+(n=a+5944|0)>>2],l[(i=b=a+5128|0)>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+5940>>2],l[a+5120>>2]=l[a+5936>>2],l[a+5124>>2]=i,n=l[r+36>>2],l[(i=a+4112|0)>>2]=l[r+32>>2],l[i+4>>2]=n,i=l[r+28>>2],l[a+4104>>2]=l[r+24>>2],l[a+4108>>2]=i,zb(a+4104|0),i=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=i,b=l[a+5124>>2],l[r+24>>2]=l[a+5120>>2],l[r+28>>2]=b;break o}i=583-(b<<1)&-8,nn((s=an((b+l[r+40>>2]|0)-8|0,i))+(i-(b=8-b|0)|0)|0,s,b),t=i+s|0,l[r+40>>2]=t,l[r+44>>2]=8-i}b=n+6|0,l[r+48>>2]=k,l[(i=k+t|0)-4>>2]=c,l[r+56>>2]=k,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}break a}s=l[4+(i=a+5528|0)>>2],l[(n=a+2904|0)>>2]=l[i>>2],l[n+4>>2]=s,n=l[a+5524>>2],l[a+2896>>2]=l[a+5520>>2],l[a+2900>>2]=n,Nb(a+5024|0,a+2896|0),s=l[4+(k=a+5608|0)>>2],l[(n=a+2888|0)>>2]=l[k>>2],l[n+4>>2]=s,s=l[4+(k=a+5032|0)>>2],l[(n=a+2872|0)>>2]=l[k>>2],l[n+4>>2]=s,n=l[a+5604>>2],l[a+2880>>2]=l[a+5600>>2],l[a+2884>>2]=n,n=l[a+5028>>2],l[a+2864>>2]=l[a+5024>>2],l[a+2868>>2]=n,rk(a+5936|0,a+2880|0,a+2864|0),c=l[4+(n=a+5944|0)>>2],l[(k=a+2856|0)>>2]=l[n>>2],l[k+4>>2]=c,k=l[a+5940>>2],l[a+2848>>2]=l[a+5936>>2],l[a+2852>>2]=k;u:{l:{if(15&v[a+2848|0]){if(s=l[n+4>>2],l[(k=a+2840|0)>>2]=l[n>>2],l[k+4>>2]=s,k=l[a+5940>>2],l[a+2832>>2]=l[a+5936>>2],l[a+2836>>2]=k,Nb(a+5008|0,a+2832|0),s=l[i+4>>2],l[(k=a+2824|0)>>2]=l[i>>2],l[k+4>>2]=s,s=l[4+(k=a+5016|0)>>2],l[(i=a+2808|0)>>2]=l[k>>2],l[i+4>>2]=s,i=l[a+5524>>2],l[a+2816>>2]=l[a+5520>>2],l[a+2820>>2]=i,i=l[a+5012>>2],l[a+2800>>2]=l[a+5008>>2],l[a+2804>>2]=i,ma(r,a+2816|0,a+2800|0),i=l[n+4>>2],k=a+5128|0,n=l[n>>2],l[k>>2]=n,l[k+4>>2]=i,l[(k=a+2792|0)>>2]=n,l[k+4>>2]=i,i=l[a+5940>>2],n=l[a+5936>>2],l[a+5120>>2]=n,l[a+5124>>2]=i,l[a+2784>>2]=n,l[a+2788>>2]=i,!(15&v[a+2784|0]))break t;if(c=l[r+56>>2],(0|(n=l[r+48>>2]+-24|0))<(0|(i=l[r+44>>2])))break l;t=l[r+40>>2];break u}if(n=l[i+4>>2],l[(b=a+2776|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5524>>2],l[a+2768>>2]=l[a+5520>>2],l[a+2772>>2]=b,zb(a+2768|0),10==(65535&t)){o=l[4+(n=a+5944|0)>>2],l[(i=b=a+5128|0)>>2]=l[n>>2],l[i+4>>2]=o,i=l[a+5940>>2],l[a+5120>>2]=l[a+5936>>2],l[a+5124>>2]=i,n=l[r+36>>2],l[(i=a+2744|0)>>2]=l[r+32>>2],l[i+4>>2]=n,i=l[r+28>>2],l[a+2736>>2]=l[r+24>>2],l[a+2740>>2]=i,zb(a+2736|0),i=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=i,b=l[a+5124>>2],l[r+24>>2]=l[a+5120>>2],l[r+28>>2]=b;break o}n=l[4+(i=a+5944|0)>>2],l[(b=a+2760|0)>>2]=l[i>>2],l[b+4>>2]=n,b=l[a+5940>>2],l[a+2752>>2]=l[a+5936>>2],l[a+2756>>2]=b,zb(a+2752|0);break o}k=583-(i<<1)&-8,nn((s=an((i+l[r+40>>2]|0)-8|0,k))+(k-(i=8-i|0)|0)|0,s,i),t=k+s|0,l[r+40>>2]=t,l[r+44>>2]=8-k}l[r+48>>2]=n,l[(i=n+t|0)-4>>2]=c,l[r+56>>2]=n,k=l[4+(n=a+5128|0)>>2],l[i+8>>2]=l[n>>2],l[i+12>>2]=k,n=l[a+5124>>2],l[i>>2]=l[a+5120>>2],l[i+4>>2]=n;break c}if(o=1,!(b=pa(r))){if(y=v[r+36|0]|v[r+37|0]<<8|v[r+38|0]<<16|v[r+39|0]<<24,i=b=a+5128|0,o=v[r+32|0]|v[r+33|0]<<8|v[r+34|0]<<16|v[r+35|0]<<24,l[i>>2]=o,l[i+4>>2]=y,i=v[r+24|0]|v[r+25|0]<<8|v[r+26|0]<<16|v[r+27|0]<<24,n=v[r+28|0]|v[r+29|0]<<8|v[r+30|0]<<16|v[r+31|0]<<24,l[a+952>>2]=o,l[a+956>>2]=y,l[a+5120>>2]=i,l[a+5124>>2]=n,l[a+944>>2]=i,l[a+948>>2]=n,15&v[a+944|0])break n;y=l[r+28>>2],l[e>>2]=l[r+24>>2],l[e+4>>2]=y,y=l[r+36>>2],l[e+8>>2]=l[r+32>>2],l[e+12>>2]=y,i=l[10947],l[8+(e=a+5120|0)>>2]=l[10946],l[e+12>>2]=i,y=l[10945],l[e>>2]=l[10944],l[e+4>>2]=y,e=l[b+4>>2],l[r+32>>2]=l[b>>2],l[r+36>>2]=e,e=l[a+5124>>2],l[r+24>>2]=l[a+5120>>2],l[r+28>>2]=e;break b}}if(!l[r+112>>2])continue;break s}break}break a}P(16760,14305,350,43093),M()}P(16383,14305,345,43093),M()}l[r+100>>2]&&_k(35346)}l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0}return void(ne=a+5952|0)}P(27028,14305,85,43135),M()}P(27245,14305,87,43135),M()}P(13971,14305,177,43042),M()}P(13971,14305,164,43031),M()}P(13971,14305,190,43052),M()}P(27698,14305,104,43149),M()}function sk(e,r,a,i){var f,k=0,b=0;if(ne=f=ne-832|0,b=l[r+12>>2],l[f+600>>2]=l[r+8>>2],l[f+604>>2]=b,b=l[r+4>>2],l[f+592>>2]=l[r>>2],l[f+596>>2]=b,6==(15&v[f+592|0]))if(b=l[a+12>>2],l[f+552>>2]=l[a+8>>2],l[f+556>>2]=b,b=l[a+4>>2],l[f+544>>2]=l[a>>2],l[f+548>>2]=b,6==(15&v[f+544|0]))if(b=l[r+12>>2],l[f+504>>2]=l[r+8>>2],l[f+508>>2]=b,b=l[r+4>>2],l[f+496>>2]=l[r>>2],l[f+500>>2]=b,Nb(f+816|0,f+496|0),b=l[f+828>>2],l[f+488>>2]=l[f+824>>2],l[f+492>>2]=b,b=l[f+820>>2],l[f+480>>2]=l[f+816>>2],l[f+484>>2]=b,b=Zb(f+480|0),k=l[a+12>>2],l[f+472>>2]=l[a+8>>2],l[f+476>>2]=k,k=l[a+4>>2],l[f+464>>2]=l[a>>2],l[f+468>>2]=k,Nb(f+800|0,f+464|0),k=l[f+812>>2],l[f+456>>2]=l[f+808>>2],l[f+460>>2]=k,k=l[f+804>>2],l[f+448>>2]=l[f+800>>2],l[f+452>>2]=k,(0|Zb(f+448|0))==(0|b))if(b=l[r+12>>2],l[f+408>>2]=l[r+8>>2],l[f+412>>2]=b,b=l[r+4>>2],l[f+400>>2]=l[r>>2],l[f+404>>2]=b,Nb(f+784|0,f+400|0),b=l[f+796>>2],l[f+392>>2]=l[f+792>>2],l[f+396>>2]=b,b=l[f+788>>2],l[f+384>>2]=l[f+784>>2],l[f+388>>2]=b,Zb(f+384|0)){if(b=l[r+12>>2],l[f+376>>2]=l[r+8>>2],l[f+380>>2]=b,b=l[r+4>>2],l[f+368>>2]=l[r>>2],l[f+372>>2]=b,Nb(f+752|0,f+368|0),b=l[f+764>>2],l[f+360>>2]=l[f+760>>2],l[f+364>>2]=b,b=l[f+756>>2],l[f+352>>2]=l[f+752>>2],l[f+356>>2]=b,Kb(f+768|0,f+352|0,0),b=l[a+12>>2],l[f+344>>2]=l[a+8>>2],l[f+348>>2]=b,b=l[a+4>>2],l[f+336>>2]=l[a>>2],l[f+340>>2]=b,Nb(f+720|0,f+336|0),b=l[f+732>>2],l[f+328>>2]=l[f+728>>2],l[f+332>>2]=b,b=l[f+724>>2],l[f+320>>2]=l[f+720>>2],l[f+324>>2]=b,Kb(f+736|0,f+320|0,0),b=l[r+12>>2],l[f+312>>2]=l[r+8>>2],l[f+316>>2]=b,b=l[r+4>>2],l[f+304>>2]=l[r>>2],l[f+308>>2]=b,Nb(f+704|0,f+304|0),b=l[f+716>>2],l[f+296>>2]=l[f+712>>2],l[f+300>>2]=b,b=l[f+708>>2],l[f+288>>2]=l[f+704>>2],l[f+292>>2]=b,(0|Zb(f+288|0))>=2)for(b=1==(0|i),i=1;k=l[a+12>>2],l[f+280>>2]=l[a+8>>2],l[f+284>>2]=k,k=l[a+4>>2],l[f+272>>2]=l[a>>2],l[f+276>>2]=k,Nb(f+672|0,f+272|0),k=l[f+684>>2],l[f+264>>2]=l[f+680>>2],l[f+268>>2]=k,k=l[f+676>>2],l[f+256>>2]=l[f+672>>2],l[f+260>>2]=k,Kb(f+688|0,f+256|0,i),k=l[f+700>>2],l[f+248>>2]=l[f+696>>2],l[f+252>>2]=k,k=l[f+692>>2],l[f+240>>2]=l[f+688>>2],l[f+244>>2]=k,Nb(f+656|0,f+240|0),k=l[f+748>>2],l[f+232>>2]=l[f+744>>2],l[f+236>>2]=k,k=l[f+740>>2],l[f+224>>2]=l[f+736>>2],l[f+228>>2]=k,Nb(f+640|0,f+224|0),k=l[f+668>>2],l[f+216>>2]=l[f+664>>2],l[f+220>>2]=k,k=l[f+652>>2],l[f+200>>2]=l[f+648>>2],l[f+204>>2]=k,k=l[f+660>>2],l[f+208>>2]=l[f+656>>2],l[f+212>>2]=k,k=l[f+644>>2],l[f+192>>2]=l[f+640>>2],l[f+196>>2]=k,(0|b)!=cb(f+208|0,f+192|0)>>>31?(k=l[f+700>>2],l[f+184>>2]=l[f+696>>2],l[f+188>>2]=k,k=l[f+692>>2],l[f+176>>2]=l[f+688>>2],l[f+180>>2]=k,zb(f+176|0)):(k=l[f+748>>2],l[f+168>>2]=l[f+744>>2],l[f+172>>2]=k,k=l[f+740>>2],l[f+160>>2]=l[f+736>>2],l[f+164>>2]=k,zb(f+160|0),k=l[f+700>>2],l[f+744>>2]=l[f+696>>2],l[f+748>>2]=k,k=l[f+780>>2],l[f+152>>2]=l[f+776>>2],l[f+156>>2]=k,k=l[f+692>>2],l[f+736>>2]=l[f+688>>2],l[f+740>>2]=k,k=l[f+772>>2],l[f+144>>2]=l[f+768>>2],l[f+148>>2]=k,zb(f+144|0),k=l[r+12>>2],l[f+136>>2]=l[r+8>>2],l[f+140>>2]=k,k=l[r+4>>2],l[f+128>>2]=l[r>>2],l[f+132>>2]=k,Nb(f+608|0,f+128|0),k=l[f+620>>2],l[f+120>>2]=l[f+616>>2],l[f+124>>2]=k,k=l[f+612>>2],l[f+112>>2]=l[f+608>>2],l[f+116>>2]=k,Kb(f+624|0,f+112|0,i),k=l[f+636>>2],l[f+776>>2]=l[f+632>>2],l[f+780>>2]=k,k=l[f+628>>2],l[f+768>>2]=l[f+624>>2],l[f+772>>2]=k),k=l[r+12>>2],l[f+104>>2]=l[r+8>>2],l[f+108>>2]=k,k=l[r+4>>2],l[f+96>>2]=l[r>>2],l[f+100>>2]=k,Nb(f+704|0,f+96|0),k=l[f+716>>2],l[f+88>>2]=l[f+712>>2],l[f+92>>2]=k,k=l[f+708>>2],l[f+80>>2]=l[f+704>>2],l[f+84>>2]=k,(0|(i=i+1|0))<(0|Zb(f+80|0)););i=l[r+12>>2],l[f+72>>2]=l[r+8>>2],l[f+76>>2]=i,i=l[r+4>>2],l[f+64>>2]=l[r>>2],l[f+68>>2]=i,zb(f- -64|0),r=l[a+12>>2],l[f+56>>2]=l[a+8>>2],l[f+60>>2]=r,r=l[a+4>>2],l[f+48>>2]=l[a>>2],l[f+52>>2]=r,zb(f+48|0),r=l[f+748>>2],l[f+40>>2]=l[f+744>>2],l[f+44>>2]=r,r=l[f+740>>2],l[f+32>>2]=l[f+736>>2],l[f+36>>2]=r,zb(f+32|0),r=l[f+780>>2],l[e+8>>2]=l[f+776>>2],l[e+12>>2]=r,r=l[f+772>>2],l[e>>2]=l[f+768>>2],l[e+4>>2]=r}else i=l[r+12>>2],l[f+24>>2]=l[r+8>>2],l[f+28>>2]=i,i=l[r+4>>2],l[f+16>>2]=l[r>>2],l[f+20>>2]=i,zb(f+16|0),r=l[a+12>>2],l[f+8>>2]=l[a+8>>2],l[f+12>>2]=r,r=l[a+4>>2],l[f>>2]=l[a>>2],l[f+4>>2]=r,zb(f),r=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=r,r=l[10945],l[e>>2]=l[10944],l[e+4>>2]=r;else i=l[r+12>>2],l[f+440>>2]=l[r+8>>2],l[f+444>>2]=i,i=l[r+4>>2],l[f+432>>2]=l[r>>2],l[f+436>>2]=i,r=l[a+12>>2],l[f+424>>2]=l[a+8>>2],l[f+428>>2]=r,r=l[a+4>>2],l[f+416>>2]=l[a>>2],l[f+420>>2]=r,Zk(e,f+432|0,f+416|0,40671);else i=l[r+12>>2],l[f+536>>2]=l[r+8>>2],l[f+540>>2]=i,i=l[r+4>>2],l[f+528>>2]=l[r>>2],l[f+532>>2]=i,r=l[a+12>>2],l[f+520>>2]=l[a+8>>2],l[f+524>>2]=r,r=l[a+4>>2],l[f+512>>2]=l[a>>2],l[f+516>>2]=r,Zk(e,f+528|0,f+512|0,40640);else i=l[r+12>>2],l[f+584>>2]=l[r+8>>2],l[f+588>>2]=i,i=l[r+4>>2],l[f+576>>2]=l[r>>2],l[f+580>>2]=i,r=l[a+12>>2],l[f+568>>2]=l[a+8>>2],l[f+572>>2]=r,r=l[a+4>>2],l[f+560>>2]=l[a>>2],l[f+564>>2]=r,Zk(e,f+576|0,f+560|0,40640);ne=f+832|0}function tk(e,r){var a=0,i=0;return a=0,e&&(a=i=zi(e,0,r,0),(e|r)>>>0<65536||(a=se?-1:i)),!(e=Cb(r=a))|!(3&v[e+-4|0])||wn(e,0,r),e}function ck(e){var r,a,i=0,f=0,k=0,n=0,s=0;t(+e),i=0|b(1),a=0|b(0),r=i;e:{if((i&=2147483647)>>>0>=1141899264){if(2146435072==(0|(i=2147483647&r))&a>>>0>0|i>>>0>2146435072)break e;return(0|r)<0||(0|r)<=0&&!(a>>>0>=0)?-1.5707963267948966:1.5707963267948966}r:{if(i>>>0<=1071382527){if(k=-1,i>>>0>=1044381696)break r;break e}if(e=g(e),i>>>0<=1072889855){if(i>>>0<=1072037887){e=(e+e+-1)/(e+2),k=0;break r}e=(e+-1)/(e+1),k=1}else i>>>0<=1073971199?(e=(e+-1.5)/(1.5*e+1),k=2):(e=-1/e,k=3)}if(s=(f=(n=e*e)*n)*(f*(f*(f*(-.036531572744216916*f-.058335701337905735)-.0769187620504483)-.11111110405462356)-.19999999999876483),f=n*(f*(f*(f*(f*(.016285820115365782*f+.049768779946159324)+.06661073137387531)+.09090887133436507)+.14285714272503466)+.3333333333333293),(0|(i=k))<=-1)return e-e*(s+f);e=m[308320+(i<<=3)>>3]-(e*(s+f)-m[i+308352>>3]-e),e=(0|r)<0||(0|r)<=0&&!(a>>>0>=0)?-e:e}return e}function ok(e,r){var a,i=0,f=0,k=0,c=0,o=0,u=0,v=0,d=0;ne=a=ne-48|0,t(+e),c=0|b(1),v=0|b(0);e:{r:{c=k=c;a:{if((o=2147483647&k)>>>0<=1074752122){if(598523==(1048575&c))break a;if(o>>>0<=1073928572){if((0|k)>0||(0|k)>=0&&!(v>>>0<0)){i=(e+=-1.5707963267341256)+-6.077100506506192e-11,m[r>>3]=i,m[r+8>>3]=e-i-6.077100506506192e-11,f=1;break e}i=(e+=1.5707963267341256)+6.077100506506192e-11,m[r>>3]=i,m[r+8>>3]=e-i+6.077100506506192e-11,f=-1;break e}if((0|k)>0||(0|k)>=0&&!(v>>>0<0)){i=(e+=-3.1415926534682512)+-1.2154201013012384e-10,m[r>>3]=i,m[r+8>>3]=e-i-1.2154201013012384e-10,f=2;break e}i=(e+=3.1415926534682512)+1.2154201013012384e-10,m[r>>3]=i,m[r+8>>3]=e-i+1.2154201013012384e-10,f=-2;break e}if(o>>>0<=1075594811){if(o>>>0<=1075183036){if(1074977148==(0|o))break a;if((0|k)>0||(0|k)>=0&&!(v>>>0<0)){i=(e+=-4.712388980202377)+-1.8231301519518578e-10,m[r>>3]=i,m[r+8>>3]=e-i-1.8231301519518578e-10,f=3;break e}i=(e+=4.712388980202377)+1.8231301519518578e-10,m[r>>3]=i,m[r+8>>3]=e-i+1.8231301519518578e-10,f=-3;break e}if(1075388923==(0|o))break a;if((0|k)>0||(0|k)>=0&&!(v>>>0<0)){i=(e+=-6.2831853069365025)+-2.430840202602477e-10,m[r>>3]=i,m[r+8>>3]=e-i-2.430840202602477e-10,f=4;break e}i=(e+=6.2831853069365025)+2.430840202602477e-10,m[r>>3]=i,m[r+8>>3]=e-i+2.430840202602477e-10,f=-4;break e}if(o>>>0>1094263290)break r}e=(i=e+-1.5707963267341256*(d=.6366197723675814*e+6755399441055744-6755399441055744))-(u=6.077100506506192e-11*d),m[r>>3]=e,t(+e),f=0|b(1),b(0),v=((k=o>>>20)-(f>>>20&2047)|0)<17,f=g(d)<2147483648?~~d:-2147483648,v||(u=i,e=(i-=e=6.077100506303966e-11*d)-(u=2.0222662487959506e-21*d-(u-i-e)),m[r>>3]=e,c=k,t(+e),k=0|b(1),b(0),(c-(k>>>20&2047)|0)<50||(u=i,e=(i-=e=2.0222662487111665e-21*d)-(u=8.4784276603689e-32*d-(u-i-e)),m[r>>3]=e)),m[r+8>>3]=i-e-u;break e}if(o>>>0>=2146435072)e-=e,m[r>>3]=e,m[r+8>>3]=e;else{for(n(0,0|v),n(1,1048575&k|1096810496),e=+s();c=(a+16|0)+(f<<3)|0,i=+(0|(g(e)<2147483648?~~e:-2147483648)),m[c>>3]=i,e=16777216*(e-i),2!=(0|(f=f+1|0)););if(m[a+32>>3]=e,0==e)for(c=1;c=(f=c)+-1|0,0==m[(a+16|0)+(f<<3)>>3];);else f=2;f=function(e,r,a,i){var f,k,b,n,s,t=0,c=0,o=0,u=0,v=0,d=0,h=0,p=0,y=0,E=0,_=0,S=0;if(ne=f=ne-560|0,h=(c=a)+w(b=(0|(a=(a+-3|0)/24|0))>0?a:0,-24)|0,((k=l[76369])+(u=i+-1|0)|0)>=0)for(c=i+k|0,a=b-u|0;m[(f+320|0)+(o<<3)>>3]=(0|a)<0?0:+l[305488+(a<<2)>>2],a=a+1|0,(0|c)!=(0|(o=o+1|0)););for(d=h+-24|0,c=0,o=(0|i)<1;;){if(o)t=0;else for(v=c+u|0,a=0,t=0;t+=m[(a<<3)+e>>3]*m[(f+320|0)+(v-a<<3)>>3],(0|i)!=(0|(a=a+1|0)););if(m[(c<<3)+f>>3]=t,a=(0|c)<(0|k),c=c+1|0,!a)break}s=23-d|0,n=24-d|0,c=k;r:{for(;;){if(t=m[(c<<3)+f>>3],a=0,o=c,!(y=(0|c)<1))for(;u=(f+480|0)+(a<<2)|0,p=t,v=g(t*=5.960464477539063e-8)<2147483648?~~t:-2147483648,v=g(p+=-16777216*(t=+(0|v)))<2147483648?~~p:-2147483648,l[u>>2]=v,t=m[((o=o+-1|0)<<3)+f>>3]+t,(0|c)!=(0|(a=a+1|0)););t=Ik(t,d),t+=-8*D(.125*t),t-=+(0|(v=g(t)<2147483648?~~t:-2147483648));a:{i:{f:{if(_=(0|d)<1){if(d)break f;u=l[476+((c<<2)+f|0)>>2]>>23}else E=o=(c<<2)+f|0,o=(u=l[o+476>>2])-((a=u>>n)<<n)|0,l[E+476>>2]=o,v=a+v|0,u=o>>s;if((0|u)<1)break a;break i}if(u=2,!(t>=.5)){u=0;break a}}if(a=0,o=0,!y)for(;;){y=l[(S=(f+480|0)+(a<<2)|0)>>2],E=16777215;i:{f:{if(!o){if(!y)break f;E=16777216,o=1}l[S>>2]=E-y;break i}o=0}if((0|c)==(0|(a=a+1|0)))break}_||(a=d+-1|0)>>>0>1||(l[476+(a=(c<<2)+f|0)>>2]=a-1?8388607&l[a+476>>2]:4194303&l[a+476>>2]),v=v+1|0,2==(0|u)&&(t=1-t,u=2,o&&(t-=Ik(1,d)))}if(0!=t)break;if(o=0,!((0|(a=c))<=(0|k))){for(;o=l[(f+480|0)+((a=a+-1|0)<<2)>>2]|o,(0|a)>(0|k););if(o){for(h=d;h=h+-24|0,!l[(f+480|0)+((c=c+-1|0)<<2)>>2];);break r}}for(a=1;o=a,a=a+1|0,!l[(f+480|0)+(k-o<<2)>>2];);for(o=c+o|0;;){if(u=i+c|0,c=c+1|0,m[(f+320|0)+(u<<3)>>3]=l[305488+(b+c<<2)>>2],a=0,t=0,(0|i)>=1)for(;t+=m[(a<<3)+e>>3]*m[(f+320|0)+(u-a<<3)>>3],(0|i)!=(0|(a=a+1|0)););if(m[(c<<3)+f>>3]=t,!((0|c)<(0|o)))break}c=o}(t=Ik(t,0-d|0))>=16777216?(e=(f+480|0)+(c<<2)|0,p=t,a=g(t*=5.960464477539063e-8)<2147483648?~~t:-2147483648,i=g(t=p+-16777216*+(0|a))<2147483648?~~t:-2147483648,l[e>>2]=i,c=c+1|0):(a=g(t)<2147483648?~~t:-2147483648,h=d),l[(f+480|0)+(c<<2)>>2]=a}if(t=Ik(1,h),!((0|c)<=-1)){for(a=c;m[(a<<3)+f>>3]=t*+l[(f+480|0)+(a<<2)>>2],t*=5.960464477539063e-8,e=(0|a)>0,a=a+-1|0,e;);if(!((0|c)<=-1))for(a=c;;){for(e=a,i=c-a|0,t=0,a=0;t+=m[308256+(a<<3)>>3]*m[(e+a<<3)+f>>3],!((0|a)>=(0|k))&&(d=a>>>0<i>>>0,a=a+1|0,d););if(m[(f+160|0)+(i<<3)>>3]=t,a=e+-1|0,!((0|e)>0))break}}if(t=0,(0|c)>=0)for(a=c;t+=m[(f+160|0)+(a<<3)>>3],e=(0|a)>0,a=a+-1|0,e;);if(m[r>>3]=u?-t:t,t=m[f+160>>3]-t,a=1,(0|c)>=1)for(;t+=m[(f+160|0)+(a<<3)>>3],e=(0|a)!=(0|c),a=a+1|0,e;);return m[r+8>>3]=u?-t:t,ne=f+560|0,7&v}(a+16|0,a,(o>>>20)-1046|0,f+1|0),e=m[a>>3],(0|k)<-1||(0|k)<=-1&&!(v>>>0>4294967295)?(m[r>>3]=-e,m[r+8>>3]=-m[a+8>>3],f=0-f|0):(m[r>>3]=e,k=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=k)}}return ne=a+48|0,f}function uk(e,r,a,i){var f,k,b,t=0,c=0,o=0;ne=f=ne-32|0,k=t=2147483647&i,t=t+-1006698496|0,o=a,c=a,a>>>0<0&&(t=t+1|0),b=c,c=t,t=k+-1140785152|0,o>>>0<0&&(t=t+1|0);e:if((0|t)==(0|c)&b>>>0<o>>>0|c>>>0<t>>>0){if(t=i<<4|a>>>28,a=a<<4|r>>>28,o=r&=268435455,134217728==(0|r)&e>>>0>=1|r>>>0>134217728){t=t+1073741824|0,(e=a+1|0)>>>0<1&&(t=t+1|0),c=e;break e}if(c=a,t=t-((a>>>0<0)+-1073741824|0)|0,e|134217728^o)break e;(e=c+(1&c)|0)>>>0<c>>>0&&(t=t+1|0),c=e}else(!o&2147418112==(0|k)?!(e|r):2147418112==(0|k)&o>>>0<0|k>>>0<2147418112)?(c=0,t=2146435072,1140785151==(0|k)&o>>>0>4294967295|k>>>0>1140785151||(t=0,(o=k>>>16)>>>0<15249||(lk(f,e,r,a,t=65535&i|65536,15361-o|0),Wn(f+16|0,e,r,a,t,o+-15233|0),a=l[f+4>>2],e=l[f+8>>2],t=l[f+12>>2]<<4|e>>>28,c=e<<4|a>>>28,a=e=268435455&a,134217728==(0|e)&(r=l[f>>2]|0!=(l[f+16>>2]|l[f+24>>2])|0!=(l[f+20>>2]|l[f+28>>2]))>>>0>=1|e>>>0>134217728?((e=c+1|0)>>>0<1&&(t=t+1|0),c=e):r|134217728^a||((e=c+(1&c)|0)>>>0<c>>>0&&(t=t+1|0),c=e)))):(c=a<<4|r>>>28,t=524287&(t=i<<4|a>>>28)|2146959360);return ne=f+32|0,n(0,0|c),n(1,-2147483648&i|t),+s()}function lk(e,r,a,i,f,k){var b=0,n=0,s=0,t=0;e:if(64&k)r=31&(a=k+-64|0),32<=(63&a)>>>0?(a=0,r=f>>>r):(a=f>>>r,r=((1<<r)-1&f)<<32-r|i>>>r),i=0,f=0;else{if(!k)break e;n=f,s=i,b=31&(t=64-k|0),32<=(63&t)>>>0?(n=s<<b,t=0):(n=(1<<b)-1&s>>>32-b|n<<b,t=s<<b),s=r,r=31&(b=k),32<=(63&b)>>>0?(b=0,r=a>>>r):(b=a>>>r,r=((1<<r)-1&a)<<32-r|s>>>r),r|=t,a=b|n,b=i,i=31&k,32<=(63&k)>>>0?(n=0,i=f>>>i):(n=f>>>i,i=((1<<i)-1&f)<<32-i|b>>>i),f=n}l[e>>2]=r,l[e+4>>2]=a,l[e+8>>2]=i,l[e+12>>2]=f}function vk(e,r){var a,i,f,k=0,n=0,s=0,c=0,o=0,u=0,v=0;ne=a=ne-16|0,t(+r),n=0|b(1),i=0|b(0),f=-2147483648&n,c=(k=s=2147483647&n)-1048576|0,o=s=i,s>>>0<0&&(c=c+1|0),2145386495==(0|c)&o>>>0<=4294967295|c>>>0<2145386495?(u=s<<28,n=(15&k)<<28|s>>>4,k=1006632960+(k>>>4)|0,k=n>>>0<0?k+1|0:k):2146435072==(0|k)&s>>>0>=0|k>>>0>2146435072?(u=i<<28,k=n>>>4,n=(15&n)<<28|i>>>4,k|=2147418112):k|s?(Wn(a,s,o=k,0,0,(k=1==(0|k)&s>>>0>=0|k>>>0>1?y(k):y(i)+32|0)+49|0),v=l[a>>2],u=l[a+4>>2],n=l[a+8>>2],k=65536^l[a+12>>2]|15372-k<<16):(n=0,k=0),l[e>>2]=v,l[e+4>>2]=u,l[e+8>>2]=0|n,l[e+12>>2]=k|f,ne=a+16|0}function dk(e){var r,a=0,i=0,f=0,k=0;r=on(e);e:{if(!(!l[82973]|!v[0|e])&&!hn(e,61)&&(a=l[l[82973]>>2])){for(;;){if(f=Db(e,a,r),a=l[82973],f||(f=l[a+(i<<2)>>2],61!=v[0|(k=f+r|0)])){if(a=l[a+((i=i+1|0)<<2)>>2])continue;break e}break}if(!f)break e;i=k+1|0}return i}return 0}function hk(e,r,a,i,k){var b,n=0,s=0,t=0,c=0,o=0;ne=b=ne-240|0,l[b>>2]=e,t=1;e:if(!((0|i)<2))for(o=0-r|0,n=e;;){if(n=(s=n+o|0)-l[((c=i+-2|0)<<2)+k>>2]|0,(0|f[a](e,n))>=0&&(0|f[a](e,s))>-1)break e;if(e=(t<<2)+b|0,(0|f[a](n,s))>=0?(l[e>>2]=n,c=i+-1|0):(l[e>>2]=s,n=s),t=t+1|0,(0|c)<2)break e;e=l[b>>2],i=c}Oa(r,b,t),ne=b+240|0}function mk(e,r,a){var i,f;i=r+a,m[e>>3]=i,f=a,a=i-r,m[e+8>>3]=f-a+(r-(i-a))}function wk(e){var r=0,a=0,i=0,f=0;t(+e),r=0|b(1),a=0|b(0),i=r;e:{r:{if(2047!=(0|(r=r>>>20&2047))){if(r)break r;if(i=a=i<<12|(r=a)>>>20,!((r<<=12)|a))return-2147483648;if(f=-1023,(0|i)<0||(0|i)<=0&&!(r>>>0>=0))break e;for(;f=f+-1|0,a=i<<1|r>>>31,r<<=1,i=a,(0|a)>-1||(0|a)>=-1&&!(r>>>0<=4294967295););break e}return 1048575&i|a?-2147483648:2147483647}f=r+-1023|0}return f}function pk(e){var r,a,i=0,f=0;return t(+e),a=r=0|b(1),(f=0|b(0))|r<<1?(0|a)<0||(0|a)<=0&&!(f>>>0>=0)?A:(f=r)>>>0>=2146435072?1/e:f>>>0>=1073741824?ja(f,e,1):f>>>0>=1044381696?((i=e*e)*(i*(i*(i*(i*(-3.982051941321034e-11*i+1.9559013703502292e-8)-38140705372436416e-22)+.00034745343209368365)-.01381856719455969)+.17666645250918112)-.07380429510868723)/(i*(i*(i*(4.4111031133267547e-10*i+2.591508518404578e-7)+7600686273503533e-20)+.01273048348341237)+1)+ff(e)*Lk(e)*.6366197723675814:.6366197723675814*Lk(e)-.07380429510868723:-x}function gk(e){var r,a,i,f=0;return t(+e),i=a=0|b(1),(f=0|b(0))|a<<1?(0|i)<0||(0|i)<=0&&!(f>>>0>=0)?A:(f=a)>>>0>=2146435072?1/e:f>>>0>=1073741824?Ua(f,e,1,0):f>>>0<=1016070143?-.6366197723675814/e:((r=e*e)*(r*(r*(-9.190991580398789e-8*r+2352526005616105e-20)-.0019125689587576355)+.05044387166398113)-.19605709064623894)/(r*(r*(r*(r*(1.6655924620799208e-11*r+6.227414523646215e-9)+13560880109751623e-22)+.00020255258102513517)+.01991673182366499)+1)*e+.6366197723675814*(kf(e)*Lk(e)-1/e):-x}function yk(e,r,a,i,b,n,s){var t,c,o,d=0,h=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,M=0,A=0;ne=t=ne-80|0,l[t+76>>2]=r,o=t+55|0,c=t+56|0,r=0;e:{r:{a:for(;;){(0|D)<0||((0|r)>(2147483647-D|0)?(l[82952]=61,D=-1):D=r+D|0);i:{f:{k:{b:{n:{s:{t:{c:{o:{u:{l:{v:{d:{if(g=l[t+76>>2],p=v[0|(r=g)]){for(;;){h:{m:{w:if(d=255&p){if(37!=(0|d))break m;for(p=r;;){if(37!=v[r+1|0])break w;if(d=r+2|0,l[t+76>>2]=d,p=p+1|0,h=v[r+2|0],r=d,37!=(0|h))break}}else p=r;if(r=p-g|0,e&&Mn(e,g,r),r)continue a;S=-1,p=1,d=t,r=l[t+76>>2],36!=v[r+2|0]|k[l[t+76>>2]+1|0]+-48>>>0>=10||(S=k[r+1|0]+-48|0,M=1,p=3),r=p+r|0,l[d+76>>2]=r,p=0,F=k[0|r];w:if((h=F+-32|0)>>>0>31)d=r;else if(d=r,75913&(h=1<<h))for(;;){if(d=r+1|0,l[t+76>>2]=d,p|=h,(h=(F=k[r+1|0])+-32|0)>>>0>31)break w;if(r=d,!(75913&(h=1<<h)))break}w:if(42!=(0|F)){if((0|(_=Ja(t+76|0)))<0)break r;r=l[t+76>>2]}else{if(y=t,k[d+1|0]+-48>>>0>=10||(r=l[t+76>>2],36!=v[r+2|0])){if(M)break r;M=0,_=0,e&&(r=l[a>>2],l[a>>2]=r+4,_=l[r>>2]),r=l[t+76>>2]+1|0}else l[((k[r+1|0]<<2)+b|0)-192>>2]=10,_=l[((k[r+1|0]<<3)+i|0)-384>>2],M=1,r=r+3|0;if(l[y+76>>2]=r,(0|_)>-1)break w;_=0-_|0,p|=8192}h=-1;w:if(46==v[0|r])if(42!=v[r+1|0])l[t+76>>2]=r+1,h=Ja(t+76|0),r=l[t+76>>2];else{if(!(k[r+2|0]+-48>>>0>=10)&&(r=l[t+76>>2],36==v[r+3|0])){l[((k[r+2|0]<<2)+b|0)-192>>2]=10,h=l[((k[r+2|0]<<3)+i|0)-384>>2],r=r+4|0,l[t+76>>2]=r;break w}if(M)break r;e?(r=l[a>>2],l[a>>2]=r+4,h=l[r>>2]):h=0,r=l[t+76>>2]+2|0,l[t+76>>2]=r}for(d=0;;){if(A=d,E=-1,k[0|r]+-65>>>0>57)break e;if(F=r+1|0,l[t+76>>2]=F,d=k[0|r],r=F,!((d=v[301007+(d+w(A,58)|0)|0])+-1>>>0<8))break}if(!d)break e;w:{p:{g:{if(19==(0|d)){if((0|S)<=-1)break g;break e}if((0|S)<0)break p;l[(S<<2)+b>>2]=d,d=l[4+(r=(S<<3)+i|0)>>2],l[t+64>>2]=l[r>>2],l[t+68>>2]=d}if(r=0,!e)continue a;break w}if(!e)break i;Xa(t- -64|0,d,a,s),F=l[t+76>>2]}if(y=-65537&p,p=8192&p?y:p,E=0,S=301048,d=c,r=k[F+-1|0],(F=(r=A&&3==(15&r)?-33&r:r)+-88|0)>>>0<=32)break h;w:{p:{g:{y:{if((y=r+-65|0)>>>0>6){if(83!=(0|r))break f;if(!h)break y;d=l[t+64>>2];break p}switch(y-1|0){case 1:break g;case 0:case 2:break f;default:break d}}r=0,zk(e,32,_,0,p);break w}l[t+12>>2]=0,l[t+8>>2]=l[t+64>>2],l[t+64>>2]=t+8,h=-1,d=t+8|0}r=0;p:{for(;;){if(!(g=l[d>>2]))break p;if(!((y=(0|(g=qa(t+4|0,g)))<0)|g>>>0>h-r>>>0)){if(d=d+4|0,h>>>0>(r=r+g|0)>>>0)continue;break p}break}if(E=-1,y)break e}if(zk(e,32,_,r,p),r)for(h=0,d=l[t+64>>2];;){if(!(g=l[d>>2]))break w;if((0|(h=(g=qa(t+4|0,g))+h|0))>(0|r))break w;if(Mn(e,t+4|0,g),d=d+4|0,!(h>>>0<r>>>0))break}else r=0}zk(e,32,_,r,8192^p),r=(0|_)>(0|r)?_:r;continue a}d=r+1|0,l[t+76>>2]=d,p=v[r+1|0],r=d;continue}break}switch(F-1|0){case 28:break n;case 21:break s;case 23:break c;case 22:break o;case 11:case 16:break u;case 10:break l;case 26:break v;case 8:case 12:case 13:case 14:break d;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 9:case 15:case 17:case 18:case 19:case 20:case 24:case 25:case 27:case 29:case 30:break f;default:break t}}if(E=D,e)break e;if(!M)break i;for(r=1;;){if(e=l[(r<<2)+b>>2]){if(Xa((r<<3)+i|0,e,a,s),E=1,10!=(0|(r=r+1|0)))continue;break e}break}if(E=1,r>>>0>9)break e;if(E=-1,l[(r<<2)+b>>2])break e;for(;!l[((r=r+1|0)<<2)+b>>2]&&10!=(0|r););E=r>>>0<10?-1:1;break e}r=0|f[n](e,m[t+64>>3],_,h,p,r);continue}d=(r=rf(g=(r=l[t+64>>2])||301058,0,h))||h+g|0,p=y,h=r?r-g|0:h;break f}k[t+55|0]=l[t+64>>2],h=1,g=o,p=y;break f}if(r=y=l[t+68>>2],g=l[t+64>>2],(0|r)<-1||(0|r)<=-1&&!(g>>>0>4294967295)){r=0-(r+(0<g>>>0)|0)|0,g=0-g|0,l[t+64>>2]=g,l[t+68>>2]=r,E=1,S=301048;break b}if(2048&p){E=1,S=301049;break b}S=(E=1&p)?301050:301048;break b}if(g=dr(l[t+64>>2],l[t+68>>2],c),!(8&p))break k;h=(0|h)>(0|(r=c-g|0))?h:r+1|0;break k}h=h>>>0>8?h:8,p|=8,r=120}if(g=vr(l[t+64>>2],l[t+68>>2],c,32&r),!(8&p)|!(l[t+64>>2]|l[t+68>>2]))break k;S=301048+(r>>>4)|0,E=2;break k}if(r=0,(d=255&A)>>>0>7)continue;s:switch(d-1|0){default:case 0:l[l[t+64>>2]>>2]=D;continue;case 1:d=l[t+64>>2],l[d>>2]=D,l[d+4>>2]=D>>31;continue;case 2:u[l[t+64>>2]>>1]=D;continue;case 3:k[l[t+64>>2]]=D;continue;case 5:l[l[t+64>>2]>>2]=D;continue;case 4:continue;case 6:}d=l[t+64>>2],l[d>>2]=D,l[d+4>>2]=D>>31;continue}g=l[t+64>>2],r=l[t+68>>2],S=301048}g=xb(g,r,c)}p=(0|h)>-1?-65537&p:p,!!((r=l[t+64>>2])|(y=l[t+68>>2]))|h?h=(0|h)>(0|(r=!(r|y)+(c-g|0)|0))?h:r:(g=c,h=0)}zk(e,32,r=(0|_)<(0|(d=(h=(0|h)<(0|(y=d-g|0))?y:h)+E|0))?d:_,d,p),Mn(e,S,E),zk(e,48,r,d,65536^p),zk(e,48,h,y,0),Mn(e,g,y),zk(e,32,r,d,8192^p);continue}break}E=0;break e}E=-1}return ne=t+80|0,E}function Ek(e){var r,a=0;return ne=r=ne-16|0,a=-1,Ka(e)||1==(0|f[l[e+32>>2]](e,r+15|0,1))&&(a=v[r+15|0]),ne=r+16|0,a}function _k(e){var r;(0|ri(e,r=l[75261]))<0||(10==v[r+75|0]||(e=l[r+20>>2])>>>0>=h[r+16>>2]?Dk(r,10):(l[r+20>>2]=e+1,k[0|e]=10))}function Dk(e,r){var a,i=0,b=0;ne=a=ne-16|0,k[a+15|0]=r,i=l[e+16>>2];e:{if(!i){if(ei(e))break e;i=l[e+16>>2]}b=l[e+20>>2],k[e+75|0]==(255&r)|b>>>0>=i>>>0?f[l[e+36>>2]](e,a+15|0,1):(l[e+20>>2]=b+1,k[0|b]=r)}ne=a+16|0}function Sk(){return ee(330744),330752}function Fk(e){var r,a;a=lr(l[82952]),r=l[75398],!e|!v[0|e]||(cn(e,on(e),1,r),bn(58,r),bn(32,r)),cn(a,on(a),1,r),bn(10,r)}function Mk(e){var r,a=0;return h[e+20>>2]<=h[e+28>>2]||(f[l[e+36>>2]](e,0,0),l[e+20>>2])?((a=l[e+4>>2])>>>0<(r=l[e+8>>2])>>>0&&(a=a-r|0,f[l[e+40>>2]](e,a,a>>31,1)),l[e+28>>2]=0,l[e+16>>2]=0,l[e+20>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,0):-1}function Ak(e,r,a){var i=0,b=0,n=0,s=0;i=l[a+16>>2];e:{if(!i){if(ei(a))break e;i=l[a+16>>2]}if(i-(n=l[a+20>>2])>>>0<r>>>0)return 0|f[l[a+36>>2]](a,e,r);r:if(!(k[a+75|0]<0)){for(b=r;;){if(!(i=b))break r;if(10==v[(b=i+-1|0)+e|0])break}if((b=0|f[l[a+36>>2]](a,e,i))>>>0<i>>>0)break e;r=r-i|0,e=e+i|0,n=l[a+20>>2],s=i}qb(n,e,r),l[a+20>>2]=l[a+20>>2]+r,b=r+s|0}return b}function xk(e){var r,a=0,i=0,k=0;return(r=1&l[e>>2])||(a=Sk(),(k=l[e+52>>2])&&(l[k+56>>2]=l[e+56>>2]),(i=l[e+56>>2])&&(l[i+52>>2]=k),l[a>>2]==(0|e)&&(l[a>>2]=i),O(330744)),a=jf(e),k=0|f[l[e+12>>2]](e),(i=l[e+96>>2])&&Lb(i),a|=k,r?a:(Lb(e),a)}function Pk(e,r){var a,i=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0;ne=a=ne-16|0;e:{r:if(!((b=l[e>>2])>>>0>10)){i=e;a:{i:{f:{k:{b:{n:{s:{t:{c:{o:{u:{l:{v:{d:{h:{m:{w:{p:{g:{y:{E:{_:{D:{S:{F:{M:{A:{x:{P:{T:{R:{O:{I:{z:{N:{j:{U:{B:{C:{L:{H:{q:{Y:{W:{G:{X:{J:{V:{K:{Z:{$:{Q:{ee:{re:{ae:{ie:{fe:{ke:{be:{ne:{se:{te:{ce:{oe:{ue:{le:{ve:{de:{he:{me:{we:{pe:switch(b-1|0){case 7:for(;;){if(i=Pk(l[e+4>>2],r))break e;if(!(e=l[e+8>>2]))break}break r;case 8:for(;s=10+(b=Hk(l[i+4>>2],r)+s|0)|0,i=l[i+8>>2];);for(t=(b+l[r+4>>2]|0)-5|0;;){if(s=Hk(l[e+4>>2],r),l[e+8>>2]){if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=56,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),(i=l[r+8>>2])>>>0>=(n=b+4|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}s=s+5|0,k[0|(b=i+b|0)]=s,k[b+1|0]=s>>>8,k[b+2|0]=s>>>16,k[b+3|0]=s>>>24,h[r+4>>2]>=n>>>0||(l[r+4>>2]=n)}if(i=Pk(l[e+4>>2],r))break e;if(b=l[e+8>>2]){if((i=l[r+8>>2])>>>0>=(n=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2],b=s;else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=55,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),(i=l[r+8>>2])>>>0>=(n=b+4|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}s=t-s|0,k[0|(b=i+b|0)]=s,k[b+1|0]=s>>>8,k[b+2|0]=s>>>16,k[b+3|0]=s>>>24,h[r+4>>2]<n>>>0&&(l[r+4>>2]=n),e=l[e+8>>2]}else e=b;if(!e)break}break r;default:if(n=l[e+4>>2],c=l[e+8>>2],1&(e=l[e+12>>2])){if(i=0,c>>>0<=n>>>0)break e;Kr(n,1,c-n|0,r,0);break e}if(c>>>0<=n>>>0)break r;if(b=1,o=e>>>1&1,u=l[r+56>>2],(i=(s=0|f[l[u>>2]](n))+n|0)>>>0<c>>>0)for(;e=b+1|0,(0|(t=0|f[l[u>>2]](i)))!=(0|s)&&(Kr(n,s,b,r,o),n=i,s=t,e=1),b=e,(i=i+t|0)>>>0<c>>>0;);Kr(n,s,b,r,o),i=0;break e;case 0:if(2&(s=l[e+4>>2])){i=l[r+8>>2],b=l[r+4>>2];ge:{if(i>>>0>=(n=b+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,b=l[r+4>>2],!i)break ge}k[i+b|0]=22,(b=l[r+4>>2])>>>0>=n>>>0||(l[r+4>>2]=n,b=n)}if((i=l[r+8>>2])>>>0>=(n=b+4|0)>>>0)break we;for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break a}if(!l[e+40>>2]){if(b=(n=l[r+4>>2])+1|0,i=l[r+8>>2],1&s){if(i>>>0>=b>>>0)break me;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break i;n=l[r+4>>2];break k}if(i>>>0>=b>>>0)break he;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break i;n=l[r+4>>2];break b}ge:{ye:if(!(l[l[r+56>>2]+12>>2]>1)){for(i=0;;){if(!v[8+(e+i|0)|0]){if(32!=(0|(i=i+1|0)))continue;break ye}break}if(b=(n=l[r+4>>2])+1|0,i=l[r+8>>2],!(1&s))break ge;if(i>>>0>=b>>>0)break le;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break o;n=l[r+4>>2];break ue}if(b=(n=l[r+4>>2])+1|0,i=l[r+8>>2],1&s){if(i>>>0>=b>>>0)break de;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break n;n=l[r+4>>2];break t}if(i>>>0>=b>>>0)break ve;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break n;n=l[r+4>>2];break c}if(i>>>0>=b>>>0)break oe;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break o;n=l[r+4>>2];break l;case 1:if(i=-6,12!=l[e+4>>2])break e;if(b=l[e+8>>2],(i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=b?30:29,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e;case 2:if(e=(s=l[r+4>>2])+1|0,i=l[r+8>>2],4&v[r+60|0]){if(i>>>0>=e>>>0)break ce;for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2];break d}if(i>>>0>=e>>>0)break te;for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2];break h;case 3:if(32&v[e+5|0]){if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=47,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),s=l[r+60>>2],(i=l[r+8>>2])>>>0>=(n=b+4|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(s&=1,k[0|(b=i+b|0)]=s,k[b+1|0]=s>>>8,k[b+2|0]=s>>>16,k[b+3|0]=s>>>24,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),n=l[e+40>>2],(i=l[r+8>>2])>>>0>=(s=b+4|0)>>>0)break se;for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break w}if(1==l[e+8>>2]){if(n=l[e+12>>2],1&k[r+60|0]){if((i=l[r+8>>2])>>>0>=(e=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=44,(b=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,b=e),(i=l[r+8>>2])>>>0>=(e=b+2|0)>>>0)break ne;for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break p}if((e=n+-1|0)>>>0<=1){if(e-1){if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=41,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=42,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(b=l[r+4>>2])+1|0)>>>0)break be;for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break g}if(s=(b=l[r+4>>2])+1|0,i=l[r+8>>2],1&k[r+60|0]){if(i>>>0>=s>>>0)break ke;for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break E}if(i>>>0>=s>>>0)break fe;for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break _;case 9:if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=79,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),t=l[e+20>>2],i=l[e+24>>2],(0|(e=l[i>>2]))<(0|(s=l[i+4>>2])))n=l[i+8>>2],s=b;else{if(!(n=Ub(l[i+8>>2],s<<4))){i=-5;break e}l[i+8>>2]=n,l[i+4>>2]=s<<1,e=l[i>>2],s=l[r+4>>2]}if(l[4+(n=(e<<3)+n|0)>>2]=t,l[n>>2]=b,l[i>>2]=e+1,(i=l[r+8>>2])>>>0>=(e=s+4|0)>>>0)b=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,b=Ub(l[r>>2],i),l[r>>2]=b,!b){i=-5;break e}s=l[r+4>>2]}if(i=0,k[0|(b=b+s|0)]=0,k[b+1|0]=0,k[b+2|0]=0,k[b+3|0]=0,h[r+4>>2]>=e>>>0)break e;l[r+4>>2]=e;break e;case 4:if(c=l[e+24>>2],i=l[e+16>>2],(0|(s=Hk(l[e+8>>2],r)))<0){i=s;break e}if(!(!(u=l[e+20>>2])|-1!=l[e+16>>2])&&(b=l[e+8>>2],3==l[b>>2])){if(s=0,(0|(n=l[e+12>>2]))>0)for(;;){if(i=Pk(b,r))break e;if((0|n)==(0|(s=s+1|0)))break}if(n=(b=l[r+4>>2])+1|0,s=4&l[r+60>>2],i=l[r+8>>2],l[e+32>>2]){if(s){if(i>>>0>=n>>>0)break ie;for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break S}if(i>>>0>=n>>>0)break ae;for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break F}if(s){if(i>>>0>=n>>>0)break re;for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break M}if(i>>>0>=n>>>0)break ee;for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break A}if(t=c?s+6|0:s,-1==(0|i)&&(b=l[e+12>>2],!((0|w(b,s))>50&&(0|b)>=2))){if(!(1!=(0|b)|(0|s)<51)){if(u){if(l[e+28>>2]){if((i=l[r+8>>2])>>>0>=(b=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(k[i+n|0]=55,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0>=(b=n+4|0)>>>0)break Q;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break P}if(b=(n=l[r+4>>2])+1|0,i=l[r+8>>2],l[e+32>>2]){if(i>>>0>=b>>>0)break $;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break T}if(i>>>0>=b>>>0)break Z;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break R}if((i=l[r+8>>2])>>>0>=(b=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(k[i+n|0]=55,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0>=(b=n+4|0)>>>0)break K;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break O}if(s=0,(0|b)<=0)break x;for(n=l[e+8>>2];;){if(i=Pk(n,r))break e;if((0|b)==(0|(s=s+1|0)))break}break x}if(!((n=l[e+16>>2])|!l[e+36>>2])){if((i=l[r+8>>2])>>>0>=(b=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(k[i+n|0]=55,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0>=(b=n+4|0)>>>0)break V;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break I}ge:{ye:{if(-1!=(0|i)){if(!u)break ye;if(w(n,s+5|0)>>>0>50&&1!=(0|n))break z;if(b=0,(0|(t=l[e+12>>2]))>0)for(c=l[e+8>>2];;){if(i=Pk(c,r))break e;if((0|t)==(0|(b=b+1|0)))break}if((0|(t=n-t|0))<1){i=0;break e}for(c=s+5|0,n=0;;){if((i=l[r+8>>2])>>>0>=(s=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=56,(b=l[r+4>>2])>>>0<s>>>0&&(l[r+4>>2]=s,b=s),(i=l[r+8>>2])>>>0>=(s=b+4|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(b=i+b|0,i=w(c,t-n|0)+-5|0,k[0|b]=i,k[b+1|0]=i>>>8,k[b+2|0]=i>>>16,k[b+3|0]=i>>>24,h[r+4>>2]<s>>>0&&(l[r+4>>2]=s),i=Pk(l[e+8>>2],r))break e;if(i=0,(0|t)==(0|(n=n+1|0)))break}break e}if(u)break z;if(1==(0|n))break ge;break z}if(1!=(0|n))break z}if(l[e+12>>2])break z;if((i=l[r+8>>2])>>>0>=(b=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(k[i+n|0]=56,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0>=(b=n+4|0)>>>0)break J;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break N;case 5:if(i=-6,(b=l[e+8>>2]+-1|0)>>>0>3)break e;ge:switch(b-1|0){case 0:b=l[r+60>>2],l[r+60>>2]=l[e+16>>2],i=Pk(l[e+20>>2],r),l[r+60>>2]=b;break e;default:if(!(1&k[e+5|0]))break j;if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)break X;for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break U;case 1:break e;case 2:}if(64&v[e+4|0]){if(t=l[e+20>>2],e=l[t+8>>2],(0|(b=l[t+12>>2]))>0){for(;;){if(i=Pk(e,r))break e;if((0|b)==(0|(s=s+1|0)))break}e=l[t+8>>2]}if((0|(n=Hk(e,r)))<0){i=n;break e}if((i=l[r+8>>2])>>>0>=(e=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=56,(b=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,b=e),(i=l[r+8>>2])>>>0>=(e=b+4|0)>>>0)break G;for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break B}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=74,h[r+4>>2]<n>>>0&&(l[r+4>>2]=n),i=Pk(l[e+20>>2],r))break e;if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=75,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e;case 6:}i=-6;pe:{ge:{ye:{Ee:{_e:{De:{Se:{Fe:{Me:{Ae:{xe:{Pe:{Te:{Re:{Oe:{Ie:{if((0|(b=l[e+4>>2]))<=127){if((e=b+-1|0)>>>0>63)break e;switch(e-1|0){case 1:case 3:case 4:case 5:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:break e;case 62:break Ae;case 2:break xe;case 14:break Pe;case 30:break Te;case 0:break Re;case 6:break Oe;default:break Ie}}if((0|b)<=1023){if(128==(0|b))break Me;if(256==(0|b))break Fe;if(512!=(0|b))break e;if((i=l[r+8>>2])>>>0<(e=(s=l[r+4>>2])+1|0)>>>0)break Se;i=l[r>>2];break De}if((0|b)<=4095){if(1024==(0|b))break _e;if(2048!=(0|b))break e;if((0|(s=Hk(l[e+8>>2],r)))>=0)break Ee;i=s;break e}if(4096==(0|b))break ye;if(8192!=(0|b))break e;if(s=Hk(l[e+8>>2],r),(i=l[r+8>>2])>>>0<(n=(b=l[r+4>>2])+1|0)>>>0)break ge;i=l[r>>2];break pe}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=35,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=36,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=37,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=38,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=39,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=40,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=31,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=32,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=33,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=34,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=70,h[r+4>>2]<n>>>0&&(l[r+4>>2]=n),i=Pk(l[e+8>>2],r))break e;if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=71,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=72,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),(i=l[r+8>>2])>>>0>=(n=b+4|0)>>>0)break W;for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break C}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=76,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),(0|(n=l[e+12>>2]))<=-1){if(i=-122,ub(l[e+8>>2],r,a+12|0,0))break e;b=l[r+4>>2],n=l[a+12>>2]}else l[a+12>>2]=n;if((i=l[r+8>>2])>>>0>=(s=b+4|0)>>>0)break Y;for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break L}for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=77,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),(i=l[r+8>>2])>>>0>=(n=b+4|0)>>>0)break q;for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2];break H}i=l[r>>2];break a}i=l[r>>2];break k}i=l[r>>2];break b}i=l[r>>2];break t}i=l[r>>2];break c}i=l[r>>2]}if(k[i+n|0]=21,h[r+4>>2]<b>>>0)break u;break o}i=l[r>>2];break l}i=l[r>>2];break d}i=l[r>>2];break h}i=l[r>>2];break w}i=l[r>>2];break p}i=l[r>>2];break g}i=l[r>>2];break E}i=l[r>>2];break _}i=l[r>>2];break S}i=l[r>>2];break F}i=l[r>>2];break M}i=l[r>>2];break A}i=l[r>>2];break P}i=l[r>>2];break T}i=l[r>>2];break R}i=l[r>>2];break O}i=l[r>>2];break I}i=l[r>>2];break N}i=l[r>>2];break U}i=l[r>>2];break B}i=l[r>>2];break C}i=l[r>>2];break L}i=l[r>>2]}if(s=s+1|0,k[0|(b=i+b|0)]=s,k[b+1|0]=s>>>8,k[b+2|0]=s>>>16,k[b+3|0]=s>>>24,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),(0|(n=l[e+12>>2]))<=-1){if(i=-122,ub(l[e+8>>2],r,a+8|0,0))break e;b=l[r+4>>2],n=l[a+8>>2]}else l[a+8>>2]=n;if((i=l[r+8>>2])>>>0<(s=b+4|0)>>>0){for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,h[r+4>>2]<s>>>0&&(l[r+4>>2]=s),i=Pk(l[e+8>>2],r))break e;if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=78,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e;break r}k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,h[r+4>>2]<s>>>0&&(l[r+4>>2]=s),i=Pk(l[e+8>>2],r);break e}if(s=s+1|0,k[0|(b=i+b|0)]=s,k[b+1|0]=s>>>8,k[b+2|0]=s>>>16,k[b+3|0]=s>>>24,h[r+4>>2]<n>>>0&&(l[r+4>>2]=n),i=Pk(l[e+8>>2],r))break e;if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=73,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if(s=n+6|0,k[0|(b=i+b|0)]=s,k[b+1|0]=s>>>8,k[b+2|0]=s>>>16,k[b+3|0]=s>>>24,h[r+4>>2]<e>>>0&&(l[r+4>>2]=e),i=Pk(l[t+8>>2],r))break e;if((i=l[r+8>>2])>>>0>=(e=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=57,(b=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,b=e),(i=l[r+8>>2])>>>0>=(e=b+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=55,(b=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,b=e),(i=l[r+8>>2])>>>0<(e=b+4|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(n=-11-n|0,k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if(k[i+b|0]=79,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),n=b+9|0,l[e+24>>2]=n,l[e+4>>2]=512|l[e+4>>2],(i=l[r+8>>2])>>>0<(s=b+4|0)>>>0){for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,h[r+4>>2]<s>>>0&&(l[r+4>>2]=s),s=Hk(l[e+20>>2],r),(i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=55,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),(i=l[r+8>>2])>>>0<(n=b+4|0)>>>0){for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];s=s+7|0,k[0|(b=i+b|0)]=s,k[b+1|0]=s>>>8,k[b+2|0]=s>>>16,k[b+3|0]=s>>>24,h[r+4>>2]>=n>>>0||(l[r+4>>2]=n)}b=l[r+36>>2];j:{U:{n=l[e+12>>2];B:{if((0|n)<=31){if(b>>>n&1)break B;break U}if(!(1&b))break U}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=49,(b=l[r+4>>2])>>>0>=n>>>0)break j;l[r+4>>2]=n,b=n;break j}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}k[i+b|0]=48,(b=l[r+4>>2])>>>0>=n>>>0||(l[r+4>>2]=n,b=n)}if(s=l[e+12>>2],(i=l[r+8>>2])>>>0<(n=b+2|0)>>>0){for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(k[0|(b=i+b|0)]=s,k[b+1|0]=s>>>8,h[r+4>>2]<n>>>0&&(l[r+4>>2]=n),i=Pk(l[e+20>>2],r))break e;j:{U:{if(256&(t=l[e+4>>2])){b=l[r+40>>2],n=l[e+12>>2];B:{if((0|n)<=31){if(b>>>n&1)break B;break U}if(!(1&b))break U}if((i=l[r+8>>2])>>>0>=(s=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(k[i+n|0]=128&t?51:50,(b=l[r+4>>2])>>>0>=s>>>0)break j;l[r+4>>2]=s,b=s;break j}b=l[r+40>>2],n=l[e+12>>2];B:{C:{if(128&t){L:{if((0|n)<=31){if(b>>>n&1)break L;break C}if(!(1&b))break C}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=51,(b=l[r+4>>2])>>>0>=n>>>0)break B;l[r+4>>2]=n,b=n;break B}L:{H:{q:{if((0|n)<=31){if(b>>>n&1)break q;break H}if(!(1&b))break H}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=50,(b=l[r+4>>2])>>>0>=n>>>0)break L;l[r+4>>2]=n,b=n;break L}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}k[i+b|0]=52,(b=l[r+4>>2])>>>0>=n>>>0||(l[r+4>>2]=n,b=n)}if(n=l[e+12>>2],(i=l[r+8>>2])>>>0<(e=b+2|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(n=(b=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}k[i+b|0]=53,(b=l[r+4>>2])>>>0>=n>>>0||(l[r+4>>2]=n,b=n)}if(n=l[e+12>>2],(i=l[r+8>>2])>>>0<(e=b+2|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if((i=l[r+8>>2])>>>0>=(s=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<s>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}k[i+n|0]=128&t?53:52,(b=l[r+4>>2])>>>0>=s>>>0||(l[r+4>>2]=s,b=s)}if(n=l[e+12>>2],(i=l[r+8>>2])>>>0<(e=b+2|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,(s=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,s=e),(i=l[r+8>>2])>>>0>=(e=s+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=80,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if(k[0|(n=i+n|0)]=5,k[n+1|0]=0,k[n+2|0]=0,k[n+3|0]=0,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0>=(b=n+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(k[i+n|0]=55,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0<(b=n+4|0)>>>0){for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}else i=l[r>>2];k[0|(n=i+n|0)]=s,k[n+1|0]=s>>>8,k[n+2|0]=s>>>16,k[n+3|0]=s>>>24,h[r+4>>2]<b>>>0&&(l[r+4>>2]=b),i=Pk(l[e+8>>2],r);break e}if(o=l[r+16>>2],(i=l[r+8>>2])>>>0>=(b=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}k[i+n|0]=u?60:61,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b);z:{N:{if((i=l[r+8>>2])>>>0<(b=n+2|0)>>>0){for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break N;n=l[r+4>>2];break z}i=l[r>>2];break z}l[r+16>>2]=l[r+16>>2]+1,i=-5;break e}if(k[0|(n=i+n|0)]=o,k[n+1|0]=o>>>8,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),l[r+16>>2]=l[r+16>>2]+1,(i=l[r+8>>2])>>>0>=(b=n+4|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(s=t+3|0,k[0|(n=i+n|0)]=s,k[n+1|0]=s>>>8,k[n+2|0]=s>>>16,k[n+3|0]=s>>>24,h[r+4>>2]<b>>>0&&(l[r+4>>2]=b),b=l[e+16>>2],i=l[e+12>>2],n=l[r+48>>2])if((0|n)<=(0|o)){if(n=n+4|0,!(s=Ub(l[r+52>>2],n<<3))){i=-5;break e}l[r+48>>2]=n,l[r+52>>2]=s}else s=l[r+52>>2];else{if(!(s=Cb(32))){i=-5;break e}l[r+48>>2]=4,l[r+52>>2]=s}if(l[4+(n=(o<<3)+s|0)>>2]=-1==(0|b)?2147483647:b,l[n>>2]=i,i=sf(l[e+8>>2],r,c))break e;z:if(!(16&v[e+5|0])&&l[r+28>>2]<=0){if(b=l[e+20>>2],(i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}k[i+s|0]=b?62:63,(s=l[r+4>>2])>>>0>=e>>>0||(l[r+4>>2]=e,s=e)}else{if(b=l[e+20>>2],(i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=b?64:65,(s=l[r+4>>2])>>>0>=e>>>0)break z;l[r+4>>2]=e,s=e}if((i=l[r+8>>2])>>>0<(e=s+2|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}else i=l[r>>2];if(k[0|(b=i+s|0)]=o,k[b+1|0]=o>>>8,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}k[0|(n=i+n|0)]=s,k[n+1|0]=s>>>8,k[n+2|0]=s>>>16,k[n+3|0]=s>>>24,h[r+4>>2]<b>>>0&&(l[r+4>>2]=b),i=Pk(l[e+8>>2],r);break e}if(k[0|(n=i+n|0)]=5,k[n+1|0]=0,k[n+2|0]=0,k[n+3|0]=0,h[r+4>>2]>=b>>>0)break x;l[r+4>>2]=b;break x}if(k[i+n|0]=55,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0<(b=n+4|0)>>>0){for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}else i=l[r>>2];if(k[0|(n=i+n|0)]=5,k[n+1|0]=0,k[n+2|0]=0,k[n+3|0]=0,h[r+4>>2]>=b>>>0)break x;l[r+4>>2]=b;break x}if(k[i+n|0]=55,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0<(b=n+4|0)>>>0){for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}else i=l[r>>2];if(k[0|(n=i+n|0)]=6,k[n+1|0]=0,k[n+2|0]=0,k[n+3|0]=0,h[r+4>>2]>=b>>>0)break x;l[r+4>>2]=b;break x}k[0|(n=i+n|0)]=6,k[n+1|0]=0,k[n+2|0]=0,k[n+3|0]=0,h[r+4>>2]>=b>>>0||(l[r+4>>2]=b)}x:{P:{T:{R:{O:{I:{z:{N:{if(l[e+20>>2]){if(l[e+28>>2]){if((i=l[r+8>>2])>>>0>=(b=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(k[i+n|0]=58,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0>=(b=n+4|0)>>>0)break N;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break x}if(s=t+5|0,b=(n=l[r+4>>2])+1|0,i=l[r+8>>2],l[e+32>>2]){if(i>>>0>=b>>>0)break z;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break P}if(i>>>0>=b>>>0)break I;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break T}if((i=l[r+8>>2])>>>0>=(b=(n=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}if(k[i+n|0]=55,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0>=(b=n+4|0)>>>0)break O;for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2];break R}i=l[r>>2];break x}i=l[r>>2];break P}i=l[r>>2];break T}i=l[r>>2]}if(k[0|(n=i+n|0)]=t,k[n+1|0]=t>>>8,k[n+2|0]=t>>>16,k[n+3|0]=t>>>24,h[r+4>>2]<b>>>0&&(l[r+4>>2]=b),i=sf(l[e+8>>2],r,c))break e;if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=56,(s=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,s=e),(i=l[r+8>>2])>>>0<(e=s+4|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}else i=l[r>>2];if(n=-5-t|0,k[0|(b=i+s|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if(k[i+n|0]=56,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0<(b=n+4|0)>>>0){for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}else i=l[r>>2];if(k[0|(n=i+n|0)]=s,k[n+1|0]=s>>>8,k[n+2|0]=s>>>16,k[n+3|0]=s>>>24,h[r+4>>2]<b>>>0&&(l[r+4>>2]=b),i=sf(l[e+8>>2],r,c))break e;if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=55,(s=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,s=e),(i=l[r+8>>2])>>>0<(e=s+4|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}else i=l[r>>2];if(n=-10-t|0,k[0|(b=i+s|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if(k[i+n|0]=59,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),(i=l[r+8>>2])>>>0<(b=n+4|0)>>>0){for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}else i=l[r>>2];k[0|(n=i+n|0)]=s,k[n+1|0]=s>>>8,k[n+2|0]=s>>>16,k[n+3|0]=s>>>24,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),s=l[l[e+32>>2]+4>>2],i=l[r+8>>2];P:{if(i>>>0>=(b=n+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break P;n=l[r+4>>2]}k[i+n|0]=v[0|s],h[r+4>>2]>=b>>>0||(l[r+4>>2]=b)}if(i=sf(l[e+8>>2],r,c))break e;if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=55,(s=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,s=e),(i=l[r+8>>2])>>>0<(e=s+4|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}else i=l[r>>2];if(n=-11-t|0,k[0|(b=i+s|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,i=0,h[r+4>>2]>=e>>>0)break e;l[r+4>>2]=e;break e}s=t+5|0,k[0|(n=i+n|0)]=s,k[n+1|0]=s>>>8,k[n+2|0]=s>>>16,k[n+3|0]=s>>>24,(n=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,n=b),s=l[l[e+28>>2]+4>>2],i=l[r+8>>2];x:{if(i>>>0>=(b=n+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break x;n=l[r+4>>2]}k[i+n|0]=v[0|s],h[r+4>>2]>=b>>>0||(l[r+4>>2]=b)}if(i=sf(l[e+8>>2],r,c))break e;if((i=l[r+8>>2])>>>0>=(e=(s=l[r+4>>2])+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[i+s|0]=55,(s=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,s=e),(i=l[r+8>>2])>>>0<(e=s+4|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}else i=l[r>>2];if(n=-11-t|0,k[0|(b=i+s|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,i=0,h[r+4>>2]>=e>>>0)break e;l[r+4>>2]=e;break e}if(k[i+b|0]=25,i=0,h[r+4>>2]>=n>>>0)break e;l[r+4>>2]=n;break e}if(k[i+b|0]=26,i=0,h[r+4>>2]>=n>>>0)break e;l[r+4>>2]=n;break e}k[i+b|0]=27;break D}k[i+b|0]=28}if((b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),n=l[l[e+32>>2]+4>>2],(i=l[r+8>>2])>>>0>=(e=b+1|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}if(k[i+b|0]=v[0|n],i=0,h[r+4>>2]>=e>>>0)break e;l[r+4>>2]=e;break e}k[i+b|0]=45;break y}k[i+b|0]=46}if((n=l[r+4>>2])>>>0>=s>>>0)break m;l[r+4>>2]=s,n=s;break m}if(k[i+b|0]=43,(b=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,b=e),(i=l[r+8>>2])>>>0<(e=b+2|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if(k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}k[0|(b=i+b|0)]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,(n=l[r+4>>2])>>>0>=s>>>0||(l[r+4>>2]=s,n=s)}if(s=l[e+8>>2],(i=l[r+8>>2])>>>0<(b=n+4|0)>>>0){for(;(i<<=1)>>>0<b>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}n=l[r+4>>2]}else i=l[r>>2];if(k[0|(n=i+n|0)]=s,k[n+1|0]=s>>>8,k[n+2|0]=s>>>16,k[n+3|0]=s>>>24,(s=l[r+4>>2])>>>0<b>>>0&&(l[r+4>>2]=b,s=b),i=0,(0|(b=l[e+8>>2]))<1)break e;for(t=(n=l[e+36>>2])||e+12|0;;){if(n=l[t+((b=b+-1|0)<<2)>>2],(i=l[r+8>>2])>>>0>=(e=s+2|0)>>>0)i=l[r>>2];else{for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}s=l[r+4>>2]}if(k[0|(s=i+s|0)]=n,k[s+1|0]=n>>>8,(s=l[r+4>>2])>>>0<e>>>0&&(l[r+4>>2]=e,s=e),i=0,!((0|b)>0))break}break e}k[i+s|0]=23;break v}k[i+s|0]=24}if(h[r+4>>2]>=e>>>0)break r;l[r+4>>2]=e,i=0;break e}if(k[i+n|0]=18,h[r+4>>2]>=b>>>0)break o}l[r+4>>2]=b}if((i=l[r+8>>2])>>>0<(n=(b=l[r+4>>2])+32|0)>>>0){for(;(i<<=1)>>>0<n>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];b=i+b|0,s=v[e+12|0]|v[e+13|0]<<8|v[e+14|0]<<16|v[e+15|0]<<24,i=v[e+8|0]|v[e+9|0]<<8|v[e+10|0]<<16|v[e+11|0]<<24,k[0|b]=i,k[b+1|0]=i>>>8,k[b+2|0]=i>>>16,k[b+3|0]=i>>>24,k[b+4|0]=s,k[b+5|0]=s>>>8,k[b+6|0]=s>>>16,k[b+7|0]=s>>>24,s=v[e+36|0]|v[e+37|0]<<8|v[e+38|0]<<16|v[e+39|0]<<24,i=v[e+32|0]|v[e+33|0]<<8|v[e+34|0]<<16|v[e+35|0]<<24,k[b+24|0]=i,k[b+25|0]=i>>>8,k[b+26|0]=i>>>16,k[b+27|0]=i>>>24,k[b+28|0]=s,k[b+29|0]=s>>>8,k[b+30|0]=s>>>16,k[b+31|0]=s>>>24,s=v[e+28|0]|v[e+29|0]<<8|v[e+30|0]<<16|v[e+31|0]<<24,i=v[e+24|0]|v[e+25|0]<<8|v[e+26|0]<<16|v[e+27|0]<<24,k[b+16|0]=i,k[b+17|0]=i>>>8,k[b+18|0]=i>>>16,k[b+19|0]=i>>>24,k[b+20|0]=s,k[b+21|0]=s>>>8,k[b+22|0]=s>>>16,k[b+23|0]=s>>>24,s=v[e+20|0]|v[e+21|0]<<8|v[e+22|0]<<16|v[e+23|0]<<24,i=v[e+16|0]|v[e+17|0]<<8|v[e+18|0]<<16|v[e+19|0]<<24,k[b+8|0]=i,k[b+9|0]=i>>>8,k[b+10|0]=i>>>16,k[b+11|0]=i>>>24,k[b+12|0]=s,k[b+13|0]=s>>>8,k[b+14|0]=s>>>16,k[b+15|0]=s>>>24,(b=l[r+4>>2])>>>0<n>>>0&&(l[r+4>>2]=n,b=n),s=(s=4+((n=l[r>>2])+b|0)&3)?4-s|0:0,t=l[e+40>>2],c=l[t+4>>2],i=l[r+8>>2];o:{if(i>>>0<(e=b+4|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,n=Ub(n,i),l[r>>2]=n,!n)break o;b=l[r+4>>2]}b=b+n|0,n=c+3|0,k[0|b]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,h[r+4>>2]>=e>>>0||(l[r+4>>2]=e)}o:if(s){if((i=l[r+8>>2])>>>0<(e=s+(b=l[r+4>>2])|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break o;b=l[r+4>>2]}else i=l[r>>2];qb(i+b|0,59600,s),h[r+4>>2]>=e>>>0||(l[r+4>>2]=e)}n=l[t>>2],i=l[r+8>>2],b=l[r+4>>2],t=l[t+4>>2];o:{if(i>>>0<(e=b+t|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break o}b=l[r+4>>2]}else i=l[r>>2];qb(i+b|0,n,t),i=0,h[r+4>>2]>=e>>>0||(l[r+4>>2]=e)}if(!(s=3-s|0))break e;if((e=l[r+8>>2])>>>0<(b=s+(n=l[r+4>>2])|0)>>>0){for(;(e<<=1)>>>0<b>>>0;);if(l[r+8>>2]=e,e=Ub(l[r>>2],e),l[r>>2]=e,!e)break e;n=l[r+4>>2]}else e=l[r>>2];if(qb(e+n|0,59600,s),h[r+4>>2]>=b>>>0)break e;l[r+4>>2]=b;break e}k[i+n|0]=17;break s}k[i+n|0]=20}h[r+4>>2]>=b>>>0||(l[r+4>>2]=b)}s=(s=4+((b=l[r>>2])+(n=l[r+4>>2])|0)&3)?4-s|0:0,t=l[e+40>>2],c=l[t+4>>2],i=l[r+8>>2];n:{if(i>>>0<(e=n+4|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,b=Ub(b,i),l[r>>2]=b,!b)break n;n=l[r+4>>2]}b=b+n|0,n=c+3|0,k[0|b]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,h[r+4>>2]>=e>>>0||(l[r+4>>2]=e)}n:if(s){if((i=l[r+8>>2])>>>0<(e=s+(b=l[r+4>>2])|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i)break n;b=l[r+4>>2]}else i=l[r>>2];qb(i+b|0,59600,s),h[r+4>>2]>=e>>>0||(l[r+4>>2]=e)}n=l[t>>2],i=l[r+8>>2],b=l[r+4>>2],t=l[t+4>>2];n:{if(i>>>0<(e=b+t|0)>>>0){for(;(i<<=1)>>>0<e>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break n}b=l[r+4>>2]}else i=l[r>>2];qb(i+b|0,n,t),i=0,h[r+4>>2]>=e>>>0||(l[r+4>>2]=e)}if(!(s=3-s|0))break e;if((e=l[r+8>>2])>>>0<(b=s+(n=l[r+4>>2])|0)>>>0){for(;(e<<=1)>>>0<b>>>0;);if(l[r+8>>2]=e,e=Ub(l[r>>2],e),l[r>>2]=e,!e)break e;n=l[r+4>>2]}else e=l[r>>2];if(qb(e+n|0,59600,s),h[r+4>>2]>=b>>>0)break e;l[r+4>>2]=b;break e}k[i+n|0]=16;break f}k[i+n|0]=19}h[r+4>>2]>=b>>>0||(l[r+4>>2]=b)}if((i=l[r+8>>2])>>>0<(t=(b=l[r+4>>2])+32|0)>>>0){for(;(i<<=1)>>>0<t>>>0;);if(l[r+8>>2]=i,i=Ub(l[r>>2],i),l[r>>2]=i,!i){i=-5;break e}b=l[r+4>>2]}else i=l[r>>2];if(s=v[4+(n=e+8|0)|0]|v[n+5|0]<<8|v[n+6|0]<<16|v[n+7|0]<<24,b=i+b|0,n=v[0|n]|v[n+1|0]<<8|v[n+2|0]<<16|v[n+3|0]<<24,k[0|b]=n,k[b+1|0]=n>>>8,k[b+2|0]=n>>>16,k[b+3|0]=n>>>24,k[b+4|0]=s,k[b+5|0]=s>>>8,k[b+6|0]=s>>>16,k[b+7|0]=s>>>24,n=v[e+36|0]|v[e+37|0]<<8|v[e+38|0]<<16|v[e+39|0]<<24,s=v[e+32|0]|v[e+33|0]<<8|v[e+34|0]<<16|v[e+35|0]<<24,k[b+24|0]=s,k[b+25|0]=s>>>8,k[b+26|0]=s>>>16,k[b+27|0]=s>>>24,k[b+28|0]=n,k[b+29|0]=n>>>8,k[b+30|0]=n>>>16,k[b+31|0]=n>>>24,n=v[e+28|0]|v[e+29|0]<<8|v[e+30|0]<<16|v[e+31|0]<<24,s=v[e+24|0]|v[e+25|0]<<8|v[e+26|0]<<16|v[e+27|0]<<24,k[b+16|0]=s,k[b+17|0]=s>>>8,k[b+18|0]=s>>>16,k[b+19|0]=s>>>24,k[b+20|0]=n,k[b+21|0]=n>>>8,k[b+22|0]=n>>>16,k[b+23|0]=n>>>24,n=v[e+20|0]|v[e+21|0]<<8|v[e+22|0]<<16|v[e+23|0]<<24,e=v[e+16|0]|v[e+17|0]<<8|v[e+18|0]<<16|v[e+19|0]<<24,k[b+8|0]=e,k[b+9|0]=e>>>8,k[b+10|0]=e>>>16,k[b+11|0]=e>>>24,k[b+12|0]=n,k[b+13|0]=n>>>8,k[b+14|0]=n>>>16,k[b+15|0]=n>>>24,h[r+4>>2]>=t>>>0)break r;l[r+4>>2]=t,i=0;break e}if(k[0|(b=i+b|0)]=e,k[b+1|0]=e>>>8,k[b+2|0]=e>>>16,k[b+3|0]=e>>>24,!(h[r+4>>2]>=n>>>0)){l[r+4>>2]=n,i=0;break e}}i=0}return ne=a+16|0,i}function Tk(e){var r;ne=r=ne-16|0,l[r>>2]=e,Sn(l[75398],20054,r),T(2),M()}function Rk(e){var r=0,a=0,i=0,f=0,k=0,b=0,n=0;e:if(5!=(15&v[0|e]))P(25781,17172,444,43888),M();else{if(i=l[e+8>>2],1&(f=l[i+8>>2]))return l[i+4>>2];if(b=f>>>1,k=16+(((e=f>>>3)<<2)+i|0)|0,!e){a=1126864963;break e}for(e=0-e|0,a=1126864963;r=l[(e<<2)+k>>2],a=w(Bi(w(w(r,-862048943)>>>17|w(r,380141568),461845907)^a,13),5)+-430675100|0,n=(r=e+1|0)>>>0<e>>>0,e=r,!n;);}if((r=(3&b)-1|0)>>>0<=2){e=0;e:switch(r-1|0){case 1:e=v[k+2|0]<<16;case 0:e=v[k+1|0]<<8|e}e=v[0|k]^e,a=w(w(e,-862048943)>>>17|w(e,380141568),461845907)^a}return l[i+8>>2]=1|f,e=w((e=a^b)>>>16^e,-2048144789),e=w(e>>>13^e,-1028477387),e^=e>>>16,l[i+4>>2]=e,e}function Ok(e,r,a){var i,f,k=0,b=0;ne=i=ne-48|0,5!=(15&v[0|a])&&(P(19611,17172,745,43520),M()),k=l[a+8>>2],f=l[k+8>>2],b=l[r+12>>2],l[i+24>>2]=l[r+8>>2],l[i+28>>2]=b,b=l[r+4>>2],l[i+16>>2]=l[r>>2],l[i+20>>2]=b,Ff(i+32|0,i+16|0,k+16|0,f>>>1),k=l[i+44>>2],l[r+8>>2]=l[i+40>>2],l[r+12>>2]=k,k=l[i+36>>2],l[r>>2]=l[i+32>>2],l[r+4>>2]=k,k=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=k,k=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=k,zb(i),a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,ne=i+48|0}function Ik(e,r){var a=0;e:if((0|r)>=1024){if(e*=8.98846567431158e307,(0|(a=r+-1023|0))<1024){r=a;break e}e*=8.98846567431158e307,r=((0|r)<3069?r:3069)+-2046|0}else(0|r)>-1023||(e*=2.2250738585072014e-308,(0|(a=r+1022|0))>-1023?r=a:(e*=2.2250738585072014e-308,r=((0|r)>-3066?r:-3066)+2044|0));return n(0,0),n(1,r+1023<<20),e*+s()}function zk(e,r,a,i,f){var k,b=0,n=0;if(ne=k=ne-256|0,!(73728&f|(0|a)<=(0|i))){if(wn(k,r,(b=(f=a-i|0)>>>0<256)?f:256),r=e,n=k,!b){for(a=a-i|0;Mn(e,k,256),(f=f+-256|0)>>>0>255;);f=255&a}Mn(r,n,f)}ne=k+256|0}function Nk(e,r,a){var i;4&v[34993]||(P(17730,14282,211,35526),M()),i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=27,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+64>>2]=En(r),l[e+4>>2]=i,l[e>>2]=i,e=l[a+4>>2],l[i+84>>2]=l[a>>2],l[i+88>>2]=e}function jk(e,r,a){var i,f=0;ne=i=ne+-64|0,l[i+24>>2]=0,l[i+28>>2]=0,l[i+56>>2]=0,l[i+48>>2]=0,l[i+52>>2]=0,l[i+40>>2]=0,l[i+44>>2]=0,l[i+32>>2]=0,l[i+36>>2]=0,jb(e,14910),f=l[r+12>>2],l[i+16>>2]=l[r+8>>2],l[i+20>>2]=f,f=l[r+4>>2],l[i+8>>2]=l[r>>2],l[i+12>>2]=f,mb(i+24|0,i+8|0,a,0,0,e),Ji(i+24|0),ne=i- -64|0}function Uk(e,r,a){var i=0;if(sb(r,r+a|0))return i=Bb(a+17|0),l[i+12>>2]=a,l[i>>2]=1,l[i+8>>2]=a<<1,r&&qb(i+16|0,r,a),k[16+(a+i|0)|0]=0,l[e+8>>2]=i,l[e>>2]=5,void(l[e+4>>2]=0);ob(e,r,a)}function Bk(e,r,a,i,k){var b=0;if((0|k)<1)return 0;for(;;){if(r>>>0>=a>>>0)return v[0|i];if(b=0|f[l[e+20>>2]](r,a),(b=v[0|i]-b|0)||(i=i+1|0,r=(0|f[l[e>>2]](r))+r|0,b=0,!((0|(k=k+-1|0))>0)))break}return b}function Ck(e,r){var a,i=0,f=0,b=0,n=0;if(ne=a=ne-32|0,!(15&v[0|r])){if(i=l[r+8>>2]){b=v[i+8|0],f=v[i+12|0]|v[i+13|0]<<8|v[i+14|0]<<16|v[i+15|0]<<24,k[a+27|0]=f,k[a+28|0]=f>>>8,k[a+29|0]=f>>>16,k[a+30|0]=f>>>24,l[a+24>>2]=v[i+9|0]|v[i+10|0]<<8|v[i+11|0]<<16|v[i+12|0]<<24,n=v[i+20|0]|v[i+21|0]<<8|v[i+22|0]<<16|v[i+23|0]<<24,i=v[i+16|0]|v[i+17|0]<<8|v[i+18|0]<<16|v[i+19|0]<<24;e:if(!((f=15&b)>>>0>7)){r:switch(f-1|0){default:if(!i)break e;break;case 0:case 1:case 2:case 3:break e;case 4:case 5:case 6:}l[i>>2]=l[i>>2]+1}f=v[a+27|0]|v[a+28|0]<<8|v[a+29|0]<<16|v[a+30|0]<<24,k[a+19|0]=f,k[a+20|0]=f>>>8,k[a+21|0]=f>>>16,k[a+22|0]=f>>>24,l[a+16>>2]=l[a+24>>2],k[0|e]=b,f=l[a+16>>2],k[e+1|0]=f,k[e+2|0]=f>>>8,k[e+3|0]=f>>>16,k[e+4|0]=f>>>24,f=v[a+19|0]|v[a+20|0]<<8|v[a+21|0]<<16|v[a+22|0]<<24,k[e+4|0]=f,k[e+5|0]=f>>>8,k[e+6|0]=f>>>16,k[e+7|0]=f>>>24,l[e+12>>2]=n,l[e+8>>2]=i}else i=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=i,i=l[10945],l[e>>2]=l[10944],l[e+4>>2]=i;return e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a),void(ne=a+32|0)}P(17480,17172,111,43276),M()}function Lk(e){var r=0,a=0,i=0,f=0,k=0,c=0;e:{r:{a:{if(t(+e),r=0|b(1),i=0|b(0),!(((0|r)>0||(0|r)>=0&&!(i>>>0<0))&&(k=r,r>>>0>1048575))){if(!(2147483647&r|i))return-1/(e*e);if((0|r)>-1||(0|r)>=-1&&!(i>>>0<=4294967295))break a;return(e-e)/0}if(k>>>0>2146435071)break e;if(r=1072693248,c=-1023,1072693248!=(0|k)){r=k;break r}if(i)break r;return 0}t(0x40000000000000*e),r=0|b(1),i=0|b(0),c=-1077}f=+(((r=r+614242|0)>>>20)+c|0),n(0,0|i),n(1,1072079006+(1048575&r)|0),e=.6931471803691238*f+((e=+s()-1)+(1.9082149292705877e-10*f+(a=e/(e+2))*((f=e*(.5*e))+((e=(a*=a)*a)*(e*(.15313837699209373*e+.22222198432149784)+.3999999999940942)+a*(e*(e*(.14798198605116586*e+.1818357216161805)+.2857142874366239)+.6666666666666735)))-f))}return e}function Hk(e,r){var a=0,i=0,b=0,n=0,s=0,t=0,c=0;if((n=l[e>>2])>>>0>10)return-6;i=1;e:{r:{a:switch(n-1|0){case 7:for(;;){if((0|(i=Hk(l[e+4>>2],r)))<0)break r;if(i=b=i+b|0,!(e=l[e+8>>2]))break}break r;case 8:for(;n=a,a=a+1|0,b=Hk(l[e+4>>2],r)+b|0,e=l[e+8>>2];);return w(n,10)+b|0;default:if(b=l[e+4>>2],a=l[e+8>>2],1&(n=l[e+12>>2])){if(i=0,a>>>0<=b>>>0)break r;return((e=a-b|0)-1>>>0<5?1:5)+e|0}if(i=0,a>>>0<=b>>>0)break r;if(a=1,t=n>>>1&1,c=l[r+56>>2],(b=b+(i=0|f[l[c>>2]](b))|0)>>>0<h[e+8>>2])for(;;){if(r=a+1|0,(0|(n=0|f[l[c>>2]](b)))!=(0|i)){s=w(a,i)+s|0;i:{f:if(t)r=1==(0|a)?14:15;else{if((i=i+-1|0)>>>0>2){r=13,i=5;break i}r=12;k:switch(i-1|0){default:r=a+-1>>>0<5?a+1|0:7;break f;case 1:break f;case 0:}r=a+-1>>>0<3?a+7|0:11}i=1}a=i+4|0,s=s+(15==(8|r)?a:r+-11>>>0<3?a:i)|0,i=n,r=1}if(a=r,!((b=b+n|0)>>>0<h[e+8>>2]))break}b=w(a,i)+s|0;i:{f:if(t)e=1==(0|a)?14:15;else{if((r=i+-1|0)>>>0>2){e=13,a=5;break i}e=12;k:switch(r-1|0){default:e=a+-1>>>0<5?a+1|0:7;break f;case 1:break f;case 0:}e=a+-1>>>0<3?a+7|0:11}a=1}return r=a+4|0,b+(15==(8|e)?r:e+-11>>>0<3?r:a)|0;case 0:if(i=5,2&v[e+4|0])break r;if(!(a=l[e+40>>2]))return 33;i=8;i:if(!(l[l[r+56>>2]+12>>2]>1)){f:{for(;;){if(v[8+(e+b|0)|0])break f;if(32==(0|(b=b+1|0)))break}i=8;break i}i=40}return i+l[a+4>>2]|0;case 3:if(a=l[e+8>>2],32&v[e+5|0])return 13+(a<<1)|0;if(1==(0|a)){if(i=3,1&k[r+60|0])break r;return l[e+12>>2]<3?1:3}return 5+(a<<1)|0;case 9:return 5;case 4:if(a=l[e+24>>2],n=l[e+16>>2],(0|(i=Hk(l[e+8>>2],r)))<0)break r;if(!(!l[e+20>>2]|3!=l[l[e+8>>2]>>2]|-1!=(0|n)))return r=w(l[e+12>>2],i),l[e+32>>2]?r+2|0:r+1|0;if(b=a?i+6|0:i,-1==(0|n)&&(r=l[e+12>>2],!((0|(a=w(r,i)))>50&&(0|r)>=2)))return r=(0|i)>50&&1==(0|r)?5:a,l[e+20>>2]?l[e+28>>2]?11+(r+b|0)|0:(r=r+b|0,l[e+32>>2]?r+11|0:r+10|0):10+(r+b|0)|0;if(!((a=l[e+16>>2])|!l[e+36>>2]))return i+5|0;s=l[e+20>>2];i:{f:{if(r=l[e+12>>2],-1!=(0|n)){if(s)break f;s=0}if(r|s|1!=(0|a))break i;return i+10|0}if(!(w(r=i+5|0,a)>>>0>50&&1!=(0|a)))return e=l[e+12>>2],w(r,a-e|0)+w(e,i)|0}return b+10|0;case 5:if(2==(0|(b=l[e+8>>2])))return a=l[r+60>>2],l[r+60>>2]=l[e+16>>2],e=Hk(l[e+20>>2],r),l[r+60>>2]=a,e;if(n=l[e+20>>2]){if((0|(a=Hk(n,r)))<0)return a;b=l[e+8>>2]}if(i=-6,(n=b+-1|0)>>>0>3)break r;i:switch(n-1|0){default:if(1&k[e+5|0]){r=l[r+40>>2],e=l[e+12>>2];f:{if((0|e)<=31){if(r>>>e&1)break f;break e}if(!(1&r))break e}return a+17|0}return a+6|0;case 0:case 1:break r;case 2:}if(64&v[e+4|0]){if(e=l[e+20>>2],(0|(i=Hk(l[e+8>>2],r)))<0)break r;return 11+(w(l[e+12>>2],i)+i|0)|0}return a+2|0;case 1:case 2:break r;case 6:}if(!((a=l[e+8>>2])&&(i=b=Hk(a,r),(0|b)<0))){if((e=Bi(l[e+4>>2]+-1024|0,22))>>>0>7)return 1;i=1;a:switch(e-1|0){default:return b+2|0;case 0:return b+6|0;case 2:return b+5|0;case 1:case 3:case 4:case 5:break r;case 6:}i=b+10|0}}return i}return a+17|0}function qk(e,r,a){var i,f=0,b=0,n=0,s=0;if((0|(i=a-r|0))>=1){e:{r:{if(s=l[e+16>>2],!((0|(a=i+(f=(n=l[e+8>>2])-(b=l[e+4>>2])|0)|0))<24&&(0|s)<=0)){if((0|(n=a+16|0))<=(0|s)){k[qb(f+b|0,r,i)+i|0]=0;break e}if((e+20|0)==(0|b)){if(!(a=Cb(a+17|0)))return-5;if((0|f)<1)break r;k[qb(a,b,f)+f|0]=0;break r}if(a=a+17|0,a=b?Ub(b,a):Cb(a))break r;return-5}k[qb(n,r,i)+i|0]=0;break e}k[qb(a+f|0,r,i)+i|0]=0,l[e+16>>2]=n,l[e+4>>2]=a}l[e+8>>2]=i+(l[e+4>>2]+f|0)}return 0}function Yk(e,r,a,i){var f,k=0,b=0,n=0,s=0;ne=f=ne-400|0,k=l[a+4>>2],l[f+328>>2]=l[a>>2],l[f+332>>2]=k,k=l[r+4>>2],s=l[r>>2],l[f+280>>2]=s,l[f+284>>2]=k,l[f+320>>2]=s,l[f+324>>2]=k;e:if(0!=(0|(k=l[f+280>>2]))&(0|k)==l[f+284>>2]&&(k=l[f+324>>2],l[f+272>>2]=l[f+320>>2],l[f+276>>2]=k,Eb(f+272|0)&&(k=l[f+332>>2],l[f+264>>2]=l[f+328>>2],l[f+268>>2]=k,0!=(0|(k=l[f+264>>2]))&(0|k)==l[f+268>>2]&&(k=l[f+332>>2],l[f+256>>2]=l[f+328>>2],l[f+260>>2]=k,Eb(f+256|0))))){if(43==(0|i)){if(k=l[f+324>>2],l[f+248>>2]=l[f+320>>2],l[f+252>>2]=k,1==(0|zn(f+248|0))){k=l[f+324>>2],l[f+48>>2]=l[f+320>>2],l[f+52>>2]=k,sn(f+48|0),k=l[f+332>>2],l[f+312>>2]=l[f+328>>2],l[f+316>>2]=k;break e}if(k=l[f+332>>2],l[f+240>>2]=l[f+328>>2],l[f+244>>2]=k,1==(0|zn(f+240|0))){k=l[f+332>>2],l[f+56>>2]=l[f+328>>2],l[f+60>>2]=k,sn(f+56|0),k=l[f+324>>2],l[f+312>>2]=l[f+320>>2],l[f+316>>2]=k;break e}}if(k=l[f+324>>2],l[f+232>>2]=l[f+320>>2],l[f+236>>2]=k,k=zn(f+232|0),s=l[f+332>>2],l[f+224>>2]=l[f+328>>2],l[f+228>>2]=s,(0|zn(f+224|0))==(0|k)){l[f+384>>2]=0,l[f+388>>2]=0,l[f+392>>2]=0,l[f+396>>2]=0,k=l[f+324>>2],l[f+216>>2]=l[f+320>>2],l[f+220>>2]=k;r:{a:{if(4==(0|zn(f+216|0))){if(k=l[f+324>>2],l[f+152>>2]=l[f+320>>2],l[f+156>>2]=k,qn(f+368|0,f+152|0),k=l[f+380>>2],l[f+144>>2]=l[f+376>>2],l[f+148>>2]=k,k=l[f+372>>2],l[f+136>>2]=l[f+368>>2],l[f+140>>2]=k,b=Wb(f+136|0),k=l[f+332>>2],l[f+128>>2]=l[f+328>>2],l[f+132>>2]=k,qn(f+352|0,f+128|0),k=l[f+364>>2],l[f+120>>2]=l[f+360>>2],l[f+124>>2]=k,k=l[f+356>>2],l[f+112>>2]=l[f+352>>2],l[f+116>>2]=k,n=Wb(f+112|0),(k=i+-42|0)>>>0<=20)break a;if((k=i+-265|0)>>>0>29)break r;i:switch(k-1|0){default:if(b==n){k=l[10939],l[f+344>>2]=l[10938],l[f+348>>2]=k,k=l[10937],l[f+336>>2]=l[10936],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r}k=l[10943],l[f+344>>2]=l[10942],l[f+348>>2]=k,k=l[10941],l[f+336>>2]=l[10940],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r;case 0:if(b!=n){k=l[10939],l[f+344>>2]=l[10938],l[f+348>>2]=k,k=l[10937],l[f+336>>2]=l[10936],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r}k=l[10943],l[f+344>>2]=l[10942],l[f+348>>2]=k,k=l[10941],l[f+336>>2]=l[10940],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r;case 27:if(b<=n){k=l[10939],l[f+344>>2]=l[10938],l[f+348>>2]=k,k=l[10937],l[f+336>>2]=l[10936],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r}k=l[10943],l[f+344>>2]=l[10942],l[f+348>>2]=k,k=l[10941],l[f+336>>2]=l[10940],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r;case 28:break i;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:break r}if(b>=n){k=l[10939],l[f+344>>2]=l[10938],l[f+348>>2]=k,k=l[10937],l[f+336>>2]=l[10936],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r}k=l[10943],l[f+344>>2]=l[10942],l[f+348>>2]=k,k=l[10941],l[f+336>>2]=l[10940],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r}if(43==(0|i)&&(k=l[f+324>>2],l[f+208>>2]=l[f+320>>2],l[f+212>>2]=k,5==(0|zn(f+208|0)))){k=l[f+324>>2],l[f+200>>2]=l[f+320>>2],l[f+204>>2]=k,qn(f+352|0,f+200|0),k=l[f+332>>2],l[f+192>>2]=l[f+328>>2],l[f+196>>2]=k,qn(f+336|0,f+192|0),k=l[f+364>>2],l[f+184>>2]=l[f+360>>2],l[f+188>>2]=k,k=l[f+348>>2],l[f+168>>2]=l[f+344>>2],l[f+172>>2]=k,k=l[f+356>>2],l[f+176>>2]=l[f+352>>2],l[f+180>>2]=k,k=l[f+340>>2],l[f+160>>2]=l[f+336>>2],l[f+164>>2]=k,Ok(f+368|0,f+176|0,f+160|0),k=l[f+380>>2],l[f+392>>2]=l[f+376>>2],l[f+396>>2]=k,k=l[f+372>>2],l[f+384>>2]=l[f+368>>2],l[f+388>>2]=k;break r}l[f+312>>2]=0,l[f+316>>2]=0;break e}a:switch(k-1|0){case 0:l[f+336>>2]=4,l[f+340>>2]=0,m[f+344>>3]=b+n,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r;case 19:if(b>n){k=l[10939],l[f+344>>2]=l[10938],l[f+348>>2]=k,k=l[10937],l[f+336>>2]=l[10936],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r}k=l[10943],l[f+344>>2]=l[10942],l[f+348>>2]=k,k=l[10941],l[f+336>>2]=l[10940],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r;case 17:if(b<n){k=l[10939],l[f+344>>2]=l[10938],l[f+348>>2]=k,k=l[10937],l[f+336>>2]=l[10936],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r}k=l[10943],l[f+344>>2]=l[10942],l[f+348>>2]=k,k=l[10941],l[f+336>>2]=l[10940],l[f+340>>2]=k,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r;case 4:l[f+336>>2]=4,l[f+340>>2]=0,m[f+344>>3]=b/n,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r;default:l[f+336>>2]=4,l[f+340>>2]=0,m[f+344>>3]=b*n,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k;break r;case 2:break a;case 1:case 3:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 18:break r}l[f+336>>2]=4,l[f+340>>2]=0,m[f+344>>3]=b-n,k=l[f+348>>2],l[f+392>>2]=l[f+344>>2],l[f+396>>2]=k,k=l[f+340>>2],l[f+384>>2]=l[f+336>>2],l[f+388>>2]=k}k=l[f+396>>2],l[f+104>>2]=l[f+392>>2],l[f+108>>2]=k,k=l[f+388>>2],l[f+96>>2]=l[f+384>>2],l[f+100>>2]=k,15&v[f+96|0]?(k=l[f+324>>2],l[f+88>>2]=l[f+320>>2],l[f+92>>2]=k,sn(f+88|0),k=l[f+332>>2],l[f+80>>2]=l[f+328>>2],l[f+84>>2]=k,sn(f+80|0),k=l[f+396>>2],l[f+72>>2]=l[f+392>>2],l[f+76>>2]=k,k=l[f+388>>2],l[f+64>>2]=l[f+384>>2],l[f+68>>2]=k,un(f+312|0,f- -64|0)):(l[f+312>>2]=0,l[f+316>>2]=0)}else l[f+312>>2]=0,l[f+316>>2]=0}else l[f+312>>2]=0,l[f+316>>2]=0;if(k=l[f+316>>2],l[f+40>>2]=l[f+312>>2],l[f+44>>2]=k,l[f+40>>2]|l[f+44>>2])r=l[f+316>>2],l[e>>2]=l[f+312>>2],l[e+4>>2]=r;else{e:{r:{a:{i:{f:{k:{b:{if((k=i+-37|0)>>>0>25){if((i=i+-265|0)>>>0>29)break b;n:switch(i-1|0){default:i=30611;break e;case 0:i=30758;break e;case 27:i=31890;break e;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:break b;case 28:}i=32042;break e}i=29857;n:switch(k-1|0){case 5:break e;case 4:break r;case 9:break a;case 22:break f;case 24:break k;case 0:case 1:case 2:case 3:case 6:case 8:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 23:break b;case 7:break n;default:break i}i=30022;break e}P(33306,29507,267,58314),M()}i=31057;break e}i=30922;break e}i=35942;break e}i=30469;break e}i=30206}k=l[r+4>>2],l[f+32>>2]=l[r>>2],l[f+36>>2]=k,Jk(f+296|0,f+32|0),r=l[a+4>>2],l[f+24>>2]=l[a>>2],l[f+28>>2]=r,Jk(f+288|0,f+24|0),r=l[f+300>>2],l[f+16>>2]=l[f+296>>2],l[f+20>>2]=r,r=l[f+292>>2],l[f+8>>2]=l[f+288>>2],l[f+12>>2]=r,$b(f+304|0,f+16|0,f+8|0),r=l[f+308>>2],l[f>>2]=l[f+304>>2],l[f+4>>2]=r,Nk(e,i,f)}ne=f+400|0}function Wk(e){var r,a=0,i=0;if(ne=r=ne-16|0,Lb(l[e+64>>2]),a=v[e+76|0]|v[e+77|0]<<8|v[e+78|0]<<16|v[e+79|0]<<24)for(;i=l[a>>2],Wk(a),a=i;);if(a=v[e+84|0]|v[e+85|0]<<8|v[e+86|0]<<16|v[e+87|0]<<24)for(;i=l[a>>2],Wk(a),a=i;);(a=l[e+48>>2])&&hb(a),a=l[e+8>>2],2&v[8+(a>>>0<41?w(a,24)+34336|0:35320)|0]&&(a=l[e+36>>2],l[r+8>>2]=l[e+32>>2],l[r+12>>2]=a,a=l[e+28>>2],l[r>>2]=l[e+24>>2],l[r+4>>2]=a,zb(r)),Lb(e),ne=r+16|0}function Gk(e,r,a){var i=0,f=0;e:{if(!(!(i=l[a>>2])|l[a+4>>2]!=(0|i))){if(!(4&v[9+(r>>>0<41?w(r,24)+34336|0:35320)|0]))break e;return f=l[i+64>>2],a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=r,l[a>>2]=0,l[a+4>>2]=0,l[a+76>>2]=0,l[a+80>>2]=0,l[a+68>>2]=-1,l[a+72>>2]=-1,l[a+60>>2]=0,l[a+64>>2]=0,l[a+52>>2]=-1,l[a+56>>2]=-1,l[a+48>>2]=0,l[a+84>>2]=0,l[a+88>>2]=0,l[a+64>>2]=En(f),l[e+4>>2]=a,l[e>>2]=a,void(l[a+60>>2]=i)}P(18470,14282,224,35558),M()}P(17730,14282,211,35526),M()}function Xk(e){var r,a=0,i=0;ne=r=ne-16|0,t(+e),i=0|b(1),b(0);e:if((i&=2147483647)>>>0<=1072243195){if(a=1,i>>>0<1044816030)break e;a=xn(e,0)}else if(a=e-e,!(i>>>0>=2146435072))if((i=3&ok(e,r))>>>0<=2){r:switch(i-1|0){default:a=xn(m[r>>3],m[r+8>>3]);break e;case 0:a=-Pn(m[r>>3],m[r+8>>3],1);break e;case 1:}a=-xn(m[r>>3],m[r+8>>3])}else a=Pn(m[r>>3],m[r+8>>3],1);return ne=r+16|0,e=a}function Jk(e,r){var a,i;ne=a=ne-32|0,l[a+16>>2]=0,l[a+20>>2]=0,l[a+24>>2]=0,l[a+28>>2]=0,i=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=i,Qk(e,21586,a+16|0,a+8|0),ne=a+32|0}function Vk(e,r,a){var i=0,f=0,k=0,b=0,n=0;e:{if(e>>>0<=r>>>0){if((0|e)==(0|r))return 0;if(128&(f=v[0|e])){if(i=1,b=-1,!(((k=v[f+44768|0])+1&255)>>>0<2)){if(e+k>>>0>r>>>0)i=r-e|0,b=-1;else{n=f&v[f+45024|0];r:if(k>>>0<2)i=k;else for(r=1,i=k;;){if(k=v[e+r|0],n=(f=255==(0|(b=v[k+44768|0])))?63&k|n<<6:-1,i=f?i:r,255!=(0|b))break r;if(!((0|(r=r+1|0))<(0|i)))break}b=(0|(r=55296==(-2048&(r=(0|n)<l[44720+(i<<2)>>2]?-1:n))?-1:r))>1114111?-1:r}if((0|i)<=0)break e}}else i=1,b=f;return l[a>>2]=b,e+i|0}P(14911,14517,30,44692),M()}P(15329,14517,72,44692),M()}function Kk(e,r,a){var i,f,k,b=0,n=0,s=0,t=0,c=0;if(n=l[r+4>>2],(0|(i=(t=a>>5)+l[r+16>>2]|0))>=(0|(b=l[r+8>>2])))for(;n=n+1|0,(0|i)>=(0|(b<<=1)););if((0|n)>7||!(s=l[(b=(n<<2)+e|0)>>2])?(s=Bb(20+((b=1<<n)<<2)|0),l[s+8>>2]=b,l[s+4>>2]=n):l[b>>2]=l[s>>2],l[s+12>>2]=0,l[s+16>>2]=0,n=s+20|0,(0|a)>=32)for(b=0,wn(n,0,((0|t)>1?t:1)<<2);n=n+4|0,(0|(b=b+1|0))<(0|t););t=i+1|0,k=(b=r+20|0)+(l[r+16>>2]<<2)|0;e:{if(!(f=31&a))for(;;)if(l[n>>2]=l[b>>2],n=n+4|0,!((b=b+4|0)>>>0<k>>>0))break e;for(c=32-f|0,a=0;l[n>>2]=l[b>>2]<<f|a,n=n+4|0,a=l[b>>2]>>>c,(b=b+4|0)>>>0<k>>>0;);l[n>>2]=a,t=a?i+2|0:t}if(l[s+16>>2]=t+-1,r){if((0|(a=l[r+4>>2]))>=8)return Lb(r),s;e=(a<<2)+e|0,l[r>>2]=l[e>>2],l[e>>2]=r}return s}function Zk(e,r,a,i){var f,k=0,b=0,n=0,s=0;ne=f=ne-256|0,n=l[r+12>>2],l[f+168>>2]=l[r+8>>2],l[f+172>>2]=n,n=l[r+4>>2],l[f+160>>2]=l[r>>2],l[f+164>>2]=n,n=Xb(15&v[f+160|0]),k=l[r+12>>2],l[f+152>>2]=l[r+8>>2],l[f+156>>2]=k,k=l[r+4>>2],l[f+144>>2]=l[r>>2],l[f+148>>2]=k,Nb(f+192|0,f+144|0),k=l[f+204>>2],l[f+136>>2]=l[f+200>>2],l[f+140>>2]=k,k=l[f+196>>2],l[f+128>>2]=l[f+192>>2],l[f+132>>2]=k,k=Jb(f+128|0,f+241|0,15),s=l[a+12>>2],l[f+120>>2]=l[a+8>>2],l[f+124>>2]=s,s=l[a+4>>2],l[f+112>>2]=l[a>>2],l[f+116>>2]=s,s=Xb(15&v[f+112|0]),b=l[a+12>>2],l[f+104>>2]=l[a+8>>2],l[f+108>>2]=b,b=l[a+4>>2],l[f+96>>2]=l[a>>2],l[f+100>>2]=b,Nb(f+176|0,f+96|0),b=l[f+188>>2],l[f+88>>2]=l[f+184>>2],l[f+92>>2]=b,b=l[f+180>>2],l[f+80>>2]=l[f+176>>2],l[f+84>>2]=b,b=Jb(f+80|0,f+226|0,15),l[f- -64>>2]=i,l[f+60>>2]=b,l[f+56>>2]=s,l[f+52>>2]=k,l[f+48>>2]=n,Yb(f+208|0,39619,f+48|0),i=l[f+220>>2],l[f+40>>2]=l[f+216>>2],l[f+44>>2]=i,i=l[f+212>>2],l[f+32>>2]=l[f+208>>2],l[f+36>>2]=i,Hb(e,f+32|0),e=l[r+12>>2],l[f+24>>2]=l[r+8>>2],l[f+28>>2]=e,e=l[r+4>>2],l[f+16>>2]=l[r>>2],l[f+20>>2]=e,zb(f+16|0),e=l[a+12>>2],l[f+8>>2]=l[a+8>>2],l[f+12>>2]=e,e=l[a+4>>2],l[f>>2]=l[a>>2],l[f+4>>2]=e,zb(f),ne=f+256|0}function $k(e,r,a){var i,f=0,b=0,n=0,s=0;ne=i=ne-16|0,l[r>>2]=0,n=l[e>>2];e:if(!(n>>>0>10)){b=e;r:switch(n-1|0){case 3:if(128&v[e+4|0])break e;if(b=l[e+36>>2],(0|(b=l[(n=b||e+12|0)>>2]))>l[a+60>>2]){f=-208;break e}if(f=l[a+104>>2],f=$k(l[(s=f||a+72|0)+(b<<2)>>2],r,a))break e;if(l[e+8>>2]<2){f=0;break e}for(b=1;;){if((0|(f=l[n+(b<<2)>>2]))>l[a+60>>2]){f=-208;break e}if(f=$k(l[(f<<2)+s>>2],i+12|0,a))break e;if(f=l[i+12>>2],h[r>>2]>f>>>0&&(l[r>>2]=f),!((0|(b=b+1|0))<l[e+8>>2]))break}f=0;break e;case 9:if(128&v[e+4|0]){if(e=l[e+20>>2],!(1&k[e+4|0]))break e;l[r>>2]=l[e+28>>2];break e}f=$k(l[e+20>>2],r,a);break e;case 7:for(;;){if(f=$k(l[e+4>>2],i+12|0,a))break e;if(l[r>>2]=l[r>>2]+l[i+12>>2],!(e=l[e+8>>2]))break}f=0;break e;case 8:for(;;){if(f=$k(l[b+4>>2],i+12|0,a))break e;a:{if((0|e)!=(0|b)){if(f=l[i+12>>2],h[r>>2]<=f>>>0)break a}else f=l[i+12>>2];l[r>>2]=f}if(!(b=l[b+8>>2]))break}f=0;break e;default:l[r>>2]=l[e+8>>2]-l[e+4>>2];break e;case 1:l[r>>2]=1;break e;case 0:case 2:l[r>>2]=1;break e;case 4:if(l[e+12>>2]<1)break e;if(f=$k(l[e+8>>2],r,a))break e;f=0,a=r,e=(e=l[e+12>>2])?4294967295/(e>>>0)>>>0>(r=l[r>>2])>>>0?w(r,e):-1:0,l[a>>2]=e;break e;case 6:break e;case 5:}if(!((b=l[e+8>>2]+-1|0)>>>0>3)){r:switch(b-1|0){default:if(1&(b=l[e+4>>2])){l[r>>2]=l[e+28>>2];break e}if(8&b){l[r>>2]=0;break e}if(l[e+4>>2]=8|b,f=$k(l[e+20>>2],r,a),a=-9&l[e+4>>2],l[e+4>>2]=a,f)break e;r=l[r>>2],l[e+4>>2]=1|a,l[e+28>>2]=r,f=0;break e;case 1:break e;case 0:case 2:}f=$k(l[e+20>>2],r,a)}}return ne=i+16|0,f}function Qk(e,r,a,i){var f,k,b=0,n=0,s=0,t=0,c=0;ne=f=ne-96|0,k=Bb(104),l[(b=k)+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+96>>2]=-1,l[b+8>>2]=32,l[b>>2]=0,l[b+4>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0;e:{if(n=l[a+4>>2])for(;;){if(35==l[n+8>>2]){if(l[n+8>>2]=30,!(4&v[34993]))break e;if(s=l[n+64>>2],b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=27,l[b>>2]=0,l[b+4>>2]=0,l[b+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,s=En(s),l[b+84>>2]=0,l[b+88>>2]=0,l[b+64>>2]=s,s=l[n+64>>2],t=l[i+4>>2],c=l[i>>2],l[f+76>>2]=b,l[f+72>>2]=b,l[f+80>>2]=c,l[f+84>>2]=t,!(4&v[34537]))break e;b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=8,l[b>>2]=0,l[b+4>>2]=0,l[b+76>>2]=0,l[b+80>>2]=0,l[b+68>>2]=-1,l[b+72>>2]=-1,l[b+60>>2]=0,l[b+64>>2]=0,l[b+52>>2]=-1,l[b+56>>2]=-1,l[b+48>>2]=0,l[b+84>>2]=0,l[b+88>>2]=0,l[b+64>>2]=En(s),l[f+92>>2]=b,l[f+88>>2]=b,b=l[f+76>>2],l[f+48>>2]=l[f+72>>2],l[f+52>>2]=b,b=l[f+84>>2],l[f+32>>2]=l[f+80>>2],l[f+36>>2]=b,b=l[f+92>>2],l[f+40>>2]=l[f+88>>2],l[f+44>>2]=b,Di(f- -64|0,f+48|0,f+40|0,f+32|0),b=l[f+68>>2],l[i>>2]=l[f+64>>2],l[i+4>>2]=b}if(l[f+60>>2]=n,l[f+56>>2]=n,b=l[f+60>>2],l[f+24>>2]=l[f+56>>2],l[f+28>>2]=b,b=l[i+4>>2],l[f+16>>2]=l[i>>2],l[f+20>>2]=b,Bn(f+24|0,f+16|0,1152,0),!(n=l[n+4>>2]))break}return b=l[i+4>>2],l[k+76>>2]=l[i>>2],l[k+80>>2]=b,l[k+64>>2]=En(r),r=l[a+4>>2],l[k+84>>2]=l[a>>2],l[k+88>>2]=r,l[e+4>>2]=k,l[e>>2]=k,r=l[e+4>>2],l[f+8>>2]=l[e>>2],l[f+12>>2]=r,r=l[e+4>>2],l[f>>2]=l[e>>2],l[f+4>>2]=r,Bn(f+8|0,f,1152,0),void(ne=f+96|0)}P(17730,14282,211,35526),M()}function eb(e,r,a,i){var f,b=0,n=0,s=0,t=0,c=0,o=0,h=0,m=0,w=0,p=0,g=0,y=0,E=0,_=0;ne=f=ne-208|0;e:{r:{a:{if(6==(15&v[0|r])){if(n=l[r+12>>2],l[f+112>>2]=l[r+8>>2],l[f+116>>2]=n,n=l[r+4>>2],p=l[r>>2],l[f+104>>2]=p,l[f+108>>2]=n,6!=(0|(g=15&p)))break a;if(a=(n=(0|(r=(h=(0|(b=((s=l[f+108>>2])&a>>31)+a|0))<0)?0:b))>(0|s))?s:r,(0|(r=h?a:n?a:b))<0)break r;if(h=a,i=(a=(0|(n=(s&i>>31)+i|0))>(0|s))?r:h,(0|(o=(0|(a=a?s:n))<(0|i)?i:a))<(0|r)|(0|o)>(0|s))break r;if((0|r)!=(0|o))if((0|(a=d[f+106>>1]+r|0))>=65536){if(l[e>>2]=6,l[e+4>>2]=0,a=Bb(16+((i=o-r|0)<<4)|0),l[a+8>>2]=i,l[a>>2]=1,l[a+4>>2]=0,l[e+8>>2]=a,(0|o)>(0|r))for(t=f+192|1,c=f+152|1,h=f+120|1,E=l[f+116>>2],m=l[f+112>>2],i=n=f+104|1,_=g>>>0>7;;){a=n,l[f+192>>2]=v[0|a]|v[a+1|0]<<8|v[a+2|0]<<16|v[a+3|0]<<24,a=v[(a=i)+3|0]|v[a+4|0]<<8|v[a+5|0]<<16|v[a+6|0]<<24,k[f+195|0]=a,k[f+196|0]=a>>>8,k[f+197|0]=a>>>16,k[f+198|0]=a>>>24;i:if(!_){f:switch(g-1|0){default:if(!m)break i;break;case 0:case 1:case 2:case 3:break i;case 4:case 5:case 6:}l[m>>2]=l[m>>2]+1}k[f+120|0]=p,a=h,b=v[f+195|0]|v[f+196|0]<<8|v[f+197|0]<<16|v[f+198|0]<<24,k[a+3|0]=b,k[a+4|0]=b>>>8,k[a+5|0]=b>>>16,k[a+6|0]=b>>>24,b=l[f+192>>2],k[0|a]=b,k[a+1|0]=b>>>8,k[a+2|0]=b>>>16,k[a+3|0]=b>>>24,l[f+132>>2]=E,l[f+128>>2]=m,a=l[f+132>>2],l[f+96>>2]=l[f+128>>2],l[f+100>>2]=a,a=l[f+124>>2],l[f+88>>2]=l[f+120>>2],l[f+92>>2]=a,Kb(f+136|0,f+88|0,r),a=l[f+148>>2],l[f+176>>2]=l[f+144>>2],l[f+180>>2]=a,a=l[f+140>>2],l[f+168>>2]=l[f+136>>2],l[f+172>>2]=a,b=l[e+12>>2],a=l[e+8>>2],l[f+160>>2]=a,l[f+164>>2]=b,b=l[e+4>>2],l[f+152>>2]=l[e>>2],l[f+156>>2]=b,l[f+192>>2]=v[0|c]|v[c+1|0]<<8|v[c+2|0]<<16|v[c+3|0]<<24,b=v[c+3|0]|v[c+4|0]<<8|v[c+5|0]<<16|v[c+6|0]<<24,k[f+195|0]=b,k[f+196|0]=b>>>8,k[f+197|0]=b>>>16,k[f+198|0]=b>>>24,s=l[f+164>>2],b=v[f+152|0];i:if(!((y=15&b)>>>0>7)){f:switch(y-1|0){default:if(!a)break i;break;case 0:case 1:case 2:case 3:break i;case 4:case 5:case 6:}l[a>>2]=l[a>>2]+1}if(w=v[f+195|0]|v[f+196|0]<<8|v[f+197|0]<<16|v[f+198|0]<<24,k[f+187|0]=w,k[f+188|0]=w>>>8,k[f+189|0]=w>>>16,k[f+190|0]=w>>>24,l[f+184>>2]=l[f+192>>2],k[f+192|0]=b,b=v[f+187|0]|v[f+188|0]<<8|v[f+189|0]<<16|v[f+190|0]<<24,k[t+3|0]=b,k[t+4|0]=b>>>8,k[t+5|0]=b>>>16,k[t+6|0]=b>>>24,b=l[f+184>>2],k[0|t]=b,k[t+1|0]=b>>>8,k[t+2|0]=b>>>16,k[t+3|0]=b>>>24,l[f+204>>2]=s,l[f+200>>2]=a,6!=(0|y))break e;if(a=l[f+204>>2],l[f+80>>2]=l[f+200>>2],l[f+84>>2]=a,a=l[f+196>>2],l[f+72>>2]=l[f+192>>2],l[f+76>>2]=a,s=l[f+196>>2],zb(f+72|0),a=l[f+164>>2],l[(b=f- -64|0)>>2]=l[f+160>>2],l[b+4>>2]=a,a=l[f+180>>2],l[f+48>>2]=l[f+176>>2],l[f+52>>2]=a,a=l[f+156>>2],l[f+56>>2]=l[f+152>>2],l[f+60>>2]=a,a=l[f+172>>2],l[f+40>>2]=l[f+168>>2],l[f+44>>2]=a,Dn(e,f+56|0,s,f+40|0),!((0|(r=r+1|0))<(0|o)))break}e=l[f+116>>2],l[f+32>>2]=l[f+112>>2],l[f+36>>2]=e,e=l[f+108>>2],l[f+24>>2]=l[f+104>>2],l[f+28>>2]=e,zb(f+24|0)}else u[f+106>>1]=a,l[f+108>>2]=o-r,r=l[f+116>>2],l[e+8>>2]=l[f+112>>2],l[e+12>>2]=r,r=l[f+108>>2],l[e>>2]=l[f+104>>2],l[e+4>>2]=r;else r=l[f+116>>2],l[f+16>>2]=l[f+112>>2],l[f+20>>2]=r,r=l[f+108>>2],l[f+8>>2]=l[f+104>>2],l[f+12>>2]=r,zb(f+8|0),l[e>>2]=6,l[e+4>>2]=0,r=Bb(272),l[r+8>>2]=16,l[r>>2]=1,l[r+4>>2]=0,l[e+8>>2]=r;return void(ne=f+208|0)}P(18922,17172,380,43369),M()}P(18922,17172,289,43844),M()}P(21625,17172,292,43844),M()}P(18173,17172,326,43311),M()}function rb(e){var r,a=0,i=0,f=0,b=0;if(ne=r=ne-80|0,a=l[e+12>>2],l[r+56>>2]=l[e+8>>2],l[r+60>>2]=a,a=l[e+4>>2],e=l[e>>2],l[r+48>>2]=e,l[r+52>>2]=a,!(15&e)){if(e=l[r+56>>2]){f=v[e+8|0],a=v[e+12|0]|v[e+13|0]<<8|v[e+14|0]<<16|v[e+15|0]<<24,k[r+75|0]=a,k[r+76|0]=a>>>8,k[r+77|0]=a>>>16,k[r+78|0]=a>>>24,l[r+72>>2]=v[e+9|0]|v[e+10|0]<<8|v[e+11|0]<<16|v[e+12|0]<<24,b=v[e+20|0]|v[e+21|0]<<8|v[e+22|0]<<16|v[e+23|0]<<24,e=v[e+16|0]|v[e+17|0]<<8|v[e+18|0]<<16|v[e+19|0]<<24;e:if(!((i=15&f)>>>0>7)){r:switch(i-1|0){default:if(!e)break e;break;case 0:case 1:case 2:case 3:break e;case 4:case 5:case 6:}l[e>>2]=l[e>>2]+1}a=v[r+75|0]|v[r+76|0]<<8|v[r+77|0]<<16|v[r+78|0]<<24,k[r+67|0]=a,k[r+68|0]=a>>>8,k[r+69|0]=a>>>16,k[r+70|0]=a>>>24,l[r+64>>2]=l[r+72>>2],l[r+44>>2]=b,l[r+40>>2]=e,e=l[r+64>>2],k[r+33|0]=e,k[r+34|0]=e>>>8,k[r+35|0]=e>>>16,k[r+36|0]=e>>>24,e=v[r+67|0]|v[r+68|0]<<8|v[r+69|0]<<16|v[r+70|0]<<24,k[r+36|0]=e,k[r+37|0]=e>>>8,k[r+38|0]=e>>>16,k[r+39|0]=e>>>24,k[r+32|0]=f,e=1!=(0|i)}else e=l[10947],l[r+40>>2]=l[10946],l[r+44>>2]=e,e=l[10945],l[r+32>>2]=l[10944],l[r+36>>2]=e,e=0;return a=l[r+60>>2],l[r+24>>2]=l[r+56>>2],l[r+28>>2]=a,a=l[r+52>>2],l[r+16>>2]=l[r+48>>2],l[r+20>>2]=a,zb(r+16|0),a=l[r+44>>2],l[r+8>>2]=l[r+40>>2],l[r+12>>2]=a,a=l[r+36>>2],l[r>>2]=l[r+32>>2],l[r+4>>2]=a,zb(r),ne=r+80|0,e}P(17480,17172,111,43276),M()}function ab(e){var r,a=0;ne=r=ne-16|0,t(+e),a=0|b(1),b(0);e:if((a&=2147483647)>>>0<=1072243195){if(a>>>0<1045430272)break e;e=Pn(e,0,0)}else if(a>>>0>=2146435072)e-=e;else if((a=3&ok(e,r))>>>0<=2){r:switch(a-1|0){default:e=Pn(m[r>>3],m[r+8>>3],1);break e;case 0:e=xn(m[r>>3],m[r+8>>3]);break e;case 1:}e=-Pn(m[r>>3],m[r+8>>3],1)}else e=-xn(m[r>>3],m[r+8>>3]);return ne=r+16|0,e}function ib(e,r,a,i){var f;ne=f=ne-16|0,l[f+12>>2]=i,Uf(e,r,a,i),ne=f+16|0}function fb(e,r){var a=0,i=0,f=0,b=0,n=0;i=4095,f=e;e:{for(;;){r:if(i&&((n=rf(a=l[r+4>>2],10,l[r+8>>2]-a|0))?b=1+(n-(a=l[r+4>>2])|0)|0:(a=l[r+4>>2],b=l[r+8>>2]-a|0),qb(f,a,a=b>>>0<i>>>0?b:i),b=a+l[r+4>>2]|0,l[r+4>>2]=b,f=a+f|0,!n&&(i=i-a|0))){if(b>>>0<h[r+8>>2])l[r+4>>2]=b+1,a=v[0|b];else if(!((0|(a=Ek(r)))>-1)){if(a=0,!(16&v[0|r])|(0|e)==(0|f))break e;break r}if(k[0|f]=a,f=f+1|0,i=i+-1|0,10!=(255&a))continue}break}a=0,e&&(k[0|f]=0,a=e)}return a}function kb(e,r){return l[e+((e=(0|r)/3|0)<<2)>>2]>>>16-(r-w(e,3)<<3)&255}function bb(e,r,a,i){var b,n,s,t=0,c=0,o=0,u=0,d=0,m=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0;ne=b=ne-320|0,c=l[e>>2];e:if(!(c>>>0>9)){r:switch(c-1|0){case 7:for(c=0;;){o=bb(l[e+4>>2],r,a,i),t=l[e+4>>2];a:{i:{if(!(o|!u))for(;;){if(6!=(0|(u=l[c>>2]))){if(!l[c+20>>2]|5!=(0|u)|-1!=l[c+16>>2])break i;if(!(u=tf(t,1,r))|!v[l[u+4>>2]]||(l[c+32>>2]=u),l[c+12>>2]>1)break i;if(u=l[c+8>>2],h[u>>2]>4)break i;if(!(u=tf(u,0,r)))break i;if(!(t=tf(t,0,r)))break i;d=c,o=l[t>>2];f:{k:{for(;;){if(c=u,u=t,p=o,(o=l[c>>2])>>>0>2)break i;b:switch(o-1|0){case 1:if(t=c,p>>>0<2)continue;if(2!=(0|p)|l[u+4>>2]!=l[t+4>>2]|l[u+8>>2]==l[t+8>>2])break i;break f;case 0:break b;default:break k}if(t=c,p)break}if((c=p+-1|0)>>>0>1)break i;if(!(c-1)){if(12!=l[u+4>>2])break i;if(c=l[t+40>>2],!l[u+8>>2]){if(1&k[t+4|0]|c)break i;for(t=t+8|0,o=0;;){if(!(!(v[t+(o>>>3)|0]&1<<(7&o))|o>>>0>127)&&f[l[l[r+56>>2]+48>>2]](o,12))break i;if(256==(0|(o=o+1|0)))break}break f}if(c)break i;for(u=t+8|0,o=0;;){b:if(!(o>>>0<=127&&f[l[l[r+56>>2]+48>>2]](o,12))){if(c=v[u+(o>>>3)|0]&1<<(7&o),!(1&k[t+4|0])){if(!c)break b;break i}if(!c)break i}if(256==(0|(o=o+1|0)))break}break f}for(E=u+8|0,y=t+8|0,c=1&l[t+4>>2],o=0;;){b:{n:{if((g=1<<(7&o))&v[(m=o>>>3)+y|0]){if(!c)break n;break b}if(!c)break b}if(p=1&l[u+4>>2],g&v[m+E|0]){if(p)break b;break i}if(p)break i}if(256==(0|(o=o+1|0)))break}if(!c&&!l[t+40>>2])break f;if(l[u+40>>2]|1&k[u+4|0])break i;break f}if(!(o=(E=l[c+8>>2])-(t=l[c+4>>2])|0)|p>>>0>2)break i;k:{b:switch(p-1|0){case 1:if(12!=l[u+4>>2])break i;if(c=l[r+56>>2],o=l[c+48>>2],c=0|f[o](0|f[l[c+20>>2]](t,E),12),t=u=l[u+8>>2],c)break k;t=!u;break k;case 0:c=l[r+56>>2],c=0|f[l[c+20>>2]](t,t+l[c+8>>2]|0);n:if(t=l[r+56>>2],l[t+12>>2]>1||(t=0|f[l[t+24>>2]](c),c>>>0>255||!((0|t)<2))){if(!(t=l[u+40>>2])){p=0;break n}if(E=(t=l[t>>2])+4|0,p=0,o=0,t=y=l[t>>2])for(;g=(m=t+o|0)>>>1,(o=(m=h[E+(m<<2|4)>>2]<c>>>0)?g+1|0:o)>>>0<(t=m?t:g)>>>0;);if(o>>>0>=y>>>0)break n;p=h[E+(o<<3)>>2]<=c>>>0}else p=v[8+((c>>>3)+u|0)|0]>>>(7&c)&1;t=!(1&k[u+4|0])^p;break k}if(2&v[c+12|0])break i;if(c=l[u+4>>2],o=(0|o)>(0|(p=l[u+8>>2]-c|0))?p:o,2&l[u+12>>2]|(0|o)<1)break i;t=0!=(0|pn(c,t,o))}if(!t)break i}if(s=void 0,(s=Cb(44))&&(l[s+8>>2]=4,l[s>>2]=6,l[s+4>>2]=0,l[s+40>>2]=0,l[s+20>>2]=0,l[s+24>>2]=-1,l[s+12>>2]=0,l[s+16>>2]=0),!(t=s)){o=-5;break e}l[t+4>>2]=64|l[t+4>>2],l[b+40>>2]=l[d+40>>2],c=l[d+36>>2],l[b+32>>2]=l[d+32>>2],l[b+36>>2]=c,c=l[d+28>>2],l[b+24>>2]=l[d+24>>2],l[b+28>>2]=c,c=l[d+20>>2],l[b+16>>2]=l[d+16>>2],l[b+20>>2]=c,c=l[d+12>>2],l[b+8>>2]=l[d+8>>2],l[b+12>>2]=c,c=l[d+4>>2],l[b>>2]=l[d>>2],l[b+4>>2]=c,l[d+40>>2]=l[t+40>>2],c=l[t+36>>2],l[d+32>>2]=l[t+32>>2],l[d+36>>2]=c,c=l[t+28>>2],l[d+24>>2]=l[t+24>>2],l[d+28>>2]=c,c=l[t+20>>2],l[d+16>>2]=l[t+16>>2],l[d+20>>2]=c,c=l[t+12>>2],l[d+8>>2]=l[t+8>>2],l[d+12>>2]=c,c=l[t+4>>2],l[d>>2]=l[t>>2],l[d+4>>2]=c,l[t+40>>2]=l[b+40>>2],c=l[b+36>>2],l[t+32>>2]=l[b+32>>2],l[t+36>>2]=c,c=l[b+28>>2],l[t+24>>2]=l[b+24>>2],l[t+28>>2]=c,c=l[b+20>>2],l[t+16>>2]=l[b+16>>2],l[t+20>>2]=c,c=l[b+12>>2],l[t+8>>2]=l[b+8>>2],l[t+12>>2]=c,c=l[b+4>>2],l[t>>2]=l[b>>2],l[t+4>>2]=c,l[d>>2]|l[d+16>>2]||(c=l[d+4>>2],u=d+20|0,l[d+4>>2]=u,l[d+8>>2]=u+(l[d+8>>2]-c|0)),l[t>>2]|l[t+16>>2]||(c=l[t+4>>2],u=t+20|0,l[t+4>>2]=u,l[t+8>>2]=u+(l[t+8>>2]-c|0)),l[d+20>>2]=t,t=l[e+4>>2];break a}if(1!=l[c+8>>2])break i;c=l[c+20>>2]}if(o)break e;break a}t=l[e+4>>2]}if(u=t,c=t,!(e=l[e+8>>2]))break}o=0;break e;case 6:if((t=Bi(l[e+4>>2]+-1024|0,22))>>>0>7)break e;a:{i:switch(t-1|0){default:o=bb(l[e+8>>2],r,a,i);break e;case 0:o=bb(l[e+8>>2],r,2|a,i);break e;case 2:if((0|(t=Zr(c=l[e+8>>2],3,5095)))<0){o=t;break e}if(o=-122,t)break e;if(!(o=bb(c,r,a,i)))break a;break e;case 1:case 3:case 4:case 5:break e;case 6:}if((0|(t=Zr(c=l[e+8>>2],2,13287)))<0){o=t;break e}if(o=-122,t)break e;if(o=bb(c,r,2|a,i))break e}o=Sr(e,r,i);break e;case 5:if((t=l[e+8>>2]+-1|0)>>>0>3)break e;a:switch(t-1|0){case 0:t=l[r+60>>2],l[r+60>>2]=l[e+16>>2],o=bb(l[e+20>>2],r,a,i),l[r+60>>2]=t;break e;default:27&a&&(t=l[e+12>>2],l[i+20>>2]=l[i+20>>2]|((0|t)<32?1<<t:1)),c=(t=l[e+4>>2])>>>4&16|a,128&t?c|=32:32&a&&(l[e+4>>2]=128|t),o=bb(l[e+20>>2],r,c,i);break e;case 1:break e;case 2:}if(o=bb(t=l[e+20>>2],r,a,i),5!=l[t>>2]|-1!=l[t+16>>2]|!l[t+20>>2]|l[t+12>>2]>1)break e;if(h[l[t+8>>2]>>2]>4)break e;l[e+4>>2]=64|l[e+4>>2];break e;case 4:if(t=l[e+8>>2],4&a&&(l[e+4>>2]=4096|l[e+4>>2]),!((0|(c=l[e+16>>2]))<1&&-1!=(0|c))){if(o=$k(t,b,i))break e;if(!l[b>>2]){if(l[e+24>>2]=1,(0|(o=function e(r){var a=0,i=0,f=0;a:{for(;;){if((a=l[r>>2]+-5|0)>>>0>5)break a;switch(a-1|0){case 2:case 3:for(;;){if(i=(0|(a=e(l[r+4>>2])))>(0|i)?a:i,(0|a)<0)break a;if(!(r=l[r+8>>2]))break}break a;case 4:if(128&v[r+4|0])return 3;r=l[r+20>>2];continue;default:if(!l[r+16>>2])break a;r=l[r+8>>2];continue;case 1:break a;case 0:}break}a=0,f=l[r+8>>2]+-1|0;i:if(!(f>>>0>3)){i=2;f:switch(f-1|0){case 0:case 2:break f;case 1:break i;default:break a}a=e(l[r+20>>2])}i=a}return i}(t)))<0)break e;o&&(l[e+24>>2]=o)}}if(o=bb(t,r,(l[e+12>>2]==l[e+16>>2]?4:12)|a,i))break e;if(!((i=l[t>>2])||-1==(0|(a=l[e+12>>2]))|a+-2>>>0>98|(0|a)!=l[e+16>>2]|(0|w(a,l[t+8>>2]-l[t+4>>2]|0))>100)){for(r=l[t+12>>2],l[e>>2]=0,l[e+16>>2]=0,l[e+12>>2]=r,r=e+20|0,l[e+8>>2]=r,l[e+4>>2]=r,i=0;!(o=qk(e,l[t+4>>2],l[t+8>>2]))&&(0|a)!=(0|(i=i+1|0)););kn(t);break e}if(o=0,!l[e+20>>2]|!l[e+24>>2])break e;if(5==(0|i)){if(!(r=l[t+28>>2]))break e;l[e+28>>2]=r,l[t+28>>2]=0;break e}l[e+28>>2]=tf(l[e+8>>2],1,r);break e;case 3:if(l[e+8>>2]<1)break e;for(t=(r=l[e+36>>2])||e+12|0,c=(r=l[i+104>>2])||i+72|0;;){if((0|(a=l[(r=t+(o<<2)|0)>>2]))>l[i+60>>2]){o=-208;break e}if(l[i+28>>2]=l[i+28>>2]|((0|a)<32?1<<a:1),a=l[r>>2],l[i+20>>2]=l[i+20>>2]|((0|a)<32?1<<a:1),32&v[e+5|0]&&(a=l[r>>2],l[i+24>>2]=l[i+24>>2]|((0|a)<32?1<<a:1)),r=l[c+(l[r>>2]<<2)>>2],l[r+4>>2]=32|l[r+4>>2],!((0|(o=o+1|0))<l[e+8>>2]))break}o=0;break e;default:if(!(1&k[r+60|0]))break e;if(1&(a=l[e+12>>2])|2&a)break e;if((g=l[e+4>>2])>>>0>=(_=l[e+8>>2])>>>0)break e;c=0,i=0,F=1;a:{i:{for(;;){if((0|(o=0|f[l[l[r+56>>2]+40>>2]](l[r+68>>2],g,_,b)))<0)break a;D=0|f[l[l[r+56>>2]>>2]](g);f:{k:{b:{n:{s:{if(o){t:{c:{o:{if((0|(F=w(o+1|0,F)))<=8){if(m)a=i;else if(t){if(m=a=Rn(0,t),!a)break s}else m=0,a=i;c=0;u:{for(;;){if(i=1,(0|D)!=l[w(c,20)+b>>2])break u;if((0|o)==(0|(c=c+1|0)))break}i=0}if(E=i,t=ra(),i){if(!t)break t;if(n=void 0,(n=Cb(44))&&(l[n+8>>2]=0,l[n+4>>2]=0,l[n>>2]=8),!(i=n))break c;if(l[t+4>>2]=i,!(p=ra()))break c;l[i+4>>2]=p,u=t}else if(u=0,p=t,!t)break t;if(!(i=Jf(g,g+D|0)))break c;for(l[p+4>>2]=i,S=0;;){if(!(d=Jf(0,0)))break c;if(c=0,y=w(S,20)+b|0,l[y+4>>2]>0)for(;;){if((0|(i=0|f[l[l[r+56>>2]+28>>2]](l[8+((c<<2)+y|0)>>2],b+272|0)))<0)break o;if(qk(d,b+272|0,i+(b+272|0)|0))break o;if(!((0|(c=c+1|0))<l[y+4>>2]))break}if(!(i=ra()))break o;c=l[y>>2];u:{if((0|c)!=(0|D)){y=i;l:{if((c=c+g|0)>>>0<_>>>0){if(di(b+268|0,c,_,r)){kn(i),kn(d);break c}if(!(c=Rn(0,d))){kn(i),kn(l[b+268>>2]),kn(d);break c}if(!Rn(c,d=l[b+268>>2]))break l}else c=d;l[y+4>>2]=c,l[u+8>>2]=i,u=i;break u}kn(i),kn(c),kn(d);break c}l[i+4>>2]=d,l[p+8>>2]=i,p=i}if((0|(S=S+1|0))==(0|o))break}if(E){if(i=t,m){if(!Rn(m,t))break c;i=a}m=l[t+4>>2],c=0;break k}if(c=0,!m){i=a,m=0;break k}if(!Rn(m,t))break c;i=a;break k}u:{if(!di(b+272|0,g,_,r)){l:{if(!(!t|m)){if(c=m=Rn(0,t))break l;kn(l[b+272>>2]),kn(t),o=-5,kn(0);break e}if(!m)break u;c=i}if(Rn(m,r=l[b+272>>2])){i=c;break f}kn(r),i=c}o=-5,kn(i);break e}t=l[b+272>>2];break f}kn(d)}kn(t)}o=-5,kn(a);break e}if(c)break b;if(m)break n;if(!t){m=0;break n}if(m=i=Rn(0,t),i)break n}kn(t),o=-5,kn(0);break e}if(o=-5,!(t=Jf(0,0)))break a;if(m){if(!Rn(m,t))break i}else m=0;c=t}if(o=qk(c,g,g+D|0))break a}if((g=g+D|0)>>>0<_>>>0)continue}break}l[b+312>>2]=l[e+40>>2],r=l[e+36>>2],l[b+304>>2]=l[e+32>>2],l[b+308>>2]=r,r=l[e+28>>2],l[b+296>>2]=l[e+24>>2],l[b+300>>2]=r,r=l[e+20>>2],l[b+288>>2]=l[e+16>>2],l[b+292>>2]=r,r=l[e+12>>2],l[b+280>>2]=l[e+8>>2],l[b+284>>2]=r,r=l[e+4>>2],l[b+272>>2]=l[e>>2],l[b+276>>2]=r,r=i||t,l[e+40>>2]=l[r+40>>2],a=l[r+36>>2],l[e+32>>2]=l[r+32>>2],l[e+36>>2]=a,a=l[r+28>>2],l[e+24>>2]=l[r+24>>2],l[e+28>>2]=a,a=l[r+20>>2],l[e+16>>2]=l[r+16>>2],l[e+20>>2]=a,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,l[r+40>>2]=l[b+312>>2],a=l[b+308>>2],l[r+32>>2]=l[b+304>>2],l[r+36>>2]=a,a=l[b+300>>2],l[r+24>>2]=l[b+296>>2],l[r+28>>2]=a,a=l[b+292>>2],l[r+16>>2]=l[b+288>>2],l[r+20>>2]=a,a=l[b+284>>2],l[r+8>>2]=l[b+280>>2],l[r+12>>2]=a,a=l[b+276>>2],l[r>>2]=l[b+272>>2],l[r+4>>2]=a,l[e>>2]|l[e+16>>2]||(a=l[e+4>>2],i=e+20|0,l[e+4>>2]=i,l[e+8>>2]=i+(l[e+8>>2]-a|0)),l[r>>2]|l[r+16>>2]||(e=l[r+4>>2],a=r+20|0,l[r+4>>2]=a,l[r+8>>2]=a+(l[r+8>>2]-e|0)),kn(r),o=0;break e}kn(t)}kn(i);break e;case 0:case 1:case 2:break e;case 8:}for(a|=1;;){if(o=bb(l[e+4>>2],r,a,i))break e;if(!(e=l[e+8>>2]))break}o=0}return ne=b+320|0,o}function nb(e,r,a,i,b,n){var s,t=0,c=0,o=0;if(ne=s=ne-32|0,l[s+20>>2]=n,(4+(Uf(e,256,b,n)+(i-a<<2)|0)|0)<256){if(b=on(e)+e|0,k[0|b]=3088442,k[b+1|0]=12064,k[b+2|0]=47,k[b+3|0]=0,n=qf(e)+e|0,a>>>0<i>>>0)for(c=s+25|0;;){e:if(1==(0|f[l[r>>2]](a))){r:{a:{if(47!=(0|(e=v[0|a]))){if(92!=(0|e))break a;if(k[0|n]=92,n=n+1|0,a=a+1|0,(0|(e=0|f[l[r>>2]](a)))<1)break e;for(;k[0|n]=v[0|a],n=n+1|0,a=a+1|0,(0|(e=e+-1|0))>0;);break e}k[0|n]=92,k[n+1|0]=v[0|a],n=n+2|0;break r}if(!f[l[r+48>>2]](e,7)&&!f[l[r+48>>2]](v[0|a],9)){if(l[s>>2]=v[0|a],ib(s+26|0,5,33315,s),a=a+1|0,(0|(e=qf(s+26|0)))<1)break e;for(b=e+c|0,e=s+26|0;k[0|n]=v[0|e],n=n+1|0,t=(0|e)==(0|b),e=e+1|0,!t;);break e}k[0|n]=v[0|a],n=n+1|0}a=a+1|0}else{b=0|f[l[r>>2]](a);r:{if(1!=l[r+12>>2]){if((0|b)>0)break r;break e}if((0|b)<1)break e;for(;k[0|n]=v[0|a],n=n+1|0,a=a+1|0,(0|(b=b+-1|0))>0;);break e}for(;;){if(l[s+16>>2]=v[0|a],ib(s+26|0,5,33315,s+16|0),b=b+-1|0,(0|(e=qf(s+26|0)))>=1)for(t=e+c|0,e=s+26|0;k[0|n]=v[0|e],n=n+1|0,o=(0|e)==(0|t),e=e+1|0,!o;);if(a=a+1|0,!((0|b)>=1))break}}if(!(a>>>0<i>>>0))break}k[0|n]=47,k[n+1|0]=0}ne=s+32|0}function sb(e,r){var a,i=0;ne=a=ne-16|0;e:{for(;;){if(i=1,!(e=Vk(e,r,a+12|0)))break e;if(-1==l[a+12>>2])break}i=0}return ne=a+16|0,e=i}function tb(e,r){var a,i=0;ne=a=ne+-64|0,l[a+24>>2]=0,l[a+28>>2]=0,l[a+56>>2]=0,l[a+48>>2]=0,l[a+52>>2]=0,l[a+40>>2]=0,l[a+44>>2]=0,l[a+32>>2]=0,l[a+36>>2]=0,i=l[e+12>>2],l[a+16>>2]=l[e+8>>2],l[a+20>>2]=i,i=l[e+4>>2],l[a+8>>2]=l[e>>2],l[a+12>>2]=i,mb(a+24|0,a+8|0,r,0,l[75261],0),Ji(a+24|0),ne=a- -64|0}function cb(e,r){var a,i=0,f=0,k=0,b=0,n=0,s=0,t=0;if(ne=a=ne-1152|0,i=l[e+12>>2],l[a+808>>2]=l[e+8>>2],l[a+812>>2]=i,i=l[e+4>>2],l[a+800>>2]=l[e>>2],l[a+804>>2]=i,f=15&v[a+800|0],i=l[r+12>>2],l[a+792>>2]=l[r+8>>2],l[a+796>>2]=i,i=l[r+4>>2],l[a+784>>2]=l[r>>2],l[a+788>>2]=i,k=15&v[a+784|0],i=l[e+12>>2],l[a+776>>2]=l[e+8>>2],l[a+780>>2]=i,i=l[e+4>>2],l[a+768>>2]=l[e>>2],l[a+772>>2]=i,i=15&v[a+768|0],(0|f)==(0|k)){e:{r:{a:{i:{f:{if((f=i+-1|0)>>>0<=6)switch(i=0,f-3|0){case 3:break r;case 2:break a;case 1:break i;case 0:break f;default:break e}P(19644,16044,505,44186),M()}if(i=l[e+12>>2],l[a+120>>2]=l[e+8>>2],l[a+124>>2]=i,i=l[e+4>>2],l[a+112>>2]=l[e>>2],l[a+116>>2]=i,n=Wb(a+112|0),i=l[r+12>>2],l[a+104>>2]=l[r+8>>2],l[a+108>>2]=i,i=l[r+4>>2],l[a+96>>2]=l[r>>2],l[a+100>>2]=i,s=Wb(a+96|0),n!=n){k=l[10947],l[8+(i=a+1104|0)>>2]=l[10946],l[i+12>>2]=k,f=l[10945],l[i>>2]=l[10944],l[i+4>>2]=f,l[(i=a+1088|0)>>2]=4,l[i+4>>2]=0,m[i+8>>3]=s,f=l[4+(i=a+1112|0)>>2],l[a+56>>2]=l[i>>2],l[a+60>>2]=f,f=l[4+(i=a+1096|0)>>2],l[a+40>>2]=l[i>>2],l[a+44>>2]=f,i=l[a+1108>>2],l[a+48>>2]=l[a+1104>>2],l[a+52>>2]=i,i=l[a+1092>>2],l[a+32>>2]=l[a+1088>>2],l[a+36>>2]=i,i=cb(a+48|0,a+32|0);break e}if(s!=s){l[(i=a+1072|0)>>2]=4,l[i+4>>2]=0,m[i+8>>3]=n,k=l[10947],l[8+(i=a+1056|0)>>2]=l[10946],l[i+12>>2]=k,f=l[10945],l[i>>2]=l[10944],l[i+4>>2]=f,f=l[4+(i=a+1080|0)>>2],l[a+88>>2]=l[i>>2],l[a+92>>2]=f,f=l[4+(i=a+1064|0)>>2],l[a+72>>2]=l[i>>2],l[a+76>>2]=f,i=l[a+1076>>2],l[a+80>>2]=l[a+1072>>2],l[a+84>>2]=i,i=l[a+1060>>2],l[a+64>>2]=l[a+1056>>2],l[a+68>>2]=i,i=cb(a+80|0,a- -64|0);break e}if(i=-1,n<s)break e;i=n!=s;break e}i=l[e+12>>2],l[a+216>>2]=l[e+8>>2],l[a+220>>2]=i,i=l[e+4>>2],l[a+208>>2]=l[e>>2],l[a+212>>2]=i,Nb(a+1136|0,a+208|0),f=l[4+(i=a+1144|0)>>2],l[a+200>>2]=l[i>>2],l[a+204>>2]=f,i=l[a+1140>>2],l[a+192>>2]=l[a+1136>>2],l[a+196>>2]=i,i=vn(a+192|0),f=l[r+12>>2],l[a+184>>2]=l[r+8>>2],l[a+188>>2]=f,f=l[r+4>>2],l[a+176>>2]=l[r>>2],l[a+180>>2]=f,Nb(a+1120|0,a+176|0),k=l[4+(f=a+1128|0)>>2],l[a+168>>2]=l[f>>2],l[a+172>>2]=k,f=l[a+1124>>2],l[a+160>>2]=l[a+1120>>2],l[a+164>>2]=f,f=vn(a+160|0),k=l[e+12>>2],l[a+152>>2]=l[e+8>>2],l[a+156>>2]=k,k=l[e+4>>2],l[a+144>>2]=l[e>>2],l[a+148>>2]=k,k=Gb(a+144|0),b=l[r+12>>2],l[a+136>>2]=l[r+8>>2],l[a+140>>2]=b,b=l[r+4>>2],l[a+128>>2]=l[r>>2],l[a+132>>2]=b,i=(k=pn(k,Gb(a+128|0),(0|i)<(0|f)?i:f))||i-f|0;break e}for(f=0;;){if(i=l[e+12>>2],l[a+376>>2]=l[e+8>>2],l[a+380>>2]=i,i=l[e+4>>2],l[a+368>>2]=l[e>>2],l[a+372>>2]=i,Nb(a+1040|0,a+368|0),k=l[4+(i=a+1048|0)>>2],l[a+360>>2]=l[i>>2],l[a+364>>2]=k,i=l[a+1044>>2],l[a+352>>2]=l[a+1040>>2],l[a+356>>2]=i,i=Zb(a+352|0),k=l[r+12>>2],l[a+344>>2]=l[r+8>>2],l[a+348>>2]=k,k=l[r+4>>2],l[a+336>>2]=l[r>>2],l[a+340>>2]=k,Nb(a+1024|0,a+336|0),b=l[4+(k=a+1032|0)>>2],l[a+328>>2]=l[k>>2],l[a+332>>2]=b,k=l[a+1028>>2],l[a+320>>2]=l[a+1024>>2],l[a+324>>2]=k,i=(0|f)>=(0|i),!((0|f)<(0|(k=Zb(a+320|0))))||i){i=((0|f)>=(0|k))-i|0;break e}if(i=l[e+12>>2],l[a+312>>2]=l[e+8>>2],l[a+316>>2]=i,i=l[e+4>>2],l[a+304>>2]=l[e>>2],l[a+308>>2]=i,Nb(a+1008|0,a+304|0),i=l[a+1020>>2],l[a+296>>2]=l[a+1016>>2],l[a+300>>2]=i,i=l[a+1012>>2],l[a+288>>2]=l[a+1008>>2],l[a+292>>2]=i,Kb(a+1136|0,a+288|0,f),i=l[r+12>>2],l[a+280>>2]=l[r+8>>2],l[a+284>>2]=i,i=l[r+4>>2],l[a+272>>2]=l[r>>2],l[a+276>>2]=i,Nb(a+992|0,a+272|0),i=l[a+1004>>2],l[a+264>>2]=l[a+1e3>>2],l[a+268>>2]=i,i=l[a+996>>2],l[a+256>>2]=l[a+992>>2],l[a+260>>2]=i,Kb(a+1120|0,a+256|0,f),k=l[4+(i=a+1144|0)>>2],l[a+248>>2]=l[i>>2],l[a+252>>2]=k,k=l[4+(i=a+1128|0)>>2],l[a+232>>2]=l[i>>2],l[a+236>>2]=k,i=l[a+1140>>2],l[a+240>>2]=l[a+1136>>2],l[a+244>>2]=i,i=l[a+1124>>2],l[a+224>>2]=l[a+1120>>2],l[a+228>>2]=i,f=f+1|0,i=cb(a+240|0,a+224|0))break}break e}i=l[e+12>>2],l[a+712>>2]=l[e+8>>2],l[a+716>>2]=i,i=l[e+4>>2],l[a+704>>2]=l[e>>2],l[a+708>>2]=i,Nb(a+976|0,a+704|0),i=l[a+988>>2],l[a+696>>2]=l[a+984>>2],l[a+700>>2]=i,i=l[a+980>>2],l[a+688>>2]=l[a+976>>2],l[a+692>>2]=i,Ef(a+1136|0,a+688|0),i=l[r+12>>2],l[a+680>>2]=l[r+8>>2],l[a+684>>2]=i,i=l[r+4>>2],l[a+672>>2]=l[r>>2],l[a+676>>2]=i,Nb(a+960|0,a+672|0),i=l[a+972>>2],l[a+664>>2]=l[a+968>>2],l[a+668>>2]=i,i=l[a+964>>2],l[a+656>>2]=l[a+960>>2],l[a+660>>2]=i,Ef(a+1120|0,a+656|0),f=l[4+(i=k=a+1144|0)>>2],l[a+648>>2]=l[i>>2],l[a+652>>2]=f,i=l[a+1140>>2],l[a+640>>2]=l[a+1136>>2],l[a+644>>2]=i,Nb(a+944|0,a+640|0),i=l[a+956>>2],l[a+632>>2]=l[a+952>>2],l[a+636>>2]=i,f=l[4+(i=a+1128|0)>>2],l[a+616>>2]=l[i>>2],l[a+620>>2]=f,i=l[a+948>>2],l[a+624>>2]=l[a+944>>2],l[a+628>>2]=i,i=l[a+1124>>2],l[a+608>>2]=l[a+1120>>2],l[a+612>>2]=i,i=cb(a+624|0,a+608|0);r:if(!i){if(i=l[k+4>>2],l[a+600>>2]=l[k>>2],l[a+604>>2]=i,i=l[a+1140>>2],l[a+592>>2]=l[a+1136>>2],l[a+596>>2]=i,Nb(a+928|0,a+592|0),i=l[a+940>>2],l[a+584>>2]=l[a+936>>2],l[a+588>>2]=i,i=l[a+932>>2],l[a+576>>2]=l[a+928>>2],l[a+580>>2]=i,(0|(b=Zb(a+576|0)))>=1)for(f=0;;){if(t=l[4+(i=a+1144|0)>>2],l[a+568>>2]=l[i>>2],l[a+572>>2]=t,i=l[a+1140>>2],l[a+560>>2]=l[a+1136>>2],l[a+564>>2]=i,Nb(a+880|0,a+560|0),i=l[a+892>>2],l[a+552>>2]=l[a+888>>2],l[a+556>>2]=i,i=l[a+884>>2],l[a+544>>2]=l[a+880>>2],l[a+548>>2]=i,Kb(a+896|0,a+544|0,f),i=l[a+908>>2],l[a+920>>2]=l[a+904>>2],l[a+924>>2]=i,i=l[a+900>>2],l[a+912>>2]=l[a+896>>2],l[a+916>>2]=i,i=l[e+12>>2],l[a+536>>2]=l[e+8>>2],l[a+540>>2]=i,i=l[e+4>>2],l[a+528>>2]=l[e>>2],l[a+532>>2]=i,Nb(a+864|0,a+528|0),i=l[a+924>>2],l[a+520>>2]=l[a+920>>2],l[a+524>>2]=i,i=l[a+916>>2],l[a+512>>2]=l[a+912>>2],l[a+516>>2]=i,Nb(a+848|0,a+512|0),i=l[a+876>>2],l[a+504>>2]=l[a+872>>2],l[a+508>>2]=i,i=l[a+860>>2],l[a+488>>2]=l[a+856>>2],l[a+492>>2]=i,i=l[a+868>>2],l[a+496>>2]=l[a+864>>2],l[a+500>>2]=i,i=l[a+852>>2],l[a+480>>2]=l[a+848>>2],l[a+484>>2]=i,dn(a+896|0,a+496|0,a+480|0),i=l[r+12>>2],l[a+472>>2]=l[r+8>>2],l[a+476>>2]=i,i=l[r+4>>2],l[a+464>>2]=l[r>>2],l[a+468>>2]=i,Nb(a+816|0,a+464|0),i=l[a+828>>2],l[a+456>>2]=l[a+824>>2],l[a+460>>2]=i,i=l[a+924>>2],l[a+440>>2]=l[a+920>>2],l[a+444>>2]=i,i=l[a+820>>2],l[a+448>>2]=l[a+816>>2],l[a+452>>2]=i,i=l[a+916>>2],l[a+432>>2]=l[a+912>>2],l[a+436>>2]=i,dn(a+832|0,a+448|0,a+432|0),i=l[a+908>>2],l[a+424>>2]=l[a+904>>2],l[a+428>>2]=i,i=l[a+844>>2],l[a+408>>2]=l[a+840>>2],l[a+412>>2]=i,i=l[a+900>>2],l[a+416>>2]=l[a+896>>2],l[a+420>>2]=i,i=l[a+836>>2],l[a+400>>2]=l[a+832>>2],l[a+404>>2]=i,i=cb(a+416|0,a+400|0))break r;if((0|b)==(0|(f=f+1|0)))break}i=0}f=l[k+4>>2],l[a+392>>2]=l[k>>2],l[a+396>>2]=f,f=l[a+1140>>2],l[a+384>>2]=l[a+1136>>2],l[a+388>>2]=f,zb(a+384|0)}f=l[e+12>>2],l[a+24>>2]=l[e+8>>2],l[a+28>>2]=f,f=l[e+4>>2],l[a+16>>2]=l[e>>2],l[a+20>>2]=f,zb(a+16|0),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a)}else f=l[r+12>>2],l[a+760>>2]=l[r+8>>2],l[a+764>>2]=f,f=l[r+4>>2],l[a+752>>2]=l[r>>2],l[a+756>>2]=f,f=15&v[a+752|0],k=l[e+12>>2],l[a+744>>2]=l[e+8>>2],l[a+748>>2]=k,k=l[e+4>>2],l[a+736>>2]=l[e>>2],l[a+740>>2]=k,zb(a+736|0),e=l[r+12>>2],l[a+728>>2]=l[r+8>>2],l[a+732>>2]=e,e=l[r+4>>2],l[a+720>>2]=l[r>>2],l[a+724>>2]=e,i=i-f|0,zb(a+720|0);return ne=a+1152|0,i}function ob(e,r,a){var i,f,b,n,s=0,t=0;ne=i=ne-16|0,f=Bb((s=w(a,3))+18|0),s=s+1|0,l[f+12>>2]=s,l[f>>2]=1,l[i+12>>2]=0,b=(t=s)+(s=f+16|0)|0,n=r+a|0,a=s;e:{for(;;){if(!(r=Vk(r,n,i+12|0)))break e;if(-1==(0|(t=l[i+12>>2]))&&(l[i+12>>2]=65533,t=65533),!((a=Zf(t,a)+a|0)>>>0<b>>>0))break}P(25593,17172,471,43860),M()}k[16+((r=a-s|0)+f|0)|0]=0,l[f+8>>2]=r<<1,l[e+8>>2]=f,l[e>>2]=5,l[e+4>>2]=0,ne=i+16|0}function ub(e,r,a,i){var k,b=0,n=0,s=0;ne=k=ne-16|0,l[a>>2]=0;e:{r:if(!((s=l[e>>2])>>>0>10)){n=i+1|0;a:switch(s-1|0){case 7:for(;;){if(b=ub(l[e+4>>2],r,k+12|0,n))break e;if(i=l[k+12>>2],b=l[a>>2],l[a>>2]=b>>>0>(-1^i)>>>0?-1:-1==(0|b)?-1:-1==(0|i)?-1:i+b|0,!(e=l[e+8>>2]))break}b=0;break e;case 8:if(b=ub(l[e+4>>2],r,k+12|0,n))break e;for(s=0;;){if(e=l[e+8>>2]){if(b=ub(l[e+4>>2],r,k+8|0,n),s=l[k+12>>2]==l[k+8>>2]?s:1,!b)continue;break e}break}if(s){b=i?-1:-2;break e}l[a>>2]=l[k+12>>2],b=0;break e;default:if((b=l[e+4>>2])>>>0>=h[e+8>>2]){b=0;break e}for(;i=0|f[l[l[r+56>>2]>>2]](b),l[a>>2]=l[a>>2]+1,(b=i+b|0)>>>0<h[e+8>>2];);b=0;break e;case 4:if(b=-1,l[e+12>>2]!=l[e+16>>2])break e;if(b=ub(l[e+8>>2],r,k+12|0,n))break e;b=0,e=(e=l[e+12>>2])?4294967295/(e>>>0)>>>0>(r=l[k+12>>2])>>>0?w(r,e):-1:0,l[a>>2]=e;break e;case 9:if(b=-1,128&v[e+4|0])break e;b=ub(l[e+20>>2],r,a,n);break e;case 1:l[a>>2]=1;break e;case 0:case 2:l[a>>2]=1;break e;case 6:break e;case 3:break r;case 5:}if((i=l[e+8>>2]+-1|0)>>>0>3)break e;a:switch(i-1|0){default:if(4&v[e+4|0]){l[a>>2]=l[e+36>>2];break e}if(b=ub(l[e+20>>2],r,a,n))break e;l[e+36>>2]=l[a>>2],l[e+4>>2]=4|l[e+4>>2],b=0;break e;case 1:break e;case 0:case 2:}b=ub(l[e+20>>2],r,a,n);break e}b=-1}return ne=k+16|0,b}function lb(e,r,a,i,b,n,s){var t,c,o,u,d,m,p,g,y,E,_=0,D=0,S=0,F=0,M=0,A=0,x=0,P=0,T=0,R=0,O=0,I=0,z=0,N=0,j=0,U=0,B=0,C=0,L=0;if(t=T=ne-80|0,ne=T,_=l[s+16>>2],o=l[e+12>>2],m=l[e+44>>2],u=l[e+68>>2],c=l[e+56>>2],A=l[e+60>>2],D=l[e>>2],(F=l[s>>2])?(I=(T=(_<<2)+F|0)+w(l[s+4>>2],20)|0,N=0):(F=3200+(M=_<<2)|0,(0|_)>=51?(I=3200+(T=M+(F=Cb(F))|0)|0,N=0):(I=3200+(T=M+(F=T-(F+15&-16)|0)|0)|0,ne=F,N=1)),z=((_=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=_+-4|0,_=1,(0|o)>=1)for(;l[(M=_<<2)+z>>2]=-1,l[M+j>>2]=-1,M=(0|_)!=(0|o),_=_+1|0,M;);for(l[T+4>>2]=329528,l[T>>2]=1,l[t+12>>2]=b,g=r+1|0,y=32&A,E=48&A,d=b-r|0,p=16&A,B=-1,x=b,_=T+20|0,P=F;;){A=_;e:{r:{a:{i:{f:{k:{b:{n:{s:{t:{c:{o:{u:{l:{v:{d:{h:{m:{w:{p:{g:{y:{E:{_:{D:{S:{F:{M:{A:{x:{P:{T:{R:{O:{I:{z:{N:{j:{U:{B:{C:{L:{H:{q:{Y:{W:{G:{X:{J:{V:{K:{Z:{$:{Q:{ee:{re:{ae:{ie:{fe:{ke:{be:{ne:{se:{te:{ce:{oe:{ue:{le:{ve:{de:{he:{me:{we:{pe:{ge:{ye:{Ee:{_e:{De:{Se:{Fe:{Me:{Ae:{xe:{Pe:{Te:{Re:{Oe:{Ie:{ze:{Ne:{je:{Ue:{Be:{Ce:{Le:{He:{if((M=v[0|D])>>>0<=80){R=D+1|0,O=0,U=1,S=A;qe:switch(M-1|0){case 27:if(x>>>0<i>>>0)break B;break U;case 26:if(x>>>0<i>>>0)break j;break N;case 76:break Be;case 77:break Ce;case 78:break Le;case 79:break He;case 25:break qe;case 24:break b;case 0:break s;case 1:break t;case 13:break c;case 2:break l;case 3:break v;case 4:break d;case 5:break h;case 6:break m;case 14:break w;case 7:break p;case 8:break g;case 9:break y;case 10:break E;case 11:break _;case 12:break D;case 15:break S;case 16:break M;case 17:break A;case 18:break x;case 19:break T;case 20:break R;case 21:break O;case 22:break I;case 23:break z;case 28:break C;case 29:break L;case 30:break q;case 31:break Y;case 32:break W;case 33:break G;case 34:break X;case 35:break J;case 36:break V;case 37:break K;case 38:break Z;case 39:break $;case 48:break Q;case 47:break ee;case 49:break re;case 51:break ae;case 50:break ie;case 52:break fe;case 40:break ke;case 41:break be;case 42:break ne;case 43:break se;case 53:break e;case 44:break te;case 45:break ce;case 46:break oe;case 65:break ue;case 66:break he;case 67:break me;case 68:break we;case 54:break pe;case 55:break ge;case 56:break ye;case 57:break Ee;case 58:break _e;case 59:break De;case 60:break Se;case 61:break Me;case 63:break Ae;case 62:break Pe;case 64:break Te;case 69:break Re;case 70:break Oe;case 71:break Ie;case 72:break ze;case 73:break Ne;case 74:break je;case 75:break Ue;default:break n}if(x>>>0>=i>>>0)break f;for(S=x;;){if((I-_|0)<=19){O=(M=l[s+16>>2]<<2)+w(P=(0|(D=I-T|0))/20|0,40)|0,A=P<<1;qe:{Ye:{We:{Ge:{if(N){if(D=D+M|0,!(O=Cb(O)))break Ge;F=qb(O,F,D);break qe}if(!(!(D=l[82381])|A>>>0<=D>>>0)&&(A=D,(0|P)==(0|D))){_=-15;break Ye}if(!(D=Ub(F,O)))break We;M=l[s+16>>2]<<2,S=l[t+12>>2],F=D;break qe}l[s+4>>2]=P,e=Cb(D),l[s>>2]=e,qb(e,F,D),l[s+4>>2]=P,e=Cb(D),l[s>>2]=e,qb(e,F,D),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(D=w(A,20))+(A=F+M|0)|0,_=A+w((_-T|0)/20|0,20)|0,z=((D=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=D+-4|0,N=0,P=F,T=A}l[_+4>>2]=R,l[_>>2]=1,l[_+12>>2]=n,l[_+8>>2]=S,_=_+20|0,A=0|f[l[c>>2]](S),n=l[t+12>>2];qe:{if((0|A)>=2){if((S=n+A|0)>>>0<=i>>>0)break qe;break r}S=n+1|0}if(l[t+12>>2]=S,!(S>>>0<i>>>0))break}break i}if(e=I-T|0,l[s+4>>2]=(0|e)/20,N){r=Cb(e=e+(l[s+16>>2]<<2)|0),l[s>>2]=r,qb(r,F,e),_=-13;break k}l[s>>2]=F,_=-13;break k}He:{for(;;)if(D=_,2304!=(0|(M=l[(_=_+-20|0)>>2]))){if(2048==(0|M)){qe:{if(!O){if(D=l[D+-16>>2],(I-A|0)>=20)break He;R=(_=l[s+16>>2]<<2)+w(P=(0|(M=I-T|0))/20|0,40)|0,S=P<<1;Ye:{We:{Ge:{if(N){if(M=_+M|0,!(R=Cb(R)))break Ge;F=qb(R,F,M);break qe}if(!(!(_=l[82381])|S>>>0<=_>>>0)&&(S=_,(0|_)==(0|P))){_=-15;break Ye}if(!(M=Ub(F,R)))break We;_=l[s+16>>2]<<2,F=M;break qe}l[s+4>>2]=P,e=Cb(M),l[s>>2]=e,qb(e,F,M),l[s+4>>2]=P,e=Cb(M),l[s>>2]=e,qb(e,F,M),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}O=O+-1|0;continue}break}}else O=O+1|0;I=(_=_+F|0)+w(S,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}l[A>>2]=2304,_=A+20|0,x=l[t+12>>2];continue}if(x=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,(I-A|0)<=19){R=(_=l[s+16>>2]<<2)+w(P=(0|(S=I-T|0))/20|0,40)|0,M=P<<1;Le:{He:{qe:{Ye:{if(N){if(S=_+S|0,!(R=Cb(R)))break Ye;F=qb(R,F,S);break Le}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|P))){_=-15;break He}if(!(S=Ub(F,R)))break qe;_=l[s+16>>2]<<2,F=S;break Le}l[s+4>>2]=P,e=Cb(S),l[s>>2]=e,qb(e,F,S),l[s+4>>2]=P,e=Cb(S),l[s>>2]=e,qb(e,F,S),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(_=_+F|0)+w(M,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}l[A+4>>2]=D+5,l[A>>2]=2048,_=A+20|0,D=x+l[e>>2]|0,x=l[t+12>>2];continue}for(;;)if(n=A,(0|(_=l[(A=A+-20|0)>>2]))<=767){if(256==(0|_)){l[(l[(_=n+-16|0)>>2]<<2)+j>>2]=l[n+-8>>2],l[(l[_>>2]<<2)+z>>2]=l[n+-4>>2];continue}if(2==(0|_))break e}else if(768!=(0|_)){if(33280!=(0|_))continue;l[(l[(_=n+-16|0)>>2]<<2)+j>>2]=l[n+-8>>2],l[(l[_>>2]<<2)+z>>2]=l[n+-4>>2]}else n=w(l[n+-16>>2],20)+T|0,l[n+4>>2]=l[n+4>>2]+-1}if(U=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,_=v[D+5|0]|v[D+6|0]<<8|v[D+7|0]<<16|v[D+8|0]<<24,D=D+9|0,!(R=Xr(c,r,x,_))){D=D+U|0;break u}if((I-A|0)<=19){P=(M=l[s+16>>2]<<2)+w(S=(0|(_=I-T|0))/20|0,40)|0,O=S<<1;Be:{Ce:{Le:{He:{if(N){if(_=_+M|0,!(P=Cb(P)))break He;F=qb(P,F,_);break Be}if(!(!(_=l[82381])|O>>>0<=_>>>0)&&(O=_,(0|_)==(0|S))){_=-15;break Ce}if(!(_=Ub(F,P)))break Le;M=l[s+16>>2]<<2,F=_;break Be}l[s+4>>2]=S,e=Cb(_),l[s>>2]=e,qb(e,F,_),l[s+4>>2]=S,e=Cb(_),l[s>>2]=e,qb(e,F,_),_=-5;break k}l[s>>2]=F,l[s+4>>2]=S,_=-5}l[s>>2]=F,l[s+4>>2]=S;break k}I=(_=F+M|0)+w(O,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}l[A>>2]=2,l[A+4>>2]=D+U,_=l[t+12>>2],l[A+12>>2]=n,l[A+8>>2]=_,l[t+12>>2]=R,n=R>>>0>r>>>0?0|f[l[c+56>>2]](r,R+-1|0):0,_=A+20|0,x=l[t+12>>2];continue}if(n=Xr(c,r,x,v[0|R]|v[R+1|0]<<8|v[R+2|0]<<16|v[R+3|0]<<24),l[t+12>>2]=n,!n)break e;n=n>>>0>r>>>0?0|f[l[c+56>>2]](r,n+-1|0):0,D=D+5|0;break u}for(;;)if(4351&(_=l[(S=S+-20|0)>>2]))l[S>>2]=2560;else if(1536==(0|_))break;l[S>>2]=2560;break H}if((I-A|0)<=19){P=(_=l[s+16>>2]<<2)+w(M=(0|(D=I-T|0))/20|0,40)|0,S=M<<1;Ne:{je:{Ue:{Be:{if(N){if(D=_+D|0,!(P=Cb(P)))break Be;F=qb(P,F,D);break Ne}if(!(!(_=l[82381])|S>>>0<=_>>>0)&&(S=_,(0|_)==(0|M))){_=-15;break je}if(!(D=Ub(F,P)))break Ue;_=l[s+16>>2]<<2,F=D;break Ne}l[s+4>>2]=M,e=Cb(D),l[s>>2]=e,qb(e,F,D),l[s+4>>2]=M,e=Cb(D),l[s>>2]=e,qb(e,F,D),_=-5;break k}l[s>>2]=F,l[s+4>>2]=M,_=-5}l[s>>2]=F,l[s+4>>2]=M;break k}I=(_=_+F|0)+w(S,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((D=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=D+-4|0,N=0,P=F,T=_}l[A>>2]=1536,_=A+20|0,D=R,x=l[t+12>>2];continue}for(;;)if(n=A,(0|(_=l[(A=A+-20|0)>>2]))<=767){if(256==(0|_)){l[(l[(_=n+-16|0)>>2]<<2)+j>>2]=l[n+-8>>2],l[(l[_>>2]<<2)+z>>2]=l[n+-4>>2];continue}if(3==(0|_))break e}else if(768!=(0|_)){if(33280!=(0|_))continue;l[(l[(_=n+-16|0)>>2]<<2)+j>>2]=l[n+-8>>2],l[(l[_>>2]<<2)+z>>2]=l[n+-4>>2]}else n=w(l[n+-16>>2],20)+T|0,l[n+4>>2]=l[n+4>>2]+-1}if(O=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,(I-A|0)<=19){R=(S=l[s+16>>2]<<2)+w(P=(0|(_=I-T|0))/20|0,40)|0,M=P<<1;Ie:{ze:{Ne:{je:{if(N){if(_=_+S|0,!(R=Cb(R)))break je;F=qb(R,F,_);break Ie}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|P))){_=-15;break ze}if(!(_=Ub(F,R)))break Ne;S=l[s+16>>2]<<2,x=l[t+12>>2],F=_;break Ie}l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(_=F+S|0)+w(M,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}l[A>>2]=3,l[A+12>>2]=n,l[A+8>>2]=x,D=D+5|0,l[A+4>>2]=O+D,_=A+20|0,x=l[t+12>>2];continue}for(l[t+8>>2]=A;;)if(n=_,4351&(D=l[(_=_+-20|0)>>2]))l[_>>2]=2560;else if(1280==(0|D))break;l[t+8>>2]=_,l[_>>2]=2560,l[t+12>>2]=l[n+-12>>2],n=l[n+-8>>2];break H}if((I-A|0)<=19){P=(_=l[s+16>>2]<<2)+w(M=(0|(D=I-T|0))/20|0,40)|0,S=M<<1;Re:{Oe:{Ie:{ze:{if(N){if(D=_+D|0,!(P=Cb(P)))break ze;F=qb(P,F,D);break Re}if(!(!(_=l[82381])|S>>>0<=_>>>0)&&(S=_,(0|_)==(0|M))){_=-15;break Oe}if(!(D=Ub(F,P)))break Ie;_=l[s+16>>2]<<2,x=l[t+12>>2],F=D;break Re}l[s+4>>2]=M,e=Cb(D),l[s>>2]=e,qb(e,F,D),l[s+4>>2]=M,e=Cb(D),l[s>>2]=e,qb(e,F,D),_=-5;break k}l[s>>2]=F,l[s+4>>2]=M,_=-5}l[s>>2]=F,l[s+4>>2]=M;break k}I=(_=_+F|0)+w(S,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((D=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=D+-4|0,N=0,P=F,T=_}l[A>>2]=1280,l[A+4>>2]=0,l[A+12>>2]=n,l[A+8>>2]=x,_=A+20|0,D=R,x=l[t+12>>2];continue}for(x=(v[0|R]|v[R+1|0]<<8)<<16>>16,l[t+8>>2]=A;;){M=_;Te:{if(1792!=(0|(S=l[(_=_+-20|0)>>2]))){if(2048==(0|S))break Te;if(2304!=(0|S))continue;l[t+8>>2]=_,O=O+1|0;continue}if(O)continue;if(l[t+8>>2]=_,O=0,l[M+-8>>2]!=(0|x))continue;S=(_-T|0)/20|0;break xe}l[t+8>>2]=_,O=O+-1|0}}x=(v[0|R]|v[R+1|0]<<8)<<16>>16,S=l[(x<<2)+P>>2],_=w(S,20)+T|0,l[t+8>>2]=_}l[_+4>>2]=l[_+4>>2]+1,D=D+3|0;xe:{Pe:{Te:{Re:{if(_=l[t+8>>2],M=l[_+4>>2],R=l[e+52>>2]+(x<<3)|0,(0|M)<(0|(x=l[R+4>>2]))){if((0|M)>=l[R>>2]){if(x=l[_+8>>2],(I-A|0)>19){M=F,O=T;break xe}M=(_=l[s+16>>2]<<2)+w(P=(0|(R=I-T|0))/20|0,40)|0,z=P<<1;Oe:{Ie:{ze:{if(N){if(R=_+R|0,!(M=Cb(M)))break ze;qb(M,F,R);break Pe}if(!(!(_=l[82381])|z>>>0<=_>>>0)&&(z=_,(0|_)==(0|P))){_=-15;break Oe}if(!(M=Ub(F,M)))break Ie;_=l[s+16>>2]<<2;break Pe}l[s+4>>2]=P,e=Cb(R),l[s>>2]=e,qb(e,F,R),l[s+4>>2]=P,e=Cb(R),l[s>>2]=e,qb(e,F,R),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}if(D=l[_+8>>2],(I-A|0)>19)break Te;x=(_=l[s+16>>2]<<2)+w(R=(0|(P=I-T|0))/20|0,40)|0,M=R<<1;Oe:{Ie:{ze:{if(N){if(P=_+P|0,!(x=Cb(x)))break ze;F=qb(x,F,P);break Re}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|R))){_=-15;break Oe}if(!(P=Ub(F,x)))break Ie;_=l[s+16>>2]<<2,F=P;break Re}l[s+4>>2]=R,e=Cb(P),l[s>>2]=e,qb(e,F,P),l[s+4>>2]=R,e=Cb(P),l[s>>2]=e,qb(e,F,P),_=-5;break k}l[s>>2]=F,l[s+4>>2]=R,_=-5}l[s>>2]=F,l[s+4>>2]=R;break k}if((0|x)!=(0|M))break u;if((I-A|0)<=19){x=(_=l[s+16>>2]<<2)+w(R=(0|(P=I-T|0))/20|0,40)|0,M=R<<1;Oe:{Ie:{ze:{Ne:{if(N){if(P=_+P|0,!(x=Cb(x)))break Ne;F=qb(x,F,P);break Oe}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|R))){_=-15;break Ie}if(!(P=Ub(F,x)))break ze;_=l[s+16>>2]<<2,F=P;break Oe}l[s+4>>2]=R,e=Cb(P),l[s>>2]=e,qb(e,F,P),l[s+4>>2]=R,e=Cb(P),l[s>>2]=e,qb(e,F,P),_=-5;break k}l[s>>2]=F,l[s+4>>2]=R,_=-5}l[s>>2]=F,l[s+4>>2]=R;break k}I=(_=_+F|0)+w(M,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}l[A>>2]=768,l[A+4>>2]=S,_=A+20|0,x=l[t+12>>2];continue}I=(_=_+F|0)+w(M,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}l[A>>2]=768,l[A+4>>2]=S,_=A+20|0,x=l[t+12>>2];continue}I=(O=_+M|0)+w(z,20)|0,A=w((A-T|0)/20|0,20)+O|0,z=((_=(l[e+16>>2]<<2)+M|0)+(o<<2)|0)-4|0,j=_+-4|0,N=0,P=M}if(l[A>>2]=768,l[A+4>>2]=S,(I-(_=A+20|0)|0)>19)F=M,T=O;else{R=(S=l[s+16>>2]<<2)+w(T=(0|(F=I-O|0))/20|0,40)|0,A=T<<1;xe:{Pe:{Te:{Re:{if(N){if(P=F+S|0,!(F=Cb(R)))break Re;qb(F,M,P);break xe}if(!(!(F=l[82381])|A>>>0<=F>>>0)&&(A=F,(0|F)==(0|T))){_=-15;break Pe}if(!(F=Ub(M,R)))break Te;S=l[s+16>>2]<<2;break xe}l[s+4>>2]=T,e=Cb(P),l[s>>2]=e,qb(e,M,P),l[s+4>>2]=T,e=Cb(P),l[s>>2]=e,qb(e,M,P),_=-5;break k}l[s>>2]=M,l[s+4>>2]=T,_=-5}l[s>>2]=M,l[s+4>>2]=T;break k}I=(T=F+S|0)+w(A,20)|0,_=w((_-O|0)/20|0,20)+T|0,z=((A=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=A+-4|0,N=0,P=F}l[_>>2]=1,l[_+4>>2]=x,A=l[t+12>>2],l[_+12>>2]=n,l[_+8>>2]=A,_=_+20|0,x=l[t+12>>2];continue}for(x=(v[0|R]|v[R+1|0]<<8)<<16>>16,l[t+8>>2]=A;;){M=_;Ae:{if(1792!=(0|(S=l[(_=_+-20|0)>>2]))){if(2048==(0|S))break Ae;if(2304!=(0|S))continue;l[t+8>>2]=_,O=O+1|0;continue}if(O)continue;if(l[t+8>>2]=_,O=0,l[M+-8>>2]!=(0|x))continue;M=(_-T|0)/20|0;break Fe}l[t+8>>2]=_,O=O+-1|0}}x=(v[0|R]|v[R+1|0]<<8)<<16>>16,M=l[(x<<2)+P>>2],_=w(M,20)+T|0,l[t+8>>2]=_}if(l[_+4>>2]=l[_+4>>2]+1,R=D+3|0,_=l[t+8>>2],D=l[_+4>>2],S=l[e+52>>2]+(x<<3)|0,(0|D)>=l[S+4>>2])S=F,_=T,D=R;else{Fe:{Me:{Ae:{if((0|D)>=l[S>>2]){if((I-A|0)>19){S=F,_=T;break Me}S=(_=l[s+16>>2]<<2)+w(P=(0|(x=I-T|0))/20|0,40)|0,D=P<<1;xe:{Pe:{Te:{if(N){if(x=_+x|0,!(S=Cb(S)))break Te;qb(S,F,x);break Ae}if(!(!(_=l[82381])|D>>>0<=_>>>0)&&(D=_,(0|_)==(0|P))){_=-15;break xe}if(!(S=Ub(F,S)))break Pe;_=l[s+16>>2]<<2;break Ae}l[s+4>>2]=P,e=Cb(x),l[s>>2]=e,qb(e,F,x),l[s+4>>2]=P,e=Cb(x),l[s>>2]=e,qb(e,F,x),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}O=_+8|0,S=F,_=T;break Fe}I=(_=_+S|0)+w(D,20)|0,A=w((A-T|0)/20|0,20)+_|0,z=((F=(l[e+16>>2]<<2)+S|0)+(o<<2)|0)-4|0,j=F+-4|0,N=0,P=S}l[A+4>>2]=R,l[A>>2]=1,F=l[t+12>>2],l[A+12>>2]=n,l[A+8>>2]=F,A=A+20|0,O=8+(w(M,20)+_|0)|0}D=l[O>>2]}if((I-A|0)>19)F=S,T=_;else{R=(O=l[s+16>>2]<<2)+w(T=(0|(F=I-_|0))/20|0,40)|0,z=T<<1;Fe:{Me:{Ae:{xe:{if(N){if(P=F+O|0,!(F=Cb(R)))break xe;qb(F,S,P);break Fe}if(!(!(F=l[82381])|z>>>0<=F>>>0)&&(z=F,(0|F)==(0|T))){_=-15;break Me}if(!(F=Ub(S,R)))break Ae;O=l[s+16>>2]<<2;break Fe}l[s+4>>2]=T,e=Cb(P),l[s>>2]=e,qb(e,S,P),l[s+4>>2]=T,e=Cb(P),l[s>>2]=e,qb(e,S,P),_=-5;break k}l[s>>2]=S,l[s+4>>2]=T,_=-5}l[s>>2]=S,l[s+4>>2]=T;break k}I=(T=F+O|0)+w(z,20)|0,A=w((A-_|0)/20|0,20)+T|0,z=((_=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=_+-4|0,N=0,P=F}l[A>>2]=768,l[A+4>>2]=M,_=A+20|0,x=l[t+12>>2];continue}if(R=(v[D+1|0]|v[D+2|0]<<8)<<16>>16,x=v[D+3|0]|v[D+4|0]<<8|v[D+5|0]<<16|v[D+6|0]<<24,(I-A|0)>=20)l[(R<<2)+P>>2]=(A-T|0)/20,M=T;else{P=(_=l[s+16>>2]<<2)+w(M=(0|(S=I-T|0))/20|0,40)|0,z=M<<1;Se:{Fe:{Me:{Ae:{if(N){if(S=_+S|0,!(P=Cb(P)))break Ae;qb(P,F,S);break Se}if(!(!(_=l[82381])|z>>>0<=_>>>0)&&(z=_,(0|_)==(0|M))){_=-15;break Fe}if(!(P=Ub(F,P)))break Me;_=l[s+16>>2]<<2;break Se}l[s+4>>2]=M,e=Cb(S),l[s>>2]=e,qb(e,F,S),l[s+4>>2]=M,e=Cb(S),l[s>>2]=e,qb(e,F,S),_=-5;break k}l[s>>2]=F,l[s+4>>2]=M,_=-5}l[s>>2]=F,l[s+4>>2]=M;break k}if(F=l[e+16>>2],S=(0|(A=w((A-T|0)/20|0,20)))/20|0,l[(R<<2)+P>>2]=S,((I=(M=_+P|0)+w(z,20)|0)-(A=A+M|0)|0)>19)z=((_=(F<<2)+P|0)+(o<<2)|0)-4|0,j=_+-4|0,N=0,F=P;else{F=l[s+16>>2];Se:{if(!(A=l[82381])|(_=(T=(I-M|0)/20|0)<<1)>>>0<=A>>>0||(0|T)!=(0|(_=A))){if(F=Ub(P,w(T,40)+(F<<2)|0))break Se;l[s>>2]=P,l[s+4>>2]=T,_=-5}else _=-15;l[s>>2]=P,l[s+4>>2]=T;break k}I=(M=(l[s+16>>2]<<2)+F|0)+w(_,20)|0,A=w(S,20)+M|0,z=((_=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=_+-4|0,N=0,P=F}}if(l[A>>2]=1792,l[A+4>>2]=0,l[A+12>>2]=R,D=D+7|0,l[A+8>>2]=D,_=A+20|0,l[l[e+52>>2]+(R<<3)>>2]){T=M,x=l[t+12>>2];continue}if((I-_|0)>19)T=M;else{R=(S=l[s+16>>2]<<2)+w(P=(0|(T=I-M|0))/20|0,40)|0,A=P<<1;Se:{Fe:{Me:{Ae:{if(N){if(T=S+T|0,!(R=Cb(R)))break Ae;F=qb(R,F,T);break Se}if(!(!(T=l[82381])|A>>>0<=T>>>0)&&(0|P)==(0|(A=T))){_=-15;break Fe}if(!(T=Ub(F,R)))break Me;S=l[s+16>>2]<<2,F=T;break Se}l[s+4>>2]=P,e=Cb(T),l[s>>2]=e,qb(e,F,T),l[s+4>>2]=P,e=Cb(T),l[s>>2]=e,qb(e,F,T),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(T=F+S|0)+w(A,20)|0,_=w((_-M|0)/20|0,20)+T|0,z=((A=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=A+-4|0,N=0,P=F}l[_+4>>2]=D,l[_>>2]=1,A=l[t+12>>2],l[_+12>>2]=n,l[_+8>>2]=A,D=D+x|0,_=_+20|0,x=l[t+12>>2];continue}if(R=(v[D+1|0]|v[D+2|0]<<8)<<16>>16,x=v[D+3|0]|v[D+4|0]<<8|v[D+5|0]<<16|v[D+6|0]<<24,(I-A|0)>=20)l[(R<<2)+P>>2]=(A-T|0)/20,M=T;else{P=(_=l[s+16>>2]<<2)+w(M=(0|(S=I-T|0))/20|0,40)|0,z=M<<1;De:{Se:{Fe:{Me:{if(N){if(S=_+S|0,!(P=Cb(P)))break Me;qb(P,F,S);break De}if(!(!(_=l[82381])|z>>>0<=_>>>0)&&(z=_,(0|_)==(0|M))){_=-15;break Se}if(!(P=Ub(F,P)))break Fe;_=l[s+16>>2]<<2;break De}l[s+4>>2]=M,e=Cb(S),l[s>>2]=e,qb(e,F,S),l[s+4>>2]=M,e=Cb(S),l[s>>2]=e,qb(e,F,S),_=-5;break k}l[s>>2]=F,l[s+4>>2]=M,_=-5}l[s>>2]=F,l[s+4>>2]=M;break k}if(F=l[e+16>>2],S=(0|(A=w((A-T|0)/20|0,20)))/20|0,l[(R<<2)+P>>2]=S,((I=(M=_+P|0)+w(z,20)|0)-(A=A+M|0)|0)>19)z=((_=(F<<2)+P|0)+(o<<2)|0)-4|0,j=_+-4|0,N=0,F=P;else{F=l[s+16>>2];De:{if(!(A=l[82381])|(_=(T=(I-M|0)/20|0)<<1)>>>0<=A>>>0||(0|T)!=(0|(_=A))){if(F=Ub(P,w(T,40)+(F<<2)|0))break De;l[s>>2]=P,l[s+4>>2]=T,_=-5}else _=-15;l[s>>2]=P,l[s+4>>2]=T;break k}I=(M=(l[s+16>>2]<<2)+F|0)+w(_,20)|0,A=w(S,20)+M|0,z=((_=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=_+-4|0,N=0,P=F}}if(l[A>>2]=1792,l[A+4>>2]=0,l[A+12>>2]=R,D=D+7|0,l[A+8>>2]=D,_=A+20|0,l[l[e+52>>2]+(R<<3)>>2]){T=M,x=l[t+12>>2];continue}if((I-_|0)>19)T=M;else{R=(S=l[s+16>>2]<<2)+w(P=(0|(T=I-M|0))/20|0,40)|0,A=P<<1;De:{Se:{Fe:{Me:{if(N){if(T=S+T|0,!(R=Cb(R)))break Me;F=qb(R,F,T);break De}if(!(!(T=l[82381])|A>>>0<=T>>>0)&&(0|P)==(0|(A=T))){_=-15;break Se}if(!(T=Ub(F,R)))break Fe;S=l[s+16>>2]<<2,F=T;break De}l[s+4>>2]=P,e=Cb(T),l[s>>2]=e,qb(e,F,T),l[s+4>>2]=P,e=Cb(T),l[s>>2]=e,qb(e,F,T),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(T=F+S|0)+w(A,20)|0,_=w((_-M|0)/20|0,20)+T|0,z=((A=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=A+-4|0,N=0,P=F}l[_>>2]=1,l[_+4>>2]=D+x,A=l[t+12>>2],l[_+12>>2]=n,l[_+8>>2]=A,_=_+20|0,x=l[t+12>>2];continue}if(S=D+6|0,v[D+5|0]!=v[0|x]){D=S,x=l[t+12>>2];continue}if(R=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,(I-A|0)<=19){P=(M=l[s+16>>2]<<2)+w(D=(0|(_=I-T|0))/20|0,40)|0,O=D<<1;_e:{De:{Se:{Fe:{if(N){if(_=_+M|0,!(P=Cb(P)))break Fe;F=qb(P,F,_);break _e}if(!(!(_=l[82381])|O>>>0<=_>>>0)&&(O=_,(0|_)==(0|D))){_=-15;break De}if(!(_=Ub(F,P)))break Se;M=l[s+16>>2]<<2,x=l[t+12>>2],F=_;break _e}l[s+4>>2]=D,e=Cb(_),l[s>>2]=e,qb(e,F,_),l[s+4>>2]=D,e=Cb(_),l[s>>2]=e,qb(e,F,_),_=-5;break k}l[s>>2]=F,l[s+4>>2]=D,_=-5}l[s>>2]=F,l[s+4>>2]=D;break k}I=(_=F+M|0)+w(O,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((D=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=D+-4|0,N=0,P=F,T=_}l[A>>2]=1,l[A+12>>2]=n,l[A+8>>2]=x,l[A+4>>2]=S+R,_=A+20|0,D=S,x=l[t+12>>2];continue}R=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24;Ee:{_e:{if(!(v[D+5|0]!=v[0|x]|x>>>0>=i>>>0)){if((I-A|0)>19)break Ee;O=(S=l[s+16>>2]<<2)+w(P=(0|(_=I-T|0))/20|0,40)|0,M=P<<1;De:{Se:{Fe:{if(N){if(_=_+S|0,!(O=Cb(O)))break Fe;F=qb(O,F,_);break _e}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|P))){_=-15;break De}if(!(_=Ub(F,O)))break Se;S=l[s+16>>2]<<2,x=l[t+12>>2],F=_;break _e}l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}D=6+(D+R|0)|0;break u}I=(_=F+S|0)+w(M,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}l[A>>2]=1,l[A+12>>2]=n,l[A+8>>2]=x,D=D+6|0,l[A+4>>2]=R+D,_=A+20|0,x=l[t+12>>2];continue}_=A+-20|0,D=R,x=l[t+12>>2];continue}if(O=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,(I-A|0)<=19){R=(S=l[s+16>>2]<<2)+w(P=(0|(_=I-T|0))/20|0,40)|0,M=P<<1;ge:{ye:{Ee:{_e:{if(N){if(_=_+S|0,!(R=Cb(R)))break _e;F=qb(R,F,_);break ge}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|P))){_=-15;break ye}if(!(_=Ub(F,R)))break Ee;S=l[s+16>>2]<<2,x=l[t+12>>2],F=_;break ge}l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(_=F+S|0)+w(M,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}l[A>>2]=1,l[A+12>>2]=n,l[A+8>>2]=x,D=D+5|0,l[A+4>>2]=O+D,_=A+20|0,x=l[t+12>>2];continue}D=5+((v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24)+D|0)|0;break u}O=(v[0|R]|v[R+1|0]<<8)<<16>>16,R=0;we:{for(;;)if(S=_,12288==(0|(M=l[(_=_+-20|0)>>2]))){if((0|O)==l[S+-16>>2]){pe:{if(!R){if(M=D+3|0,l[S+-12>>2]!=(0|x))break we;if(_>>>0>=A>>>0)break de;for(R=1,S=12288;;){if(256==(0|S)){if(-1==(0|(S=l[_+16>>2])))break we;U=l[e+40>>2],C=l[_+4>>2];ge:{ye:{if((0|C)<=31){if(U>>>C&1)break ye;break ge}if(!(1&U))break ge}S=l[8+(w(S,20)+T|0)>>2]}if(l[8+(w(l[_+12>>2],20)+T|0)>>2]!=(0|S))break we;R=(0|S)==(0|x)?R:-1}if((_=_+20|0)>>>0>=A>>>0)break pe;S=l[_>>2]}}R=R+-1|0;continue}break}}else{if(20480!=(0|M))continue;R=((0|O)==l[S+-16>>2])+R|0}if((_=R+1|0)>>>0>1)break de;if(_-1)break e}if((I-A|0)<=19){R=(_=l[s+16>>2]<<2)+w(P=(0|(D=I-T|0))/20|0,40)|0,S=P<<1;we:{pe:{ge:{ye:{if(N){if(D=_+D|0,!(R=Cb(R)))break ye;F=qb(R,F,D);break we}if(!(!(_=l[82381])|S>>>0<=_>>>0)&&(S=_,(0|_)==(0|P))){_=-15;break pe}if(!(D=Ub(F,R)))break ge;_=l[s+16>>2]<<2,F=D;break we}l[s+4>>2]=P,e=Cb(D),l[s>>2]=e,qb(e,F,D),l[s+4>>2]=P,e=Cb(D),l[s>>2]=e,qb(e,F,D),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(_=_+F|0)+w(S,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((D=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=D+-4|0,N=0,P=F,T=_}l[A>>2]=20480,l[A+4>>2]=O,_=A+20|0,D=M,x=l[t+12>>2];continue}for(M=(v[0|R]|v[R+1|0]<<8)<<16>>16;S=_,12288!=l[(_=_+-20|0)>>2]|(0|M)!=l[S+-16>>2];);if(M=D+3|0,l[S+-12>>2]!=(0|x))break ve;if(_>>>0>=A>>>0)break de;for(O=1,S=12288;;){if(256==(0|S)){if(-1==(0|(S=l[_+16>>2])))break ve;R=l[e+40>>2],U=l[_+4>>2];me:{we:{if((0|U)<=31){if(R>>>U&1)break we;break me}if(!(1&R))break me}S=l[8+(w(S,20)+T|0)>>2]}if(l[8+(w(l[_+12>>2],20)+T|0)>>2]!=(0|S))break ve;O=(0|S)==(0|x)?O:-1}if(!((_=_+20|0)>>>0<A>>>0))break;S=l[_>>2]}if((S=O+1|0)>>>0>1)break de;if(_=A,D=M,S-1)break e;break o}for(M=(v[0|R]|v[R+1|0]<<8)<<16>>16;S=_,12288!=l[(_=_+-20|0)>>2]|(0|M)!=l[S+-16>>2];);if(M=D+3|0,l[S+-12>>2]!=(0|x))break ve}if((_=v[0|M]+-55|0)>>>0>10)break le;de:switch(_-2|0){default:D=D+8|0;break u;case 5:case 6:case 7:case 8:break de;case 0:case 1:case 2:case 3:case 4:break le}D=D+6|0;break u}_=A,D=M,x=l[t+12>>2];continue}e=I-T|0,l[s+4>>2]=(0|e)/20,N?(r=Cb(e=e+(l[s+16>>2]<<2)|0),l[s>>2]=r,qb(r,F,e)):l[s>>2]=F,_=-14;break k}if(x=(v[D+1|0]|v[D+2|0]<<8)<<16>>16,(I-A|0)<=19){R=(S=l[s+16>>2]<<2)+w(P=(0|(_=I-T|0))/20|0,40)|0,M=P<<1;ue:{le:{ve:{de:{if(N){if(_=_+S|0,!(R=Cb(R)))break de;F=qb(R,F,_);break ue}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|P))){_=-15;break le}if(!(_=Ub(F,R)))break ve;S=l[s+16>>2]<<2,F=_;break ue}l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(_=F+S|0)+w(M,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}D=D+3|0,l[A>>2]=12288,l[A+4>>2]=x,l[A+8>>2]=l[t+12>>2],_=A+20|0,x=l[t+12>>2];continue}if((S=A+-20|0)>>>0<T>>>0)break e;for(R=D+13|0,L=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,C=v[D+9|0]|v[D+10|0]<<8|v[D+11|0]<<16|v[D+12|0]<<24,O=v[D+5|0]|v[D+6|0]<<8|v[D+7|0]<<16|v[D+8|0]<<24,D=0,M=0;;){n=M,U=_;oe:{ue:{if(2304!=(0|(M=l[(_=S)>>2]))){if(2048!=(0|M))break ue;D=D+-1|0,S=n;break oe}D=D+1|0,S=n;break oe}if(S=n,(0|D)==(0|O)){ue:{if(33280!=(0|M)){if(256!=(0|M)|(0|C)<1)break ue;for(D=l[U+-16>>2],M=0,S=R;;){if((0|D)!=(v[0|S]|v[S+1|0]<<8)<<16>>16){if(S=S+2|0,(0|C)!=(0|(M=M+1|0)))continue;break ue}break}if(D=O,S=0,!n)break oe;if((0|(M=n-(_=l[U+-12>>2])|0))>(a-x|0))break e;le:{if(!L){for(S=x;;){if(_>>>0>=n>>>0)break le;if(D=v[0|S],M=v[0|_],S=S+1|0,_=_+1|0,(0|D)!=(0|M))break}break e}S=l[e+56>>2],l[t+76>>2]=_,l[t+72>>2]=x,D=0;ve:if((0|M)>=1){M=x+M|0;de:{for(;;){if(_=0|f[l[S+32>>2]](u,t+76|0,n,t+48|0),(0|f[l[S+32>>2]](u,t+72|0,M,t+16|0))==(0|_)&&!((0|_)>=1&&pn(t+48|0,t+16|0,_))){if(h[t+76>>2]<n>>>0)continue;break de}break}D=1,S=x;break ve}S=l[t+72>>2]}else S=x;if(D)break e}for(l[t+12>>2]=S;n=x,(x=(0|f[l[c>>2]](x))+x|0)>>>0<h[t+12>>2];);D=R+(C<<1)|0;break u}if(!((0|C)<1)){for(D=l[U+-16>>2],M=0,S=R;;){if((0|D)!=(v[0|S]|v[S+1|0]<<8)<<16>>16){if(S=S+2|0,(0|C)!=(0|(M=M+1|0)))continue;break ue}break}n=l[U+-12>>2]}}D=O,S=n}}if(M=S,!((S=_+-20|0)>>>0>=T>>>0))break}break e}if(x=0,O=D+5|0,S=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,D=O,!((0|S)<1)){for(;;){ce:{if(O=(n=O)+2|0,n=(v[0|n]|v[n+1|0]<<8)<<16>>16,-1!=(0|(R=l[(M=(_=n<<2)+z|0)>>2]))&&-1!=(0|(_=l[_+j>>2]))){D=l[e+36>>2];oe:{ue:{if((0|n)<=31){if(_=D>>>n&1?l[8+(w(_,20)+T|0)>>2]:_,l[e+40>>2]>>>n&1)break ue;break oe}if(_=1&D?l[8+(w(_,20)+T|0)>>2]:_,!(1&k[e+40|0]))break oe}M=8+(w(R,20)+T|0)|0}if((R=(D=l[t+12>>2])+(M=l[M>>2]-_|0)|0)>>>0>i>>>0)break e;l[t+76>>2]=_,l[t+72>>2]=D,n=0;oe:if((0|M)>0){M=_+M|0;ue:{for(;;){if(_=0|f[l[c+32>>2]](u,t+76|0,M,t+48|0),(0|f[l[c+32>>2]](u,t+72|0,R,t+16|0))!=(0|_)){n=1,_=D;break oe}if((0|_)>=1&&pn(t+48|0,t+16|0,_))break;if(h[t+76>>2]>=M>>>0)break ue}n=1,_=D;break oe}_=l[t+72>>2]}else _=D;if(!n)break ce}if((0|S)!=(0|(x=x+1|0)))continue;break e}break}for(l[t+12>>2]=_;n=D,(D=(0|f[l[c>>2]](D))+D|0)>>>0<h[t+12>>2];);D=(S+(-1^x)<<1)+O|0}if(_=A,(0|S)!=(0|x))break o;break e}if(U=0,R=D+5|0,C=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,D=R,!((0|C)<1)){for(;;){te:{if(n=R,R=R+2|0,n=(v[0|n]|v[n+1|0]<<8)<<16>>16,-1!=(0|(M=l[(O=(_=n<<2)+z|0)>>2]))&&-1!=(0|(_=l[_+j>>2]))){D=l[e+36>>2];ce:{oe:{if((0|n)<=31){if(_=D>>>n&1?l[8+(w(_,20)+T|0)>>2]:_,l[e+40>>2]>>>n&1)break oe;break ce}if(_=1&D?l[8+(w(_,20)+T|0)>>2]:_,!(1&k[e+40|0]))break ce}O=8+(w(M,20)+T|0)|0}if(M=x,(S=l[O>>2]-_|0)+x>>>0>i>>>0)break e;for(;;){if((0|S)<1)break te;if(S=S+-1|0,n=v[0|M],D=v[0|_],M=M+1|0,_=_+1|0,(0|n)!=(0|D))break}}if((0|C)!=(0|(U=U+1|0)))continue;break e}break}for(l[t+12>>2]=M;n=x,(x=(0|f[l[c>>2]](x))+x|0)>>>0<h[t+12>>2];);D=(C+(-1^U)<<1)+R|0}if(_=A,(0|U)!=(0|C))break o;break e}if((0|o)<(0|(n=(v[D+1|0]|v[D+2|0]<<8)<<16>>16)))break e;if(-1==(0|(R=l[(M=(_=n<<2)+z|0)>>2])))break e;if(-1==(0|(S=l[_+j>>2])))break e;_=l[e+36>>2];se:{te:{if((0|n)<=31){if(S=_>>>n&1?l[8+(w(S,20)+T|0)>>2]:S,l[e+40>>2]>>>n&1)break te;break se}if(S=1&_?l[8+(w(S,20)+T|0)>>2]:S,!(1&k[e+40|0]))break se}M=8+(w(R,20)+T|0)|0}if((M=(n=l[M>>2]-S|0)+x|0)>>>0>i>>>0)break e;if(D=D+3|0,l[t+76>>2]=S,l[t+72>>2]=x,(0|n)>0){for(_=n+S|0;;){if(n=0|f[l[c+32>>2]](u,t+76|0,_,t+48|0),(0|f[l[c+32>>2]](u,t+72|0,M,t+16|0))!=(0|n))break e;if((0|n)>=1&&pn(t+48|0,t+16|0,n))break e;if(!(h[t+76>>2]<_>>>0))break}l[t+12>>2]=l[t+72>>2]}else l[t+12>>2]=x;for(;n=x,(x=(0|f[l[c>>2]](x))+x|0)>>>0<h[t+12>>2];);break u}R=D+3|0,U=v[D+1|0]|v[D+2|0]<<8;break ke}U=2}if((0|o)<(0|(n=U<<16>>16)))break e;if(-1==(0|(M=l[(O=(_=n<<2)+z|0)>>2])))break e;if(-1==(0|(_=l[_+j>>2])))break e;D=l[e+36>>2];ke:{be:{if(U<<16>>16<=31){if(_=D>>>n&1?l[8+(w(_,20)+T|0)>>2]:_,l[e+40>>2]>>>n&1)break be;break ke}if(_=1&D?l[8+(w(_,20)+T|0)>>2]:_,!(1&k[e+40|0]))break ke}O=8+(w(M,20)+T|0)|0}if(M=x,(S=l[O>>2]-_|0)+x>>>0>i>>>0)break e;for(;;){if((0|S)>=1){if(D=v[0|_],n=M+1|0,l[t+12>>2]=n,_=_+1|0,S=S+-1|0,O=v[0|M],M=n,(0|D)==(0|O))continue;break e}break}for(;n=x,(x=(0|f[l[c>>2]](x))+x|0)>>>0<h[t+12>>2];);break H}R=(v[D+1|0]|v[D+2|0]<<8)<<16>>16,l[(R<<2)+z>>2]=x,l[t+8>>2]=A,x=0;fe:if(!(A>>>0<=T>>>0))for(;;){if(M=_,_=_+-20|0,l[t+8>>2]=_,!(32768&(S=l[_>>2]))|(0|R)!=l[M+-16>>2]){if(!(256!=(0|S)|(0|R)!=l[M+-16>>2])){if(!x)break fe;x=x+-1|0}}else x=x+1|0;if(!(_>>>0>T>>>0))break}M=l[e+36>>2],S=(R<<2)+j|0;fe:{ke:{be:{if((0|R)<=31){if(M>>>R&1)break be;break ke}if(!(1&M))break ke}_=(_-T|0)/20|0;break fe}_=l[_+8>>2]}if(l[S>>2]=_,(I-A|0)<=19){x=(_=l[s+16>>2]<<2)+w(P=(0|(M=I-T|0))/20|0,40)|0,S=P<<1;fe:{ke:{be:{ne:{if(N){if(M=_+M|0,!(x=Cb(x)))break ne;F=qb(x,F,M);break fe}if(!(!(_=l[82381])|S>>>0<=_>>>0)&&(S=_,(0|_)==(0|P))){_=-15;break ke}if(!(M=Ub(F,x)))break be;_=l[s+16>>2]<<2,F=M;break fe}l[s+4>>2]=P,e=Cb(M),l[s>>2]=e,qb(e,F,M),l[s+4>>2]=P,e=Cb(M),l[s>>2]=e,qb(e,F,M),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(_=_+F|0)+w(S,20)|0,A=_+w((A-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}D=D+3|0,l[A>>2]=33792,l[A+4>>2]=R,_=A+20|0,x=l[t+12>>2];continue}R=(v[D+1|0]|v[D+2|0]<<8)<<16>>16,l[t+8>>2]=A;ie:if(!(A>>>0<=T>>>0))for(x=0;;){if(M=_,_=_+-20|0,l[t+8>>2]=_,!(32768&(S=l[_>>2]))|(0|R)!=l[M+-16>>2]){if(!(256!=(0|S)|(0|R)!=l[M+-16>>2])){if(!x)break ie;x=x+-1|0}}else x=x+1|0;if(!(_>>>0>T>>>0))break}if((I-A|0)>19)_=T;else{x=(_=l[s+16>>2]<<2)+w(P=(0|(M=I-T|0))/20|0,40)|0,S=P<<1;ie:{fe:{ke:{be:{if(N){if(M=_+M|0,!(x=Cb(x)))break be;F=qb(x,F,M);break ie}if(!(!(_=l[82381])|S>>>0<=_>>>0)&&(S=_,(0|_)==(0|P))){_=-15;break fe}if(!(M=Ub(F,x)))break ke;_=l[s+16>>2]<<2,F=M;break ie}l[s+4>>2]=P,e=Cb(M),l[s>>2]=e,qb(e,F,M),l[s+4>>2]=P,e=Cb(M),l[s>>2]=e,qb(e,F,M),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(_=_+F|0)+w(S,20)|0,A=w((A-T|0)/20|0,20)+_|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=_}D=D+3|0,l[A>>2]=33280,l[A+4>>2]=R,l[A+8>>2]=l[t+12>>2],S=(M=R<<2)+j|0,l[A+12>>2]=l[S>>2],M=M+z|0,l[A+16>>2]=l[M>>2],l[M>>2]=(A-_|0)/20,l[S>>2]=(l[t+8>>2]-_|0)/20,_=A+20|0,x=l[t+12>>2];continue}l[((v[D+1|0]|v[D+2|0]<<8)<<16>>16<<2)+z>>2]=x,D=D+3|0;break u}if(R=(v[D+1|0]|v[D+2|0]<<8)<<16>>16,(I-A|0)>19)S=T;else{x=(S=l[s+16>>2]<<2)+w(P=(0|(_=I-T|0))/20|0,40)|0,M=P<<1;re:{ae:{ie:{fe:{if(N){if(_=_+S|0,!(x=Cb(x)))break fe;F=qb(x,F,_);break re}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|P))){_=-15;break ae}if(!(_=Ub(F,x)))break ie;S=l[s+16>>2]<<2,F=_;break re}l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(S=F+S|0)+w(M,20)|0,A=w((A-T|0)/20|0,20)+S|0,z=((_=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=_+-4|0,N=0,P=F,T=S}D=D+3|0,l[A>>2]=33280,l[A+4>>2]=R,l[A+8>>2]=l[t+12>>2],_=R<<2,l[A+12>>2]=l[_+j>>2],_=_+z|0,l[A+16>>2]=l[_>>2],l[_>>2]=(A-S|0)/20,_=A+20|0,x=l[t+12>>2];continue}l[((v[D+1|0]|v[D+2|0]<<8)<<16>>16<<2)+j>>2]=x,D=D+3|0;break u}if(R=(v[D+1|0]|v[D+2|0]<<8)<<16>>16,(I-A|0)>19)S=T;else{x=(S=l[s+16>>2]<<2)+w(P=(0|(_=I-T|0))/20|0,40)|0,M=P<<1;Q:{ee:{re:{ae:{if(N){if(_=_+S|0,!(x=Cb(x)))break ae;F=qb(x,F,_);break Q}if(!(!(_=l[82381])|M>>>0<=_>>>0)&&(M=_,(0|_)==(0|P))){_=-15;break ee}if(!(_=Ub(F,x)))break re;S=l[s+16>>2]<<2,F=_;break Q}l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),l[s+4>>2]=P,e=Cb(_),l[s>>2]=e,qb(e,F,_),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(S=F+S|0)+w(M,20)|0,A=w((A-T|0)/20|0,20)+S|0,z=((_=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=_+-4|0,N=0,P=F,T=S}D=D+3|0,l[A>>2]=256,l[A+4>>2]=R,l[A+8>>2]=l[t+12>>2],M=(_=R<<2)+j|0,l[A+12>>2]=l[M>>2],_=_+z|0,l[A+16>>2]=l[_>>2],l[M>>2]=(A-S|0)/20,l[_>>2]=-1,_=A+20|0,x=l[t+12>>2];continue}if(D=R,l[s+20>>2]==(0|x))break o;break e}if((0|a)==(0|x)){if(D=R,!(4&v[s+9|0]))break o;break e}if(!f[l[c+16>>2]](x,a))break e;if(D=R,M=l[t+12>>2],((0|f[l[c>>2]](M))+M|0)==(0|a))break o;break e}if((0|a)==(0|x)){if(D=R,!(4&v[s+9|0]))break o;break e}if(f[l[c+16>>2]](x,a))break H;break e}if((0|r)==(0|x)){if(D=R,!(2&v[s+9|0]))break o;break e}if(!f[l[c+16>>2]](n,a))break e;if(D=R,l[t+12>>2]!=(0|a))break o;break e}if(D=R,(0|a)==(0|x))break o;break e}if(D=R,(0|r)==(0|x))break o;break e}if((0|r)==(0|x))break e;if(_=l[c+48>>2],!f[_](0|f[l[c+20>>2]](n,a),12))break e;if((0|(M=l[t+12>>2]))==(0|a))break H;if(S=l[c+48>>2],_=A,D=R,!f[S](0|f[l[c+20>>2]](M,a),12))break o;break e}if(x>>>0>=i>>>0)break e;if(_=l[c+48>>2],!f[_](0|f[l[c+20>>2]](x,a),12))break e;if(l[t+12>>2]==(0|r))break H;if(M=l[c+48>>2],_=A,D=R,!f[M](0|f[l[c+20>>2]](n,a),12))break o;break e}if((0|r)==(0|x)){if(r>>>0>=i>>>0)break H;if(M=l[c+48>>2],D=R,!f[M](0|f[l[c+20>>2]](r,a),12))break o;break e}if(M=l[c+20>>2],S=l[c+48>>2],(0|a)==(0|x)){if(D=R,!f[S](0|f[M](n,a),12))break o;break e}if(M=0|f[S](0|f[M](x,a),12),S=l[c+48>>2],D=R,(0|f[S](0|f[l[c+20>>2]](n,a),12))==(0|M))break o;break e}if((0|r)==(0|x)){if(g>>>0>i>>>0)break e;if(_=l[c+48>>2],f[_](0|f[l[c+20>>2]](r,a),12))break H;break e}if(_=l[c+20>>2],D=l[c+48>>2],(0|a)==(0|x)){if(f[D](0|f[_](n,a),12))break H;break e}if(M=0|f[D](0|f[_](x,a),12),S=l[c+48>>2],_=A,D=R,(0|f[S](0|f[l[c+20>>2]](n,a),12))!=(0|M))break o;break e}_=A,D=R,x=l[t+12>>2];continue}if(x+1>>>0>i>>>0)break e;if(n=l[c+48>>2],f[n](0|f[l[c+20>>2]](x,a),12))break e;l[t+12>>2]=(0|f[l[c>>2]](l[t+12>>2]))+l[t+12>>2];break f}if(x+1>>>0>i>>>0)break e;if(n=l[c+48>>2],!f[n](0|f[l[c+20>>2]](x,a),12))break e;l[t+12>>2]=(0|f[l[c>>2]](l[t+12>>2]))+l[t+12>>2];break f}for(U=D+2|0,S=x;;){if(v[0|R]==v[0|S]){if((I-_|0)<=19){z=(M=l[s+16>>2]<<2)+w(O=(0|(P=I-T|0))/20|0,40)|0,A=O<<1;B:{C:{L:{H:{if(N){if(P=M+P|0,!(z=Cb(z)))break H;F=qb(z,F,P);break B}if(!(!(M=l[82381])|A>>>0<=M>>>0)&&(0|O)==(0|(A=M))){_=-15;break C}if(!(P=Ub(F,z)))break L;M=l[s+16>>2]<<2,S=l[t+12>>2],F=P;break B}l[s+4>>2]=O,e=Cb(P),l[s>>2]=e,qb(e,F,P),l[s+4>>2]=O,e=Cb(P),l[s>>2]=e,qb(e,F,P),_=-5;break k}l[s>>2]=F,l[s+4>>2]=O,_=-5}l[s>>2]=F,l[s+4>>2]=O;break k}I=(P=w(A,20))+(A=F+M|0)|0,_=A+w((_-T|0)/20|0,20)|0,z=((T=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=T+-4|0,N=0,P=F,T=A}l[_+4>>2]=U,l[_>>2]=1,l[_+12>>2]=n,l[_+8>>2]=S,_=_+20|0}if(A=0|f[l[c>>2]](S),n=l[t+12>>2],(0|A)>=2){if((S=n+A|0)>>>0>i>>>0)break r}else S=n+1|0;if(l[t+12>>2]=S,!(S>>>0<i>>>0))break}}D=D+2|0;break a}for(U=D+2|0,S=x,M=T;;){if(v[0|R]==v[0|S]){if((I-_|0)>19)T=M;else{z=(A=l[s+16>>2]<<2)+w(P=(0|(T=I-M|0))/20|0,40)|0,O=P<<1;j:{U:{B:{C:{if(N){if(T=A+T|0,!(z=Cb(z)))break C;F=qb(z,F,T);break j}if(!(!(A=l[82381])|O>>>0<=A>>>0)&&(O=A,(0|A)==(0|P))){_=-15;break U}if(!(T=Ub(F,z)))break B;A=l[s+16>>2]<<2,S=l[t+12>>2],F=T;break j}l[s+4>>2]=P,e=Cb(T),l[s>>2]=e,qb(e,F,T),l[s+4>>2]=P,e=Cb(T),l[s>>2]=e,qb(e,F,T),_=-5;break k}l[s>>2]=F,l[s+4>>2]=P,_=-5}l[s>>2]=F,l[s+4>>2]=P;break k}I=(T=F+A|0)+w(O,20)|0,_=w((_-M|0)/20|0,20)+T|0,z=((A=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=A+-4|0,N=0,P=F}l[_+4>>2]=U,l[_>>2]=1,l[_+12>>2]=n,l[_+8>>2]=S,_=_+20|0}else T=M;if((A=0|f[l[c>>2]](S))+(n=l[t+12>>2])>>>0>i>>>0)break r;if(f[l[c+16>>2]](n,a))break r;if(S=A+(n=l[t+12>>2])|0,l[t+12>>2]=S,M=T,!(S>>>0<i>>>0))break}}D=D+2|0;break a}if(x+1>>>0>i>>>0)break e;if((n=(0|f[l[c>>2]](x))+l[t+12>>2]|0)>>>0>i>>>0)break e;l[t+12>>2]=n;break f}if(x+1>>>0>i>>>0)break e;if((n=0|f[l[c>>2]](x))+(_=l[t+12>>2])>>>0>i>>>0)break e;if(f[l[c+16>>2]](_,a))break e;l[t+12>>2]=n+l[t+12>>2];break f}if(x+1>>>0>i>>>0)break e;if(_=v[0|R]|v[R+1|0]<<8|v[R+2|0]<<16|v[R+3|0]<<24,n=(M=0|f[l[c>>2]](x))+(S=l[t+12>>2])|0,l[t+12>>2]=n,n>>>0>i>>>0)break e;if(!Er(M,0|f[l[c+20>>2]](S,n),_))break e;D=D+5|0,_=A;break a}if(x+1>>>0>i>>>0)break e;if(1!=(0|f[l[c>>2]](x))){R=D+33|0;break P}if(n=l[t+12>>2],_=v[0|n],v[(_>>>3)+R|0]>>>(7&_)&1)break e;_=v[D+33|0]|v[D+34|0]<<8|v[D+35|0]<<16|v[D+36|0]<<24,l[t+12>>2]=n+1,D=37+(_+D|0)|0,_=A;break a}if(x+1>>>0>i>>>0)break e;if(1==(0|f[l[c>>2]](x))){l[t+12>>2]=l[t+12>>2]+1,D=5+((v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24)+D|0)|0;break a}}if(D=R+4|0,M=v[0|R]|v[R+1|0]<<8|v[R+2|0]<<16|v[R+3|0]<<24,(_=(_=0|f[l[c>>2]](l[t+12>>2]))+(n=l[t+12>>2])|0)>>>0>i>>>0){if(n+1>>>0>i>>>0)break e;l[t+12>>2]=a}else if(l[t+12>>2]=_,Yf((S=R+7|0)-(3&S)|0,0|f[l[c+20>>2]](n,_)))break e;D=D+M|0,_=A;break a}if(x+1>>>0>i>>>0)break e;if(n=v[0|x],v[(n>>>3)+R|0]>>>(7&n)&1)break e;l[t+12>>2]=(0|f[l[c>>2]](x))+l[t+12>>2],D=D+33|0;break a}if(x+1>>>0>i>>>0)break e;if(1!=(0|f[l[c>>2]](x))){R=D+33|0;break F}if(n=l[t+12>>2],_=v[0|n],!(v[(_>>>3)+R|0]>>>(7&_)&1))break e;_=v[D+33|0]|v[D+34|0]<<8|v[D+35|0]<<16|v[D+36|0]<<24,l[t+12>>2]=n+1,D=37+(_+D|0)|0,_=A;break a}if(1==(0|f[l[c>>2]](x)))break e}if((n=l[t+12>>2])+1>>>0>i>>>0)break e;if(_=v[0|R]|v[R+1|0]<<8|v[R+2|0]<<16|v[R+3|0]<<24,(n=(n=0|f[l[c>>2]](n))+(D=l[t+12>>2])|0)>>>0>i>>>0)break e;if(l[t+12>>2]=n,!Yf((M=R+7|0)-(3&M)|0,0|f[l[c+20>>2]](D,n)))break e;D=_+(R+4|0)|0,_=A;break a}if(x+1>>>0>i>>>0)break e;if(n=v[0|x],!(v[(n>>>3)+R|0]>>>(7&n)&1))break e;l[t+12>>2]=(0|f[l[c>>2]](x))+l[t+12>>2],D=D+33|0;break a}if(n=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,x+(S=w(n,v[D+5|0]|v[D+6|0]<<8|v[D+7|0]<<16|v[D+8|0]<<24))>>>0>i>>>0)break e;if(_=D+9|0,(0|S)<1){D=_,n=x-n|0;break u}for(D=_+S|0;;){if(v[0|_]!=v[0|x])break e;if(x=x+1|0,l[t+12>>2]=x,_=_+1|0,!((0|(S=S+-1|0))>0))break}n=x-n|0;break u}if(S=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24,(n=w(S,3))+x>>>0>i>>>0)break e;if(_=D+5|0,(0|S)<1)D=_;else for(D=n+_|0;;){if(v[0|_]!=v[0|x])break e;if(l[t+12>>2]=x+1,v[_+1|0]!=v[x+1|0])break e;if(l[t+12>>2]=x+2,v[_+2|0]!=v[x+2|0])break e;if(x=x+3|0,l[t+12>>2]=x,_=_+3|0,!((0|(S=S+-1|0))>0))break}n=x+-3|0;break u}if((n=(S=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24)<<1)+x>>>0>i>>>0)break e;if(_=D+5|0,(0|S)<1)D=_;else for(D=n+_|0;;){if(v[0|_]!=v[0|x])break e;if(l[t+12>>2]=x+1,v[_+1|0]!=v[x+1|0])break e;if(x=x+2|0,l[t+12>>2]=x,_=_+2|0,!((0|(S=S+-1|0))>0))break}n=x+-2|0;break u}if(_=x+6|0,v[0|R]!=v[0|x]|_>>>0>i>>>0)break e;if(l[t+12>>2]=x+1,v[D+2|0]!=v[x+1|0])break e;if(l[t+12>>2]=x+2,v[D+3|0]!=v[x+2|0])break e;if(l[t+12>>2]=x+3,v[D+4|0]!=v[x+3|0])break e;if(n=x+4|0,l[t+12>>2]=n,v[D+5|0]!=v[x+4|0])break e;if(l[t+12>>2]=x+5,v[D+6|0]!=v[x+5|0])break e;l[t+12>>2]=_,D=D+7|0;break u}if(_=x+4|0,v[0|R]!=v[0|x]|_>>>0>i>>>0)break e;if(l[t+12>>2]=x+1,v[D+2|0]!=v[x+1|0])break e;if(n=x+2|0,l[t+12>>2]=n,v[D+3|0]!=v[x+2|0])break e;if(l[t+12>>2]=x+3,v[D+4|0]!=v[x+3|0])break e;l[t+12>>2]=_,D=D+5|0;break u}if(n=x+2|0,v[0|R]!=v[0|x]|n>>>0>i>>>0)break e;if(l[t+12>>2]=x+1,v[D+2|0]!=v[x+1|0])break e;l[t+12>>2]=n,D=D+3|0;break a}if(_=D+5|0,(0|(M=v[D+1|0]|v[D+2|0]<<8|v[D+3|0]<<16|v[D+4|0]<<24))<=0){D=_;break u}for(M=5+(D+M|0)|0,D=_;;){if(n=x,x+1>>>0>i>>>0)break e;if(_=0|f[l[c+32>>2]](u,t+12|0,a,t+48|0),(x=l[t+12>>2])>>>0>i>>>0)break e;if((0|_)>=1){if(pn(D,t+48|0,_))break e;D=_+D|0}if(!(D>>>0<M>>>0))break}break u}if(x+(_=v[0|R]|v[R+1|0]<<8|v[R+2|0]<<16|v[R+3|0]<<24)>>>0>i>>>0)break e;for(D=D+5|0;;){if((0|_)>=1){if(M=v[0|D],n=x+1|0,l[t+12>>2]=n,D=D+1|0,_=_+-1|0,S=v[0|x],x=n,(0|S)==(0|M))continue;break e}break}n=x+-1|0;break u}if(_=x+5|0,v[0|R]!=v[0|x]|_>>>0>i>>>0)break e;if(l[t+12>>2]=x+1,v[D+2|0]!=v[x+1|0])break e;if(l[t+12>>2]=x+2,v[D+3|0]!=v[x+2|0])break e;if(l[t+12>>2]=x+3,v[D+4|0]!=v[x+3|0])break e;if(n=x+4|0,l[t+12>>2]=n,v[D+5|0]!=v[x+4|0])break e;l[t+12>>2]=_,D=D+6|0;break u}if(_=x+4|0,v[0|R]!=v[0|x]|_>>>0>i>>>0)break e;if(l[t+12>>2]=x+1,v[D+2|0]!=v[x+1|0])break e;if(l[t+12>>2]=x+2,v[D+3|0]!=v[x+2|0])break e;if(n=x+3|0,l[t+12>>2]=n,v[D+4|0]!=v[x+3|0])break e;l[t+12>>2]=_,D=D+5|0;break u}if(_=x+3|0,v[0|R]!=v[0|x]|_>>>0>i>>>0)break e;if(l[t+12>>2]=x+1,v[D+2|0]!=v[x+1|0])break e;if(n=x+2|0,l[t+12>>2]=n,v[D+3|0]!=v[x+2|0])break e;l[t+12>>2]=_,D=D+4|0;break u}if(_=x+2|0,v[0|R]!=v[0|x]|_>>>0>i>>>0)break e;if(n=x+1|0,l[t+12>>2]=n,v[D+2|0]!=v[x+1|0])break e;l[t+12>>2]=_,D=D+3|0}_=A}x=l[t+12>>2];continue}if(x+1>>>0>i>>>0)break e;if(n=0|f[l[c+32>>2]](u,t+12|0,a,t+48|0),h[t+12>>2]>i>>>0)break e;if((0|n)<1){D=R;break a}if(pn(R,t+48|0,n))break e;D=n+R|0;break a}if(n=v[0|R],_=x+1|0,l[t+12>>2]=_,(0|n)!=v[0|x]|_>>>0>i>>>0)break e;D=D+2|0,_=A;break a}s:if((0|(n=x-b|0))<=(0|B))S=B;else{if(p){if(S=B,(0|n)<=l[s+24>>2])break s;l[s+28>>2]=b,l[s+24>>2]=n}if(B=l[s+12>>2])if(8&v[s+9|0]){if(l[B>>2]=d,l[B+4>>2]=x-r,_=1,(0|o)<1){S=n;break s}for(;;){M=B+(_<<3)|0;t:{c:{o:{if(-1!=(0|(R=l[(S=(_<<2)+z|0)>>2]))){D=l[e+36>>2];u:{if(_>>>0<=31){if(D>>>_&1)break u;break o}if(!(1&D))break o}D=8+(w(l[(_<<2)+j>>2],20)+T|0)|0;break c}l[(D=B+(_<<3)|0)>>2]=-1,l[D+4>>2]=-1;break t}D=(_<<2)+j|0}l[M>>2]=l[D>>2]-r,D=l[e+40>>2];c:{o:{if(_>>>0<=31){if(D>>>_&1)break o;break c}if(!(1&D))break c}S=8+(w(R,20)+T|0)|0}l[4+(B+(_<<3)|0)>>2]=l[S>>2]-r}if(D=(0|_)==(0|o),_=_+1|0,D)break}S=n}else{if(M=l[B+8>>2],l[M>>2]=d,R=l[B+12>>2],l[R>>2]=x-r,_=1,(0|o)>=1)for(;;){S=-1,U=M+(_<<2)|0;t:{c:{o:{if(-1!=(0|(C=l[(O=(D=_<<2)+z|0)>>2]))){D=l[e+36>>2];u:{if(_>>>0<=31){if(D>>>_&1)break u;break o}if(!(1&D))break o}D=8+(w(l[(_<<2)+j>>2],20)+T|0)|0;break c}l[D+R>>2]=-1,D=M;break t}D=(_<<2)+j|0}l[U>>2]=l[D>>2]-r,D=l[e+40>>2];c:{o:{if(_>>>0<=31){if(D>>>_&1)break o;break c}if(!(1&D))break c}O=8+(w(C,20)+T|0)|0}S=l[O>>2]-r|0,D=R}if(l[D+(_<<2)>>2]=S,D=(0|_)!=(0|o),_=_+1|0,!D)break}if(l[e+32>>2]){if(_=l[B+16>>2]){if((0|(O=l[_+16>>2]))>=1)for(S=0;(D=l[l[_+20>>2]+(S<<2)>>2])&&(nf(D),O=l[_+16>>2]),(0|(S=S+1|0))<(0|O););if((0|(D=l[_+12>>2]))>=1)for(S=0;l[l[_+20>>2]+(S<<2)>>2]=0,(0|D)!=(0|(S=S+1|0)););l[_+8>>2]=-1,l[_+16>>2]=0,l[_>>2]=-1,l[_+4>>2]=-1,O=l[B+16>>2],x=l[t+12>>2]}else{if(!(O=Cb(24))){l[B+16>>2]=0,_=-5;break k}l[O+16>>2]=0,l[O+20>>2]=0,l[O+8>>2]=-1,l[O+12>>2]=0,l[O>>2]=-1,l[O+4>>2]=-1,l[B+16>>2]=O,_=O}if(l[_+4>>2]=d,l[_>>2]=0,l[_+8>>2]=x-r,l[t+8>>2]=T,S=n,(0|(B=ui(O,t+8|0,A,r,e)))<0)break n}else S=n}else S=n}if(E){if(!(!y|(0|(n=l[t+12>>2]))!=(0|b))){B=-1;break e}if(!(!p|n>>>0>=i>>>0)){B=S;break e}}B=S}if(e=I-T|0,l[s+4>>2]=(0|e)/20,N){r=Cb(e=e+(l[s+16>>2]<<2)|0),l[s>>2]=r,qb(r,F,e),_=B;break k}l[s>>2]=F,_=B;break k}if(x>>>0>=i>>>0)break f;for(S=x,M=T;;){if((I-_|0)>19)T=M;else{P=(A=l[s+16>>2]<<2)+w(T=(0|(D=I-M|0))/20|0,40)|0,O=T<<1;b:{n:{s:{t:{if(N){if(D=D+A|0,!(P=Cb(P)))break t;F=qb(P,F,D);break b}if(!(!(A=l[82381])|O>>>0<=A>>>0)&&(O=A,(0|A)==(0|T))){_=-15;break n}if(!(D=Ub(F,P)))break s;A=l[s+16>>2]<<2,S=l[t+12>>2],F=D;break b}l[s+4>>2]=T,e=Cb(D),l[s>>2]=e,qb(e,F,D),l[s+4>>2]=T,e=Cb(D),l[s>>2]=e,qb(e,F,D),_=-5;break k}l[s>>2]=F,l[s+4>>2]=T,_=-5}l[s>>2]=F,l[s+4>>2]=T;break k}I=(T=F+A|0)+w(O,20)|0,_=w((_-M|0)/20|0,20)+T|0,z=((A=(l[e+16>>2]<<2)+F|0)+(o<<2)|0)-4|0,j=A+-4|0,N=0,P=F}if(l[_+4>>2]=R,l[_>>2]=1,l[_+12>>2]=n,l[_+8>>2]=S,_=_+20|0,(A=0|f[l[c>>2]](S))+(n=l[t+12>>2])>>>0>i>>>0)break r;if(f[l[c+16>>2]](n,a))break r;if(S=A+(n=l[t+12>>2])|0,l[t+12>>2]=S,M=T,!(S>>>0<i>>>0))break}break i}return ne=t+80|0,_}_=A}D=R}n=x,x=l[t+12>>2];continue}A=_}e:if(m>>>0<=1){if(_=A,m-1)for(;;)if(v[0|(_=_+-20|0)])break e;if(255&(S=l[(_=A+-20|0)>>2]))break e;for(;256==(0|S)&&(l[(l[(n=A+-16|0)>>2]<<2)+j>>2]=l[A+-8>>2],l[(l[n>>2]<<2)+z>>2]=l[A+-4>>2]),A=_,!(255&(S=l[(_=_+-20|0)>>2])););}else if(!(255&(S=l[(_=A+-20|0)>>2])))for(;;){n=A,A=_;r:if(33280==(0|S))l[(l[(_=n+-16|0)>>2]<<2)+j>>2]=l[n+-8>>2],l[(l[_>>2]<<2)+z>>2]=l[n+-4>>2];else{if(768!=(0|S)){if(256!=(0|S))break r;l[(l[(_=n+-16|0)>>2]<<2)+j>>2]=l[n+-8>>2],l[(l[_>>2]<<2)+z>>2]=l[n+-4>>2];break r}n=w(l[n+-16>>2],20)+T|0,l[n+4>>2]=l[n+4>>2]+-1}if(255&(S=l[(_=A+-20|0)>>2]))break}D=l[_+4>>2],l[t+12>>2]=l[_+8>>2],n=l[_+12>>2],x=l[t+12>>2]}}function vb(e,r,a){var i,f=0,k=0,b=0;ne=i=ne-16|0,f=l[e>>2]+-5|0;e:if(!(f>>>0>5)){k=1;r:switch(f-1|0){case 2:for(;;){if((0|(f=vb(l[e+4>>2],r,a)))<0){k=f;break e}if(2==(0|f)){k=f;break e}if(a){if(k=$k(l[e+4>>2],i+12|0,r))break e;a=l[i+12>>2]?0:a}else a=0;if(b|=f,!(e=l[e+8>>2]))break}k=b;break e;case 3:for(;;){if((0|(f=vb(l[e+4>>2],r,a)))<0){k=f;break e}if(2==(0|f))break;if(k&=f,!(e=l[e+8>>2]))break e}k=f;break e;default:if(1!=(0|(k=vb(l[e+8>>2],r,a))))break e;k=0!=l[e+12>>2];break e;case 1:if((f=Bi(l[e+4>>2]+-1024|0,22))>>>0>7){k=0;break e}if(k=0,!(1<<f&139))break e;k=vb(l[e+8>>2],r,a);break e;case 4:k=vb(l[e+20>>2],r,a);break e;case 0:}k=0,16&(f=l[e+4>>2])||(8&f?k=a?2:1:(l[e+4>>2]=16|f,k=vb(l[e+20>>2],r,a),l[e+4>>2]=-17&l[e+4>>2]))}return ne=i+16|0,k}function db(e,r){var a,i=0,f=0;ne=a=ne+-64|0,i=l[r+12>>2],l[a+40>>2]=l[r+8>>2],l[a+44>>2]=i,i=l[r+4>>2],l[a+32>>2]=l[r>>2],l[a+36>>2]=i,i=0,(0|(f=0|fe(0|Gb(a+32|0),4)))<1||(i=Bb(f)),f=l[r+12>>2],l[a+24>>2]=l[r+8>>2],l[a+28>>2]=f,f=l[r+4>>2],l[a+16>>2]=l[r>>2],l[a+20>>2]=f,(f=hr(Gb(a+16|0),i))?(i=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=i,i=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=i,zb(a),jb(a+48|0,f),i=l[a+60>>2],l[r+8>>2]=l[a+56>>2],l[r+12>>2]=i,i=l[a+52>>2],l[r>>2]=l[a+48>>2],l[r+4>>2]=i,Lb(f)):Lb(i),i=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=i,i=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=i,ne=a- -64|0}function hb(e){var r,a=0;ne=r=ne-16|0,a=l[e+40>>2]+-1|0,l[e+40>>2]=a,a||(a=l[e+12>>2],l[r+8>>2]=l[e+8>>2],l[r+12>>2]=a,a=l[e+4>>2],l[r>>2]=l[e>>2],l[r+4>>2]=a,zb(r),Lb(l[e+24>>2]),Lb(l[e+16>>2]),Lb(e)),ne=r+16|0}function mb(e,r,a,i,f,b){var n,s,t,c,o,u,d,h,m=0,p=0,g=0,y=0,D=0,S=0,F=0,A=0,x=0,T=0,R=0,O=0,I=0,z=0,N=0,j=0,U=0;ne=n=ne-1824|0,j=-1,(s=32&a)&&(S=l[r+12>>2],l[(g=n+1528|0)>>2]=l[r+8>>2],l[g+4>>2]=S,g=l[r+4>>2],l[n+1520>>2]=l[r>>2],l[n+1524>>2]=g,j=(p=(15&v[0|(g=n+1520|0)])-5>>>0<=2?l[l[g+8>>2]>>2]:1)+-1|0),4&a&&(S=l[r+12>>2],l[(g=n+1512|0)>>2]=l[r+8>>2],l[g+4>>2]=S,g=l[r+4>>2],l[n+1504>>2]=l[r>>2],l[n+1508>>2]=g,1!=(15&v[n+1504|0])&&(g=l[r+12>>2],l[(m=n+1496|0)>>2]=l[r+8>>2],l[m+4>>2]=g,m=l[r+4>>2],l[n+1488>>2]=l[r>>2],l[n+1492>>2]=m,m=1,2!=(15&v[n+1488|0])&&(g=l[r+12>>2],l[(m=n+1480|0)>>2]=l[r+8>>2],l[m+4>>2]=g,m=l[r+4>>2],l[n+1472>>2]=l[r>>2],l[n+1476>>2]=m,m=2,3!=(15&v[n+1472|0])&&(g=l[r+12>>2],l[(m=n+1464|0)>>2]=l[r+8>>2],l[m+4>>2]=g,m=l[r+4>>2],l[n+1456>>2]=l[r>>2],l[n+1460>>2]=m,m=3,4!=(15&v[n+1456|0])&&(g=l[r+12>>2],l[(m=n+1448|0)>>2]=l[r+8>>2],l[m+4>>2]=g,m=l[r+4>>2],l[n+1440>>2]=l[r>>2],l[n+1444>>2]=m,m=4,5!=(15&v[n+1440|0])&&(g=l[r+12>>2],l[(m=n+1432|0)>>2]=l[r+8>>2],l[m+4>>2]=g,m=l[r+4>>2],l[n+1424>>2]=l[r>>2],l[n+1428>>2]=m,m=5,6!=(15&v[n+1424|0])&&(g=l[r+12>>2],l[(m=n+1416|0)>>2]=l[r+8>>2],l[m+4>>2]=g,m=l[r+4>>2],l[n+1408>>2]=l[r>>2],l[n+1412>>2]=m,m=6,7!=(15&v[n+1408|0])))))))||(m=on(F=l[l[78159]+(m<<2)>>2]),b?(S=l[b+12>>2],l[(g=n+1400|0)>>2]=l[b+8>>2],l[g+4>>2]=S,g=l[b+4>>2],l[n+1392>>2]=l[b>>2],l[n+1396>>2]=g,Qb(n+1728|0,n+1392|0,F,m),g=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=g,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):cn(F,1,m,f)));e:if((0|i)>=257){if(b){e=l[b+12>>2],l[n+40>>2]=l[b+8>>2],l[n+44>>2]=e,e=l[b+4>>2],l[n+32>>2]=l[b>>2],l[n+36>>2]=e,Qb(n+1728|0,n+32|0,16969,19),a=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(16969,1,19,f)}else{g=l[r+12>>2],l[(m=n+1384|0)>>2]=l[r+8>>2],l[m+4>>2]=g,m=l[r+4>>2],l[n+1376>>2]=l[r>>2],l[n+1380>>2]=m;r:{a:{i:{f:{k:{b:{n:{s:{if((m=(15&v[n+1376|0])-1|0)>>>0<=6)switch(m-1|0){case 5:break a;case 4:break i;case 3:break f;case 2:break k;case 1:break b;case 0:break n;default:break s}if(16&a){if(e=l[r+12>>2],l[n+168>>2]=l[r+8>>2],l[n+172>>2]=e,e=l[r+4>>2],l[n+160>>2]=l[r>>2],l[n+164>>2]=e,Nb(n+1712|0,n+160|0),i=l[4+(e=n+1720|0)>>2],l[n+152>>2]=l[e>>2],l[n+156>>2]=i,e=l[n+1716>>2],l[n+144>>2]=l[n+1712>>2],l[n+148>>2]=e,Ck(n+1800|0,n+144|0),i=l[4+(e=n+1808|0)>>2],l[n+136>>2]=l[e>>2],l[n+140>>2]=i,e=l[n+1804>>2],l[n+128>>2]=l[n+1800>>2],l[n+132>>2]=e,5==(15&v[n+128|0])){if(b){e=l[b+12>>2],l[n+104>>2]=l[b+8>>2],l[n+108>>2]=e,e=l[b+4>>2],l[n+96>>2]=l[b>>2],l[n+100>>2]=e,Qb(n+1728|0,n+96|0,17251,9),m=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=m,i=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=i,m=l[4+(i=n+1808|0)>>2],l[n+88>>2]=l[i>>2],l[n+92>>2]=m,i=l[n+1804>>2],l[n+80>>2]=l[n+1800>>2],l[n+84>>2]=i,mf(n+80|0,2|a,f,b),a=l[b+12>>2],l[n+72>>2]=l[b+8>>2],l[n+76>>2]=a,a=l[b+4>>2],l[n+64>>2]=l[b>>2],l[n+68>>2]=a,Qb(n+1728|0,n- -64|0,17578,1),a=l[e+4>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(17251,1,9,f),i=l[4+(e=n+1808|0)>>2],l[n+56>>2]=l[e>>2],l[n+60>>2]=i,e=l[n+1804>>2],l[n+48>>2]=l[n+1800>>2],l[n+52>>2]=e,mf(n+48|0,2|a,f,b),bn(62,f);break e}if(b){e=l[b+12>>2],l[n+120>>2]=l[b+8>>2],l[n+124>>2]=e,e=l[b+4>>2],l[n+112>>2]=l[b>>2],l[n+116>>2]=e,Qb(n+1728|0,n+112|0,17889,9),a=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(17889,1,9,f);break e}P(18290,18709,219,44644),M()}if(b){e=l[b+12>>2],l[n+920>>2]=l[b+8>>2],l[n+924>>2]=e,e=l[b+4>>2],l[n+912>>2]=l[b>>2],l[n+916>>2]=e,Qb(n+1728|0,n+912|0,19023,4),a=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(19023,1,4,f);break e}if(b){e=l[b+12>>2],l[n+936>>2]=l[b+8>>2],l[n+940>>2]=e,e=l[b+4>>2],l[n+928>>2]=l[b>>2],l[n+932>>2]=e,Qb(n+1728|0,n+928|0,19399,5),a=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(19399,1,5,f);break e}if(b){e=l[b+12>>2],l[n+952>>2]=l[b+8>>2],l[n+956>>2]=e,e=l[b+4>>2],l[n+944>>2]=l[b>>2],l[n+948>>2]=e,Qb(n+1728|0,n+944|0,19705,4),a=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(19705,1,4,f);break e}if(a=l[r+12>>2],l[n+1e3>>2]=l[r+8>>2],l[n+1004>>2]=a,a=l[r+4>>2],l[n+992>>2]=l[r>>2],l[n+996>>2]=a,(N=Wb(n+992|0))!=N){if(b){e=l[b+12>>2],l[n+968>>2]=l[b+8>>2],l[n+972>>2]=e,e=l[b+4>>2],l[n+960>>2]=l[b>>2],l[n+964>>2]=e,Qb(n+1728|0,n+960|0,19023,4),a=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(19023,1,4,f);break e}if(a=on(e=we(e,n+1728|0,_(E(N,1.7976931348623157e308),-1.7976931348623157e308))),b){i=l[b+12>>2],l[n+984>>2]=l[b+8>>2],l[n+988>>2]=i,i=l[b+4>>2],l[n+976>>2]=l[b>>2],l[n+980>>2]=i,Qb(n+1800|0,n+976|0,e,a),a=l[4+(e=n+1808|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1804>>2],l[b>>2]=l[n+1800>>2],l[b+4>>2]=e;break e}cn(e,1,a,f);break e}if(i=l[r+12>>2],l[n+1016>>2]=l[r+8>>2],l[n+1020>>2]=i,i=l[r+4>>2],l[n+1008>>2]=l[r>>2],l[n+1012>>2]=i,mf(n+1008|0,2&a,f,b),s)break r;break e}if(D=l[r+12>>2],l[(m=n+1368|0)>>2]=l[r+8>>2],l[m+4>>2]=D,m=l[r+4>>2],l[n+1360>>2]=l[r>>2],l[n+1364>>2]=m,Nb(n+1696|0,n+1360|0),g=l[4+(D=n+1704|0)>>2],l[(m=n+1352|0)>>2]=l[D>>2],l[m+4>>2]=g,m=l[n+1700>>2],l[n+1344>>2]=l[n+1696>>2],l[n+1348>>2]=m,!Zb(n+1344|0)){if(b){a=l[b+12>>2],l[(e=n+1032|0)>>2]=l[b+8>>2],l[e+4>>2]=a,e=l[b+4>>2],l[n+1024>>2]=l[b>>2],l[n+1028>>2]=e,Qb(n+1728|0,n+1024|0,19985,2),a=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(19985,1,2,f);break e}b?(D=l[b+12>>2],l[(m=n+1336|0)>>2]=l[b+8>>2],l[m+4>>2]=D,m=l[b+4>>2],l[n+1328>>2]=l[b>>2],l[n+1332>>2]=m,Qb(n+1728|0,n+1328|0,20296,1),D=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=D,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):bn(91,f);i:if(R=1&a){if(k[n+1800|0]=10,b?(D=l[b+12>>2],l[(m=n+1320|0)>>2]=l[b+8>>2],l[m+4>>2]=D,m=l[b+4>>2],l[n+1312>>2]=l[b>>2],l[n+1316>>2]=m,Qb(n+1728|0,n+1312|0,n+1800|0,1),D=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=D,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):bn(10,f),D=i+1|0,O=64&a){if(!D){D=0;break i}for(m=D;;){if(k[n+1800|0]=9,m=m+-1|0,b){if(S=l[b+12>>2],l[(g=n+1304|0)>>2]=l[b+8>>2],l[g+4>>2]=S,g=l[b+4>>2],l[n+1296>>2]=l[b>>2],l[n+1300>>2]=g,Qb(n+1728|0,n+1296|0,n+1800|0,1),S=l[4+(g=n+1736|0)>>2],l[b+8>>2]=l[g>>2],l[b+12>>2]=S,g=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=g,m)continue;break i}if(bn(9,f),!m)break}}else if(O=0,m=w(a>>>8&7,D))for(;k[n+1800|0]=32,m=m+-1|0,b?(S=l[b+12>>2],l[(g=n+1288|0)>>2]=l[b+8>>2],l[g+4>>2]=S,g=l[b+4>>2],l[n+1280>>2]=l[b>>2],l[n+1284>>2]=g,Qb(n+1728|0,n+1280|0,n+1800|0,1),S=l[4+(g=n+1736|0)>>2],l[b+8>>2]=l[g>>2],l[b+12>>2]=S,g=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=g):bn(32,f),m;);}else O=64&a,D=i+1|0;if(g=l[r+12>>2],l[(m=n+1272|0)>>2]=l[r+8>>2],l[m+4>>2]=g,m=l[r+4>>2],l[n+1264>>2]=l[r>>2],l[n+1268>>2]=m,Nb(n+1680|0,n+1264|0),S=l[4+(g=n+1688|0)>>2],l[(m=n+1256|0)>>2]=l[g>>2],l[m+4>>2]=S,m=l[n+1684>>2],l[n+1248>>2]=l[n+1680>>2],l[n+1252>>2]=m,I=a>>>8&7,(0|(p=Zb(n+1248|0)))>=1)for(g=w(D,I);;){S=l[r+12>>2],l[(m=n+1240|0)>>2]=l[r+8>>2],l[m+4>>2]=S,m=l[r+4>>2],l[n+1232>>2]=l[r>>2],l[n+1236>>2]=m,Nb(n+1664|0,n+1232|0),T=l[4+(S=n+1672|0)>>2],l[(m=n+1224|0)>>2]=l[S>>2],l[m+4>>2]=T,m=l[n+1668>>2],l[n+1216>>2]=l[n+1664>>2],l[n+1220>>2]=m,Kb(n+1728|0,n+1216|0,x),z=l[4+(y=S=n+1736|0)>>2],l[(m=T=n+1808|0)>>2]=l[y>>2],l[m+4>>2]=z,m=l[n+1732>>2],l[n+1800>>2]=l[n+1728>>2],l[n+1804>>2]=m;i:if(x)if(R){if(b?(y=l[b+12>>2],l[(m=n+1192|0)>>2]=l[b+8>>2],l[m+4>>2]=y,m=l[b+4>>2],l[n+1184>>2]=l[b>>2],l[n+1188>>2]=m,Qb(n+1728|0,n+1184|0,20564,2),m=l[S+4>>2],l[b+8>>2]=l[S>>2],l[b+12>>2]=m,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):cn(20564,1,2,f),O){if(!(m=D))break i;for(;;){if(k[n+1632|0]=9,m=m+-1|0,b){if(z=l[b+12>>2],l[(y=n+1176|0)>>2]=l[b+8>>2],l[y+4>>2]=z,y=l[b+4>>2],l[n+1168>>2]=l[b>>2],l[n+1172>>2]=y,Qb(n+1728|0,n+1168|0,n+1632|0,1),y=l[S+4>>2],l[b+8>>2]=l[S>>2],l[b+12>>2]=y,y=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=y,m)continue;break i}if(bn(9,f),!m)break}break i}if(!(m=g))break i;for(;;){if(k[n+1632|0]=32,m=m+-1|0,b){if(z=l[b+12>>2],l[(y=n+1160|0)>>2]=l[b+8>>2],l[y+4>>2]=z,y=l[b+4>>2],l[n+1152>>2]=l[b>>2],l[n+1156>>2]=y,Qb(n+1728|0,n+1152|0,n+1632|0,1),y=l[S+4>>2],l[b+8>>2]=l[S>>2],l[b+12>>2]=y,y=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=y,m)continue;break i}if(bn(32,f),!m)break}}else b?(y=l[b+12>>2],l[(m=n+1208|0)>>2]=l[b+8>>2],l[m+4>>2]=y,m=l[b+4>>2],l[n+1200>>2]=l[b>>2],l[n+1204>>2]=m,Qb(n+1728|0,n+1200|0,20718,1),m=l[S+4>>2],l[b+8>>2]=l[S>>2],l[b+12>>2]=m,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):bn(44,f);if(y=l[T+4>>2],l[(m=n+1144|0)>>2]=l[T>>2],l[m+4>>2]=y,m=l[n+1804>>2],l[n+1136>>2]=l[n+1800>>2],l[n+1140>>2]=m,mb(e,n+1136|0,a,D,f,b),F&&(m=on(F),b?(y=l[b+12>>2],l[(T=n+1128|0)>>2]=l[b+8>>2],l[T+4>>2]=y,T=l[b+4>>2],l[n+1120>>2]=l[b>>2],l[n+1124>>2]=T,Qb(n+1728|0,n+1120|0,F,m),m=l[S+4>>2],l[b+8>>2]=l[S>>2],l[b+12>>2]=m,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):cn(F,1,m,f)),(0|p)==(0|(x=x+1|0)))break}i:if(R)if(k[n+1800|0]=10,b?(m=l[b+12>>2],l[(a=n+1112|0)>>2]=l[b+8>>2],l[a+4>>2]=m,a=l[b+4>>2],l[n+1104>>2]=l[b>>2],l[n+1108>>2]=a,Qb(n+1728|0,n+1104|0,n+1800|0,1),m=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=m,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a):bn(10,f),O){if(!i)break i;for(;;){if(k[n+1800|0]=9,i=i+-1|0,b){if(m=l[b+12>>2],l[(a=n+1096|0)>>2]=l[b+8>>2],l[a+4>>2]=m,a=l[b+4>>2],l[n+1088>>2]=l[b>>2],l[n+1092>>2]=a,Qb(n+1728|0,n+1088|0,n+1800|0,1),m=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=m,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a,i)continue;break i}if(bn(9,f),!i)break}}else if(m=w(i,I))for(;k[n+1800|0]=32,m=m+-1|0,b?(i=l[b+12>>2],l[(a=n+1080|0)>>2]=l[b+8>>2],l[a+4>>2]=i,a=l[b+4>>2],l[n+1072>>2]=l[b>>2],l[n+1076>>2]=a,Qb(n+1728|0,n+1072|0,n+1800|0,1),i=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=i,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a):bn(32,f),m;);i:{f:{if(F){if(a=on(F),!b)break f;m=l[b+12>>2],l[(i=n+1064|0)>>2]=l[b+8>>2],l[i+4>>2]=m,i=l[b+4>>2],l[n+1056>>2]=l[b>>2],l[n+1060>>2]=i,Qb(n+1728|0,n+1056|0,F,a),i=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=i,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a,k[n+1800|0]=93}else if(k[n+1800|0]=93,!b)break i;if(i=l[b+12>>2],l[(a=n+1048|0)>>2]=l[b+8>>2],l[a+4>>2]=i,a=l[b+4>>2],l[n+1040>>2]=l[b>>2],l[n+1044>>2]=a,Qb(n+1728|0,n+1040|0,n+1800|0,1),i=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=i,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a,s)break r;break e}cn(F,1,a,f),k[n+1800|0]=93}if(bn(93,f),s)break r;break e}if(m=l[r+12>>2],l[n+904>>2]=l[r+8>>2],l[n+908>>2]=m,m=l[r+4>>2],l[n+896>>2]=l[r>>2],l[n+900>>2]=m,Nb(n+1648|0,n+896|0),x=l[4+(m=n+1656|0)>>2],l[n+888>>2]=l[m>>2],l[n+892>>2]=x,m=l[n+1652>>2],l[n+880>>2]=l[n+1648>>2],l[n+884>>2]=m,!Sf(n+880|0)){if(b){e=l[b+12>>2],l[n+184>>2]=l[b+8>>2],l[n+188>>2]=e,e=l[b+4>>2],l[n+176>>2]=l[b>>2],l[n+180>>2]=e,Qb(n+1728|0,n+176|0,21040,2),a=l[4+(e=n+1736|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=a,e=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=e;break e}cn(21040,1,2,f);break e}k[n+1800|0]=123,b?(m=l[b+12>>2],l[n+872>>2]=l[b+8>>2],l[n+876>>2]=m,m=l[b+4>>2],l[n+864>>2]=l[b>>2],l[n+868>>2]=m,Qb(n+1728|0,n+864|0,n+1800|0,1),x=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=x,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):bn(123,f);a:if(S=1&a){if(k[n+1800|0]=10,b?(m=l[b+12>>2],l[n+856>>2]=l[b+8>>2],l[n+860>>2]=m,m=l[b+4>>2],l[n+848>>2]=l[b>>2],l[n+852>>2]=m,Qb(n+1728|0,n+848|0,n+1800|0,1),x=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=x,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):bn(10,f),x=i+1|0,O=64&a){if(!x){x=0;break a}for(m=x;;){if(k[n+1800|0]=9,m=m+-1|0,b){if(g=l[b+12>>2],l[n+840>>2]=l[b+8>>2],l[n+844>>2]=g,g=l[b+4>>2],l[n+832>>2]=l[b>>2],l[n+836>>2]=g,Qb(n+1728|0,n+832|0,n+1800|0,1),R=l[4+(g=n+1736|0)>>2],l[b+8>>2]=l[g>>2],l[b+12>>2]=R,g=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=g,m)continue;break a}if(bn(9,f),!m)break}}else if(O=0,m=w(a>>>8&7,x))for(;k[n+1800|0]=32,m=m+-1|0,b?(g=l[b+12>>2],l[n+824>>2]=l[b+8>>2],l[n+828>>2]=g,g=l[b+4>>2],l[n+816>>2]=l[b>>2],l[n+820>>2]=g,Qb(n+1728|0,n+816|0,n+1800|0,1),R=l[4+(g=n+1736|0)>>2],l[b+8>>2]=l[g>>2],l[b+12>>2]=R,g=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=g):bn(32,f),m;);}else O=64&a,x=i+1|0;for(R=S?2:1,I=S?21942:22168,T=2&a,z=8&a,g=w(U=a>>>8&7,x),y=l[10947],l[8+(m=n+1800|0)>>2]=l[10946],l[m+12>>2]=y,p=l[10945],l[m>>2]=l[10944],l[m+4>>2]=p,m=1;;){a:{if(z){if(1&m?(D=l[r+12>>2],l[n+808>>2]=l[r+8>>2],l[n+812>>2]=D,D=l[r+4>>2],l[n+800>>2]=l[r>>2],l[n+804>>2]=D,Nb(n+1600|0,n+800|0),p=l[4+(D=n+1608|0)>>2],l[n+792>>2]=l[D>>2],l[n+796>>2]=p,D=l[n+1604>>2],l[n+784>>2]=l[n+1600>>2],l[n+788>>2]=D,Ef(n+1728|0,n+784|0),y=l[4+(p=n+1736|0)>>2],l[(D=n+1808|0)>>2]=l[p>>2],l[D+4>>2]=y,D=l[n+1732>>2],l[n+1800>>2]=l[n+1728>>2],l[n+1804>>2]=D,D=0):D=D+1|0,A=l[4+(p=n+1808|0)>>2],l[n+776>>2]=l[p>>2],l[n+780>>2]=A,y=l[n+1804>>2],l[n+768>>2]=l[n+1800>>2],l[n+772>>2]=y,Nb(n+1584|0,n+768|0),A=l[4+(y=n+1592|0)>>2],l[n+760>>2]=l[y>>2],l[n+764>>2]=A,y=l[n+1588>>2],l[n+752>>2]=l[n+1584>>2],l[n+756>>2]=y,(0|D)>=(0|Zb(n+752|0))){m=l[4+(a=n+1808|0)>>2],l[n+744>>2]=l[a>>2],l[n+748>>2]=m,a=l[n+1804>>2],l[n+736>>2]=l[n+1800>>2],l[n+740>>2]=a,zb(n+736|0);break a}y=l[p+4>>2],l[n+728>>2]=l[p>>2],l[n+732>>2]=y,p=l[n+1804>>2],l[n+720>>2]=l[n+1800>>2],l[n+724>>2]=p,Nb(n+1568|0,n+720|0),y=l[4+(p=n+1576|0)>>2],l[n+712>>2]=l[p>>2],l[n+716>>2]=y,p=l[n+1572>>2],l[n+704>>2]=l[n+1568>>2],l[n+708>>2]=p,Kb(n+1728|0,n+704|0,D),A=l[4+(y=n+1736|0)>>2],l[(p=n+1640|0)>>2]=l[y>>2],l[p+4>>2]=A,A=l[n+1732>>2],l[n+1632>>2]=l[n+1728>>2],l[n+1636>>2]=A,A=l[r+12>>2],l[n+696>>2]=l[r+8>>2],l[n+700>>2]=A,A=l[r+4>>2],l[n+688>>2]=l[r>>2],l[n+692>>2]=A,Nb(n+1552|0,n+688|0),A=l[p+4>>2],l[n+680>>2]=l[p>>2],l[n+684>>2]=A,p=l[n+1636>>2],l[n+672>>2]=l[n+1632>>2],l[n+676>>2]=p,Nb(n+1536|0,n+672|0),A=l[4+(p=n+1560|0)>>2],l[n+664>>2]=l[p>>2],l[n+668>>2]=A,A=l[4+(p=n+1544|0)>>2],l[n+648>>2]=l[p>>2],l[n+652>>2]=A,p=l[n+1556>>2],l[n+656>>2]=l[n+1552>>2],l[n+660>>2]=p,p=l[n+1540>>2],l[n+640>>2]=l[n+1536>>2],l[n+644>>2]=p,dn(n+1728|0,n+656|0,n+640|0),A=l[y+4>>2],l[(p=n+1624|0)>>2]=l[y>>2],l[p+4>>2]=A}else{if(1&m?(D=l[r+12>>2],l[n+616>>2]=l[r+8>>2],l[n+620>>2]=D,D=l[r+4>>2],l[n+608>>2]=l[r>>2],l[n+612>>2]=D,D=Df(n+608|0)):(p=l[r+12>>2],l[n+632>>2]=l[r+8>>2],l[n+636>>2]=p,p=l[r+4>>2],l[n+624>>2]=l[r>>2],l[n+628>>2]=p,D=jn(n+624|0,D)),p=l[r+12>>2],l[n+600>>2]=l[r+8>>2],l[n+604>>2]=p,p=l[r+4>>2],l[n+592>>2]=l[r>>2],l[n+596>>2]=p,-2==(0|D))break a;p=l[r+12>>2],l[n+584>>2]=l[r+8>>2],l[n+588>>2]=p,p=l[r+4>>2],l[n+576>>2]=l[r>>2],l[n+580>>2]=p,_f(n+1728|0,n+576|0,D),A=l[4+(p=n+1736|0)>>2],l[(y=n+1640|0)>>2]=l[p>>2],l[y+4>>2]=A,y=l[n+1732>>2],l[n+1632>>2]=l[n+1728>>2],l[n+1636>>2]=y,y=l[r+12>>2],l[n+568>>2]=l[r+8>>2],l[n+572>>2]=y,y=l[r+4>>2],l[n+560>>2]=l[r>>2],l[n+564>>2]=y,fk(n+1728|0,n+560|0,D),A=l[p+4>>2],l[(y=n+1624|0)>>2]=l[p>>2],l[y+4>>2]=A}p=l[n+1732>>2],l[n+1616>>2]=l[n+1728>>2],l[n+1620>>2]=p;i:if(!(1&m))if(S){if(b?(m=l[b+12>>2],l[n+536>>2]=l[b+8>>2],l[n+540>>2]=m,m=l[b+4>>2],l[n+528>>2]=l[b>>2],l[n+532>>2]=m,Qb(n+1728|0,n+528|0,20564,2),p=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=p,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):cn(20564,1,2,f),O){if(!(m=x))break i;for(;;){if(k[n+1823|0]=9,m=m+-1|0,b){if(p=l[b+12>>2],l[n+520>>2]=l[b+8>>2],l[n+524>>2]=p,p=l[b+4>>2],l[n+512>>2]=l[b>>2],l[n+516>>2]=p,Qb(n+1728|0,n+512|0,n+1823|0,1),y=l[4+(p=n+1736|0)>>2],l[b+8>>2]=l[p>>2],l[b+12>>2]=y,p=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=p,m)continue;break i}if(bn(9,f),!m)break}break i}if(!(m=g))break i;for(;;){if(k[n+1823|0]=32,m=m+-1|0,b){if(p=l[b+12>>2],l[n+504>>2]=l[b+8>>2],l[n+508>>2]=p,p=l[b+4>>2],l[n+496>>2]=l[b>>2],l[n+500>>2]=p,Qb(n+1728|0,n+496|0,n+1823|0,1),y=l[4+(p=n+1736|0)>>2],l[b+8>>2]=l[p>>2],l[b+12>>2]=y,p=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=p,m)continue;break i}if(bn(32,f),!m)break}}else b?(m=l[b+12>>2],l[n+552>>2]=l[b+8>>2],l[n+556>>2]=m,m=l[b+4>>2],l[n+544>>2]=l[b>>2],l[n+548>>2]=m,Qb(n+1728|0,n+544|0,20718,1),p=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=p,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):bn(44,f);i:{f:{if(F){if(b?(m=l[b+12>>2],l[n+488>>2]=l[b+8>>2],l[n+492>>2]=m,m=l[b+4>>2],l[n+480>>2]=l[b>>2],l[n+484>>2]=m,Qb(n+1728|0,n+480|0,21459,4),y=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=y,p=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=p,p=l[b+12>>2],l[n+472>>2]=l[b+8>>2],l[n+476>>2]=p,p=l[b+4>>2],l[n+464>>2]=l[b>>2],l[n+468>>2]=p,Qb(n+1728|0,n+464|0,21759,7),p=l[m+4>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=p,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):(cn(21459,1,4,f),cn(21759,1,7,f)),y=l[4+(m=n+1640|0)>>2],l[n+456>>2]=l[m>>2],l[n+460>>2]=y,p=l[n+1636>>2],l[n+448>>2]=l[n+1632>>2],l[n+452>>2]=p,mf(n+448|0,T,f,b),p=l[m+4>>2],l[n+440>>2]=l[m>>2],l[n+444>>2]=p,m=l[n+1636>>2],l[n+432>>2]=l[n+1632>>2],l[n+436>>2]=m,zb(n+432|0),!b)break f;m=l[b+12>>2],l[n+424>>2]=l[b+8>>2],l[n+428>>2]=m,m=l[b+4>>2],l[n+416>>2]=l[b>>2],l[n+420>>2]=m,Qb(n+1728|0,n+416|0,21459,4),y=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=y,p=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=p,p=on(F),y=l[b+12>>2],l[n+408>>2]=l[b+8>>2],l[n+412>>2]=y,y=l[b+4>>2],l[n+400>>2]=l[b>>2],l[n+404>>2]=y,Qb(n+1728|0,n+400|0,F,p),p=l[m+4>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=p,p=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=p,p=l[b+12>>2],l[n+392>>2]=l[b+8>>2],l[n+396>>2]=p,p=l[b+4>>2],l[n+384>>2]=l[b>>2],l[n+388>>2]=p,Qb(n+1728|0,n+384|0,I,R),p=l[m+4>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=p,p=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=p,p=l[b+12>>2],l[n+376>>2]=l[b+8>>2],l[n+380>>2]=p,p=l[b+4>>2],l[n+368>>2]=l[b>>2],l[n+372>>2]=p,Qb(n+1728|0,n+368|0,21459,4),p=l[m+4>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=p,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m;break i}y=l[4+(m=n+1640|0)>>2],l[n+328>>2]=l[m>>2],l[n+332>>2]=y,p=l[n+1636>>2],l[n+320>>2]=l[n+1632>>2],l[n+324>>2]=p,mf(n+320|0,T,f,b),p=l[m+4>>2],l[n+312>>2]=l[m>>2],l[n+316>>2]=p,m=l[n+1636>>2],l[n+304>>2]=l[n+1632>>2],l[n+308>>2]=m,zb(n+304|0),b?(m=l[b+12>>2],l[n+296>>2]=l[b+8>>2],l[n+300>>2]=m,m=l[b+4>>2],l[n+288>>2]=l[b>>2],l[n+292>>2]=m,Qb(n+1728|0,n+288|0,I,R),p=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=p,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):cn(I,1,R,f),p=l[4+(m=n+1624|0)>>2],l[n+280>>2]=l[m>>2],l[n+284>>2]=p,m=l[n+1620>>2],l[n+272>>2]=l[n+1616>>2],l[n+276>>2]=m,mb(e,n+272|0,a,x,f,b),m=0;continue}cn(21459,1,4,f),cn(F,1,on(F),f),cn(I,1,R,f),cn(21459,1,4,f)}p=l[4+(m=n+1624|0)>>2],l[n+360>>2]=l[m>>2],l[n+364>>2]=p,m=l[n+1620>>2],l[n+352>>2]=l[n+1616>>2],l[n+356>>2]=m,mb(e,n+352|0,a,x,f,b),m=on(F),b?(p=l[b+12>>2],l[n+344>>2]=l[b+8>>2],l[n+348>>2]=p,p=l[b+4>>2],l[n+336>>2]=l[b>>2],l[n+340>>2]=p,Qb(n+1728|0,n+336|0,F,m),p=l[4+(m=n+1736|0)>>2],l[b+8>>2]=l[m>>2],l[b+12>>2]=p,m=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=m):cn(F,1,m,f),m=0;continue}break}a:if(S)if(k[n+1632|0]=10,b?(a=l[b+12>>2],l[n+264>>2]=l[b+8>>2],l[n+268>>2]=a,a=l[b+4>>2],l[n+256>>2]=l[b>>2],l[n+260>>2]=a,Qb(n+1728|0,n+256|0,n+1632|0,1),m=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=m,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a):bn(10,f),O){if(!i)break a;for(;;){if(k[n+1632|0]=9,i=i+-1|0,b){if(a=l[b+12>>2],l[n+248>>2]=l[b+8>>2],l[n+252>>2]=a,a=l[b+4>>2],l[n+240>>2]=l[b>>2],l[n+244>>2]=a,Qb(n+1728|0,n+240|0,n+1632|0,1),m=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=m,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a,i)continue;break a}if(bn(9,f),!i)break}}else if(m=w(i,U))for(;k[n+1632|0]=32,m=m+-1|0,b?(a=l[b+12>>2],l[n+232>>2]=l[b+8>>2],l[n+236>>2]=a,a=l[b+4>>2],l[n+224>>2]=l[b>>2],l[n+228>>2]=a,Qb(n+1728|0,n+224|0,n+1632|0,1),i=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=i,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a):bn(32,f),m;);a:{i:{f:{if(F){if(a=on(F),!b)break f;i=l[b+12>>2],l[n+216>>2]=l[b+8>>2],l[n+220>>2]=i,i=l[b+4>>2],l[n+208>>2]=l[b>>2],l[n+212>>2]=i,Qb(n+1728|0,n+208|0,F,a),i=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=i,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a,k[n+1632|0]=125}else if(k[n+1632|0]=125,!b)break i;a=l[b+12>>2],l[n+200>>2]=l[b+8>>2],l[n+204>>2]=a,a=l[b+4>>2],l[n+192>>2]=l[b>>2],l[n+196>>2]=a,Qb(n+1728|0,n+192|0,n+1632|0,1),i=l[4+(a=n+1736|0)>>2],l[b+8>>2]=l[a>>2],l[b+12>>2]=i,a=l[n+1732>>2],l[b>>2]=l[n+1728>>2],l[b+4>>2]=a;break a}cn(F,1,a,f),k[n+1632|0]=125}bn(125,f)}if(!s)break e}t=e,c=j,o=f,u=b,h=0,ne=d=ne-160|0,k[d+144|0]=32,u?(h=l[u+12>>2],l[d+56>>2]=l[u+8>>2],l[d+60>>2]=h,h=l[u+4>>2],l[d+48>>2]=l[u>>2],l[d+52>>2]=h,Qb(d- -64|0,d+48|0,d+144|0,1),h=l[d+76>>2],l[u+8>>2]=l[d+72>>2],l[u+12>>2]=h,h=l[d+68>>2],l[u>>2]=l[d+64>>2],l[u+4>>2]=h,k[d+144|0]=40,h=l[u+12>>2],l[d+40>>2]=l[u+8>>2],l[d+44>>2]=h,h=l[u+4>>2],l[d+32>>2]=l[u>>2],l[d+36>>2]=h,Qb(d- -64|0,d+32|0,d+144|0,1),h=l[d+76>>2],l[u+8>>2]=l[d+72>>2],l[u+12>>2]=h,h=l[d+68>>2],l[u>>2]=l[d+64>>2],l[u+4>>2]=h):(bn(32,o),k[d+144|0]=40,bn(40,o)),c=on(t=we(t,d- -64|0,+(0|c))),u?(o=l[u+12>>2],l[d+24>>2]=l[u+8>>2],l[d+28>>2]=o,o=l[u+4>>2],l[d+16>>2]=l[u>>2],l[d+20>>2]=o,Qb(d+144|0,d+16|0,t,c),t=l[d+156>>2],l[u+8>>2]=l[d+152>>2],l[u+12>>2]=t,t=l[d+148>>2],l[u>>2]=l[d+144>>2],l[u+4>>2]=t,k[d+143|0]=41,t=l[u+12>>2],l[d+8>>2]=l[u+8>>2],l[d+12>>2]=t,t=l[u+4>>2],l[d>>2]=l[u>>2],l[d+4>>2]=t,Qb(d+144|0,d,d+143|0,1),t=l[d+156>>2],l[u+8>>2]=l[d+152>>2],l[u+12>>2]=t,t=l[d+148>>2],l[u>>2]=l[d+144>>2],l[u+4>>2]=t):(cn(t,1,c,o),k[d+143|0]=41,bn(41,o)),ne=d+160|0}e=l[r+12>>2],l[n+24>>2]=l[r+8>>2],l[n+28>>2]=e,e=l[r+4>>2],l[n+16>>2]=l[r>>2],l[n+20>>2]=e,zb(n+16|0),F&&(b?(e=l[b+12>>2],l[n+8>>2]=l[b+8>>2],l[n+12>>2]=e,e=l[b+4>>2],l[n>>2]=l[b>>2],l[n+4>>2]=e,Qb(n+1800|0,n,21459,4),r=l[4+(e=n+1808|0)>>2],l[b+8>>2]=l[e>>2],l[b+12>>2]=r,e=l[n+1804>>2],l[b>>2]=l[n+1800>>2],l[b+4>>2]=e):cn(21459,1,4,f)),ne=n+1824|0}function wb(e,r){wf(e,r,on(r))}function pb(e,r,a,i){var f;ne=f=ne-176|0,l[f+172>>2]=i,ca(f+152|0,a,i),4&v[r+24|0]?(rn(f+120|0),a=l[f+132>>2],l[f+96>>2]=l[f+128>>2],l[f+100>>2]=a,a=l[f+164>>2],l[f+80>>2]=l[f+160>>2],l[f+84>>2]=a,a=l[f+124>>2],l[f+88>>2]=l[f+120>>2],l[f+92>>2]=a,a=l[f+156>>2],l[f+72>>2]=l[f+152>>2],l[f+76>>2]=a,Vb(f+136|0,f+88|0,f+72|0),i=l[r+52>>2],l[(a=f- -64|0)>>2]=l[r+48>>2],l[a+4>>2]=i,a=l[r+44>>2],l[f+56>>2]=l[r+40>>2],l[f+60>>2]=a,Nb(f+104|0,f+56|0),r=l[f+148>>2],l[f+48>>2]=l[f+144>>2],l[f+52>>2]=r,r=l[f+116>>2],l[f+32>>2]=l[f+112>>2],l[f+36>>2]=r,r=l[f+140>>2],l[f+40>>2]=l[f+136>>2],l[f+44>>2]=r,r=l[f+108>>2],l[f+24>>2]=l[f+104>>2],l[f+28>>2]=r,Vb(e,f+40|0,f+24|0)):(r=l[f+164>>2],l[f+16>>2]=l[f+160>>2],l[f+20>>2]=r,r=l[f+156>>2],l[f+8>>2]=l[f+152>>2],l[f+12>>2]=r,Hb(e,f+8|0)),ne=f+176|0}function gb(e,r){return(e=tk(e,r))||(ak(),M()),e}function yb(e,r,a){var i,f=0,k=0;ne=i=ne-32|0,f=l[r+4>>2],l[i+8>>2]=l[r>>2],l[i+12>>2]=f,yn(i+24|0,i+8|0),r=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=r,yn(i+16|0,i),k=l[i+28>>2],a=l[i+24>>2];e:{r:{a:{if(f=l[i+16>>2])if(r=l[i+20>>2],k){if(l[k>>2])break e;if(l[f+4>>2])break a;l[k>>2]=f,l[f+4>>2]=k}else a=f;else r=k;if(1!=l[8707])break r;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=20,l[(f=k)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,l[(f=e)>>2]=a,l[f+4>>2]=r,k){if(r){if(l[r>>2])break e;l[r>>2]=k,l[k+4>>2]=r}else l[e>>2]=k;l[e+4>>2]=k}return void(ne=i+32|0)}P(25731,14282,238,35660),M()}P(1044,14282,141,35388),M()}P(25534,14282,237,35660),M()}function Eb(e){var r,a=0;if(!(!(r=l[e>>2])|l[e+4>>2]!=(0|r))){if(!(e=l[r+8>>2]))return 1;a=4==(0|e)}return a}function _b(e){var r,a,i=0,f=0,k=0,n=0,s=0;t(+e),k=0|b(1),a=0|b(0),r=k>>>31;e:{r:{a:{i:{n=e;f:{k:{b:{if((k=2147483647&(f=k))>>>0>=1082532651){if(2146435072==(0|(f&=2147483647))&a>>>0>0|f>>>0>2146435072)return e;if(e>709.782712893384)return 8.98846567431158e307*e;if(!(e<-745.1332191019411)|e<-708.3964185322641^1)break b;break r}if(k>>>0<1071001155)break i;if(k>>>0<1072734898)break k}if(e=1.4426950408889634*e+m[308448+(r<<3)>>3],g(e)<2147483648){f=~~e;break f}f=-2147483648;break f}f=(1^r)-r|0}n=(e=n+-.6931471803691238*(i=+(0|f)))-(s=1.9082149292705877e-10*i);break a}if(k>>>0<=1043333120)break e;f=0,n=e}i=n,i=e+(n*(e=n-(i*=i)*(i*(i*(i*(4.1381367970572385e-8*i-16533902205465252e-22)+6613756321437934e-20)-.0027777777777015593)+.16666666666666602))/(2-e)-s)+1,f&&(i=Ik(i,f))}return i}return e+1}function Db(e,r,a){var i=0,f=0,k=0;if(!a)return 0;i=v[0|e];e:if(i){for(;;){if((0|(f=v[0|r]))==(0|i)&&!(!(a=a+-1|0)|!f)){if(r=r+1|0,i=v[e+1|0],e=e+1|0,i)continue;break e}break}k=i}return(255&k)-v[0|r]|0}function Sb(e,r){var a,i,f=0;if(t(+e),f=0|b(1),a=0|b(0),i=f,2047!=(0|(f=f>>>20&2047))){if(!f)return f=r,0==e?r=0:(e=Sb(0x10000000000000000*e,r),r=l[r>>2]+-64|0),l[f>>2]=r,e;l[r>>2]=f+-1022,n(0,0|a),n(1,-2146435073&i|1071644672),e=+s()}return e}function Fb(e){var r=0,a=0,i=0,f=0,k=0,c=0,o=0;e:{r:{a:{t(+e),i=0|b(1),c=0|b(0);i:{f:{if((i=2147483647&(r=i))>>>0>=1078159482){if(t(+e),i=0|b(1),2146435072==(0|(i&=2147483647))&b(0)>>>0>0|i>>>0>2146435072)break e;if((0|r)<0||(0|r)<=0&&!(c>>>0>=0))return-1;if(!(e>709.782712893384))break f;return 8.98846567431158e307*e}if(i>>>0<1071001155)break a;if(!(i>>>0>1072734897)){if((0|r)>0||(0|r)>=0&&!(c>>>0<0)){r=1,a=1.9082149292705877e-10,k=e+-.6931471803691238;break i}r=-1,a=-1.9082149292705877e-10,k=e+.6931471803691238;break i}}a=1.9082149292705877e-10*(f=+(0|(r=g(a=1.4426950408889634*e+((0|r)<0||(0|r)<=0&&!(c>>>0>=0)?-.5:.5))<2147483648?~~a:-2147483648))),k=e+-.6931471803691238*f}e=k,a=k-(e-=a)-a;break r}if(i>>>0<1016070144)break e;r=0}if(k=(f=e*(o=.5*e))*(((k=f*(f*(f*(f*(-2.0109921818362437e-7*f+4008217827329362e-21)-793650757867488e-19)+.0015873015872548146)-.03333333333333313)+1)-(k=3-o*k))/(6-e*k)),!r)return e-(e*k-f);a=e*(k-a)-a-f;r:if(!((c=r+1|0)>>>0>2)){a:switch(c-1|0){default:return.5*(e-a)-.5;case 0:break r;case 1:}return e<-.25?-2*(a-(e+.5)):(e-=a)+e+1}if(n(0,0),n(1,r+1023<<20),f=+s(),r>>>0>=57)return e=e-a+1,(1024==(0|r)?8.98846567431158e307*(e+e):e*f)-1;c=1023-r<<20,i=0,(0|r)<=19?(e-=a,n(0,0|i),n(1,0|c),a=1-+s()):(n(0,0|i),n(1,0|c),a=e-(a+ +s()),e=1),e=(a+e)*f}return e}function Mb(e,r,a){var i,f=0,k=0,b=0;ne=i=ne-16|0;e:{r:{if(1==l[8593]){if(b=Bb(104),l[b+96>>2]=-1,l[b+8>>2]=1,l[(f=b)>>2]=0,l[f+4>>2]=0,l[f+76>>2]=0,l[f+80>>2]=0,l[f+68>>2]=-1,l[f+72>>2]=-1,l[f+60>>2]=0,l[f+64>>2]=0,l[f+52>>2]=-1,l[f+56>>2]=-1,l[f+48>>2]=0,l[f+84>>2]=0,l[f+88>>2]=0,k=l[r+4>>2],l[(f=i)>>2]=l[r>>2],l[f+4>>2]=k,yn(f+8|0,f),r=l[f+8>>2])if(f=l[i+12>>2],b){if(l[b>>2])break r;if(l[r+4>>2])break e;l[b>>2]=r,l[r+4>>2]=b}else b=r;else f=b;if(1==l[8647]){r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=10,l[(k=r)>>2]=0,l[k+4>>2]=0,l[k+76>>2]=0,l[k+80>>2]=0,l[k+68>>2]=-1,l[k+72>>2]=-1,l[k+60>>2]=0,l[k+64>>2]=0,l[k+52>>2]=-1,l[k+56>>2]=-1,l[k+48>>2]=0,l[k+84>>2]=0,l[k+88>>2]=0;a:{if(k){if(!f){f=r;break a}if(l[f>>2])break r;l[f>>2]=r,l[r+4>>2]=f,f=r}r=b}if(k=l[a+4>>2],b=l[a>>2],l[e>>2]=r,l[e+4>>2]=f,b){if(f){if(l[f>>2])break r;if(l[b+4>>2])break e;l[f>>2]=b,l[b+4>>2]=f}else l[e>>2]=b;l[e+4>>2]=k}return void(ne=i+16|0)}}P(1044,14282,141,35388),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function Ab(e){bn(e,l[75261])}function xb(e,r,a){var i=0,f=0,b=0;if(1==(0|r)&e>>>0<0|r>>>0<1)i=e;else for(;i=Ni(e,r,10),b=f=se,f=zi(i,f,10,0),k[0|(a=a+-1|0)]=e-f|48,f=9==(0|r)&e>>>0>4294967295|r>>>0>9,e=i,r=b,f;);if(i)for(;e=(i>>>0)/10|0,k[0|(a=a+-1|0)]=i-w(e,10)|48,r=i>>>0>9,i=e,r;);return a}function Pb(e,r,a){var i=0,f=0,k=0,b=0;k=l[a+4>>2];e:{r:{a:{if(8&v[34728]){if(!k)break a;f=Bb(104),l[f+96>>2]=-1,l[f+8>>2]=16,l[(i=f)>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+20>>2]=k,l[i+84>>2]=0,l[i+88>>2]=0,k=l[r+4>>2],b=l[r>>2];i:{if(i){if(!k){k=f;break i}if(l[k>>2])break r;l[k>>2]=f,l[f+4>>2]=k,k=f}f=b}if(l[r+4>>2]=k,l[r>>2]=f,8&v[34752]){if(!k)break a;if(r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=17,l[(i=r)>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+20>>2]=k,l[i+84>>2]=0,l[i+88>>2]=0,f)if(r){if(l[f+4>>2])break e;l[r>>2]=f,l[f+4>>2]=r}else r=f;else k=r;if(i=l[a+4>>2],f=l[a>>2],l[(a=e)>>2]=r,l[a+4>>2]=k,f){if(k){if(l[k>>2])break r;if(l[f+4>>2])break e;l[k>>2]=f,l[f+4>>2]=k}else l[e>>2]=f;l[e+4>>2]=i}return}}P(16334,14282,190,35477),M()}P(16744,14282,191,35477),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function Tb(e){var r=0,a=0;return a=kb(e,2),r=-1,(a=(d[80048+((255&kb(e,1))<<1)>>1]+d[80054+((255&a)<<1)>>1]|0)+d[80048+((255&kb(e,0))<<1)>>1]|0)>>>0>1304||(0|(r=l[81600+(a<<2)>>2]))>=0&&!Gr(e,312784+(r<<2)|0,1)||(r=-1),r}function Rb(e,r,a,i){var k=0,b=0,n=0,s=0,t=0;b=l[e>>2];e:if(!(b>>>0>=r>>>0))for(;;){if(!a)break e;if(k=0|f[l[i+20>>2]](b,r),n=0|f[l[i>>2]](b),!f[l[i+48>>2]](k,11))break e;if(t=k+-48|0,f[l[i+48>>2]](k,4)||(t=(0|f[l[i+48>>2]](k,10)?-55:-87)+k|0),2147483647-t>>>4>>>0<s>>>0)return-1;if(b=b+n|0,s<<=4,a=a+-1|0,n=k+-48|0,f[l[i+48>>2]](k,4)||(n=(0|f[l[i+48>>2]](k,10)?-55:-87)+k|0),s=n+s|0,!(b>>>0<r>>>0))break}return l[e>>2]=b,s}function Ob(e,r,a,i,f){var k,b=0;ne=k=ne-416|0,mn(k+336|0),b=l[k+348>>2],l[k+216>>2]=l[k+344>>2],l[k+220>>2]=b,b=l[k+340>>2],l[k+208>>2]=l[k+336>>2],l[k+212>>2]=b,un(k+352|0,k+208|0),b=l[k+356>>2],l[k+200>>2]=l[k+352>>2],l[k+204>>2]=b,yn(k+360|0,k+200|0),jb(k+304|0,33579),b=l[k+316>>2],l[k+192>>2]=l[k+312>>2],l[k+196>>2]=b,b=l[k+308>>2],l[k+184>>2]=l[k+304>>2],l[k+188>>2]=b,un(k+320|0,k+184|0),b=l[k+324>>2],l[k+176>>2]=l[k+320>>2],l[k+180>>2]=b,yn(k+328|0,k+176|0),b=l[k+364>>2],l[k+168>>2]=l[k+360>>2],l[k+172>>2]=b,b=l[k+332>>2],l[k+160>>2]=l[k+328>>2],l[k+164>>2]=b,$b(k+368|0,k+168|0,k+160|0),b=l[a+4>>2],l[k+152>>2]=l[a>>2],l[k+156>>2]=b,yn(k+296|0,k+152|0),a=l[k+372>>2],l[k+144>>2]=l[k+368>>2],l[k+148>>2]=a,a=l[k+300>>2],l[k+136>>2]=l[k+296>>2],l[k+140>>2]=a,$b(k+376|0,k+144|0,k+136|0),ln(k+288|0,20),a=l[k+380>>2],l[k+128>>2]=l[k+376>>2],l[k+132>>2]=a,a=l[k+292>>2],l[k+120>>2]=l[k+288>>2],l[k+124>>2]=a,$b(k+384|0,k+128|0,k+120|0),jb(k+256|0,25651),a=l[k+268>>2],l[k+112>>2]=l[k+264>>2],l[k+116>>2]=a,a=l[k+260>>2],l[k+104>>2]=l[k+256>>2],l[k+108>>2]=a,un(k+272|0,k+104|0),a=l[k+276>>2],l[k+96>>2]=l[k+272>>2],l[k+100>>2]=a,yn(k+280|0,k+96|0),a=l[k+388>>2],l[k+88>>2]=l[k+384>>2],l[k+92>>2]=a,a=l[k+284>>2],l[k+80>>2]=l[k+280>>2],l[k+84>>2]=a,$b(k+392|0,k+88|0,k+80|0),a=l[i+4>>2],l[k+72>>2]=l[i>>2],l[k+76>>2]=a,yn(k+248|0,k+72|0),a=l[k+396>>2],l[k+64>>2]=l[k+392>>2],l[k+68>>2]=a,a=l[k+252>>2],l[k+56>>2]=l[k+248>>2],l[k+60>>2]=a,$b(k+400|0,k- -64|0,k+56|0),ln(k+240|0,20),a=l[k+404>>2],l[k+48>>2]=l[k+400>>2],l[k+52>>2]=a,a=l[k+244>>2],l[k+40>>2]=l[k+240>>2],l[k+44>>2]=a,$b(k+408|0,k+48|0,k+40|0),a=l[k+412>>2],l[k+32>>2]=l[k+408>>2],l[k+36>>2]=a,a=l[r+4>>2],l[k+24>>2]=l[r>>2],l[k+28>>2]=a,$b(k+232|0,k+32|0,k+24|0),ln(k+224|0,f),r=l[k+236>>2],l[k+16>>2]=l[k+232>>2],l[k+20>>2]=r,r=l[k+228>>2],l[k+8>>2]=l[k+224>>2],l[k+12>>2]=r,$b(e,k+16|0,k+8|0),ne=k+416|0}function Ib(e,r,a){var i=0,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0;if(f=3&a){for(i=r+20|0,c=f=l[44548+(f<<2)>>2],o=f>>31,n=l[r+16>>2],f=0;t=zi(l[i>>2],0,c,o)+b|0,s=k+se|0,s=t>>>0<b>>>0?s+1|0:s,l[i>>2]=t,i=i+4|0,b=s,(0|(f=f+1|0))<(0|n););k|b?((0|n)<l[r+8>>2]?i=r:((0|(k=l[r+4>>2]+1|0))>7||!(i=l[(f=(k<<2)+e|0)>>2])?(i=Bb(20+((f=1<<k)<<2)|0),l[i+8>>2]=f,l[i+4>>2]=k):l[f>>2]=l[i>>2],l[i+12>>2]=0,l[i+16>>2]=0,qb(i+12|0,r+12|0,8+(l[r+16>>2]<<2)|0),(0|(k=l[r+4>>2]))>=8?Lb(r):(k=(k<<2)+e|0,l[r>>2]=l[k>>2],l[k>>2]=r)),l[20+((n<<2)+i|0)>>2]=b,l[i+16>>2]=n+1):i=r}else i=r;e:if(f=a>>2)for((r=l[e+32>>2])||((r=l[e+4>>2])?l[e+4>>2]=l[r>>2]:(r=Bb(28),l[r+4>>2]=1,l[r+8>>2]=2),l[r+20>>2]=625,l[r+12>>2]=0,l[r+16>>2]=1,l[e+32>>2]=r,l[r>>2]=0);;){if(a=r,1&f&&(r=Qf(e,i,a),i&&((0|(b=l[i+4>>2]))>=8?Lb(i):(b=(b<<2)+e|0,l[i>>2]=l[b>>2],l[b>>2]=i)),i=r),!(f>>=1))break e;(r=l[a>>2])||(r=Qf(e,a,a),l[a>>2]=r,l[r>>2]=0)}return i}function zb(e){var r,a=0;ne=r=ne-48|0;e:{a=15&v[0|e];r:if(!(a>>>0>7)){a:switch(a-1|0){case 5:a=l[e+12>>2],l[r+8>>2]=l[e+8>>2],l[r+12>>2]=a,a=l[e+4>>2],l[r>>2]=l[e>>2],l[r+4>>2]=a,function(e){var r,a=0,i=0,f=0;if(ne=r=ne-16|0,6!=(15&v[0|e]))P(18922,17172,199,44084),M();else{if(a=l[e+8>>2],e=l[a>>2]+-1|0,l[a>>2]=e,!e){if(e=0,l[a+4>>2]>0)for(;f=l[28+(i=(e<<4)+a|0)>>2],l[r+8>>2]=l[i+24>>2],l[r+12>>2]=f,f=l[i+20>>2],l[r>>2]=l[i+16>>2],l[r+4>>2]=f,zb(r),(0|(e=e+1|0))<l[a+4>>2];);Lb(a)}ne=r+16|0}}(r);break r;case 4:if(5!=(0|a))break e;if(e=l[e+8>>2],a=l[e>>2]+-1|0,l[e>>2]=a,a)break r;Lb(e);break r;case 6:a=l[e+12>>2],l[r+24>>2]=l[e+8>>2],l[r+28>>2]=a,a=l[e+4>>2],l[r+16>>2]=l[e>>2],l[r+20>>2]=a,Ie(r+16|0);break r;case 0:case 1:case 2:case 3:break r}(e=l[e+8>>2])&&(a=l[e>>2]+-1|0,l[e>>2]=a,a||(a=l[e+20>>2],l[r+40>>2]=l[e+16>>2],l[r+44>>2]=a,a=l[e+12>>2],l[r+32>>2]=l[e+8>>2],l[r+36>>2]=a,zb(r+32|0),Lb(e)))}return void(ne=r+48|0)}P(25781,17172,444,43888),M()}function Nb(e,r){var a=0;a=15&v[0|r];e:if(!(a>>>0>7)){r:switch(a-1|0){default:if(!l[r+8>>2])break e;break;case 0:case 1:case 2:case 3:break e;case 4:case 5:case 6:}a=l[r+8>>2],l[a>>2]=l[a>>2]+1}a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a}function jb(e,r){var a,i=0;if(sb(r,(a=on(r))+r|0))return i=Bb(a+17|0),l[i+12>>2]=a,l[i>>2]=1,l[i+8>>2]=a<<1,r&&qb(i+16|0,r,a),k[16+(a+i|0)|0]=0,l[e+8>>2]=i,l[e>>2]=5,void(l[e+4>>2]=0);ob(e,r,a)}function Ub(e,r){var a=0,i=0;return e?r>>>0>=4294967232?(l[82952]=48,0):(a=function(e,r){var a,i,f=0,k=0,b=0,n=0,s=0,t=0,c=0;a=(k=-8&(i=l[e+4>>2]))+e|0;e:{if(!(f=3&i)){if(f=0,r>>>0<256)break e;if(k>>>0>=r+4>>>0&&(f=e,k-r>>>0<=l[83094]<<1>>>0))break e;return 0}r:if(k>>>0>=r>>>0){if((f=k-r|0)>>>0<16)break r;l[e+4>>2]=1&i|r|2,l[4+(r=e+r|0)>>2]=3|f,l[a+4>>2]=1|l[a+4>>2],Fa(r,f)}else if(f=0,l[82980]!=(0|a))if(l[82979]!=(0|a)){if(2&(b=l[a+4>>2]))break e;if((n=k+(-8&b)|0)>>>0<r>>>0)break e;t=n-r|0;a:if(b>>>0<=255){if(f=l[a+8>>2],b>>>=3,(0|(k=l[a+12>>2]))==(0|f)){l[82974]=l[82974]&Bi(-2,b);break a}l[f+12>>2]=k,l[k+8>>2]=f}else{if(s=l[a+24>>2],(0|a)==(0|(k=l[a+12>>2])))if((f=l[(b=a+20|0)>>2])||(f=l[(b=a+16|0)>>2])){for(;c=b,(f=l[(b=(k=f)+20|0)>>2])||(b=k+16|0,f=l[k+16>>2]););l[c>>2]=0}else k=0;else f=l[a+8>>2],l[f+12>>2]=k,l[k+8>>2]=f;if(s){f=l[a+28>>2];i:{if(l[(b=332200+(f<<2)|0)>>2]==(0|a)){if(l[b>>2]=k,k)break i;l[82975]=l[82975]&Bi(-2,f);break a}if(l[(l[s+16>>2]==(0|a)?16:20)+s>>2]=k,!k)break a}l[k+24>>2]=s,(f=l[a+16>>2])&&(l[k+16>>2]=f,l[f+24>>2]=k),(f=l[a+20>>2])&&(l[k+20>>2]=f,l[f+24>>2]=k)}}t>>>0<=15?(l[e+4>>2]=1&i|n|2,l[4+(r=e+n|0)>>2]=1|l[r+4>>2]):(l[e+4>>2]=1&i|r|2,l[4+(r=e+r|0)>>2]=3|t,l[4+(f=e+n|0)>>2]=1|l[f+4>>2],Fa(r,t))}else{if((k=k+l[82976]|0)>>>0<r>>>0)break e;(b=k-r|0)>>>0>=16?(l[e+4>>2]=1&i|r|2,l[4+(r=e+r|0)>>2]=1|b,l[(f=e+k|0)>>2]=b,l[f+4>>2]=-2&l[f+4>>2]):(l[e+4>>2]=k|1&i|2,l[4+(r=e+k|0)>>2]=1|l[r+4>>2],b=0,r=0),l[82979]=r,l[82976]=b}else{if((k=k+l[82977]|0)>>>0<=r>>>0)break e;l[e+4>>2]=1&i|r|2,f=e+r|0,r=k-r|0,l[f+4>>2]=1|r,l[82977]=r,l[82980]=f}f=e}return f}(e+-8|0,r>>>0<11?16:r+11&-8))?a+8|0:(a=Cb(r))?(qb(a,e,(i=(-8&(i=l[e+-4>>2]))-(3&i?4:8)|0)>>>0<r>>>0?i:r),Lb(e),a):0:Cb(r)}function Bb(e){return(e=Cb(e))||(ak(),M()),e}function Cb(e){var r,a=0,i=0,f=0,k=0,b=0,n=0,s=0,t=0,c=0,o=0;ne=r=ne-16|0;e:{r:{a:{i:{f:{k:{b:{n:{s:{t:{c:{if((e|=0)>>>0<=244){if(3&(a=(b=l[82974])>>>(e=(n=e>>>0<11?16:e+11&-8)>>>3))){e=(a=l[331944+(k=(i=e+(1&(-1^a))|0)<<3)>>2])+8|0,(0|(f=l[a+8>>2]))!=(0|(k=k+331936|0))?(l[f+12>>2]=k,l[k+8>>2]=f):l[82974]=Bi(-2,i)&b,i<<=3,l[a+4>>2]=3|i,l[4+(a=a+i|0)>>2]=1|l[a+4>>2];break e}if(n>>>0<=(t=l[82976])>>>0)break c;if(a){i=a=(e=(0-(e=(0-(i=2<<e)|i)&a<<e)&e)-1|0)>>>12&16,i|=a=(e>>>=a)>>>5&8,i|=a=(e>>>=a)>>>2&4,a=l[331944+(f=(i=((i|=a=(e>>>=a)>>>1&2)|(a=(e>>>=a)>>>1&1))+(e>>>a)|0)<<3)>>2],(0|(e=l[a+8>>2]))!=(0|(f=f+331936|0))?(l[e+12>>2]=f,l[f+8>>2]=e):(b=Bi(-2,i)&b,l[82974]=b),e=a+8|0,l[a+4>>2]=3|n,k=(i<<=3)-n|0,l[4+(s=a+n|0)>>2]=1|k,l[a+i>>2]=k,t&&(a=331936+((i=t>>>3)<<3)|0,f=l[82979],(i=1<<i)&b?i=l[a+8>>2]:(l[82974]=i|b,i=a),l[a+8>>2]=f,l[i+12>>2]=f,l[f+12>>2]=a,l[f+8>>2]=i),l[82979]=s,l[82976]=k;break e}if(!(o=l[82975]))break c;for(i=a=(e=(o&0-o)-1|0)>>>12&16,i|=a=(e>>>=a)>>>5&8,i|=a=(e>>>=a)>>>2&4,a=l[332200+(((i|=a=(e>>>=a)>>>1&2)|(a=(e>>>=a)>>>1&1))+(e>>>a)<<2)>>2],f=(-8&l[a+4>>2])-n|0,i=a;(e=l[i+16>>2])||(e=l[i+20>>2]);)f=(i=(k=(-8&l[e+4>>2])-n|0)>>>0<f>>>0)?k:f,a=i?e:a,i=e;if(c=l[a+24>>2],(0|(k=l[a+12>>2]))!=(0|a)){e=l[a+8>>2],l[e+12>>2]=k,l[k+8>>2]=e;break r}if(!(e=l[(i=a+20|0)>>2])){if(!(e=l[a+16>>2]))break t;i=a+16|0}for(;s=i,k=e,(e=l[(i=e+20|0)>>2])||(i=k+16|0,e=l[k+16>>2]););l[s>>2]=0;break r}if(n=-1,!(e>>>0>4294967231)&&(n=-8&(a=e+11|0),t=l[82975])){i=0-n|0,b=0,(a>>>=8)&&(b=31,n>>>0>16777215||(b=28+((e=((b=(a<<=f=a+1048320>>>16&8)<<(e=a+520192>>>16&4))<<(a=b+245760>>>16&2)>>>15)-(a|e|f)|0)<<1|n>>>e+21&1)|0)),f=l[332200+(b<<2)>>2];o:{u:{if(f)for(a=n<<(31==(0|b)?0:25-(b>>>1)|0),e=0;;){if(!((s=(-8&l[f+4>>2])-n|0)>>>0>=i>>>0||(k=f,i=s))){i=0,e=f;break u}if(s=l[f+20>>2],f=l[16+((a>>>29&4)+f|0)>>2],e=s?(0|s)==(0|f)?e:s:e,a<<=0!=(0|f),!f)break}else e=0;if(!(e|k)){if(!(e=(0-(e=2<<b)|e)&t))break c;f=a=(e=(e&0-e)-1|0)>>>12&16,f|=a=(e>>>=a)>>>5&8,f|=a=(e>>>=a)>>>2&4,e=l[332200+(((f|=a=(e>>>=a)>>>1&2)|(a=(e>>>=a)>>>1&1))+(e>>>a)<<2)>>2]}if(!e)break o}for(;i=(a=(f=(-8&l[e+4>>2])-n|0)>>>0<i>>>0)?f:i,k=a?e:k,e=(a=l[e+16>>2])||l[e+20>>2];);}if(!(!k|i>>>0>=l[82976]-n>>>0)){if(s=l[k+24>>2],(0|k)!=(0|(a=l[k+12>>2]))){e=l[k+8>>2],l[e+12>>2]=a,l[a+8>>2]=e;break a}if(!(e=l[(f=k+20|0)>>2])){if(!(e=l[k+16>>2]))break s;f=k+16|0}for(;b=f,a=e,(e=l[(f=e+20|0)>>2])||(f=a+16|0,e=l[a+16>>2]););l[b>>2]=0;break a}}}if((a=l[82976])>>>0>=n>>>0){e=l[82979],(i=a-n|0)>>>0>=16?(l[82976]=i,f=e+n|0,l[82979]=f,l[f+4>>2]=1|i,l[e+a>>2]=i,l[e+4>>2]=3|n):(l[82979]=0,l[82976]=0,l[e+4>>2]=3|a,l[4+(a=e+a|0)>>2]=1|l[a+4>>2]),e=e+8|0;break e}if((f=l[82977])>>>0>n>>>0){a=f-n|0,l[82977]=a,i=(e=l[82980])+n|0,l[82980]=i,l[i+4>>2]=1|a,l[e+4>>2]=3|n,e=e+8|0;break e}if(e=0,i=k=n+47|0,l[83092]?a=l[83094]:(l[83095]=-1,l[83096]=-1,l[83093]=4096,l[83094]=4096,l[83092]=r+12&-16^1431655768,l[83097]=0,l[83085]=0,a=4096),(i=(b=i+a|0)&(s=0-a|0))>>>0<=n>>>0)break e;if((a=l[83084])&&(c=(t=l[83082])+i|0)>>>0<=t>>>0|c>>>0>a>>>0)break e;if(4&v[332340])break k;c:{o:{if(a=l[82980])for(e=332344;;){if((t=l[e>>2])+l[e+4>>2]>>>0>a>>>0&&t>>>0<=a>>>0)break o;if(!(e=l[e+8>>2]))break}if(-1==(0|(a=Yn(0))))break b;if(b=i,(f=(e=l[83093])+-1|0)&a&&(b=(i-a|0)+(a+f&0-e)|0),b>>>0<=n>>>0|b>>>0>2147483646)break b;if((e=l[83084])&&(s=(f=l[83082])+b|0)>>>0<=f>>>0|s>>>0>e>>>0)break b;if((0|a)!=(0|(e=Yn(b))))break c;break f}if((b=s&b-f)>>>0>2147483646)break b;if((0|(a=Yn(b)))==(l[e>>2]+l[e+4>>2]|0))break n;e=a}if(a=e,!(n+48>>>0<=b>>>0|b>>>0>2147483646|-1==(0|e))){if((e=(e=l[83094])+(k-b|0)&0-e)>>>0>2147483646)break f;if(-1!=(0|Yn(e))){b=e+b|0;break f}Yn(0-b|0);break b}if(-1!=(0|a))break f;break b}k=0;break r}a=0;break a}if(-1!=(0|a))break f}l[83085]=4|l[83085]}if(i>>>0>2147483646)break i;if((a=Yn(i))>>>0>=(e=Yn(0))>>>0|-1==(0|a)|-1==(0|e))break i;if((b=e-a|0)>>>0<=n+40>>>0)break i}e=l[83082]+b|0,l[83082]=e,e>>>0>h[83083]&&(l[83083]=e);f:{k:{b:{if(i=l[82980]){for(e=332344;;){if(((f=l[e>>2])+(k=l[e+4>>2])|0)==(0|a))break b;if(!(e=l[e+8>>2]))break}break k}for(a>>>0>=(e=l[82978])>>>0&&e||(l[82978]=a),e=0,l[83087]=b,l[83086]=a,l[82982]=-1,l[82983]=l[83092],l[83089]=0;f=331936+(i=e<<3)|0,l[i+331944>>2]=f,l[i+331948>>2]=f,32!=(0|(e=e+1|0)););f=(e=b+-40|0)-(i=a+8&7?-8-a&7:0)|0,l[82977]=f,i=a+i|0,l[82980]=i,l[i+4>>2]=1|f,l[4+(e+a|0)>>2]=40,l[82981]=l[83096];break f}if(!(8&v[e+12|0]|a>>>0<=i>>>0|f>>>0>i>>>0)){l[e+4>>2]=k+b,a=(e=i+8&7?-8-i&7:0)+i|0,l[82980]=a,e=(f=l[82977]+b|0)-e|0,l[82977]=e,l[a+4>>2]=1|e,l[4+(i+f|0)>>2]=40,l[82981]=l[83096];break f}}a>>>0<(k=l[82978])>>>0&&(l[82978]=a,k=0),f=a+b|0,e=332344;k:{b:{n:{s:{t:{c:{for(;;){if((0|f)!=l[e>>2]){if(e=l[e+8>>2])continue;break c}break}if(!(8&v[e+12|0]))break t}for(e=332344;;){if((f=l[e>>2])>>>0<=i>>>0&&(k=f+l[e+4>>2]|0)>>>0>i>>>0)break s;e=l[e+8>>2]}}if(l[e>>2]=a,l[e+4>>2]=l[e+4>>2]+b,l[4+(c=(a+8&7?-8-a&7:0)+a|0)>>2]=3|n,e=((a=f+(f+8&7?-8-f&7:0)|0)-c|0)-n|0,s=n+c|0,(0|a)==(0|i)){l[82980]=s,e=l[82977]+e|0,l[82977]=e,l[s+4>>2]=1|e;break b}if(l[82979]==(0|a)){l[82979]=s,e=l[82976]+e|0,l[82976]=e,l[s+4>>2]=1|e,l[e+s>>2]=e;break b}if(1==(3&(i=l[a+4>>2]))){o=-8&i;t:if(i>>>0<=255){if(k=i>>>3,i=l[a+8>>2],(0|(f=l[a+12>>2]))==(0|i)){l[82974]=l[82974]&Bi(-2,k);break t}l[i+12>>2]=f,l[f+8>>2]=i}else{if(t=l[a+24>>2],(0|(b=l[a+12>>2]))==(0|a))if((n=l[(f=a+20|0)>>2])||(n=l[(f=a+16|0)>>2])){for(;i=f,b=n,(n=l[(f=n+20|0)>>2])||(f=b+16|0,n=l[b+16>>2]););l[i>>2]=0}else b=0;else i=l[a+8>>2],l[i+12>>2]=b,l[b+8>>2]=i;if(t){i=l[a+28>>2];c:{if(l[(f=332200+(i<<2)|0)>>2]==(0|a)){if(l[f>>2]=b,b)break c;l[82975]=l[82975]&Bi(-2,i);break t}if(l[t+(l[t+16>>2]==(0|a)?16:20)>>2]=b,!b)break t}l[b+24>>2]=t,(i=l[a+16>>2])&&(l[b+16>>2]=i,l[i+24>>2]=b),(i=l[a+20>>2])&&(l[b+20>>2]=i,l[i+24>>2]=b)}}a=a+o|0,e=e+o|0}if(l[a+4>>2]=-2&l[a+4>>2],l[s+4>>2]=1|e,l[e+s>>2]=e,e>>>0<=255){e=331936+((a=e>>>3)<<3)|0,(i=l[82974])&(a=1<<a)?a=l[e+8>>2]:(l[82974]=a|i,a=e),l[e+8>>2]=s,l[a+12>>2]=s,l[s+12>>2]=e,l[s+8>>2]=a;break b}if(i=s,a=0,(f=e>>>8)&&(a=31,e>>>0>16777215||(a=28+((a=((n=(f<<=k=f+1048320>>>16&8)<<(a=f+520192>>>16&4))<<(f=n+245760>>>16&2)>>>15)-(f|a|k)|0)<<1|e>>>a+21&1)|0)),l[i+28>>2]=a,l[s+16>>2]=0,l[s+20>>2]=0,i=332200+(a<<2)|0,(f=l[82975])&(k=1<<a)){for(f=e<<(31==(0|a)?0:25-(a>>>1)|0),a=l[i>>2];;){if(i=a,(-8&l[a+4>>2])==(0|e))break n;if(a=f>>>29,f<<=1,!(a=l[16+(k=(4&a)+i|0)>>2]))break}l[k+16>>2]=s}else l[82975]=f|k,l[i>>2]=s;l[s+24>>2]=i,l[s+12>>2]=s,l[s+8>>2]=s;break b}for(s=(e=b+-40|0)-(f=a+8&7?-8-a&7:0)|0,l[82977]=s,f=a+f|0,l[82980]=f,l[f+4>>2]=1|s,l[4+(e+a|0)>>2]=40,l[82981]=l[83096],l[(f=(e=(k+(k+-39&7?39-k&7:0)|0)-47|0)>>>0<i+16>>>0?i:e)+4>>2]=27,e=l[83089],l[f+16>>2]=l[83088],l[f+20>>2]=e,e=l[83087],l[f+8>>2]=l[83086],l[f+12>>2]=e,l[83088]=f+8,l[83087]=b,l[83086]=a,l[83089]=0,e=f+24|0;l[e+4>>2]=7,a=e+8|0,e=e+4|0,a>>>0<k>>>0;);if((0|i)==(0|f))break f;if(l[f+4>>2]=-2&l[f+4>>2],k=f-i|0,l[i+4>>2]=1|k,l[f>>2]=k,k>>>0<=255){e=331936+((a=k>>>3)<<3)|0,(f=l[82974])&(a=1<<a)?a=l[e+8>>2]:(l[82974]=a|f,a=e),l[e+8>>2]=i,l[a+12>>2]=i,l[i+12>>2]=e,l[i+8>>2]=a;break f}if(l[i+16>>2]=0,l[i+20>>2]=0,a=i,e=0,(f=k>>>8)&&(e=31,k>>>0>16777215||(e=28+((e=((s=(f<<=b=f+1048320>>>16&8)<<(e=f+520192>>>16&4))<<(f=s+245760>>>16&2)>>>15)-(f|e|b)|0)<<1|k>>>e+21&1)|0)),l[a+28>>2]=e,a=332200+(e<<2)|0,(f=l[82975])&(b=1<<e)){for(e=k<<(31==(0|e)?0:25-(e>>>1)|0),a=l[a>>2];;){if(f=a,(0|k)==(-8&l[a+4>>2]))break k;if(a=e>>>29,e<<=1,!(a=l[16+(b=f+(4&a)|0)>>2]))break}l[b+16>>2]=i,l[i+24>>2]=f}else l[82975]=f|b,l[a>>2]=i,l[i+24>>2]=a;l[i+12>>2]=i,l[i+8>>2]=i;break f}e=l[i+8>>2],l[e+12>>2]=s,l[i+8>>2]=s,l[s+24>>2]=0,l[s+12>>2]=i,l[s+8>>2]=e}e=c+8|0;break e}e=l[f+8>>2],l[e+12>>2]=i,l[f+8>>2]=i,l[i+24>>2]=0,l[i+12>>2]=f,l[i+8>>2]=e}if(!((e=l[82977])>>>0<=n>>>0)){a=e-n|0,l[82977]=a,i=(e=l[82980])+n|0,l[82980]=i,l[i+4>>2]=1|a,l[e+4>>2]=3|n,e=e+8|0;break e}}l[82952]=48,e=0;break e}a:if(s){e=l[k+28>>2];i:{if(l[(f=332200+(e<<2)|0)>>2]==(0|k)){if(l[f>>2]=a,a)break i;t=Bi(-2,e)&t,l[82975]=t;break a}if(l[s+(l[s+16>>2]==(0|k)?16:20)>>2]=a,!a)break a}l[a+24>>2]=s,(e=l[k+16>>2])&&(l[a+16>>2]=e,l[e+24>>2]=a),(e=l[k+20>>2])&&(l[a+20>>2]=e,l[e+24>>2]=a)}a:if(i>>>0<=15)e=i+n|0,l[k+4>>2]=3|e,l[4+(e=e+k|0)>>2]=1|l[e+4>>2];else if(l[k+4>>2]=3|n,l[4+(f=k+n|0)>>2]=1|i,l[i+f>>2]=i,i>>>0<=255)e=331936+((a=i>>>3)<<3)|0,(i=l[82974])&(a=1<<a)?a=l[e+8>>2]:(l[82974]=a|i,a=e),l[e+8>>2]=f,l[a+12>>2]=f,l[f+12>>2]=e,l[f+8>>2]=a;else{a=f,e=0,(n=i>>>8)&&(e=31,i>>>0>16777215||(e=28+((e=((s=(n<<=b=n+1048320>>>16&8)<<(e=n+520192>>>16&4))<<(n=s+245760>>>16&2)>>>15)-(n|e|b)|0)<<1|i>>>e+21&1)|0)),l[a+28>>2]=e,l[f+16>>2]=0,l[f+20>>2]=0,a=332200+(e<<2)|0;i:{if((n=1<<e)&t){for(e=i<<(31==(0|e)?0:25-(e>>>1)|0),n=l[a>>2];;){if((-8&l[(a=n)+4>>2])==(0|i))break i;if(n=e>>>29,e<<=1,!(n=l[16+(b=(4&n)+a|0)>>2]))break}l[b+16>>2]=f}else l[82975]=n|t,l[a>>2]=f;l[f+24>>2]=a,l[f+12>>2]=f,l[f+8>>2]=f;break a}e=l[a+8>>2],l[e+12>>2]=f,l[a+8>>2]=f,l[f+24>>2]=0,l[f+12>>2]=a,l[f+8>>2]=e}e=k+8|0;break e}r:if(c){e=l[a+28>>2];a:{if(l[(i=332200+(e<<2)|0)>>2]==(0|a)){if(l[i>>2]=k,k)break a;l[82975]=Bi(-2,e)&o;break r}if(l[c+(l[c+16>>2]==(0|a)?16:20)>>2]=k,!k)break r}l[k+24>>2]=c,(e=l[a+16>>2])&&(l[k+16>>2]=e,l[e+24>>2]=k),(e=l[a+20>>2])&&(l[k+20>>2]=e,l[e+24>>2]=k)}f>>>0<=15?(e=f+n|0,l[a+4>>2]=3|e,l[4+(e=e+a|0)>>2]=1|l[e+4>>2]):(l[a+4>>2]=3|n,l[4+(n=a+n|0)>>2]=1|f,l[f+n>>2]=f,t&&(e=331936+((i=t>>>3)<<3)|0,k=l[82979],(i=1<<i)&b?i=l[e+8>>2]:(l[82974]=i|b,i=e),l[e+8>>2]=k,l[i+12>>2]=k,l[k+12>>2]=e,l[k+8>>2]=i),l[82979]=n,l[82976]=f),e=a+8|0}return ne=r+16|0,0|e}function Lb(e){var r=0,a=0,i=0,f=0,k=0,b=0,n=0;e:if(e){k=(i=e+-8|0)+(e=-8&(a=l[e+-4>>2]))|0;r:if(!(1&a)){if(!(3&a))break e;if((i=i-(a=l[i>>2])|0)>>>0<h[82978])break e;if(e=e+a|0,l[82979]==(0|i)){if(3==(3&(a=l[k+4>>2])))return l[82976]=e,l[k+4>>2]=-2&a,l[i+4>>2]=1|e,void(l[e+i>>2]=e)}else{if(a>>>0<=255){if(f=l[i+8>>2],a>>>=3,(0|(r=l[i+12>>2]))==(0|f)){l[82974]=l[82974]&Bi(-2,a);break r}l[f+12>>2]=r,l[r+8>>2]=f;break r}if(n=l[i+24>>2],(0|i)==(0|(a=l[i+12>>2])))if((r=l[(f=i+20|0)>>2])||(r=l[(f=i+16|0)>>2])){for(;b=f,(r=l[(f=(a=r)+20|0)>>2])||(f=a+16|0,r=l[a+16>>2]););l[b>>2]=0}else a=0;else r=l[i+8>>2],l[r+12>>2]=a,l[a+8>>2]=r;if(!n)break r;f=l[i+28>>2];a:{if(l[(r=332200+(f<<2)|0)>>2]==(0|i)){if(l[r>>2]=a,a)break a;l[82975]=l[82975]&Bi(-2,f);break r}if(l[n+(l[n+16>>2]==(0|i)?16:20)>>2]=a,!a)break r}if(l[a+24>>2]=n,(r=l[i+16>>2])&&(l[a+16>>2]=r,l[r+24>>2]=a),!(r=l[i+20>>2]))break r;l[a+20>>2]=r,l[r+24>>2]=a}}if(!(k>>>0<=i>>>0)&&1&(a=l[k+4>>2])){r:{if(!(2&a)){if(l[82980]==(0|k)){if(l[82980]=i,e=l[82977]+e|0,l[82977]=e,l[i+4>>2]=1|e,l[82979]!=(0|i))break e;return l[82976]=0,void(l[82979]=0)}if(l[82979]==(0|k))return l[82979]=i,e=l[82976]+e|0,l[82976]=e,l[i+4>>2]=1|e,void(l[e+i>>2]=e);e=(-8&a)+e|0;a:if(a>>>0<=255){if(a>>>=3,(0|(r=l[k+8>>2]))==(0|(f=l[k+12>>2]))){l[82974]=l[82974]&Bi(-2,a);break a}l[r+12>>2]=f,l[f+8>>2]=r}else{if(n=l[k+24>>2],(0|k)==(0|(a=l[k+12>>2])))if((r=l[(f=k+20|0)>>2])||(r=l[(f=k+16|0)>>2])){for(;b=f,(r=l[(f=(a=r)+20|0)>>2])||(f=a+16|0,r=l[a+16>>2]););l[b>>2]=0}else a=0;else r=l[k+8>>2],l[r+12>>2]=a,l[a+8>>2]=r;if(n){f=l[k+28>>2];i:{if(l[(r=332200+(f<<2)|0)>>2]==(0|k)){if(l[r>>2]=a,a)break i;l[82975]=l[82975]&Bi(-2,f);break a}if(l[n+(l[n+16>>2]==(0|k)?16:20)>>2]=a,!a)break a}l[a+24>>2]=n,(r=l[k+16>>2])&&(l[a+16>>2]=r,l[r+24>>2]=a),(r=l[k+20>>2])&&(l[a+20>>2]=r,l[r+24>>2]=a)}}if(l[i+4>>2]=1|e,l[e+i>>2]=e,l[82979]!=(0|i))break r;return void(l[82976]=e)}l[k+4>>2]=-2&a,l[i+4>>2]=1|e,l[e+i>>2]=e}if(e>>>0<=255)return a=331936+((e>>>=3)<<3)|0,(r=l[82974])&(e=1<<e)?e=l[a+8>>2]:(l[82974]=e|r,e=a),l[a+8>>2]=i,l[e+12>>2]=i,l[i+12>>2]=a,void(l[i+8>>2]=e);l[i+16>>2]=0,l[i+20>>2]=0,a=i,r=0,(f=e>>>8)&&(r=31,e>>>0>16777215||(r=f,r<<=f=f+1048320>>>16&8,r=28+((r=((r<<=n=r+520192>>>16&4)<<(b=r+245760>>>16&2)>>>15)-(b|f|n)|0)<<1|e>>>r+21&1)|0)),l[a+28>>2]=r,b=332200+(r<<2)|0,f=l[82975];r:if(f&(a=1<<r)){f=e<<(31==(0|r)?0:25-(r>>>1)|0),a=l[b>>2];a:{for(;;){if(r=a,(-8&l[a+4>>2])==(0|e))break a;if(a=f>>>29,f<<=1,!(a=l[16+(b=r+(4&a)|0)>>2]))break}l[b+16>>2]=i,l[i+12>>2]=i,l[i+24>>2]=r,l[i+8>>2]=i;break r}e=l[r+8>>2],l[e+12>>2]=i,l[r+8>>2]=i,l[i+24>>2]=0,l[i+12>>2]=r,l[i+8>>2]=e}else l[82975]=a|f,l[b>>2]=i,l[i+12>>2]=i,l[i+24>>2]=b,l[i+8>>2]=i;if(e=l[82982]+-1|0,l[82982]=e,!e){for(i=332352;i=(e=l[i>>2])+8|0,e;);l[82982]=-1}}}}function Hb(e,r){var a,i=0;if(1==(15&v[0|r]))return l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,void(l[e+12>>2]=0);a=Bb(24),l[a>>2]=1,i=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=i,i=l[r+12>>2],l[a+16>>2]=l[r+8>>2],l[a+20>>2]=i,l[e+8>>2]=a,l[e>>2]=0,l[e+4>>2]=0}function qb(e,r,a){var i,f=0,b=0;if(a>>>0>=8192)return G(0|e,0|r,0|a),e;i=e+a|0;e:if(3&(e^r))if(i>>>0<4)a=e;else if((f=i+-4|0)>>>0<e>>>0)a=e;else for(a=e;k[0|a]=v[0|r],k[a+1|0]=v[r+1|0],k[a+2|0]=v[r+2|0],k[a+3|0]=v[r+3|0],r=r+4|0,(a=a+4|0)>>>0<=f>>>0;);else{r:if((0|a)<1)a=e;else if(3&e)for(a=e;;){if(k[0|a]=v[0|r],r=r+1|0,(a=a+1|0)>>>0>=i>>>0)break r;if(!(3&a))break}else a=e;if(!((f=-4&i)>>>0<64||a>>>0>(b=f+-64|0)>>>0))for(;l[a>>2]=l[r>>2],l[a+4>>2]=l[r+4>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=l[r+12>>2],l[a+16>>2]=l[r+16>>2],l[a+20>>2]=l[r+20>>2],l[a+24>>2]=l[r+24>>2],l[a+28>>2]=l[r+28>>2],l[a+32>>2]=l[r+32>>2],l[a+36>>2]=l[r+36>>2],l[a+40>>2]=l[r+40>>2],l[a+44>>2]=l[r+44>>2],l[a+48>>2]=l[r+48>>2],l[a+52>>2]=l[r+52>>2],l[a+56>>2]=l[r+56>>2],l[a+60>>2]=l[r+60>>2],r=r- -64|0,(a=a- -64|0)>>>0<=b>>>0;);if(a>>>0>=f>>>0)break e;for(;l[a>>2]=l[r>>2],r=r+4|0,(a=a+4|0)>>>0<f>>>0;);}if(a>>>0<i>>>0)for(;k[0|a]=v[0|r],r=r+1|0,(0|i)!=(0|(a=a+1|0)););return e}function Yb(e,r,a){var i;ne=i=ne-16|0,l[i+12>>2]=a,ca(e,r,a),ne=i+16|0}function Wb(e){return 4!=(15&v[0|e])&&(P(17787,17172,146,43295),M()),m[e+8>>3]}function Gb(e){return 5!=(15&v[0|e])&&(P(19611,17172,745,43520),M()),l[e+8>>2]+16|0}function Xb(e){return e>>>0>=8&&(P(16873,17172,61,43263),M()),l[44132+(e<<2)>>2]}function Jb(e,r,a){var i,f,b=0,n=0;return ne=i=ne-112|0,l[(b=i)+72>>2]=0,l[b+76>>2]=0,l[b+104>>2]=0,l[b+96>>2]=0,l[b+100>>2]=0,l[b+88>>2]=0,l[b+92>>2]=0,l[b+80>>2]=0,l[b+84>>2]=0,jb(b+56|0,14910),n=l[e+12>>2],l[b+48>>2]=l[e+8>>2],l[b+52>>2]=n,n=l[e+4>>2],l[b+40>>2]=l[e>>2],l[b+44>>2]=n,mb(b+72|0,b+40|0,0,0,0,b+56|0),Ji(b+72|0),n=l[4+(f=b- -64|0)>>2],l[e+8>>2]=l[f>>2],l[e+12>>2]=n,n=l[b+60>>2],l[e>>2]=l[b+56>>2],l[e+4>>2]=n,n=l[e+12>>2],l[b+32>>2]=l[e+8>>2],l[b+36>>2]=n,n=l[e+4>>2],l[b+24>>2]=l[e>>2],l[b+28>>2]=n,b=on(n=Gb(b+24|0)),n=Ta(r,n,a),k[n+(r=a+-1|0)|0]=0,a>>>0<4|b>>>0<=r>>>0||(k[0|(r=(a=a+n|0)-3|0)]=11822,k[r+1|0]=46,k[a+-4|0]=46),r=l[e+12>>2],l[i+16>>2]=l[e+8>>2],l[i+20>>2]=r,r=l[e+4>>2],l[i+8>>2]=l[e>>2],l[i+12>>2]=r,zb(i+8|0),ne=i+112|0,n}function Vb(e,r,a){var i,f,b,n,s=0,t=0;ne=i=ne-80|0,b=v[0|r],l[i+64>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,t=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[i+67|0]=t,k[i+68|0]=t>>>8,k[i+69|0]=t>>>16,k[i+70|0]=t>>>24,n=l[r+12>>2],t=l[r+8>>2];e:if(!((f=15&b)>>>0>7)){r:switch(f-1|0){default:if(!t)break e;break;case 0:case 1:case 2:case 3:break e;case 4:case 5:case 6:}l[t>>2]=l[t>>2]+1}s=v[i+67|0]|v[i+68|0]<<8|v[i+69|0]<<16|v[i+70|0]<<24,k[i+59|0]=s,k[i+60|0]=s>>>8,k[i+61|0]=s>>>16,k[i+62|0]=s>>>24,l[i+56>>2]=l[i+64>>2],k[i+64|0]=b,s=l[i+56>>2],k[i+65|0]=s,k[i+66|0]=s>>>8,k[i+67|0]=s>>>16,k[i+68|0]=s>>>24,s=v[i+59|0]|v[i+60|0]<<8|v[i+61|0]<<16|v[i+62|0]<<24,k[i+68|0]=s,k[i+69|0]=s>>>8,k[i+70|0]=s>>>16,k[i+71|0]=s>>>24,l[i+76>>2]=n,l[i+72>>2]=t,6!=(0|f)&&(P(18173,17172,326,43311),M()),t=l[i+76>>2],l[i+48>>2]=l[i+72>>2],l[i+52>>2]=t,t=l[i+68>>2],l[i+40>>2]=l[i+64>>2],l[i+44>>2]=t,t=l[i+68>>2],zb(i+40|0),s=l[r+12>>2],l[i+32>>2]=l[r+8>>2],l[i+36>>2]=s,s=l[r+4>>2],l[i+24>>2]=l[r>>2],l[i+28>>2]=s,r=l[a+12>>2],l[i+16>>2]=l[a+8>>2],l[i+20>>2]=r,r=l[a+4>>2],l[i+8>>2]=l[a>>2],l[i+12>>2]=r,Dn(e,i+24|0,t,i+8|0),ne=i+80|0}function Kb(e,r,a){var i,f=0,b=0,n=0;ne=i=ne-32|0;e:{if(6==(15&v[0|r])){if((0|a)<0|l[r+4>>2]<=(0|a))l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0;else{if(a=d[r+2>>1]+a|0,f=l[r+8>>2],(0|a)>=l[f+4>>2])break e;b=v[16+(a=f+(a<<4)|0)|0],f=v[a+20|0]|v[a+21|0]<<8|v[a+22|0]<<16|v[a+23|0]<<24,k[i+27|0]=f,k[i+28|0]=f>>>8,k[i+29|0]=f>>>16,k[i+30|0]=f>>>24,l[i+24>>2]=v[a+17|0]|v[a+18|0]<<8|v[a+19|0]<<16|v[a+20|0]<<24,n=v[a+28|0]|v[a+29|0]<<8|v[a+30|0]<<16|v[a+31|0]<<24,a=v[a+24|0]|v[a+25|0]<<8|v[a+26|0]<<16|v[a+27|0]<<24;r:if(!((f=15&b)>>>0>7)){a:switch(f-1|0){default:if(!a)break r;break;case 0:case 1:case 2:case 3:break r;case 4:case 5:case 6:}l[a>>2]=l[a>>2]+1}f=v[i+27|0]|v[i+28|0]<<8|v[i+29|0]<<16|v[i+30|0]<<24,k[i+19|0]=f,k[i+20|0]=f>>>8,k[i+21|0]=f>>>16,k[i+22|0]=f>>>24,l[i+16>>2]=l[i+24>>2],k[0|e]=b,f=l[i+16>>2],k[e+1|0]=f,k[e+2|0]=f>>>8,k[e+3|0]=f>>>16,k[e+4|0]=f>>>24,f=v[i+19|0]|v[i+20|0]<<8|v[i+21|0]<<16|v[i+22|0]<<24,k[e+4|0]=f,k[e+5|0]=f>>>8,k[e+6|0]=f>>>16,k[e+7|0]=f>>>24,l[e+12>>2]=n,l[e+8>>2]=a}return e=l[r+12>>2],l[i+8>>2]=l[r+8>>2],l[i+12>>2]=e,e=l[r+4>>2],l[i>>2]=l[r>>2],l[i+4>>2]=e,zb(i),void(ne=i+32|0)}P(18173,17172,333,43327),M()}P(25056,17172,223,43809),M()}function Zb(e){var r,a,i=0;return ne=r=ne-16|0,6!=(15&v[0|e])&&(P(18173,17172,326,43311),M()),a=l[e+4>>2],i=l[e+12>>2],l[r+8>>2]=l[e+8>>2],l[r+12>>2]=i,i=l[e+4>>2],l[r>>2]=l[e>>2],l[r+4>>2]=i,zb(r),ne=r+16|0,a}function $b(e,r,a){var i,f=0;i=f=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=f;e:{r:{if(r=l[a>>2]){if(f=l[a+4>>2],a=i){if(l[a>>2])break r;if(l[r+4>>2])break e;l[a>>2]=r,l[r+4>>2]=a}else l[e>>2]=r;l[e+4>>2]=f}return}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function Qb(e,r,a,i){var f,k=0,b=0;ne=f=ne-112|0;e:{if(sb(a,a+i|0))k=l[r+12>>2],l[f+40>>2]=l[r+8>>2],l[f+44>>2]=k,k=l[r+4>>2],l[f+32>>2]=l[r>>2],l[f+36>>2]=k,Ff(f+96|0,f+32|0,a,i),a=l[f+108>>2],l[r+8>>2]=l[f+104>>2],l[r+12>>2]=a,a=l[f+100>>2],l[r>>2]=l[f+96>>2],l[r+4>>2]=a;else{if(ob(f+48|0,a,i),i=l[f+60>>2],a=l[f+56>>2],l[f+88>>2]=a,l[f+92>>2]=i,i=l[f+52>>2],k=l[f+48>>2],l[f+80>>2]=k,l[f+84>>2]=i,i=l[r+12>>2],l[f+72>>2]=l[r+8>>2],l[f+76>>2]=i,i=l[r+4>>2],l[f+64>>2]=l[r>>2],l[f+68>>2]=i,5!=(15&k))break e;i=l[a+8>>2],k=l[f+76>>2],l[f+24>>2]=l[f+72>>2],l[f+28>>2]=k,k=l[f+68>>2],l[f+16>>2]=l[f+64>>2],l[f+20>>2]=k,Ff(f+96|0,f+16|0,a+16|0,i>>>1),a=l[f+108>>2],l[f+72>>2]=l[f+104>>2],l[f+76>>2]=a,a=l[f+92>>2],l[f+8>>2]=l[f+88>>2],l[f+12>>2]=a,a=l[f+100>>2],l[f+64>>2]=l[f+96>>2],l[f+68>>2]=a,a=l[f+84>>2],l[f>>2]=l[f+80>>2],l[f+4>>2]=a,zb(f),a=l[f+76>>2],k=l[f+72>>2],l[f+104>>2]=k,l[f+108>>2]=a,i=l[f+68>>2],b=l[f+64>>2],l[f+96>>2]=b,l[f+100>>2]=i,l[r+8>>2]=k,l[r+12>>2]=a,l[r>>2]=b,l[r+4>>2]=i}return a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,void(ne=f+112|0)}P(19611,17172,745,43520),M()}function en(e,r,a,i){var f,k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0;ne=f=ne-208|0;e:{r:{a:{i:{f:{k:{b:{n:{s:{t:{if(7==(15&v[0|r])){if(5!=(15&v[0|a]))break t;if(k=l[a+12>>2],l[f+184>>2]=l[a+8>>2],l[f+188>>2]=k,k=l[a+4>>2],l[f+176>>2]=l[a>>2],l[f+180>>2]=k,k=l[r+12>>2],l[f+168>>2]=l[r+8>>2],l[f+172>>2]=k,k=l[r+4>>2],l[f+160>>2]=l[r>>2],l[f+164>>2]=k,Pe(f+192|0,f+160|0),k=l[f+204>>2],l[r+8>>2]=l[f+200>>2],l[r+12>>2]=k,k=l[f+196>>2],l[r>>2]=l[f+192>>2],l[r+4>>2]=k,k=l[a+12>>2],l[f+200>>2]=l[a+8>>2],l[f+204>>2]=k,k=l[a+4>>2],l[f+192>>2]=l[a>>2],l[f+196>>2]=k,7!=(15&v[0|r]))break s;d=l[r+4>>2],h=l[r+8>>2],a=l[f+204>>2],l[f+152>>2]=l[f+200>>2],l[f+156>>2]=a,a=l[f+196>>2],l[f+144>>2]=l[f+192>>2],l[f+148>>2]=a,k=Rk(f+144|0),a=l[f+188>>2],l[f+136>>2]=l[f+184>>2],l[f+140>>2]=a,a=l[f+180>>2],l[f+128>>2]=l[f+176>>2],l[f+132>>2]=a,_=v[f+176|0],m=l[f+184>>2],b=Rk(f+128|0);c:{o:if(c=d<<1,g=(h+w(d,40)|0)+((k&c+-1)<<2)|0,-1!=(0|(a=l[g+8>>2]))){if((0|a)<0|(0|d)<=(0|a))break a;n=m+16|0,o=5==(15&_);u:{for(;;){if(s=k=h+w(a,40)|0,a=k+8|0,(0|b)==l[k+12>>2]){if(!o)break r;if(5!=(15&v[k+16|0]))break e;if(u=v[k+24|0]|v[k+25|0]<<8|v[k+26|0]<<16|v[k+27|0]<<24,k=l[m+8>>2]>>>1,l[u+8>>2]>>>1==(0|k)&&!pn(n,u+16|0,k))break u}if(-1==(0|(a=l[s+8>>2])))break o;if(!((0|d)>(0|a)&&(0|a)>=0))break}break a}if(k=l[m>>2]+-1|0,l[m>>2]=k,k)break c;Lb(m);break c}if(a=l[f+188>>2],l[f+200>>2]=l[f+184>>2],l[f+204>>2]=a,a=l[f+180>>2],l[f+192>>2]=l[f+176>>2],l[f+196>>2]=a,(0|(k=l[h+4>>2]))!=(0|d)){if(-1==(0|k))a=0;else{if((0|k)<0|(0|d)<=(0|k))break a;a=8+(h+w(k,40)|0)|0}if(l[h+4>>2]=k+1,l[a>>2]=l[g+8>>2],l[g+8>>2]=k,k=l[f+204>>2],l[f+120>>2]=l[f+200>>2],l[f+124>>2]=k,k=l[f+196>>2],l[f+112>>2]=l[f+192>>2],l[f+116>>2]=k,l[a+4>>2]=Rk(f+112|0),k=l[f+196>>2],l[a+8>>2]=l[f+192>>2],l[a+12>>2]=k,k=l[f+204>>2],l[a+16>>2]=l[f+200>>2],l[a+20>>2]=k,a){l[a+32>>2]=0,l[a+36>>2]=0,l[a+24>>2]=0,l[a+28>>2]=0;break c}}if((0|(a=l[h>>2]))<=0)break n;if(1!=(0|a))break b;if((0|d)<1)break k;if(Ui(c)>>>0>=2)break k;for(t=Bb(8|w(d,96)),l[t>>2]=1,u=t+8|0,b=l[10944],n=l[10945],o=l[10946],s=l[10947],a=0;k=u+w(a,40)|0,l[k>>2]=a+-1,l[k+8>>2]=b,l[k+12>>2]=n,l[k+16>>2]=o,l[k+20>>2]=s,l[k+4>>2]=0,l[k+24>>2]=b,l[k+28>>2]=n,l[k+32>>2]=o,l[k+36>>2]=s,(0|c)!=(0|(a=a+1|0)););for(l[t+4>>2]=0,a=d<<2,wn(t+(8|w(d,80))|0,255,((0|a)>1?a:1)<<2),D=a+-1|0,S=8+(t+w(c,40)|0)|0;;){if(u=h+w(y,40)|0,1!=(15&v[(k=u)+16|0])){b=v[(a=k)+28|0]|v[a+29|0]<<8|v[a+30|0]<<16|v[a+31|0]<<24,s=v[a+24|0]|v[a+25|0]<<8|v[a+26|0]<<16|v[a+27|0]<<24,l[f+200>>2]=s,l[f+204>>2]=b,n=v[a+16|0]|v[a+17|0]<<8|v[a+18|0]<<16|v[a+19|0]<<24,o=v[a+20|0]|v[a+21|0]<<8|v[a+22|0]<<16|v[a+23|0]<<24,l[f+104>>2]=s,l[f+108>>2]=b,l[f+192>>2]=n,l[f+196>>2]=o,l[f+96>>2]=n,l[f+100>>2]=o,o=Rk(f+96|0),b=v[a+28|0]|v[a+29|0]<<8|v[a+30|0]<<16|v[a+31|0]<<24,s=v[a+24|0]|v[a+25|0]<<8|v[a+26|0]<<16|v[a+27|0]<<24,l[f+200>>2]=s,l[f+204>>2]=b,n=v[a+16|0]|v[a+17|0]<<8|v[a+18|0]<<16|v[a+19|0]<<24,a=v[a+20|0]|v[a+21|0]<<8|v[a+22|0]<<16|v[a+23|0]<<24,l[f+88>>2]=s,l[f+92>>2]=b,l[f+192>>2]=n,l[f+196>>2]=a,l[f+80>>2]=n,l[f+84>>2]=a,g=Rk(f+80|0);o:if(-1!=(0|(a=l[(E=S+((o&D)<<2)|0)>>2]))){if((0|a)<0|(0|c)<=(0|a))break a;n=(b=l[f+200>>2])+16|0,o=15&v[f+192|0];u:{for(;;){if(p=t+w(a,40)|0,l[p+12>>2]==(0|g)){if(5!=(0|o))break r;if(5!=(15&v[p+16|0]))break e;if(s=l[b+8>>2]>>>1,a=v[p+24|0]|v[p+25|0]<<8|v[p+26|0]<<16|v[p+27|0]<<24,(0|s)==l[a+8>>2]>>>1&&!pn(n,a+16|0,s))break u}if(-1==(0|(a=l[p+8>>2])))break o;if(!((0|c)>(0|a)&&(0|a)>=0))break}break a}P(27774,17172,990,44012),M()}if(a=v[k+28|0]|v[k+29|0]<<8|v[k+30|0]<<16|v[k+31|0]<<24,l[f+200>>2]=v[k+24|0]|v[k+25|0]<<8|v[k+26|0]<<16|v[k+27|0]<<24,l[f+204>>2]=a,a=v[k+20|0]|v[k+21|0]<<8|v[k+22|0]<<16|v[k+23|0]<<24,l[f+192>>2]=v[k+16|0]|v[k+17|0]<<8|v[k+18|0]<<16|v[k+19|0]<<24,l[f+196>>2]=a,(0|(k=l[t+4>>2]))==(0|c))break f;if(-1==(0|k))a=0;else{if((0|k)<0|(0|c)<=(0|k))break a;a=8+(t+w(k,40)|0)|0}if(l[t+4>>2]=k+1,l[a>>2]=l[E>>2],l[E>>2]=k,k=l[f+204>>2],l[f+72>>2]=l[f+200>>2],l[f+76>>2]=k,k=l[f+196>>2],l[f+64>>2]=l[f+192>>2],l[f+68>>2]=k,l[a+4>>2]=Rk(f- -64|0),k=l[f+196>>2],l[a+8>>2]=l[f+192>>2],l[a+12>>2]=k,k=l[f+204>>2],l[a+16>>2]=l[f+200>>2],l[a+20>>2]=k,!a)break f;k=l[u+44>>2],l[a+32>>2]=l[u+40>>2],l[a+36>>2]=k,k=l[u+36>>2],l[a+24>>2]=l[u+32>>2],l[a+28>>2]=k}if((0|d)==(0|(y=y+1|0)))break}Lb(h),l[r+8>>2]=t,l[r+4>>2]=c,l[r>>2]=7,a=l[f+188>>2],l[f+56>>2]=l[f+184>>2],l[f+60>>2]=a,a=l[f+180>>2],l[f+48>>2]=l[f+176>>2],l[f+52>>2]=a,k=Rk(f+48|0),a=l[f+188>>2],l[f+40>>2]=l[f+184>>2],l[f+44>>2]=a,a=l[f+180>>2],l[f+32>>2]=l[f+176>>2],l[f+36>>2]=a,o=Rk(f+32|0);o:if(-1!=(0|(a=l[(n=S+((k&D)<<2)|0)>>2]))){if((0|a)<0|(0|c)<=(0|a))break a;s=m+16|0,u=5==(15&_);u:{for(;;){if(b=t+w(a,40)|0,(0|o)==l[b+12>>2]){if(!u)break r;if(5!=(15&v[b+16|0]))break e;if(a=l[m+8>>2]>>>1,k=v[b+24|0]|v[b+25|0]<<8|v[b+26|0]<<16|v[b+27|0]<<24,(0|a)==l[k+8>>2]>>>1&&!pn(s,k+16|0,a))break u}if(-1==(0|(a=l[b+8>>2])))break o;if(!((0|c)>(0|a)&&(0|a)>=0))break}break a}P(26846,17172,1041,43976),M()}if(a=l[f+188>>2],l[f+200>>2]=l[f+184>>2],l[f+204>>2]=a,a=l[f+180>>2],l[f+192>>2]=l[f+176>>2],l[f+196>>2]=a,(0|(k=l[t+4>>2]))==(0|c))break i;if(-1==(0|k))a=0;else{if((0|k)<0|(0|c)<=(0|k))break a;a=8+(t+w(k,40)|0)|0}if(l[t+4>>2]=k+1,l[a>>2]=l[n>>2],l[n>>2]=k,k=l[f+204>>2],l[f+24>>2]=l[f+200>>2],l[f+28>>2]=k,k=l[f+196>>2],l[f+16>>2]=l[f+192>>2],l[f+20>>2]=k,l[a+4>>2]=Rk(f+16|0),k=l[f+196>>2],l[a+8>>2]=l[f+192>>2],l[a+12>>2]=k,k=l[f+204>>2],l[a+16>>2]=l[f+200>>2],l[a+20>>2]=k,!a)break i;l[a+32>>2]=0,l[a+36>>2]=0,l[a+24>>2]=0,l[a+28>>2]=0}return k=l[a+36>>2],l[f+8>>2]=l[a+32>>2],l[f+12>>2]=k,k=l[a+28>>2],l[f>>2]=l[a+24>>2],l[f+4>>2]=k,zb(f),k=l[i+12>>2],l[a+32>>2]=l[i+8>>2],l[a+36>>2]=k,k=l[i+4>>2],l[a+24>>2]=l[i>>2],l[a+28>>2]=k,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a,void(ne=f+208|0)}P(22066,17172,1128,43580),M()}P(22324,17172,1129,43580),M()}P(26604,17172,902,43961),M()}P(25425,17172,36,43824),M()}P(27532,17172,983,44012),M()}P(26339,17172,880,43930),M()}P(28033,17172,992,44012),M()}P(27127,17172,1043,43976),M()}P(28228,17172,925,44064),M()}P(25781,17172,606,44115),M()}P(28746,17172,607,44115),M()}function rn(e){var r;l[e>>2]=6,l[e+4>>2]=0,r=Bb(272),l[r+8>>2]=16,l[r>>2]=1,l[r+4>>2]=0,l[e+8>>2]=r}function an(e,r){return(e=Ub(e,r))||(ak(),M()),e}function fn(e,r){var a=0,i=0;a=v[0|e],i=v[0|r];e:if(!(!a|(0|a)!=(0|i)))for(;;){if(i=v[r+1|0],!(a=v[e+1|0]))break e;if(r=r+1|0,e=e+1|0,(0|a)!=(0|i))break}return a-i|0}function kn(e){var r=0,a=0;e:if(e){r:{a:{i:{f:{k:{for(;;){b:{if((r=l[e>>2])+-8>>>0>=2){if(r>>>0>7)break r;n:switch(r-1|0){case 1:case 2:break r;case 6:break a;case 3:break i;case 5:break f;case 4:break k;case 0:break b}if(!l[e+16>>2])break r;if(!(r=l[e+4>>2])|(0|r)==(e+20|0))break r;Lb(r);break r}if(kn(l[e+4>>2]),r=l[e+8>>2],Lb(e),e=r,r)continue;break e}break}if(2&v[e+4|0])break e;if(!(r=l[e+40>>2]))break r;(a=l[r>>2])&&Lb(a),Lb(r);break r}if(!(r=l[e+8>>2]))break r;kn(r);break r}if(!(r=l[e+20>>2]))break r;kn(r);break r}if(!(r=l[e+36>>2]))break r;Lb(r);break r}(r=l[e+8>>2])&&kn(r)}Lb(e)}}function bn(e,r){var a=0;if(l[r+76>>2]<0)return k[r+75|0]==(255&e)||(a=l[r+20>>2])>>>0>=h[r+16>>2]?void Dk(r,e):(l[r+20>>2]=a+1,void(k[0|a]=e));k[r+75|0]==(255&e)||(a=l[r+20>>2])>>>0>=h[r+16>>2]?Dk(r,e):(l[r+20>>2]=a+1,k[0|a]=e)}function nn(e,r,a){var i=0,f=0;e:if((0|e)!=(0|r)){if(!(r+a>>>0>e>>>0&&(f=e+a|0)>>>0>r>>>0))return void qb(e,r,a);if(i=3&(e^r),e>>>0<r>>>0){if(!i){if(3&e)for(;;){if(!a)break e;if(k[0|e]=v[0|r],r=r+1|0,a=a+-1|0,!(3&(e=e+1|0)))break}if(!(a>>>0<=3)){for(i=a;l[e>>2]=l[r>>2],r=r+4|0,e=e+4|0,(i=i+-4|0)>>>0>3;);a&=3}}if(a)for(;k[0|e]=v[0|r],e=e+1|0,r=r+1|0,a=a+-1|0;);}else{if(!i){if(3&f)for(;;){if(!a)break e;if(k[0|(i=(a=a+-1|0)+e|0)]=v[r+a|0],!(3&i))break}if(!(a>>>0<=3))for(;l[(a=a+-4|0)+e>>2]=l[r+a>>2],a>>>0>3;);}if(!a)break e;for(;k[(a=a+-1|0)+e|0]=v[r+a|0],a;);}}}function sn(e){var r=0;if(e=l[e>>2])for(;r=l[e>>2],Wk(e),e=r;);}function tn(e,r){var a;ne=a=ne-16|0,l[a+12>>2]=r,Wa(l[75261],e,r),ne=a+16|0}function cn(e,r,a,i){var f;return(0|(f=w(r,a)))==(0|(l[i+76>>2],e=Ak(e,f,i)))?r?a:0:(e>>>0)/(r>>>0)|0}function on(e){var r=0,a=0,i=0;e:{r:if(3&(r=e)){if(!v[0|e])break e;for(;;){if(!(3&(r=r+1|0)))break r;if(!v[0|r])break}break e}for(;a=r,r=r+4|0,!((-1^(i=l[a>>2]))&i+-16843009&-2139062144););if(255&i)for(;i=v[a+1|0],a=r=a+1|0,i;);else r=a}return r-e|0}function un(e,r){var a,i=0;2&v[34344]||(P(14782,14282,147,35402),M()),a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=0,l[a>>2]=0,l[a+4>>2]=0,l[a+76>>2]=0,l[a+80>>2]=0,l[a+68>>2]=-1,l[a+72>>2]=-1,l[a+60>>2]=0,l[a+64>>2]=0,l[a+52>>2]=-1,l[a+56>>2]=-1,l[a+48>>2]=0,l[a+84>>2]=0,l[a+88>>2]=0,i=l[r+4>>2],l[a+24>>2]=l[r>>2],l[a+28>>2]=i,i=l[r+12>>2],l[a+32>>2]=l[r+8>>2],l[a+36>>2]=i,l[e+4>>2]=a,l[e>>2]=a}function ln(e,r){var a;1!=l[12+(r>>>0<41?w(r,24)+34336|0:35320)>>2]&&(P(1044,14282,141,35388),M()),a=Bb(104),l[a+96>>2]=-1,l[a+8>>2]=r,l[a>>2]=0,l[a+4>>2]=0,l[a+76>>2]=0,l[a+80>>2]=0,l[a+68>>2]=-1,l[a+72>>2]=-1,l[a+60>>2]=0,l[a+64>>2]=0,l[a+52>>2]=-1,l[a+56>>2]=-1,l[a+48>>2]=0,l[a+84>>2]=0,l[a+88>>2]=0,l[e>>2]=a,l[e+4>>2]=a}function vn(e){var r,a,i=0;return ne=r=ne-16|0,5!=(15&v[0|e])&&(P(19611,17172,634,43384),M()),a=l[l[e+8>>2]+8>>2],i=l[e+12>>2],l[r+8>>2]=l[e+8>>2],l[r+12>>2]=i,i=l[e+4>>2],l[r>>2]=l[e>>2],l[r+4>>2]=i,zb(r),ne=r+16|0,a>>>1}function dn(e,r,a){var i,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0;ne=i=ne-96|0;e:{r:{a:{i:{if(7==(15&v[0|r])){if(5!=(15&(t=v[0|a])))break i;if(b=v[(f=a)+5|0]|v[f+6|0]<<8|v[f+7|0]<<16|v[f+8|0]<<24,l[i+64>>2]=v[f+1|0]|v[f+2|0]<<8|v[f+3|0]<<16|v[f+4|0]<<24,l[i+68>>2]=b,b=v[f+12|0]|v[f+13|0]<<8|v[f+14|0]<<16|v[f+15|0]<<24,n=v[f+8|0]|v[f+9|0]<<8|v[f+10|0]<<16|v[f+11|0]<<24,k[i+71|0]=n,k[i+72|0]=n>>>8,k[i+73|0]=n>>>16,k[i+74|0]=n>>>24,k[i+75|0]=b,k[i+76|0]=b>>>8,k[i+77|0]=b>>>16,k[i+78|0]=b>>>24,c=l[r+8>>2],n=l[r+4>>2],k[i+80|0]=t,b=v[f+12|0]|v[f+13|0]<<8|v[f+14|0]<<16|v[f+15|0]<<24,s=v[f+8|0]|v[f+9|0]<<8|v[f+10|0]<<16|v[f+11|0]<<24,k[i+88|0]=s,k[i+89|0]=s>>>8,k[i+90|0]=s>>>16,k[i+91|0]=s>>>24,k[i+92|0]=b,k[i+93|0]=b>>>8,k[i+94|0]=b>>>16,k[i+95|0]=b>>>24,b=v[f+5|0]|v[f+6|0]<<8|v[f+7|0]<<16|v[f+8|0]<<24,f=v[f+1|0]|v[f+2|0]<<8|v[f+3|0]<<16|v[f+4|0]<<24,k[i+81|0]=f,k[i+82|0]=f>>>8,k[i+83|0]=f>>>16,k[i+84|0]=f>>>24,k[i+85|0]=b,k[i+86|0]=b>>>8,k[i+87|0]=b>>>16,k[i+88|0]=b>>>24,f=l[i+92>>2],l[i+56>>2]=l[i+88>>2],l[i+60>>2]=f,f=l[i+84>>2],l[i+48>>2]=l[i+80>>2],l[i+52>>2]=f,s=Rk(i+48|0),f=v[i+75|0]|v[i+76|0]<<8|v[i+77|0]<<16|v[i+78|0]<<24,b=v[i+71|0]|v[i+72|0]<<8|v[i+73|0]<<16|v[i+74|0]<<24,k[i+88|0]=b,k[i+89|0]=b>>>8,k[i+90|0]=b>>>16,k[i+91|0]=b>>>24,k[i+92|0]=f,k[i+93|0]=f>>>8,k[i+94|0]=f>>>16,k[i+95|0]=f>>>24,f=l[i+68>>2],b=l[i+64>>2],k[i+81|0]=b,k[i+82|0]=b>>>8,k[i+83|0]=b>>>16,k[i+84|0]=b>>>24,k[i+85|0]=f,k[i+86|0]=f>>>8,k[i+87|0]=f>>>16,k[i+88|0]=f>>>24,f=l[i+92>>2],l[i+40>>2]=l[i+88>>2],l[i+44>>2]=f,k[i+80|0]=t,f=l[i+84>>2],l[i+32>>2]=l[i+80>>2],l[i+36>>2]=f,t=Rk(i+32|0),f=0,-1==(0|(b=l[8+((c+w(n,40)|0)+((s&(n<<1)-1)<<2)|0)>>2])))break r;if((0|b)<0|(0|n)<=(0|b))break e;for(u=(s=l[i+88>>2])+16|0;;){if(f=8+(b=c+w(b,40)|0)|0,l[b+12>>2]==(0|t)){if(5!=(15&v[b+16|0]))break a;if(o=l[s+8>>2]>>>1,b=v[b+24|0]|v[b+25|0]<<8|v[b+26|0]<<16|v[b+27|0]<<24,(0|o)==l[b+8>>2]>>>1&&!pn(u,b+16|0,o))break r}if(-1==(0|(b=l[f>>2]))){f=0;break r}if(!((0|n)>(0|b)&&(0|b)>=0))break}break e}P(22066,17172,1103,43552),M()}P(22324,17172,1104,43552),M()}P(28746,17172,607,44115),M()}if(f){n=v[0|(f=f?f+24|0:0)],b=v[f+4|0]|v[f+5|0]<<8|v[f+6|0]<<16|v[f+7|0]<<24,k[i+83|0]=b,k[i+84|0]=b>>>8,k[i+85|0]=b>>>16,k[i+86|0]=b>>>24,l[i+80>>2]=v[f+1|0]|v[f+2|0]<<8|v[f+3|0]<<16|v[f+4|0]<<24,s=v[f+12|0]|v[f+13|0]<<8|v[f+14|0]<<16|v[f+15|0]<<24,f=v[f+8|0]|v[f+9|0]<<8|v[f+10|0]<<16|v[f+11|0]<<24;r:if(!((b=15&n)>>>0>7)){a:switch(b-1|0){default:if(!f)break r;break;case 0:case 1:case 2:case 3:break r;case 4:case 5:case 6:}l[f>>2]=l[f>>2]+1}b=v[i+83|0]|v[i+84|0]<<8|v[i+85|0]<<16|v[i+86|0]<<24,k[i+67|0]=b,k[i+68|0]=b>>>8,k[i+69|0]=b>>>16,k[i+70|0]=b>>>24,l[i+64>>2]=l[i+80>>2],k[0|e]=n,b=l[i+64>>2],k[e+1|0]=b,k[e+2|0]=b>>>8,k[e+3|0]=b>>>16,k[e+4|0]=b>>>24,b=v[i+67|0]|v[i+68|0]<<8|v[i+69|0]<<16|v[i+70|0]<<24,k[e+4|0]=b,k[e+5|0]=b>>>8,k[e+6|0]=b>>>16,k[e+7|0]=b>>>24,l[e+12>>2]=s,l[e+8>>2]=f}else l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0;return e=l[r+12>>2],l[i+24>>2]=l[r+8>>2],l[i+28>>2]=e,e=l[r+4>>2],l[i+16>>2]=l[r>>2],l[i+20>>2]=e,zb(i+16|0),e=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=e,e=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=e,zb(i),void(ne=i+96|0)}P(28228,17172,925,44064),M()}function hn(e,r){return e=Qe(e,r),v[0|e]==(255&r)?e:0}function mn(e){var r,a,i,f,k=0,b=0;r=Bb(392),l[r+8>>2]=-1,l[r>>2]=1,f=k=l[10945],a=l[10944],l[r+16>>2]=a,l[r+20>>2]=k,k=b=l[10947],i=l[10946],l[r+24>>2]=i,l[r+28>>2]=k,l[r+12>>2]=0,l[r+32>>2]=a,l[r+36>>2]=f,l[r+40>>2]=i,l[r+44>>2]=k,l[r+48>>2]=0,l[r+56>>2]=a,l[r+60>>2]=f,l[(b=r- -64|0)>>2]=i,l[b+4>>2]=k,l[r+52>>2]=0,l[r+72>>2]=a,l[r+76>>2]=f,l[r+80>>2]=i,l[r+84>>2]=k,l[r+88>>2]=1,l[r+96>>2]=a,l[r+100>>2]=f,l[r+104>>2]=i,l[r+108>>2]=k,l[r+92>>2]=0,l[r+120>>2]=i,l[r+124>>2]=k,l[r+112>>2]=a,l[r+116>>2]=f,l[r+128>>2]=2,l[r+144>>2]=i,l[r+148>>2]=k,l[r+136>>2]=a,l[r+140>>2]=f,l[r+132>>2]=0,l[r+160>>2]=i,l[r+164>>2]=k,l[r+152>>2]=a,l[r+156>>2]=f,l[r+168>>2]=3,l[r+184>>2]=i,l[r+188>>2]=k,l[r+176>>2]=a,l[r+180>>2]=f,l[r+172>>2]=0,l[r+200>>2]=i,l[r+204>>2]=k,l[r+192>>2]=a,l[r+196>>2]=f,l[r+208>>2]=4,l[r+224>>2]=i,l[r+228>>2]=k,l[r+216>>2]=a,l[r+220>>2]=f,l[r+212>>2]=0,l[r+232>>2]=a,l[r+236>>2]=f,l[r+240>>2]=i,l[r+244>>2]=k,l[r+248>>2]=5,l[r+264>>2]=i,l[r+268>>2]=k,l[r+256>>2]=a,l[r+260>>2]=f,l[r+252>>2]=0,l[r+280>>2]=i,l[r+284>>2]=k,l[r+272>>2]=a,l[r+276>>2]=f,l[r+288>>2]=6,l[r+304>>2]=i,l[r+308>>2]=k,l[r+296>>2]=a,l[r+300>>2]=f,l[r+292>>2]=0,l[r+320>>2]=i,l[r+324>>2]=k,l[r+312>>2]=a,l[r+316>>2]=f,l[r+4>>2]=0,l[r+384>>2]=-1,l[r+388>>2]=-1,l[r+376>>2]=-1,l[r+380>>2]=-1,l[r+368>>2]=-1,l[r+372>>2]=-1,l[r+360>>2]=-1,l[r+364>>2]=-1,l[r+352>>2]=-1,l[r+356>>2]=-1,l[r+344>>2]=-1,l[r+348>>2]=-1,l[r+336>>2]=-1,l[r+340>>2]=-1,l[r+328>>2]=-1,l[r+332>>2]=-1,l[e+8>>2]=r,l[e>>2]=7,l[e+4>>2]=8}function wn(e,r,a){var i=0,f=0,b=0,n=0;if(a&&(k[(i=e+a|0)-1|0]=r,k[0|e]=r,!(a>>>0<3||(k[i+-2|0]=r,k[e+1|0]=r,k[i+-3|0]=r,k[e+2|0]=r,a>>>0<7||(k[i+-4|0]=r,k[e+3|0]=r,a>>>0<9||(f=(i=0-e&3)+e|0,r=w(255&r,16843009),l[f>>2]=r,l[(i=(a=a-i&-4)+f|0)-4>>2]=r,a>>>0<9||(l[f+8>>2]=r,l[f+4>>2]=r,l[i+-8>>2]=r,l[i+-12>>2]=r,a>>>0<25||(l[f+24>>2]=r,l[f+20>>2]=r,l[f+16>>2]=r,l[f+12>>2]=r,l[i+-16>>2]=r,l[i+-20>>2]=r,l[i+-24>>2]=r,l[i+-28>>2]=r,(a=a-(n=4&f|24)|0)>>>0<32))))))))for(i=r,b=r,r=f+n|0;l[r+24>>2]=b,l[r+28>>2]=i,l[r+16>>2]=b,l[r+20>>2]=i,l[r+8>>2]=b,l[r+12>>2]=i,l[r>>2]=b,l[r+4>>2]=i,r=r+32|0,(a=a+-32|0)>>>0>31;);return e}function pn(e,r,a){var i=0,f=0,k=0;e:if(a){for(;;){if((0|(i=v[0|e]))==(0|(f=v[0|r]))){if(r=r+1|0,e=e+1|0,a=a+-1|0)continue;break e}break}k=i-f|0}return k}function gn(e,r){var a,i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,h=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,A=0,x=0,T=0,R=0;ne=a=ne-192|0;e:{r:{a:{p=15&(h=v[0|e]),f=v[0|r];i:if((0|p)==(15&f))if(4!=(0|p))if((0|f)!=(0|h)|l[e+4>>2]!=l[r+4>>2]|l[e+8>>2]!=l[r+8>>2])if((h=p+-5|0)>>>0>2)E=1;else{f:switch(h-1|0){case 0:if(6==(0|p)){if((0|(u=l[r+4>>2]))!=l[e+4>>2])break i;if(b=l[r+8>>2],s=l[e+8>>2],(0|(i=d[e+2>>1]))==(0|(F=d[r+2>>1]))&&(E=1,(0|b)==(0|s)))break i;if(E=1,(0|u)<1)break i;for(y=a+160|1,h=D=a+176|1;;){k:{if((0|(f=i+g|0))<l[s+4>>2]){n=v[16+(o=s+(f<<4)|0)|0],f=v[o+20|0]|v[o+21|0]<<8|v[o+22|0]<<16|v[o+23|0]<<24,k[a+131|0]=f,k[a+132|0]=f>>>8,k[a+133|0]=f>>>16,k[a+134|0]=f>>>24,l[a+128>>2]=v[o+17|0]|v[o+18|0]<<8|v[o+19|0]<<16|v[o+20|0]<<24,p=v[o+28|0]|v[o+29|0]<<8|v[o+30|0]<<16|v[o+31|0]<<24,o=v[o+24|0]|v[o+25|0]<<8|v[o+26|0]<<16|v[o+27|0]<<24;b:if(!((f=15&n)>>>0>7)){n:switch(f-1|0){default:if(!o)break b;break;case 0:case 1:case 2:case 3:break b;case 4:case 5:case 6:}l[o>>2]=l[o>>2]+1}if(k[a+176|0]=n,f=h,n=v[a+131|0]|v[a+132|0]<<8|v[a+133|0]<<16|v[a+134|0]<<24,k[f+3|0]=n,k[f+4|0]=n>>>8,k[f+5|0]=n>>>16,k[f+6|0]=n>>>24,f=l[a+128>>2],k[0|D]=f,k[D+1|0]=f>>>8,k[D+2|0]=f>>>16,k[D+3|0]=f>>>24,l[a+188>>2]=p,l[a+184>>2]=o,c=0,(0|u)>(0|g)){if((0|(f=g+F|0))>=l[b+4>>2])break r;c=16+(b+(f<<4)|0)|0}n=v[0|c],l[a+128>>2]=v[c+1|0]|v[c+2|0]<<8|v[c+3|0]<<16|v[c+4|0]<<24,f=v[c+4|0]|v[c+5|0]<<8|v[c+6|0]<<16|v[c+7|0]<<24,k[a+131|0]=f,k[a+132|0]=f>>>8,k[a+133|0]=f>>>16,k[a+134|0]=f>>>24,p=v[c+12|0]|v[c+13|0]<<8|v[c+14|0]<<16|v[c+15|0]<<24,o=v[c+8|0]|v[c+9|0]<<8|v[c+10|0]<<16|v[c+11|0]<<24;b:if(!((f=15&n)>>>0>7)){n:switch(f-1|0){default:if(!o)break b;break;case 0:case 1:case 2:case 3:break b;case 4:case 5:case 6:}l[o>>2]=l[o>>2]+1}if(k[a+160|0]=n,f=v[a+131|0]|v[a+132|0]<<8|v[a+133|0]<<16|v[a+134|0]<<24,k[y+3|0]=f,k[y+4|0]=f>>>8,k[y+5|0]=f>>>16,k[y+6|0]=f>>>24,f=l[a+128>>2],k[0|y]=f,k[y+1|0]=f>>>8,k[y+2|0]=f>>>16,k[y+3|0]=f>>>24,f=l[a+188>>2],l[a+56>>2]=l[a+184>>2],l[a+60>>2]=f,l[a+172>>2]=p,l[a+168>>2]=o,f=l[a+172>>2],l[a+40>>2]=l[a+168>>2],l[a+44>>2]=f,f=l[a+180>>2],l[a+48>>2]=l[a+176>>2],l[a+52>>2]=f,f=l[a+164>>2],l[a+32>>2]=l[a+160>>2],l[a+36>>2]=f,gn(a+48|0,a+32|0))break k;E=0;break i}break r}if((0|u)==(0|(g=g+1|0)))break}break i}P(18922,17172,210,43792),M();case 1:if(7==(0|p)){if(F=l[e+8>>2],T=l[e+4>>2],A=l[r+8>>2],(0|(S=l[r+4>>2]))>0)for(;R=(1!=(15&v[16+(A+w(c,40)|0)|0]))+R|0,(0|S)!=(0|(c=c+1|0)););if((0|T)>0)for(D=(S<<1)-1|0,o=8+(A+w(S,40)|0)|0,_=a+128|1,p=a+176|1,h=f=a+160|1;;){if(t=w(x,40)+F|0,1!=(0|(n=15&(s=v[t+16|0])))){b=v[t+28|0]|v[t+29|0]<<8|v[t+30|0]<<16|v[t+31|0]<<24,i=v[t+24|0]|v[t+25|0]<<8|v[t+26|0]<<16|v[t+27|0]<<24,k[a+151|0]=i,k[a+152|0]=i>>>8,k[a+153|0]=i>>>16,k[a+154|0]=i>>>24,k[a+155|0]=b,k[a+156|0]=b>>>8,k[a+157|0]=b>>>16,k[a+158|0]=b>>>24,i=v[t+21|0]|v[t+22|0]<<8|v[t+23|0]<<16|v[t+24|0]<<24,l[a+144>>2]=v[t+17|0]|v[t+18|0]<<8|v[t+19|0]<<16|v[t+20|0]<<24,l[a+148>>2]=i;k:{b:{if(5==(0|n)){if(k[a+176|0]=s,b=v[a+155|0]|v[a+156|0]<<8|v[a+157|0]<<16|v[a+158|0]<<24,i=p,n=v[a+151|0]|v[a+152|0]<<8|v[a+153|0]<<16|v[a+154|0]<<24,k[i+7|0]=n,k[i+8|0]=n>>>8,k[i+9|0]=n>>>16,k[i+10|0]=n>>>24,k[i+11|0]=b,k[i+12|0]=b>>>8,k[i+13|0]=b>>>16,k[i+14|0]=b>>>24,b=l[a+148>>2],n=l[a+144>>2],k[0|i]=n,k[i+1|0]=n>>>8,k[i+2|0]=n>>>16,k[i+3|0]=n>>>24,k[i+4|0]=b,k[i+5|0]=b>>>8,k[i+6|0]=b>>>16,k[i+7|0]=b>>>24,n=l[a+188>>2],l[a+120>>2]=l[a+184>>2],l[a+124>>2]=n,n=l[a+180>>2],l[a+112>>2]=l[a+176>>2],l[a+116>>2]=n,n=Rk(a+112|0),k[a+176|0]=s,b=v[a+155|0]|v[a+156|0]<<8|v[a+157|0]<<16|v[a+158|0]<<24,s=v[a+151|0]|v[a+152|0]<<8|v[a+153|0]<<16|v[a+154|0]<<24,k[i+7|0]=s,k[i+8|0]=s>>>8,k[i+9|0]=s>>>16,k[i+10|0]=s>>>24,k[i+11|0]=b,k[i+12|0]=b>>>8,k[i+13|0]=b>>>16,k[i+14|0]=b>>>24,b=l[a+148>>2],s=l[a+144>>2],k[0|i]=s,k[i+1|0]=s>>>8,k[i+2|0]=s>>>16,k[i+3|0]=s>>>24,k[i+4|0]=b,k[i+5|0]=b>>>8,k[i+6|0]=b>>>16,k[i+7|0]=b>>>24,i=l[a+188>>2],l[a+104>>2]=l[a+184>>2],l[a+108>>2]=i,i=l[a+180>>2],l[a+96>>2]=l[a+176>>2],l[a+100>>2]=i,u=Rk(a+96|0),g=0,-1==(0|(c=l[((n&D)<<2)+o>>2])))break k;if((0|c)<0|(0|S)<=(0|c))break e;for(s=(b=l[a+184>>2])+16|0;;){if(g=8+(i=A+w(c,40)|0)|0,(0|u)==l[i+12>>2]){if(5!=(15&v[i+16|0]))break b;if(n=l[b+8>>2]>>>1,i=v[i+24|0]|v[i+25|0]<<8|v[i+26|0]<<16|v[i+27|0]<<24,(0|n)==l[i+8>>2]>>>1&&!pn(s,i+16|0,n))break k}if(-1==(0|(c=l[g>>2]))){g=0;break k}if(!((0|S)>(0|c)&&(0|c)>=0))break}break e}P(22324,17172,960,43945),M()}P(28746,17172,607,44115),M()}if(!g)break i;u=g?g+24|0:0,s=v[t+32|0],i=v[t+36|0]|v[t+37|0]<<8|v[t+38|0]<<16|v[t+39|0]<<24,k[a+179|0]=i,k[a+180|0]=i>>>8,k[a+181|0]=i>>>16,k[a+182|0]=i>>>24,l[a+176>>2]=v[t+33|0]|v[t+34|0]<<8|v[t+35|0]<<16|v[t+36|0]<<24,n=v[t+44|0]|v[t+45|0]<<8|v[t+46|0]<<16|v[t+47|0]<<24,b=v[t+40|0]|v[t+41|0]<<8|v[t+42|0]<<16|v[t+43|0]<<24;k:if(!((i=15&s)>>>0>7)){b:switch(i-1|0){default:if(!b)break k;break;case 0:case 1:case 2:case 3:break k;case 4:case 5:case 6:}l[b>>2]=l[b>>2]+1}k[a+160|0]=s,i=h,s=v[a+179|0]|v[a+180|0]<<8|v[a+181|0]<<16|v[a+182|0]<<24,k[i+3|0]=s,k[i+4|0]=s>>>8,k[i+5|0]=s>>>16,k[i+6|0]=s>>>24,i=f,s=l[a+176>>2],k[0|i]=s,k[i+1|0]=s>>>8,k[i+2|0]=s>>>16,k[i+3|0]=s>>>24,l[a+172>>2]=n,l[a+168>>2]=b,s=v[0|u],i=v[u+4|0]|v[u+5|0]<<8|v[u+6|0]<<16|v[u+7|0]<<24,k[a+179|0]=i,k[a+180|0]=i>>>8,k[a+181|0]=i>>>16,k[a+182|0]=i>>>24,l[a+176>>2]=v[u+1|0]|v[u+2|0]<<8|v[u+3|0]<<16|v[u+4|0]<<24,n=v[u+12|0]|v[u+13|0]<<8|v[u+14|0]<<16|v[u+15|0]<<24,b=v[u+8|0]|v[u+9|0]<<8|v[u+10|0]<<16|v[u+11|0]<<24;k:if(!((i=15&s)>>>0>7)){b:switch(i-1|0){default:if(!b)break k;break;case 0:case 1:case 2:case 3:break k;case 4:case 5:case 6:}l[b>>2]=l[b>>2]+1}if(k[a+128|0]=s,i=v[a+179|0]|v[a+180|0]<<8|v[a+181|0]<<16|v[a+182|0]<<24,k[_+3|0]=i,k[_+4|0]=i>>>8,k[_+5|0]=i>>>16,k[_+6|0]=i>>>24,i=l[a+176>>2],k[0|_]=i,k[_+1|0]=i>>>8,k[_+2|0]=i>>>16,k[_+3|0]=i>>>24,i=l[a+172>>2],l[a+88>>2]=l[a+168>>2],l[a+92>>2]=i,l[a+140>>2]=n,l[a+136>>2]=b,i=l[a+140>>2],l[a+72>>2]=l[a+136>>2],l[a+76>>2]=i,i=l[a+164>>2],l[a+80>>2]=l[a+160>>2],l[a+84>>2]=i,i=l[a+132>>2],l[a+64>>2]=l[a+128>>2],l[a+68>>2]=i,!gn(a+80|0,a- -64|0))break i;y=y+1|0}if(!((0|(x=x+1|0))<(0|T)))break}E=(0|y)==(0|R);break i}P(26604,17172,912,44048),M()}if(5!=(0|p))break a;f=l[e+8>>2],h=l[f+8>>2]>>>1,p=l[r+8>>2],(0|h)==l[p+8>>2]>>>1&&(E=!pn(f+16|0,p+16|0,h))}else E=1;else E=m[e+8>>3]==m[r+8>>3];return h=l[e+12>>2],l[a+24>>2]=l[e+8>>2],l[a+28>>2]=h,h=l[e+4>>2],l[a+16>>2]=l[e>>2],l[a+20>>2]=h,zb(a+16|0),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a),ne=a+192|0,E}P(25781,17172,606,44115),M()}P(25056,17172,223,43809),M()}P(28228,17172,925,44064),M()}function yn(e,r){var a,i=0,f=0,k=0;ne=a=ne-48|0;e:{r:{a:{i:{if((i=l[r>>2])|(f=l[r+4>>2]))if(l[i+8>>2]|!i|(0|i)!=(0|f)){if(1!=l[8719])break e;if(r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=22,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,i)if(r){if(l[i+4>>2])break a;l[r>>2]=i,l[i+4>>2]=r}else r=i;else f=r;if(1!=l[8725])break e;if(k=Bb(104),l[k+96>>2]=-1,l[k+8>>2]=23,l[(i=k)>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,l[(i=e)>>2]=r,l[i+4>>2]=f,k){if(f){if(l[f>>2])break r;l[f>>2]=k,l[k+4>>2]=f}else l[e>>2]=k;l[e+4>>2]=k}}else{for(r=l[i+36>>2],l[a+8>>2]=l[i+32>>2],l[a+12>>2]=r,r=l[i+28>>2],l[a>>2]=l[i+24>>2],l[a+4>>2]=r,Nb(a+16|0,a);r=l[i>>2],Wk(i),i=r,r;);if(r=l[a+28>>2],l[a+40>>2]=l[a+24>>2],l[a+44>>2]=r,r=l[a+20>>2],l[a+32>>2]=l[a+16>>2],l[a+36>>2]=r,!(2&v[34440]))break i;r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=4,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,i=l[a+36>>2],l[r+24>>2]=l[a+32>>2],l[r+28>>2]=i,i=l[a+44>>2],l[r+32>>2]=l[a+40>>2],l[r+36>>2]=i,l[e+4>>2]=r,l[e>>2]=r}else{if(1!=l[8593])break e;r=Bb(104),l[r+96>>2]=-1,l[r+8>>2]=1,l[r>>2]=0,l[r+4>>2]=0,l[r+76>>2]=0,l[r+80>>2]=0,l[r+68>>2]=-1,l[r+72>>2]=-1,l[r+60>>2]=0,l[r+64>>2]=0,l[r+52>>2]=-1,l[r+56>>2]=-1,l[r+48>>2]=0,l[r+84>>2]=0,l[r+88>>2]=0,l[e>>2]=r,l[e+4>>2]=r}return void(ne=a+48|0)}P(15541,14282,163,35429),M()}P(25731,14282,238,35660),M()}P(25534,14282,237,35660),M()}P(1044,14282,141,35388),M()}function En(e){var r,a;return(a=Cb(r=on(e)+1|0))?qb(a,e,r):0}function _n(e,r,a,i){var f,k=0,b=0,n=0,s=0,t=0;ne=f=ne-256|0,l[f+252>>2]=i;e:{r:{a:{if(-1!=(0|(b=l[r>>2]))){if(l[e+20>>2]<=(0|b))break a;for(k=l[e+24>>2],i=1;i=(r=i)+1|0,l[k+(r<<2)>>2]<=(0|b););if((0|r)>l[e+28>>2])break r;i=l[k+((r=r+-1|0)<<2)>>2]}if(ca(f+232|0,a,l[f+252>>2]),a=l[f+244>>2],l[f+192>>2]=l[f+240>>2],l[f+196>>2]=a,a=l[f+236>>2],l[f+184>>2]=l[f+232>>2],l[f+188>>2]=a,15&v[f+184|0])if(-1!=(0|b)){if(a=l[f+244>>2],l[f+176>>2]=l[f+240>>2],l[f+180>>2]=a,a=l[f+236>>2],l[f+168>>2]=l[f+232>>2],l[f+172>>2]=a,a=Gb(f+168|0),k=l[e+12>>2],l[f+160>>2]=l[e+8>>2],l[f+164>>2]=k,k=l[e+4>>2],l[f+152>>2]=l[e>>2],l[f+156>>2]=k,k=Gb(f+152|0),l[e+28>>2]<=(0|r))break e;n=l[e+24>>2],t=l[n+((s=r+1|0)<<2)>>2],r=l[n+(r<<2)>>2],n=l[e+16>>2],l[f+136>>2]=16167,l[f+132>>2]=b-i,l[f+128>>2]=i+n,l[f+120>>2]=s,l[f+116>>2]=k,l[f+112>>2]=a,l[f+124>>2]=(-1^r)+t,Yb(f+200|0,15770,f+112|0),r=l[f+244>>2],l[f+104>>2]=l[f+240>>2],l[f+108>>2]=r,r=l[f+236>>2],l[f+96>>2]=l[f+232>>2],l[f+100>>2]=r,zb(f+96|0),e=l[e+36>>2],r=l[f+212>>2],l[f+88>>2]=l[f+208>>2],l[f+92>>2]=r,r=l[f+204>>2],l[f+80>>2]=l[f+200>>2],l[f+84>>2]=r,Mf(e,f+80|0)}else e=l[e+36>>2],r=l[f+244>>2],l[f+72>>2]=l[f+240>>2],l[f+76>>2]=r,r=l[f+236>>2],l[f+64>>2]=l[f+232>>2],l[f+68>>2]=r,l[f+48>>2]=Gb(f- -64|0),Yb(f+216|0,15369,f+48|0),r=l[f+228>>2],l[f+40>>2]=l[f+224>>2],l[f+44>>2]=r,r=l[f+220>>2],l[f+32>>2]=l[f+216>>2],l[f+36>>2]=r,Mf(e,f+32|0),e=l[f+244>>2],l[f+24>>2]=l[f+240>>2],l[f+28>>2]=e,e=l[f+236>>2],l[f+16>>2]=l[f+232>>2],l[f+20>>2]=e,zb(f+16|0);else e=l[e+36>>2],r=l[f+244>>2],l[f+8>>2]=l[f+240>>2],l[f+12>>2]=r,r=l[f+236>>2],l[f>>2]=l[f+232>>2],l[f+4>>2]=r,Mf(e,f);return void(ne=f+256|0)}P(14129,14539,51,45324),M()}P(14957,14539,54,45324),M()}P(16555,14539,59,45341),M()}function Dn(e,r,a,i){var f,b,n,s=0,t=0,c=0,o=0,u=0,h=0,m=0,p=0,g=0,y=0,E=0;ne=f=ne-112|0,b=f,n=f;e:{r:{a:{i:{if(6==(15&v[0|r])){if(!((0|a)>-1||(0|(a=l[r+4>>2]+a|0))>-1)){if(a=l[r+12>>2],l[f+32>>2]=l[r+8>>2],l[f+36>>2]=a,a=l[r+4>>2],l[f+24>>2]=l[r>>2],l[f+28>>2]=a,zb(f+24|0),r=l[i+12>>2],l[f+16>>2]=l[i+8>>2],l[f+20>>2]=r,r=l[i+4>>2],l[f+8>>2]=l[i>>2],l[f+12>>2]=r,zb(f+8|0),sb(18563,18597)?(r=Bb(51),l[r>>2]=1,l[r+8>>2]=68,l[r+12>>2]=34,i=v[18567]|v[18568]<<8|v[18569]<<16|v[18570]<<24,a=v[18563]|v[18564]<<8|v[18565]<<16|v[18566]<<24,k[r+16|0]=a,k[r+17|0]=a>>>8,k[r+18|0]=a>>>16,k[r+19|0]=a>>>24,k[r+20|0]=i,k[r+21|0]=i>>>8,k[r+22|0]=i>>>16,k[r+23|0]=i>>>24,i=v[18575]|v[18576]<<8|v[18577]<<16|v[18578]<<24,a=v[18571]|v[18572]<<8|v[18573]<<16|v[18574]<<24,k[r+24|0]=a,k[r+25|0]=a>>>8,k[r+26|0]=a>>>16,k[r+27|0]=a>>>24,k[r+28|0]=i,k[r+29|0]=i>>>8,k[r+30|0]=i>>>16,k[r+31|0]=i>>>24,i=v[18583]|v[18584]<<8|v[18585]<<16|v[18586]<<24,a=v[18579]|v[18580]<<8|v[18581]<<16|v[18582]<<24,k[r+32|0]=a,k[r+33|0]=a>>>8,k[r+34|0]=a>>>16,k[r+35|0]=a>>>24,k[r+36|0]=i,k[r+37|0]=i>>>8,k[r+38|0]=i>>>16,k[r+39|0]=i>>>24,i=v[18591]|v[18592]<<8|v[18593]<<16|v[18594]<<24,a=v[18587]|v[18588]<<8|v[18589]<<16|v[18590]<<24,k[r+40|0]=a,k[r+41|0]=a>>>8,k[r+42|0]=a>>>16,k[r+43|0]=a>>>24,k[r+44|0]=i,k[r+45|0]=i>>>8,k[r+46|0]=i>>>16,k[r+47|0]=i>>>24,a=v[18595]|v[18596]<<8,k[r+48|0]=a,k[r+49|0]=a>>>8,k[r+50|0]=0,l[f+80>>2]=r,l[f+72>>2]=5,l[f+76>>2]=0,r=5):(ob(f+72|0,18563,34),r=v[f+72|0]),a=v[f+77|0]|v[f+78|0]<<8|v[f+79|0]<<16|v[f+80|0]<<24,l[f+88>>2]=v[f+73|0]|v[f+74|0]<<8|v[f+75|0]<<16|v[f+76|0]<<24,l[f+92>>2]=a,i=v[f+84|0]|v[f+85|0]<<8|v[f+86|0]<<16|v[f+87|0]<<24,a=v[f+80|0]|v[f+81|0]<<8|v[f+82|0]<<16|v[f+83|0]<<24,k[f+95|0]=a,k[f+96|0]=a>>>8,k[f+97|0]=a>>>16,k[f+98|0]=a>>>24,k[f+99|0]=i,k[f+100|0]=i>>>8,k[f+101|0]=i>>>16,k[f+102|0]=i>>>24,1==(15&r)){l[e>>2]=0,l[e+4>>2]=0,l[e+8>>2]=0,l[e+12>>2]=0;break e}a=Bb(24),k[a+8|0]=r,l[a>>2]=1,i=l[f+92>>2],r=l[f+88>>2],k[a+9|0]=r,k[a+10|0]=r>>>8,k[a+11|0]=r>>>16,k[a+12|0]=r>>>24,k[a+13|0]=i,k[a+14|0]=i>>>8,k[a+15|0]=i>>>16,k[a+16|0]=i>>>24,i=v[f+99|0]|v[f+100|0]<<8|v[f+101|0]<<16|v[f+102|0]<<24,r=v[f+95|0]|v[f+96|0]<<8|v[f+97|0]<<16|v[f+98|0]<<24,k[a+16|0]=r,k[a+17|0]=r>>>8,k[a+18|0]=r>>>16,k[a+19|0]=r>>>24,k[a+20|0]=i,k[a+21|0]=i>>>8,k[a+22|0]=i>>>16,k[a+23|0]=i>>>24,l[e+8>>2]=a,l[e>>2]=0,l[e+4>>2]=0;break e}if(m=(E=d[r+2>>1])+a|0,u=l[r+8>>2],!((0|m)>=l[u+8>>2])){if((0|(t=l[u>>2]))<=0)break i;if(1==(0|t)){if(h=t=u,(0|(c=l[t+4>>2]))<=(0|m)){for(o=l[10946],g=l[10947],E=l[10944],p=l[10945];l[24+(s=(c<<4)+u|0)>>2]=o,l[s+28>>2]=g,l[s+16>>2]=E,l[s+20>>2]=p,s=(0|c)<(0|m),c=c+1|0,s;);c=l[u+4>>2]}l[h+4>>2]=(0|m)<(0|c)?c:m+1|0,t=l[r+4>>2],l[r+4>>2]=(0|t)>(0|a)?t:a+1|0,a=16+((m<<4)+u|0)|0;break r}}if(t=l[r+4>>2],y=Bb(16+((c=(0|w(m=(0|t)>(0|a)?t:a+1|0,3))/2|0)<<4)|0),l[y+8>>2]=c,l[y>>2]=1,l[y+4>>2]=0,c=0,(0|t)<=0)break a;for(;;){g=v[16+(o=(c+E<<4)+u|0)|0],s=v[o+20|0]|v[o+21|0]<<8|v[o+22|0]<<16|v[o+23|0]<<24,k[f+91|0]=s,k[f+92|0]=s>>>8,k[f+93|0]=s>>>16,k[f+94|0]=s>>>24,l[f+88>>2]=v[o+17|0]|v[o+18|0]<<8|v[o+19|0]<<16|v[o+20|0]<<24,p=v[o+28|0]|v[o+29|0]<<8|v[o+30|0]<<16|v[o+31|0]<<24,o=v[o+24|0]|v[o+25|0]<<8|v[o+26|0]<<16|v[o+27|0]<<24;f:if(!((s=15&g)>>>0>7)){k:switch(s-1|0){default:if(!o)break f;break;case 0:case 1:case 2:case 3:break f;case 4:case 5:case 6:}l[o>>2]=l[o>>2]+1}if(s=v[f+91|0]|v[f+92|0]<<8|v[f+93|0]<<16|v[f+94|0]<<24,k[f+107|0]=s,k[f+108|0]=s>>>8,k[f+109|0]=s>>>16,k[f+110|0]=s>>>24,l[f+104>>2]=l[f+88>>2],k[16+(h=y+(c<<4)|0)|0]=g,s=l[f+104>>2],k[h+17|0]=s,k[h+18|0]=s>>>8,k[h+19|0]=s>>>16,k[h+20|0]=s>>>24,s=v[f+107|0]|v[f+108|0]<<8|v[f+109|0]<<16|v[f+110|0]<<24,k[h+20|0]=s,k[h+21|0]=s>>>8,k[h+22|0]=s>>>16,k[h+23|0]=s>>>24,l[h+28>>2]=p,l[h+24>>2]=o,(0|t)==(0|(c=c+1|0)))break}c=t;break a}P(18173,17172,346,43340),M()}P(25425,17172,36,43824),M()}if((0|c)<(0|m))for(E=l[10946],p=l[10947],s=l[10944],t=l[10945];l[24+(g=y+(c<<4)|0)>>2]=E,l[g+28>>2]=p,l[g+16>>2]=s,l[g+20>>2]=t,(0|m)!=(0|(c=c+1|0)););if(l[y+4>>2]=m,t=l[u>>2]+-1|0,l[u>>2]=t,!t){if(c=0,l[u+4>>2]>0)for(s=f- -64|0;t=l[28+(p=(c<<4)+u|0)>>2],l[s>>2]=l[p+24>>2],l[s+4>>2]=t,t=l[p+20>>2],l[f+56>>2]=l[p+16>>2],l[f+60>>2]=t,zb(f+56|0),(0|(c=c+1|0))<l[u+4>>2];);Lb(u)}l[r+8>>2]=y,l[r+4>>2]=m,l[r>>2]=6,a=16+(y+(a<<4)|0)|0}t=l[a+12>>2],l[n+48>>2]=l[a+8>>2],l[b+52>>2]=t,t=l[a+4>>2],l[f+40>>2]=l[a>>2],l[f+44>>2]=t,zb(f+40|0),t=l[i+12>>2],l[a+8>>2]=l[i+8>>2],l[a+12>>2]=t,t=l[i+4>>2],l[a>>2]=l[i>>2],l[a+4>>2]=t,a=l[r+12>>2],l[e+8>>2]=l[r+8>>2],l[e+12>>2]=a,a=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=a}ne=f+112|0}function Sn(e,r,a){var i;return ne=i=ne-16|0,l[i+12>>2]=a,e=Wa(e,r,a),ne=i+16|0,e}function Fn(e,r,a){var i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,v=0;o=(c=r>>>0>a>>>0)?a:r;e:{r:{a:{i:{if(!(f=l[e>>2])){if(t=Cb(12),l[e>>2]=t,n=-5,!t)break e;if(n=of(t,20))break e;if((i=l[t+8>>2])>>>0>=4)break i;for(;s=i>>>0<2,i=b=i<<1,s;);if(l[t+8>>2]=b,i=Ub(l[t>>2],b),l[t>>2]=i,n=-5,!i)break e;break a}if(v=(u=l[f>>2])+4|0,(0|(s=l[u>>2]))<1)break r;for(b=s;n=(e=i+b|0)>>1,(0|(i=(e=o>>>0>h[(e<<2|4)+v>>2])?n+1|0:i))<(0|(b=e?b:n)););break r}i=l[t>>2]}s=0,k[0|i]=0,k[i+1|0]=0,k[i+2|0]=0,k[i+3|0]=0,h[t+4>>2]<=3&&(l[t+4>>2]=4),f=l[e>>2],v=(u=l[f>>2])+4|0,i=0}if((0|(b=-1==(0|(r=c?r:a))?s:i))<(0|s))for(c=r+1|0,e=s;n=(a=e+b|0)>>1,(0|(b=(a=c>>>0<h[((1073741822&a)<<2)+v>>2])?b:n+1|0))<(0|(e=a?n:e)););if(n=-205,!((a=(t=(c=i+1|0)-b|0)+s|0)>>>0>1e4)){1!=(0|t)&&(r=r>>>0<(e=l[(b<<3)+u>>2])>>>0?e:r,o=o>>>0>(e=l[(i<<3)+v>>2])>>>0?e:o);r:if(!(!t|s>>>0<=b>>>0))if(c=c<<3|4,n=b<<3|4,(0|t)>=1){s=(e=s-b<<3)+c|0,b=l[f+8>>2];a:{if(s>>>0>b>>>0){for(;(b<<=1)>>>0<s>>>0;);if(l[f+8>>2]=b,b=Ub(l[f>>2],b),l[f>>2]=b,b)break a;return-5}b=l[f>>2]}if(nn(b+c|0,b+n|0,e),s>>>0<=h[f+4>>2])break r;l[f+4>>2]=s}else nn((e=l[f>>2])+c|0,e+n|0,l[f+4>>2]-n|0),l[f+4>>2]=l[f+4>>2]+(c-n|0);for(t=8+(c=i<<3|4)|0,b=n=l[f+8>>2];b=(e=b)<<1,e>>>0<t>>>0;);if((0|e)!=(0|n)){if(s=Ub(l[f>>2],e),l[f>>2]=s,!s)return-5;l[f+8>>2]=e,n=e}r:{if(n>>>0<(s=c+4|0)>>>0){for(;(n<<=1)>>>0<s>>>0;);if(l[f+8>>2]=n,i=Ub(l[f>>2],n),l[f>>2]=i,i)break r;return-5}i=l[f>>2]}k[0|(e=i+c|0)]=o,k[e+1|0]=o>>>8,k[e+2|0]=o>>>16,k[e+3|0]=o>>>24,h[f+4>>2]<s>>>0&&(l[f+4>>2]=s),i=l[f+8>>2];r:{if(i>>>0<t>>>0){for(;(i<<=1)>>>0<t>>>0;);if(l[f+8>>2]=i,i=Ub(l[f>>2],i),l[f>>2]=i,i)break r;return-5}i=l[f>>2]}k[0|(e=i+s|0)]=r,k[e+1|0]=r>>>8,k[e+2|0]=r>>>16,k[e+3|0]=r>>>24,h[f+4>>2]<t>>>0&&(l[f+4>>2]=t),i=l[f+8>>2];r:{if(i>>>0<4){for(;e=i>>>0<2,i=r=i<<1,e;);if(l[f+8>>2]=r,i=Ub(l[f>>2],r),l[f>>2]=i,i)break r;return-5}i=l[f>>2]}k[0|i]=a,k[i+1|0]=a>>>8,k[i+2|0]=a>>>16,k[i+3|0]=a>>>24,n=0,h[f+4>>2]>3||(l[f+4>>2]=4)}}return n}function Mn(e,r,a){32&v[0|e]||Ak(r,a,e)}function An(e,r,a,i){var b,n,s=0,t=0,c=0,o=0,u=0,d=0,m=0,p=0,g=0,y=0,E=0,_=0,D=0;ne=b=ne-272|0,n=l[i+12>>2],o=l[i+8>>2],t=l[r>>2],l[b+8>>2]=t;e:{r:{a:{i:{f:{k:{b:{n:{s:{t:{if(t>>>0<a>>>0)for(;;){l[e+12>>2]=t,l[e+8>>2]=0,l[e>>2]=3,c=0|f[l[o+20>>2]](t,a),t=(0|f[l[o>>2]](t))+t|0,l[b+8>>2]=t;c:{o:{u:{l:{if(!(16&v[n+6|0]|(0|c)!=l[n+16>>2])){if(u=-104,t>>>0>=a>>>0)break e;l[e+12>>2]=t,d=0|f[l[o+20>>2]](t,a),s=(0|f[l[o>>2]](t))+t|0,l[b+8>>2]=s,l[e+4>>2]=1,l[e+16>>2]=d;v:if(!((c=d+-39|0)>>>0>85)){d:switch(c-1|0){case 2:if(!(8&v[0|n]))break r;l[e>>2]=10,l[e+16>>2]=0,l[e+20>>2]=-1;break i;case 3:if(!(32&v[0|n]))break r;l[e>>2]=10,l[e+16>>2]=1,l[e+20>>2]=-1;break i;case 23:if(!(128&v[0|n]))break r;l[e>>2]=10,l[e+16>>2]=0,l[e+20>>2]=1;break i;case 83:if(!(2&v[n+1|0]))break r;if((0|(u=Ei(b+8|0,a,e,i)))<0)break e;if(u>>>0>2)break r;switch(u-1|0){case 0:break r;case 1:break f;default:break i}case 84:if(!(8&v[n+1|0]))break r;l[e>>2]=13;break r;case 0:if(!(32&v[n+1|0]))break r;l[e>>2]=14;break r;case 1:if(!(32&v[n+1|0]))break r;l[e>>2]=15;break r;case 79:if(!(4&v[n+2|0]))break r;l[e>>2]=6,l[e+16>>2]=12,l[e+20>>2]=0;break r;case 47:if(!(4&v[n+2|0]))break r;l[e>>2]=6,l[e+16>>2]=12,l[e+20>>2]=1;break r;case 58:if(!(16&v[n+2|0]))break r;l[e>>2]=9,l[e+16>>2]=64;break r;case 26:if(!(16&v[n+2|0]))break r;l[e>>2]=9,l[e+16>>2]=128;break r;case 20:if(!(8&v[n+2|0]))break r;l[e>>2]=9,l[e+16>>2]=256;break r;case 22:if(!(8&v[n+2|0]))break r;l[e>>2]=9,l[e+16>>2]=512;break r;case 75:if(!(32&v[n+2|0]))break r;l[e>>2]=6,l[e+16>>2]=9,l[e+20>>2]=0;break r;case 43:if(!(32&v[n+2|0]))break r;l[e>>2]=6,l[e+16>>2]=9,l[e+20>>2]=1;break r;case 60:if(!(64&v[n+2|0]))break r;l[e>>2]=6,l[e+16>>2]=4,l[e+20>>2]=0;break r;case 28:if(!(64&v[n+2|0]))break r;l[e>>2]=6,l[e+16>>2]=4,l[e+20>>2]=1;break r;case 64:if(!(8&v[n+6|0]))break r;l[e>>2]=6,l[e+16>>2]=11,l[e+20>>2]=0;break r;case 32:if(!(8&v[n+6|0]))break r;l[e>>2]=6,l[e+16>>2]=11,l[e+20>>2]=1;break r;case 25:if(!(64&v[n+1|0]))break r;break k;case 50:if(!(64&v[n+1|0]))break r;l[e>>2]=9,l[e+16>>2]=16;break r;case 82:if(!(64&v[n+1|0]))break r;break b;case 31:if(!(128&v[n+1|0]))break r;l[e>>2]=9,l[e+16>>2]=4;break r;case 56:if(128&v[n+5|0])break k;break r;default:if(128&v[n+5|0])break b;break r;case 80:if(s>>>0>=a>>>0)break r;if(!((t=123!=(0|f[l[o+20>>2]](s,a)))|!(1073741824&(i=l[n>>2])))){if(l[b+8>>2]=(0|f[l[o>>2]](s))+s,(0|(t=Rb(b+8|0,a,8,o)))<0){u=-401;break e}if(!(c=(i=l[b+8>>2])>>>0>=a>>>0)&&(d=l[o+48>>2],u=-212,f[d](0|f[l[o+20>>2]](i,a),11)))break e;if(!(c|i>>>0<=(0|f[l[o>>2]](s))+s>>>0)&&125==(0|f[l[o+20>>2]](i,a))){l[b+8>>2]=(0|f[l[o>>2]](i))+i,l[e+16>>2]=t,l[e>>2]=4;break r}l[b+8>>2]=s;break r}if(!(536870912&i))break r;if((0|(a=Rb(b+8|0,a,2,o)))<0){u=-200;break e}i=l[b+8>>2],l[e+8>>2]=16,l[e>>2]=1,l[e+16>>2]=(0|i)==(0|s)?0:a;break r;case 77:if(!(64&v[n+5|0])|s>>>0>=a>>>0)break r;if((0|(a=Rb(b+8|0,a,4,o)))<0){u=-200;break e}i=l[b+8>>2],l[e+8>>2]=16,l[e>>2]=4,l[e+16>>2]=(0|i)==(0|s)?0:a;break r;case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:l[b+8>>2]=t,s=0,c=t;h:{for(;;){if(p=0|f[l[o+20>>2]](c,a),y=0|f[l[o>>2]](c),f[l[o+48>>2]](p,4)){if((-2147483601-p>>>0)/10>>>0<s>>>0)break h;if(s=(p+w(s,10)|0)-48|0,(c=c+y|0)>>>0<a>>>0)continue}break}if(l[b+8>>2]=c,!(!(1&k[n+2|0])|s>>>0>1e3||(0|s)>(0|(c=l[i+60>>2]))&&(0|s)>=10)){if(32&v[n+8|0]){if(u=-208,(0|s)>(0|c))break e;if(a=l[i+104>>2],!l[(s<<2)+(a||i+72|0)>>2])break e}l[e>>2]=7,l[e+28>>2]=0,l[e+32>>2]=0,l[e+20>>2]=s,l[e+16>>2]=1;break r}}if(l[b+8>>2]=t,57==(1|d))break l;s=t;case 8:if(16&v[n+3|0]){if(s>>>0>=a>>>0){l[b+8>>2]=s,c=0,t=s;break n}for(i=48==(0|d)?2:3,c=0,t=s;;){if(i&&(d=0|f[l[o+20>>2]](t,a),p=0|f[l[o>>2]](t),!(!f[l[o+48>>2]](d,4)|d>>>0>55))){if(-2147483601-d>>>3>>>0<c>>>0){u=-200;break e}if(i=i+-1|0,c=(d+(c<<3)|0)-48|0,(t=t+p|0)>>>0<a>>>0)continue}break}if(l[b+8>>2]=t,(0|c)>=0)break n;u=-200;break e}if(48==(0|d))break r;l[b+8>>2]=(0|f[l[o>>2]](s))+s;break r;case 67:if(!(1&k[n+5|0])|s>>>0>=a>>>0)break r;if(t=0|f[l[o+20>>2]](s,a),d=(0|f[l[o>>2]](s))+s|0,l[b+8>>2]=d,o=60==(0|t),39==(0|t)||o){if(u=-214,d>>>0>=a>>>0)break s;if(m=l[i+8>>2],c=0|f[l[m+20>>2]](d,a),s=0|f[l[m>>2]](d),(0|(y=o?62:39==(0|t)?39:0))==(0|c))break s;o=s+d|0,u=0,D=1,f[l[m+48>>2]](c,4)?(p=1,t=d):45!=(0|c)?(u=0|f[l[m+48>>2]](c,12)?0:-216,t=d):(D=-1,p=2,t=o);h:if(o>>>0>=a>>>0)s=a;else for(;;){s=o,c=0|f[l[m+20>>2]](s,a),o=(0|f[l[m>>2]](s))+s|0;m:{if((0|c)!=(0|y)){if((g=c+-41|0)>>>0>4|!(1<<g&21))break m}else c=y;u=2==(0|p)?-215:u;break h}if(g=l[m+48>>2],p?(u=(p=0|f[g](c,4))?u:-215,p=0!=(0|p)):(u=0|f[g](c,12)?u:-216,p=0),!(o>>>0<a>>>0))break}if(u)break u;if((0|c)==(0|y)){u=0;break u}if(!((g=c+-43|0)>>>0>2|!(g-1))){if(o>>>0>=a>>>0){u=-216;break u}if(g=0|f[l[m+20>>2]](o,a),_=0|f[l[m>>2]](o),f[l[m+48>>2]](g,4)){for(;;){if(g=0|f[l[m+20>>2]](o,a),_=0|f[l[m>>2]](o),f[l[m+48>>2]](g,4)){if((-2147483601-g>>>0)/10>>>0<E>>>0)break t;if(E=(g+w(E,10)|0)-48|0,(o=o+_|0)>>>0<a>>>0)continue}break}if((0|E)<0)break t;if(l[e+36>>2]=45==(0|c)?0-E|0:E,o>>>0>=a>>>0)E=1;else if(c=0|f[l[m+20>>2]](o,a),o=(0|f[l[m>>2]](o))+o|0,u=0,E=1,(0|c)==(0|y))break u}else o=o+_|0}c=0;break o}l[b+8>>2]=s;break r;case 63:if(!(2&v[n+5|0])|s>>>0>=a>>>0)break r;if(t=0|f[l[o+20>>2]](s,a),c=(0|f[l[o>>2]](s))+s|0,l[b+8>>2]=c,39==(0|t)||60==(0|t)){if((0|(u=yi(t,b+8|0,a,b+12|0,i,b+16|0,1)))<0)break e;l[e>>2]=8,l[e+16>>2]=c,l[e+20>>2]=l[b+12>>2],l[e+24>>2]=l[b+16>>2];break r}l[b+8>>2]=s;break r;case 41:if(!(1&k[n+4|0]))break r;l[e>>2]=17;break r;case 4:case 5:case 6:case 7:case 18:case 19:case 21:case 24:case 27:case 29:case 30:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 42:case 44:case 45:case 46:case 48:case 49:case 51:case 52:case 53:case 54:case 55:case 57:case 59:case 61:case 62:case 65:case 66:case 68:case 69:case 70:case 71:case 73:case 74:case 76:case 78:case 81:break v;case 40:case 72:}if(s>>>0>=a>>>0)break r;if(123!=(0|f[l[o+20>>2]](s,a))|!(1&k[n+6|0]))break r;if(i=(0|f[l[o>>2]](s))+s|0,l[b+8>>2]=i,l[e+20>>2]=80==(0|d),l[e>>2]=18,!(2&v[n+6|0])|i>>>0>=a>>>0)break r;if(a=0|f[l[o+20>>2]](i,a),l[b+8>>2]=(0|f[l[o>>2]](i))+i,94==(0|a)){l[e+20>>2]=!l[e+20>>2];break r}l[b+8>>2]=i;break r}if(l[b+8>>2]=t,(0|(u=Xf(b+8|0,a,i,b+16|0)))<0)break e;if((0|(a=l[b+16>>2]))!=l[e+16>>2]){l[e>>2]=4,l[e+16>>2]=a;break r}a=l[e+12>>2],l[b+8>>2]=(0|f[l[o>>2]](a))+a;break r}if(l[e+4>>2]=0,l[e+16>>2]=c,!c)break r;v:{d:{h:{m:{w:{p:{g:{y:{E:{_:{D:{S:{F:{M:{A:{x:{P:{if(1&(s=l[n>>2])){if((0|c)==l[n+20>>2])break P;if((0|c)==l[n+24>>2])break A;if((0|c)==l[n+28>>2])break D;if((0|c)==l[n+32>>2])break F;if((0|c)==l[n+36>>2]){l[e>>2]=12;break r}}if((c=c+-9|0)>>>0>115)break r;T:switch(c-2|0){case 52:break S;case 32:break M;case 31:break x;case 35:break T;case 0:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 22:case 23:case 26:case 27:case 28:case 33:case 34:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 81:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 92:case 93:case 94:case 95:case 96:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:break r;case 24:break d;case 82:break h;case 80:break m;case 25:break w;case 83:break p;case 30:break g;case 29:break y;case 113:break E;case 112:break _;default:break v}if(!(2&s))break r}l[e>>2]=5;break r}if(!(4&s))break r}l[e>>2]=10,l[e+16>>2]=0,l[e+20>>2]=-1;break i}if(!(16&s))break r}l[e>>2]=10,l[e+16>>2]=1,l[e+20>>2]=-1;break i}if(!(64&s))break r}l[e>>2]=10,l[e+16>>2]=0,l[e+20>>2]=1;break i}if(!(256&s))break r;if((0|(u=Ei(b+8|0,a,e,i)))<0)break e;if(u>>>0>2)break r;_:switch(u-1|0){case 1:break _;case 0:break r;default:break i}if(!(2&v[n+9|0]))break i;break a}if(!(1024&s))break r;l[e>>2]=13;break r}if(!(t>>>0>=a>>>0||63!=(0|f[l[o+20>>2]](t,a))|!(2&v[n+4|0]))){if(s=(0|f[l[o>>2]](t))+t|0,l[b+8>>2]=s,!(s>>>0>=a>>>0)&&35==(0|f[l[o+20>>2]](s,a))){if(f[l[o+20>>2]](s,a),t=(0|f[l[o>>2]](s))+s|0,l[b+8>>2]=t,u=-118,t>>>0>=a>>>0)break e;for(;;){s=0|f[l[o+20>>2]](t,a),t=(0|f[l[o>>2]](t))+t|0,l[b+8>>2]=t;y:if((0|s)!=l[n+16>>2]){if(41==(0|s))break c}else{if(t>>>0>=a>>>0)break y;f[l[o+20>>2]](t,a),t=(0|f[l[o>>2]](t))+t|0,l[b+8>>2]=t}if(!(t>>>0<a>>>0))break}break e}l[b+8>>2]=t}if(!(16&v[n+1|0]))break r;l[e>>2]=14;break r}if(!(4096&s))break r;l[e>>2]=15;break r}if(!(8388608&s))break r;l[e>>2]=9,l[e+16>>2]=8&l[i>>2]?1:2;break r}if(!(8388608&s))break r;l[e>>2]=9,l[e+16>>2]=8&l[i>>2]?16:32;break r}if(!(131072&s))break r;l[e>>2]=16;break r}if(a=l[i+32>>2],!(1&k[l[i+12>>2]+11|0])|9==l[78160]|h[r>>2]<=a>>>0)break r;s=l[i+36>>2],i=l[i+8>>2],l[b>>2]=14208,nb(b+16|0,i,a,s,14660,b),f[l[78160]](b+16|0);break r}if(!(2&v[0|i]))break r;for(;;){if(t>>>0>=a>>>0)break c;if(s=0|f[l[o+20>>2]](t,a),t=(0|f[l[o>>2]](t))+t|0,l[b+8>>2]=t,f[l[o+48>>2]](s,0))break}break c}if(2&v[0|i])break c;break r}l[b+8>>2]=(0|f[l[o>>2]](t))+t;break r}c=1}for(;;)if(c){o:{if(u)l[i+44>>2]=s,l[i+40>>2]=d,s=0,c=0;else{if(c=0,p){if(s>>>0<=t>>>0)break o;for(;;){if(y=0|f[l[m+20>>2]](t,s),g=0|f[l[m>>2]](t),f[l[m+48>>2]](y,4)){if((-2147483601-y>>>0)/10>>>0<c>>>0)break t;if(c=(y+w(c,10)|0)-48|0,(t=t+g|0)>>>0<s>>>0)continue}break}if((0|c)<0)break t;if(!c)break o;c=w(c,D)}l[b+8>>2]=o,u=0!=(0|E)}if(1!=(0|u)){if(l[e+32>>2]=0,(0|u)<0)break e}else l[e+32>>2]=1;if(c){if(!((0|c)>-1||(0|(c=1+(l[i+60>>2]+c|0)|0))>=1)){u=-208;break e}if(32&v[n+8|0]){if(u=-208,(0|c)>l[i+60>>2])break e;if(a=l[i+104>>2],!l[(c<<2)+(a||i+72|0)>>2])break e}l[e>>2]=7,l[e+28>>2]=0,l[e+20>>2]=c,l[e+16>>2]=1;break r}a=l[l[i+48>>2]+72>>2],l[b+12>>2]=0;u:{l:{v:if(a&&(l[b+20>>2]=s,l[b+16>>2]=d,Hf(a,b+16|0,b+12|0),a=l[b+12>>2])){if((c=l[a+8>>2])>>>0<=1){if(c-1)break v;break l}if(!((0|c)<=0)){a=l[a+20>>2];break u}}l[i+44>>2]=s,l[i+40>>2]=d,u=-217;break e}a=a+16|0}if(32&v[n+8|0])for(s=i+72|0,o=l[i+60>>2],t=0;;){if(u=-208,(0|(d=l[a+(t<<2)>>2]))>(0|o))break e;if(p=d<<2,d=l[i+104>>2],!l[p+(d||s)>>2])break e;if((0|c)==(0|(t=t+1|0)))break}if(l[e>>2]=7,l[e+28>>2]=1,1==(0|c)){l[e+16>>2]=1,l[e+20>>2]=l[a>>2];break r}l[e+24>>2]=a,l[e+16>>2]=c;break r}c=0}else u=-215,s=a,c=1}if(!(t>>>0<a>>>0))break}u=0,l[e>>2]=0;break e}u=-200}l[e+32>>2]=0;break e}l[e+8>>2]=8,l[e>>2]=1,l[e+16>>2]=(0|s)==(0|t)?0:c;break r}l[e>>2]=9,l[e+16>>2]=8;break r}l[e>>2]=9,l[e+16>>2]=1;break r}if(2&v[n+9|0])break a}if(!((i=l[b+8>>2])>>>0>=a>>>0||63!=(0|f[l[o+20>>2]](i,a))|!(2&v[n+3|0]))){f[l[o+20>>2]](i,a),l[b+8>>2]=(0|f[l[o>>2]](i))+i,l[e+24>>2]=0,l[e+28>>2]=0;break r}}(i=l[b+8>>2])>>>0>=a>>>0||43!=(0|f[l[o+20>>2]](i,a))||!(32&(s=l[n+4>>2]))|11!=l[e>>2]&&!(11!=l[e>>2]&&16&s)?(l[e+24>>2]=1,l[e+28>>2]=0):(f[l[o+20>>2]](i,a),l[b+8>>2]=(0|f[l[o>>2]](i))+i,l[e+24>>2]=1,l[e+28>>2]=1)}l[r>>2]=l[b+8>>2],u=l[e>>2]}return ne=b+272|0,u}function xn(e,r){var a,i,f=0;return(i=1-(f=.5*(a=e*e)))+(1-i-f+(a*(a*(a*(2480158728947673e-20*a-.001388888888887411)+.0416666666666666)+(f=a*a)*f*(a*(-1.1359647557788195e-11*a+2.087572321298175e-9)-2.7557314351390663e-7))-e*r))}function Pn(e,r,a){var i,f,k;return k=(i=e*e)*(i*i)*(1.58969099521155e-10*i-2.5050760253406863e-8)+(i*(27557313707070068e-22*i-.0001984126982985795)+.00833333333332249),f=i*e,a?e-(i*(.5*r-f*k)-r+.16666666666666632*f):f*(i*k-.16666666666666632)+e}function Tn(e,r,a){var i,f=0,k=0,b=0,n=0;ne=i=ne-16|0,l[r>>2]=0,k=l[e>>2];e:if(!(k>>>0>10)){r:switch(k-1|0){case 7:for(;;){if(f=Tn(l[e+4>>2],i+12|0,a))break e;if(f=l[i+12>>2],k=l[r>>2],l[r>>2]=k>>>0>(-1^f)>>>0?-1:-1==(0|k)?-1:-1==(0|f)?-1:f+k|0,!(e=l[e+8>>2]))break}f=0;break e;case 8:for(;;){if(f=Tn(l[e+4>>2],i+12|0,a))break e;if(f=l[i+12>>2],h[r>>2]<f>>>0&&(l[r>>2]=f),!(e=l[e+8>>2]))break}f=0;break e;default:l[r>>2]=l[e+8>>2]-l[e+4>>2];break e;case 1:l[r>>2]=l[l[a+8>>2]+8>>2];break e;case 0:case 2:l[r>>2]=l[l[a+8>>2]+8>>2];break e;case 3:if(128&v[e+4|0]){l[r>>2]=-1;break e}if(l[e+8>>2]<1)break e;for(b=(f=l[a+104>>2])||a+72|0,n=(f=l[e+36>>2])||e+12|0,k=0;;){if((0|(f=l[(k<<2)+n>>2]))>l[a+60>>2]){f=-208;break e}if(f=Tn(l[(f<<2)+b>>2],i+12|0,a))break e;if(f=l[i+12>>2],h[r>>2]<f>>>0&&(l[r>>2]=f),f=0,!((0|(k=k+1|0))<l[e+8>>2]))break}break e;case 9:if(!(128&v[e+4|0])){f=Tn(l[e+20>>2],r,a);break e}l[r>>2]=-1;break e;case 4:if(!l[e+16>>2])break e;if(f=Tn(l[e+8>>2],r,a))break e;if(!(a=l[r>>2])){f=0;break e}a:{if((f=(e=l[e+16>>2])+1|0)>>>0<=1){if(f-1)break a}else e=4294967295/(e>>>0)>>>0>a>>>0?w(e,a):-1;l[r>>2]=e,f=0;break e}l[r>>2]=-1,f=0;break e;case 6:break e;case 5:}if(!((k=l[e+8>>2]+-1|0)>>>0>3)){r:switch(k-1|0){default:if(2&(f=l[e+4>>2])){l[r>>2]=l[e+32>>2],f=0;break e}if(8&f){l[r>>2]=-1,f=0;break e}if(l[e+4>>2]=8|f,f=Tn(l[e+20>>2],r,a),a=-9&l[e+4>>2],l[e+4>>2]=a,f)break e;r=l[r>>2],l[e+4>>2]=2|a,l[e+32>>2]=r,f=0;break e;case 1:break e;case 0:case 2:}f=Tn(l[e+20>>2],r,a)}}return ne=i+16|0,f}function Rn(e,r){var a;if((a=Cb(44))&&(l[a+8>>2]=0,l[a+4>>2]=r,l[a>>2]=8,e)){for(;r=e,e=l[e+8>>2];);l[r+8>>2]=a}return a}function On(e){var r,a=0,i=0,f=0;if(ne=r=ne-80|0,2&v[e+24|0]&&(a=l[e+52>>2],l[r+56>>2]=l[e+48>>2],l[r+60>>2]=a,a=l[e+44>>2],l[r+48>>2]=l[e+40>>2],l[r+52>>2]=a,zb(r+48|0),rn(r- -64|0),a=l[r+76>>2],l[e+48>>2]=l[r+72>>2],l[e+52>>2]=a,a=l[r+68>>2],l[e+40>>2]=l[r+64>>2],l[e+44>>2]=a,l[e+36>>2]=0),l[e+56>>2]=0,a=l[e+76>>2],l[r+40>>2]=l[e+72>>2],l[r+44>>2]=a,a=l[e+68>>2],l[r+32>>2]=l[e+64>>2],l[r+36>>2]=a,zb(r+32|0),l[(a=r- -64|0)>>2]=0,l[a+4>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,a=l[r+76>>2],l[e+72>>2]=l[r+72>>2],l[e+76>>2]=a,a=l[r+68>>2],l[e+64>>2]=l[r+64>>2],l[e+68>>2]=a,a=l[e+92>>2],l[r+24>>2]=l[e+88>>2],l[r+28>>2]=a,a=l[e+84>>2],l[r+16>>2]=l[e+80>>2],l[r+20>>2]=a,zb(r+16|0),l[(a=r- -64|0)>>2]=0,l[a+4>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,a=l[r+76>>2],l[e+88>>2]=l[r+72>>2],l[e+92>>2]=a,a=l[r+68>>2],l[e+80>>2]=l[r+64>>2],l[e+84>>2]=a,l[e+32>>2]>=1)for(;a=l[e+28>>2]+(i<<4)|0,f=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=f,f=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=f,zb(r),(0|(i=i+1|0))<l[e+32>>2];);l[e+152>>2]=0,l[e+100>>2]=0,l[e+32>>2]=0,ne=r+80|0}function In(e,r){if(r)return r=l[10939],l[e+8>>2]=l[10938],l[e+12>>2]=r,r=l[10937],l[e>>2]=l[10936],void(l[e+4>>2]=r);r=l[10943],l[e+8>>2]=l[10942],l[e+12>>2]=r,r=l[10941],l[e>>2]=l[10940],l[e+4>>2]=r}function zn(e){var r,a=0;ne=r=ne-16|0;e:{r:if(!(!(a=l[e>>2])|l[e+4>>2]!=(0|a)||(e=l[a+8>>2])>>>0>4))switch(e-1|0){case 0:case 1:case 2:break r;default:break e}P(15967,14282,180,35448),M()}return e=l[a+36>>2],l[r+8>>2]=l[a+32>>2],l[r+12>>2]=e,e=l[a+28>>2],l[r>>2]=l[a+24>>2],l[r+4>>2]=e,ne=r+16|0,15&v[0|r]}function Nn(e,r,a,i){var b,n,s=0,t=0,c=0,o=0,u=0;ne=b=ne-272|0,n=l[i+8>>2],o=l[i+12>>2],t=l[r>>2],l[b+12>>2]=t;e:if(t>>>0>=a>>>0)l[e>>2]=0;else{s=0|f[l[n+20>>2]](t,a),t=(0|f[l[n>>2]](t))+t|0,l[b+12>>2]=t,l[e+16>>2]=s,l[e+8>>2]=0,l[e>>2]=2,l[e+4>>2]=0;r:{a:{if(45!=(0|s)){if(93!=(0|s))break a;l[e>>2]=19;break r}l[e>>2]=20;break r}if((0|s)!=l[o+16>>2]){a:{if(38!=(0|s)){if(91!=(0|s))break r;if(!(!(16777216&l[o>>2])|t>>>0>=a>>>0)&&58==(0|f[l[n+20>>2]](t,a))){l[e+12>>2]=t,s=(0|f[l[n>>2]](t))+t|0,l[b+12>>2]=s;i:if(!(s>>>0>=a>>>0))for(;;){if(u)u=0,s=(0|f[l[n>>2]](s))+s|0;else if(u=0|f[l[n+20>>2]](s,a),c=(0|f[l[n>>2]](s))+s|0,58!=(0|u)){if(93==(0|(s=0|f[l[n+20>>2]](s,a))))break i;u=(0|s)==l[o+16>>2],s=c}else{if(c>>>0<a>>>0&&93==(0|f[l[n+20>>2]](c,a)))break a;u=0,s=(0|f[l[n>>2]](s))+s|0}if(!(s>>>0<a>>>0))break}l[b+12>>2]=t}if(64&v[o+4|0]){l[e>>2]=23;break r}if(9==l[78160]|18874368!=(18874368&l[l[i+12>>2]+8>>2]))break r;a=l[i+36>>2],s=l[i+32>>2],i=l[i+8>>2],l[b>>2]=15073,nb(b+16|0,i,s,a,15903,b),f[l[78160]](b+16|0);break r}if(!(64&l[o+4>>2])|t>>>0>=a>>>0)break r;if(38!=(0|f[l[n+20>>2]](t,a)))break r;l[b+12>>2]=(0|f[l[n>>2]](t))+t,l[e>>2]=22;break r}f[l[n>>2]](c),l[e>>2]=21}else{if(!(32&v[o+10|0]))break r;if(s=-104,t>>>0>=a>>>0)break e;s=0|f[l[n+20>>2]](t,a),c=(0|f[l[n>>2]](t))+t|0,l[b+12>>2]=c,l[e+16>>2]=s,l[e+4>>2]=1;a:if(!((u=s+-48|0)>>>0>72)){i:switch(u-8|0){case 63:l[e>>2]=6,l[e+16>>2]=12,l[e+20>>2]=0;break r;case 31:l[e>>2]=6,l[e+16>>2]=12,l[e+20>>2]=1;break r;case 44:l[e>>2]=6,l[e+16>>2]=4,l[e+20>>2]=0;break r;case 12:l[e>>2]=6,l[e+16>>2]=4,l[e+20>>2]=1;break r;case 59:l[e>>2]=6,l[e+16>>2]=9,l[e+20>>2]=0;break r;case 27:l[e>>2]=6,l[e+16>>2]=9,l[e+20>>2]=1;break r;case 48:if(!(8&v[o+6|0]))break r;l[e>>2]=6,l[e+16>>2]=11,l[e+20>>2]=0;break r;case 16:if(!(8&v[o+6|0]))break r;l[e>>2]=6,l[e+16>>2]=11,l[e+20>>2]=1;break r;case 24:case 56:if(c>>>0>=a>>>0)break r;if(i=0|f[l[n+20>>2]](c,a),l[b+16>>2]=i,!(1&k[o+6|0])|123!=(0|i))break r;if(i=(0|f[l[n>>2]](c))+c|0,l[b+12>>2]=i,l[e+20>>2]=80==(0|s),l[e>>2]=18,!(2&v[o+6|0])|i>>>0>=a>>>0)break r;if(a=0|f[l[n+20>>2]](i,a),l[b+16>>2]=a,l[b+12>>2]=(0|f[l[n>>2]](i))+i,94==(0|a)){l[e+20>>2]=!l[e+20>>2];break r}l[b+12>>2]=i;break r;case 64:if(c>>>0>=a>>>0)break r;if(!((s=123!=(0|f[l[n+20>>2]](c,a)))|!(1073741824&(i=l[o>>2])))){if(l[b+12>>2]=(0|f[l[n>>2]](c))+c,(0|(t=Rb(b+12|0,a,8,n)))<0){s=-401;break e}if(!(o=(i=l[b+12>>2])>>>0>=a>>>0)&&(u=0|f[l[n+20>>2]](i,a),l[b+16>>2]=u,s=-212,f[l[n+48>>2]](u,11)))break e;if(!(o|i>>>0<=(0|f[l[n>>2]](c))+c>>>0)&&125==(0|f[l[n+20>>2]](i,a))){l[b+12>>2]=(0|f[l[n>>2]](i))+i,l[e+16>>2]=t,l[e+8>>2]=16,l[e>>2]=4;break r}l[b+12>>2]=c;break r}if(!(536870912&i))break r;if((0|(a=Rb(b+12|0,a,2,n)))<0){s=-200;break e}i=l[b+12>>2],l[e+8>>2]=16,l[e>>2]=1,l[e+16>>2]=(0|i)==(0|c)?0:a;break r;case 61:if(!(64&v[o+5|0])|c>>>0>=a>>>0)break r;if((0|(a=Rb(b+12|0,a,4,n)))<0){s=-200;break e}i=l[b+12>>2],l[e+8>>2]=16,l[e>>2]=4,l[e+16>>2]=(0|i)==(0|c)?0:a;break r;case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 13:case 14:case 15:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 25:case 26:case 28:case 29:case 30:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 45:case 46:case 47:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 57:case 58:case 60:case 62:break a}if(!(16&v[o+3|0]))break r;for(l[b+12>>2]=t,u=0,i=t,c=3;;){if(c&&(s=0|f[l[n+20>>2]](i,a),o=0|f[l[n>>2]](i),!(!f[l[n+48>>2]](s,4)|s>>>0>55))){if(-2147483601-s>>>3>>>0<u>>>0){s=-200;break e}if(c=c+-1|0,u=(s+(u<<3)|0)-48|0,(i=i+o|0)>>>0<a>>>0)continue}break}if(l[b+12>>2]=i,(0|u)<0){s=-200;break e}l[e+8>>2]=8,l[e>>2]=1,l[e+16>>2]=(0|i)==(0|t)?0:u;break r}if(l[b+12>>2]=t,(0|(s=Xf(b+12|0,a,i,b+16|0)))<0)break e;if((0|(a=l[b+16>>2]))==l[e+16>>2])break r;l[e>>2]=4,l[e+16>>2]=a}}l[r>>2]=l[b+12>>2],s=l[e>>2]}return ne=b+272|0,s}function jn(e,r){var a=0,i=0,f=0;e:{r:{a:{if(7==(15&v[0|e])){if(-2==(0|r))break a;for(i=l[e+8>>2],e=l[e+4>>2],f=(0|r)>-2;;){if((0|(r=r+1|0))>=(0|e)){r=-2;break e}if(!f)break r;i:if(!((a=(15&v[16+(w(r,40)+i|0)|0])-1|0)>>>0>4))switch(a-1|0){case 3:break e;case 0:case 1:case 2:break i;default:continue}break}P(23734,17172,1225,43704),M()}P(22066,17172,1215,43704),M()}P(23439,17172,1216,43704),M()}P(28228,17172,925,44064),M()}return r}function Un(e,r,a){var i,f,k=0;ne=i=ne-16|0,f=on(a),k=l[r+12>>2],l[i+8>>2]=l[r+8>>2],l[i+12>>2]=k,k=l[r+4>>2],l[i>>2]=l[r>>2],l[i+4>>2]=k,Qb(e,i,a,f),ne=i+16|0}function Bn(e,r,a,i){var f,b=0,n=0,s=0,t=0,c=0,o=0,u=0;ne=f=ne-32|0;e:{r:{a:{i:{f:{k:{b:{if(!(!(b=l[e>>2])|(0|b)!=l[e+4>>2])){if(n=l[b+8>>2],(0|(c=l[8+(n>>>0<41?w(n,24)+34336|0:35320)>>2]&a))!=(-2049&a))break b;if(!l[b+64>>2])break k;if((0|b)!=(0|(n=l[b+60>>2]))&&n)break f;if((0|i)<=-1)break i;if(l[b+60>>2]=b,-1==l[b+68>>2]){if(s=l[e>>2],33!=l[s+8>>2]){if(n=0,b=l[s+84>>2])for(;;){if(30!=l[b+8>>2])break a;if(n=n+1|0,!(b=l[b>>2]))break}}else n=l[l[s+40>>2]+8>>2]+-1|0;l[s+68>>2]=n}if(!(b=l[r>>2])){n=0;break e}for(u=2048&a,n=0;;){r=l[b+8>>2];n:if((l[8+(r>>>0<41?w(r,24)+34336|0:35320)>>2]&a)==(0|c))if(l[b+60>>2])Db(l[l[e>>2]+64>>2],27014,10)||(i=!Db(l[b+64>>2],27014,10)+i|0);else{if(r=l[b+64>>2],t=l[e>>2],fn(r,l[t+64>>2])){if(!u|(0|i)>3|42!=v[0|r]|k[r+1|0]!=(i+49|0))break n;if(v[r+2|0])break n}s=l[b+72>>2];s:{t:if(27!=l[b+8>>2]){if(-1==(0|s))break s}else{if(-1!=(0|s))break t;if(s=0,r=v[b+84|0]|v[b+85|0]<<8|v[b+86|0]<<16|v[b+87|0]<<24)for(;;){if(30!=(0|(o=l[r+8>>2]))&&o+-32>>>0>=2)break r;if(s=s+1|0,!(r=l[r>>2]))break}l[b+72>>2]=s}if(l[t+68>>2]!=(0|s))break n}l[b+60>>2]=t,n=n+1|0}if(r=l[e+4>>2],l[f+24>>2]=l[e>>2],l[f+28>>2]=r,r=l[b+80>>2],l[f+16>>2]=l[b+76>>2],l[f+20>>2]=r,r=Bn(f+24|0,f+16|0,a,i),s=l[e+4>>2],l[f+8>>2]=l[e>>2],l[f+12>>2]=s,s=l[b+88>>2],l[f>>2]=l[b+84>>2],l[f+4>>2]=s,n=Bn(f+8|0,f,a,i)+(r+n|0)|0,!(b=l[b>>2]))break}break e}P(18470,14282,328,35686),M()}P(25911,14282,329,35686),M()}P(26235,14282,330,35686),M()}P(26479,14282,331,35686),M()}P(26750,14282,332,35686),M()}P(27219,14282,291,35706),M()}P(27444,14282,302,35726),M()}return ne=f+32|0,n}function Cn(e,r,a,i){var f,k,b=0,n=0,s=0,t=0;ne=f=ne-32|0,b=l[a+4>>2],k=l[a>>2],l[f+16>>2]=k,l[f+20>>2]=b;e:{r:{a:{if(n=l[r>>2]){for(s=-3073&i|1024,b=n;;){if(t=l[b+8>>2],37!=l[b+8>>2]&&(l[8+(t>>>0<41?w(t,24)+34336|0:35320)>>2]&s)!=(0|s))break a;if(!(b=l[b>>2]))break}for(b=1024|i;l[f+28>>2]=n,l[f+24>>2]=n,i=l[f+20>>2],l[f>>2]=l[f+16>>2],l[f+4>>2]=i,i=l[f+28>>2],l[f+8>>2]=l[f+24>>2],l[f+12>>2]=i,Bn(f+8|0,f,b,0),n=l[n>>2];);}if(n=l[a+4>>2],a=b=l[r+4>>2],l[e>>2]=l[r>>2],l[e+4>>2]=b,k){if(r=a){if(l[r>>2])break r;if(l[k+4>>2])break e;l[r>>2]=k,l[k+4>>2]=r}else l[e>>2]=k;l[e+4>>2]=n}return void(ne=f+32|0)}P(19201,14282,369,35670),M()}P(25534,14282,237,35660),M()}P(25731,14282,238,35660),M()}function Ln(e,r,a){var i,f,k=0,b=0,n=0,s=0;ne=i=ne-96|0,f=l[e+60>>2],(0|(b=l[e+48>>2]+-48|0))>=(0|(k=l[e+44>>2]))?k=l[e+40>>2]:(n=631-(k<<1)&-8,nn((s=an((k+l[e+40>>2]|0)-8|0,n))+(n-(k=8-k|0)|0)|0,s,k),l[e+44>>2]=8-n,k=n+s|0,l[e+40>>2]=k),l[e+48>>2]=b,l[(k=k+b|0)-4>>2]=f,l[e+60>>2]=b,l[k>>2]=l[e+56>>2],l[k+4>>2]=l[e+52>>2],b=l[e+76>>2],l[i+56>>2]=l[e+72>>2],l[i+60>>2]=b,b=l[e+68>>2],l[i+48>>2]=l[e+64>>2],l[i+52>>2]=b,b=k,6==(15&v[i+48|0])?(s=l[12+(n=e- -64|0)>>2],l[i+40>>2]=l[n+8>>2],l[i+44>>2]=s,s=l[n+4>>2],l[i+32>>2]=l[n>>2],l[i+36>>2]=s,Nb(i+80|0,i+32|0),n=l[i+92>>2],l[i+24>>2]=l[i+88>>2],l[i+28>>2]=n,n=l[i+84>>2],l[i+16>>2]=l[i+80>>2],l[i+20>>2]=n,n=Zb(i+16|0)):n=0,l[b+8>>2]=n,b=l[e+92>>2],l[i+8>>2]=l[e+88>>2],l[i+12>>2]=b,b=l[e+84>>2],l[i>>2]=l[e+80>>2],l[i+4>>2]=b,Nb(i- -64|0,i),b=l[i+76>>2],l[k+24>>2]=l[i+72>>2],l[k+28>>2]=b,b=l[i+68>>2],l[k+16>>2]=l[i+64>>2],l[k+20>>2]=b,b=l[e+96>>2],l[k+32>>2]=r,l[k+12>>2]=b,l[e+56>>2]=l[a>>2],l[e+52>>2]=l[a+4>>2],ne=i+96|0}function Hn(e,r){var a,i=0;ne=a=ne-32|0;e:{if(4&v[34536]){if(!(4&v[34537]))break e;return i=Bb(104),l[i+96>>2]=-1,l[i+8>>2]=8,l[i>>2]=0,l[i+4>>2]=0,l[i+76>>2]=0,l[i+80>>2]=0,l[i+68>>2]=-1,l[i+72>>2]=-1,l[i+60>>2]=0,l[i+64>>2]=0,l[i+52>>2]=-1,l[i+56>>2]=-1,l[i+48>>2]=0,l[i+84>>2]=0,l[i+88>>2]=0,l[i+64>>2]=En(r),l[a+28>>2]=i,l[a+24>>2]=i,l[a+16>>2]=0,l[a+20>>2]=0,l[a>>2]=0,l[a+4>>2]=0,r=l[a+28>>2],l[a+8>>2]=l[a+24>>2],l[a+12>>2]=r,Cn(e,a+8|0,a,4),void(ne=a+32|0)}P(18075,14282,218,35541),M()}P(17730,14282,211,35526),M()}function qn(e,r){var a,i=0;ne=a=ne-16|0;e:{r:if(!(!(i=l[r>>2])|l[r+4>>2]!=(0|i)||(r=l[i+8>>2])>>>0>4))switch(r-1|0){case 0:case 1:case 2:break r;default:break e}P(15967,14282,185,35465),M()}r=l[i+36>>2],l[a+8>>2]=l[i+32>>2],l[a+12>>2]=r,r=l[i+28>>2],l[a>>2]=l[i+24>>2],l[a+4>>2]=r,Nb(e,a),ne=a+16|0}function Yn(e){var r,a=0;return r=i.byteLength/65536|0,(e=(a=l[83104])+e|0)>>>0<=r<<16>>>0||X(0|e)?(l[83104]=e,a):(l[82952]=48,-1)}function Wn(e,r,a,i,f,k){var b=0,n=0,s=0,t=0;64&k?(i=r,r=31&(f=k+-64|0),32<=(63&f)>>>0?(f=i<<r,i=0):(f=(1<<r)-1&i>>>32-r|a<<r,i<<=r),r=0,a=0):k&&(b=i,s=k,i=31&k,32<=(63&k)>>>0?(n=b<<i,t=0):(n=(1<<i)-1&b>>>32-i|f<<i,t=b<<i),i=a,b=r,f=31&(k=64-k|0),32<=(63&k)>>>0?(k=0,i>>>=f):(k=i>>>f,i=((1<<f)-1&i)<<32-f|b>>>f),i|=t,f=k|n,k=r,r=31&s,32<=(63&s)>>>0?(n=k<<r,r=0):(n=(1<<r)-1&k>>>32-r|a<<r,r=k<<r),a=n),l[e>>2]=r,l[e+4>>2]=a,l[e+8>>2]=i,l[e+12>>2]=f}return f[1]=function(e,r,a){te(e|=0,a|=0)},f[2]=function(e,r){r|=0;var a,i=0;ne=a=ne-144|0,e=l[(e|=0)>>2],rn(a+96|0),jb(a+80|0,33734),i=l[a+108>>2],l[a+72>>2]=l[a+104>>2],l[a+76>>2]=i,i=l[a+92>>2],l[a+56>>2]=l[a+88>>2],l[a+60>>2]=i,i=l[a+100>>2],l[a+64>>2]=l[a+96>>2],l[a+68>>2]=i,i=l[a+84>>2],l[a+48>>2]=l[a+80>>2],l[a+52>>2]=i,Vb(a+112|0,a- -64|0,a+48|0),i=l[a+124>>2],l[a+40>>2]=l[a+120>>2],l[a+44>>2]=i,i=l[a+116>>2],l[a+32>>2]=l[a+112>>2],l[a+36>>2]=i,i=l[r+12>>2],l[a+24>>2]=l[r+8>>2],l[a+28>>2]=i,i=l[r+4>>2],l[a+16>>2]=l[r>>2],l[a+20>>2]=i,Vb(a+128|0,a+32|0,a+16|0),r=l[a+140>>2],l[a+8>>2]=l[a+136>>2],l[a+12>>2]=r,r=l[a+132>>2],l[a>>2]=l[a+128>>2],l[a+4>>2]=r,ba(a,r=l[75398],-2&e),bn(10,r),ne=a+144|0},f[3]=function(e,r,a,i,f,k){e|=0,r|=0,a|=0,i|=0,f|=0;var b=0,n=0,s=0,t=0,c=0,o=0,u=0;if(ne=f=ne-240|0,b=l[12+(k|=0)>>2],l[f+232>>2]=l[k+8>>2],l[f+236>>2]=b,b=l[k+4>>2],l[f+224>>2]=l[k>>2],l[f+228>>2]=b,(0|a)>=1)for(o=r-e|0,r=0;b=l[f+236>>2],l[f+136>>2]=l[f+232>>2],l[f+140>>2]=b,b=l[f+228>>2],l[f+128>>2]=l[f+224>>2],l[f+132>>2]=b,Nb(f+192|0,f+128|0),b=l[(s=(r<<2)+i|0)>>2],n=l[f+204>>2],l[f+120>>2]=l[f+200>>2],l[f+124>>2]=n,n=l[f+196>>2],l[f+112>>2]=l[f+192>>2],l[f+116>>2]=n,Kb(f+208|0,f+112|0,b+-1|0),b=l[f+220>>2],l[f+104>>2]=l[f+216>>2],l[f+108>>2]=b,b=l[f+212>>2],l[f+96>>2]=l[f+208>>2],l[f+100>>2]=b,7!=(15&v[f+96|0])?(b=l[f+220>>2],l[f+88>>2]=l[f+216>>2],l[f+92>>2]=b,b=l[f+212>>2],l[f+80>>2]=l[f+208>>2],l[f+84>>2]=b,zb(f+80|0)):(jb(f+160|0,42069),Uk(f+144|0,e,o),b=l[f+220>>2],l[f+72>>2]=l[f+216>>2],l[f+76>>2]=b,b=l[f+172>>2],l[f+56>>2]=l[f+168>>2],l[f+60>>2]=b,b=l[f+156>>2],l[f+40>>2]=l[f+152>>2],l[f+44>>2]=b,b=l[f+212>>2],l[f+64>>2]=l[f+208>>2],l[f+68>>2]=b,b=l[f+164>>2],l[f+48>>2]=l[f+160>>2],l[f+52>>2]=b,b=l[f+148>>2],l[f+32>>2]=l[f+144>>2],l[f+36>>2]=b,en(f+176|0,f- -64|0,f+48|0,f+32|0),b=l[f+188>>2],t=l[f+184>>2],l[f+216>>2]=t,l[f+220>>2]=b,n=l[f+180>>2],c=l[f+176>>2],l[f+208>>2]=c,l[f+212>>2]=n,s=l[s>>2],u=l[f+236>>2],l[f+24>>2]=l[f+232>>2],l[f+28>>2]=u,l[f+8>>2]=t,l[f+12>>2]=b,b=l[f+228>>2],l[f+16>>2]=l[f+224>>2],l[f+20>>2]=b,l[f>>2]=c,l[f+4>>2]=n,Dn(f+176|0,f+16|0,s+-1|0,f),b=l[f+188>>2],l[f+232>>2]=l[f+184>>2],l[f+236>>2]=b,b=l[f+180>>2],l[f+224>>2]=l[f+176>>2],l[f+228>>2]=b),(0|a)!=(0|(r=r+1|0)););return e=l[f+228>>2],l[k>>2]=l[f+224>>2],l[k+4>>2]=e,e=l[f+236>>2],l[k+8>>2]=l[f+232>>2],l[k+12>>2]=e,ne=f+240|0,0},f[4]=function(e,r){e|=0;var a,i=0;ne=a=ne-80|0,i=l[12+(r|=0)>>2],l[a+56>>2]=l[r+8>>2],l[a+60>>2]=i,i=l[r+4>>2],l[a+48>>2]=l[r>>2],l[a+52>>2]=i,function e(r,a){var i=0,f=0;ne=i=ne-400|0,f=l[a+12>>2],l[i+328>>2]=l[a+8>>2],l[i+332>>2]=f,f=l[a+4>>2],l[i+320>>2]=l[a>>2],l[i+324>>2]=f;e:{r:{if(1!=(15&v[i+320|0])){if(f=l[a+12>>2],l[i+312>>2]=l[a+8>>2],l[i+316>>2]=f,f=l[a+4>>2],l[i+304>>2]=l[a>>2],l[i+308>>2]=f,15&v[i+304|0])break r;if(f=l[a+12>>2],l[i+296>>2]=l[a+8>>2],l[i+300>>2]=f,f=l[a+4>>2],l[i+288>>2]=l[a>>2],l[i+292>>2]=f,Nb(i+384|0,i+288|0),f=l[i+396>>2],l[i+280>>2]=l[i+392>>2],l[i+284>>2]=f,f=l[i+388>>2],l[i+272>>2]=l[i+384>>2],l[i+276>>2]=f,rb(i+272|0))break r}f=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,zb(i),cn(24218,25,1,l[75398]),a=l[10947],l[r+8>>2]=l[10946],l[r+12>>2]=a,a=l[10945],l[r>>2]=l[10944],l[r+4>>2]=a;break e}if(f=l[a+12>>2],l[i+264>>2]=l[a+8>>2],l[i+268>>2]=f,f=l[a+4>>2],l[i+256>>2]=l[a>>2],l[i+260>>2]=f,5!=(15&v[i+256|0]))if(f=l[a+12>>2],l[i+248>>2]=l[a+8>>2],l[i+252>>2]=f,f=l[a+4>>2],l[i+240>>2]=l[a>>2],l[i+244>>2]=f,15&v[i+240|0]||(f=l[a+12>>2],l[i+232>>2]=l[a+8>>2],l[i+236>>2]=f,f=l[a+4>>2],l[i+224>>2]=l[a>>2],l[i+228>>2]=f,Ck(i+368|0,i+224|0),f=l[i+380>>2],l[a+8>>2]=l[i+376>>2],l[a+12>>2]=f,f=l[i+372>>2],l[a>>2]=l[i+368>>2],l[a+4>>2]=f),f=l[a+12>>2],l[i+216>>2]=l[a+8>>2],l[i+220>>2]=f,f=l[a+4>>2],l[i+208>>2]=l[a>>2],l[i+212>>2]=f,1!=(15&v[i+208|0]))if(f=l[a+12>>2],l[i+200>>2]=l[a+8>>2],l[i+204>>2]=f,f=l[a+4>>2],l[i+192>>2]=l[a>>2],l[i+196>>2]=f,15&v[i+192|0]){if(f=l[a+12>>2],l[i+184>>2]=l[a+8>>2],l[i+188>>2]=f,f=l[a+4>>2],l[i+176>>2]=l[a>>2],l[i+180>>2]=f,5==(15&v[i+176|0])){f=l[a+12>>2],l[i+88>>2]=l[a+8>>2],l[i+92>>2]=f,f=l[a+4>>2],l[i+80>>2]=l[a>>2],l[i+84>>2]=f,l[i+64>>2]=Gb(i+80|0),Yb(r,24385,i- -64|0);break e}if(f=l[a+12>>2],l[i+168>>2]=l[a+8>>2],l[i+172>>2]=f,f=l[a+4>>2],l[i+160>>2]=l[a>>2],l[i+164>>2]=f,jk(i+368|0,i+160|0,16),f=l[i+380>>2],l[a+8>>2]=l[i+376>>2],l[a+12>>2]=f,f=l[i+372>>2],l[a>>2]=l[i+368>>2],l[a+4>>2]=f,f=l[a+12>>2],l[i+152>>2]=l[a+8>>2],l[i+156>>2]=f,f=l[a+4>>2],l[i+144>>2]=l[a>>2],l[i+148>>2]=f,5==(15&v[i+144|0])){f=l[a+12>>2],l[i+120>>2]=l[a+8>>2],l[i+124>>2]=f,f=l[a+4>>2],l[i+112>>2]=l[a>>2],l[i+116>>2]=f,l[i+96>>2]=Gb(i+112|0),Yb(r,24385,i+96|0);break e}a=l[10947],l[i+360>>2]=l[10946],l[i+364>>2]=a,a=l[10945],l[i+352>>2]=l[10944],l[i+356>>2]=a,a=l[i+364>>2],l[i+136>>2]=l[i+360>>2],l[i+140>>2]=a,a=l[i+356>>2],l[i+128>>2]=l[i+352>>2],l[i+132>>2]=a,e(r,i+128|0)}else f=l[a+12>>2],l[i+56>>2]=l[a+8>>2],l[i+60>>2]=f,f=l[a+4>>2],l[i+48>>2]=l[a>>2],l[i+52>>2]=f,Ck(i+336|0,i+48|0),a=l[i+348>>2],l[i+40>>2]=l[i+344>>2],l[i+44>>2]=a,a=l[i+340>>2],l[i+32>>2]=l[i+336>>2],l[i+36>>2]=a,e(r,i+32|0);else f=l[a+12>>2],l[i+24>>2]=l[a+8>>2],l[i+28>>2]=f,f=l[a+4>>2],l[i+16>>2]=l[a>>2],l[i+20>>2]=f,e(r,i+16|0);else f=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=f,f=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=f}ne=i+400|0}(a- -64|0,a+48|0),i=l[a+76>>2],l[r+8>>2]=l[a+72>>2],l[r+12>>2]=i,i=l[a+68>>2],l[r>>2]=l[a+64>>2],l[r+4>>2]=i,i=l[r+12>>2],l[a+40>>2]=l[r+8>>2],l[a+44>>2]=i,i=l[r+4>>2],l[a+32>>2]=l[r>>2],l[a+36>>2]=i,l[a+16>>2]=Gb(a+32|0),Sn(e,29258,a+16|0),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a),ne=a+80|0},f[5]=function(e,r){e|=0;var a,i=0;ne=a=ne-112|0,i=l[12+(r|=0)>>2],l[a+88>>2]=l[r+8>>2],l[a+92>>2]=i,i=l[r+4>>2],l[a+80>>2]=l[r>>2],l[a+84>>2]=i,5!=(15&v[a+80|0])&&(i=l[r+12>>2],l[a+72>>2]=l[r+8>>2],l[a+76>>2]=i,i=l[r+4>>2],l[a+64>>2]=l[r>>2],l[a+68>>2]=i,jk(a+96|0,a- -64|0,16),i=l[a+108>>2],l[r+8>>2]=l[a+104>>2],l[r+12>>2]=i,i=l[a+100>>2],l[r>>2]=l[a+96>>2],l[r+4>>2]=i),i=l[r+12>>2],l[a+56>>2]=l[r+8>>2],l[a+60>>2]=i,i=l[r+4>>2],l[a+48>>2]=l[r>>2],l[a+52>>2]=i,Db(Gb(a+48|0),21848,9)||(i=l[r+12>>2],l[a+40>>2]=l[r+8>>2],l[a+44>>2]=i,i=l[r+4>>2],l[a+32>>2]=l[r>>2],l[a+36>>2]=i,l[a+16>>2]=Gb(a+32|0),ib(e,4096,22063,a+16|0)),(e=hn(e,10))&&(k[0|e]=0),e=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=e,e=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=e,zb(a),ne=a+112|0},f[6]=function(e,r){r|=0;var a,i=0,f=0;return ne=a=ne-96|0,f=l[28+(i=e|=0)>>2],l[a+56>>2]=l[i+24>>2],l[a+60>>2]=f,f=l[i+20>>2],l[a+48>>2]=l[i+16>>2],l[a+52>>2]=f,Nb(a+80|0,a+48|0),f=l[(i=r)+28>>2],l[a+40>>2]=l[i+24>>2],l[a+44>>2]=f,f=l[i+20>>2],l[a+32>>2]=l[i+16>>2],l[a+36>>2]=f,Nb(a- -64|0,a+32|0),i=l[a+92>>2],l[a+24>>2]=l[a+88>>2],l[a+28>>2]=i,i=l[a+76>>2],l[a+8>>2]=l[a+72>>2],l[a+12>>2]=i,i=l[a+84>>2],l[a+16>>2]=l[a+80>>2],l[a+20>>2]=i,i=l[a+68>>2],l[a>>2]=l[a+64>>2],l[a+4>>2]=i,(i=cb(a+16|0,a))||(i=l[e+32>>2]-l[r+32>>2]|0),ne=a+96|0,0|i},f[7]=function(e,r){r|=0;var a,i=0,f=0,k=0;return ne=a=ne-128|0,i=l[12+(e|=0)>>2],l[a+88>>2]=l[e+8>>2],l[a+92>>2]=i,i=l[e+4>>2],l[a+80>>2]=l[e>>2],l[a+84>>2]=i,Nb(a+112|0,a+80|0),i=l[a+124>>2],l[a+72>>2]=l[a+120>>2],l[a+76>>2]=i,i=l[a+116>>2],l[a+64>>2]=l[a+112>>2],l[a+68>>2]=i,i=vn(a- -64|0),f=l[r+12>>2],l[a+56>>2]=l[r+8>>2],l[a+60>>2]=f,f=l[r+4>>2],l[a+48>>2]=l[r>>2],l[a+52>>2]=f,Nb(a+96|0,a+48|0),f=l[a+108>>2],l[a+40>>2]=l[a+104>>2],l[a+44>>2]=f,f=l[a+100>>2],l[a+32>>2]=l[a+96>>2],l[a+36>>2]=f,f=vn(a+32|0),k=l[e+12>>2],l[a+24>>2]=l[e+8>>2],l[a+28>>2]=k,k=l[e+4>>2],l[a+16>>2]=l[e>>2],l[a+20>>2]=k,e=Gb(a+16|0),k=l[r+12>>2],l[a+8>>2]=l[r+8>>2],l[a+12>>2]=k,k=l[r+4>>2],l[a>>2]=l[r>>2],l[a+4>>2]=k,e=pn(e,Gb(a),(0|i)<(0|f)?i:f),ne=a+128|0,0|(e||i-f|0)},f[8]=function(e,r){var a;e|=0,r|=0,ne=a=ne-16|0,l[a+4>>2]=lr(l[82952]),l[a>>2]=r,Sn(e,19411,a),ne=a+16|0},f[9]=function(e){},f[10]=function(e,r,a){return e|=0,a|=0,Lb(l[(r|=0)>>2]),(a=l[r+20>>2])&&Lb(a),Lb(e),Lb(r),2},f[11]=function(e,r,a){e|=0,a|=0;var i,k,b,n=0;return k=(i=l[(r|=0)>>2])+l[r+4>>2]|0,b=l[a>>2],e=l[r+8>>2],n=l[r+20>>2],(0|e)>=2||(n=r+16|0),r=n,(e=0|f[b](i,k,e,r,l[a+4>>2],l[a+8>>2]))?(l[a+12>>2]=e,1):0},f[12]=function(e,r,a){e|=0,a|=0;var i=0,f=0;if((0|(e=l[8+(r|=0)>>2]))>=2)for(f=l[r+20>>2],e=0;l[(i=(e<<2)+f|0)>>2]=l[(l[i>>2]<<2)+a>>2],(0|(e=e+1|0))<l[r+8>>2];);else 1==(0|e)&&(l[r+16>>2]=l[(l[r+16>>2]<<2)+a>>2]);return 0},f[13]=function(e,r,a,i){e|=0,r|=0,a|=0;var b,n,s=0,t=0,c=0,o=0;ne=b=ne-16|0,s=l[4+(i|=0)>>2],n=l[i>>2];e:{r:if(1!=(0|a)){if(!(!vi(l[n+8>>2],e,s)|1&k[s+4|0])){if(e=0,(0|a)>=1)for(s=0;;){o=f[l[l[n+8>>2]+28>>2]](l[(s<<2)+r>>2],b+9|0)+(b+9)|0;a:{i:{if(!s){if(t=-5,!(e=Cb(44)))break e;if(l[e>>2]=0,l[(c=e+12|0)>>2]=0,l[c+4>>2]=0,c=e+20|0,l[e+8>>2]=c,l[e+4>>2]=c,!qk(e,b+9|0,o))break i;kn(e);break e}if((0|(t=qk(e,b+9|0,o)))>-1)break a;kn(e);break e}l[e+12>>2]=2|l[e+12>>2]}if((0|(s=s+1|0))==(0|a))break}if((r=Cb(44))&&(l[r+8>>2]=0,l[r+4>>2]=e,l[r>>2]=9),l[l[i+12>>2]>>2]=r,!(e=l[l[i+12>>2]>>2])){t=-5;break e}l[i+12>>2]=e+8}}else{a=vi(l[n+8>>2],e,s),e=1&l[s+4>>2];a:{if(a){if(!e)break a;break e}if(!e)break e}if(!((e=l[r>>2])>>>0<256&&l[l[n+8>>2]+12>>2]<=1)){Fn(s+40|0,e,e);break r}k[8+(r=s+(e>>>3)|0)|0]=v[r+8|0]|1<<(7&e)}t=0}return ne=b+16|0,0|t},f[14]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0,f=0,k=0;if(t(+e),a=0|b(1),i=0|b(0),f=a,(a&=2147483647)>>>0>=1072693248)return a+-1072693248|i?0/(e-e):(0|f)<0||(0|f)<=0&&!(i>>>0>=0)?3.141592653589793:0;e:{if(a>>>0<=1071644671){if(r=1.5707963267948966,a>>>0<1012924417)break e;return 6.123233995736766e-17-(r=e*e)*(r*(r*(r*(r*(3479331075960212e-20*r+.0007915349942898145)-.04005553450067941)+.20121253213486293)-.3255658186224009)+.16666666666666666)/(r*(r*(r*(.07703815055590194*r-.6882839716054533)+2.0209457602335057)-2.403394911734414)+1)*e-e+1.5707963267948966}if((0|f)<-1||(0|f)<=-1&&!(i>>>0>4294967295))return r=F(e=.5*(e+1)),(e=1.5707963267948966-(r+(r*(e*(e*(e*(e*(e*(3479331075960212e-20*e+.0007915349942898145)-.04005553450067941)+.20121253213486293)-.3255658186224009)+.16666666666666666)/(e*(e*(e*(.07703815055590194*e-.6882839716054533)+2.0209457602335057)-2.403394911734414)+1))-6.123233995736766e-17)))+e;t(+(k=F(e=.5*(1-e)))),i=0|b(1),b(0),n(0,0),n(1,0|i),r=+s(),r=(e=e*(e*(e*(e*(e*(3479331075960212e-20*e+.0007915349942898145)-.04005553450067941)+.20121253213486293)-.3255658186224009)+.16666666666666666)/(e*(e*(e*(.07703815055590194*e-.6882839716054533)+2.0209457602335057)-2.403394911734414)+1)*k+(e-r*r)/(k+r)+r)+e}return r}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[15]=function(e,r,a){e|=0,r|=0;var i,f,k=0,n=0;ne=r=ne-208|0,k=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=k,k=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=k,4==(15&v[r+128|0])?(k=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=k,k=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=k,i=Wb(r+16|0),f=0,t(+i),f=0|b(1),b(0),n=(f=f>>>20&2047)>>>0<=1023?If((i+=-1)+F(i*i+(i+i))):f>>>0<=1048?Lk(i+i+-1/(F(i*i-1)+i)):Lk(i)+.6931471805599453,l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=n,k=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=k,k=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=k,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(k=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=k,k=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=k,k=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=k,k=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=k,a=Xb(15&v[r+112|0]),k=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=k,k=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=k,Nb(r+160|0,r+96|0),k=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=k,k=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=k,k=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=k,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[16]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0,f=0,k=0,c=0;t(+e),a=0|b(1),f=0|b(0),k=a;e:{r:{if((a&=2147483647)>>>0>=1072693248){if(a+-1072693248|f)break r;return 1.5707963267948966*e+7.52316384526264e-37}if(a>>>0<=1071644671){if(a+-1048576>>>0<1044381696)break e;return(r=e*e)*(r*(r*(r*(r*(3479331075960212e-20*r+.0007915349942898145)-.04005553450067941)+.20121253213486293)-.3255658186224009)+.16666666666666666)/(r*(r*(r*(.07703815055590194*r-.6882839716054533)+2.0209457602335057)-2.403394911734414)+1)*e+e}return e=.5*(1-g(e)),c=e*(e*(e*(e*(e*(3479331075960212e-20*e+.0007915349942898145)-.04005553450067941)+.20121253213486293)-.3255658186224009)+.16666666666666666)/(e*(e*(e*(.07703815055590194*e-.6882839716054533)+2.0209457602335057)-2.403394911734414)+1),r=F(e),a>>>0>=1072640819?e=1.5707963267948966-((e=r+r*c)+e+-6.123233995736766e-17):(i=e,t(+r),a=0|b(1),b(0),n(0,0),n(1,0|a),e=.7853981633974483-((e=+s())+e)-((r+r)*c-(6.123233995736766e-17-((i=(i-e*e)/(r+e))+i)))+.7853981633974483),(0|k)<0||(0|k)<=0&&!(f>>>0>=0)?-e:e}e=0/(e-e)}return e}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[17]=function(e,r,a){e|=0,r|=0;var i,f,k,c,o,u=0,d=0;ne=r=ne-208|0,u=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=u,u=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=u,4==(15&v[r+128|0])?(u=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=u,u=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=u,i=Wb(r+16|0),f=0,k=0,c=0,o=0,t(+i),f=0|b(1),k=0|b(0),c=f,n(0,0|k),n(1,2147483647&f),i=+s(),(f=f>>>20&2047)>>>0>=1049?i=Lk(i)+.6931471805599453:f>>>0>=1024?i=Lk(i+i+1/(F(i*i+1)+i)):f>>>0<997||(i=If((o=i*i)/(F(o+1)+1)+i)),d=(0|c)<0||(0|c)<=0&&!(k>>>0>=0)?-i:i,l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=d,u=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=u,u=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=u,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(u=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=u,u=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=u,u=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=u,u=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=u,a=Xb(15&v[r+112|0]),u=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=u,u=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=u,Nb(r+160|0,r+96|0),u=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=u,u=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=u,u=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=u,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[18]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=ck(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[19]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,n=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,n=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,n=function(e,r){var a=0,i=0,f=0,k=0,n=0,s=0,c=0,o=0;if(t(+r),a=0|b(1),i=0|b(0),!(2146435072==(0|(k=2147483647&a))&i>>>0<=0|k>>>0<2146435072&&(t(+e),k=0|b(1),n=0|b(0),2146435072==(0|(f=2147483647&k))&n>>>0<1|f>>>0<2146435072)))return e+r;if(o=i,f=a,!(i|a+-1072693248))return ck(e);i=(c=a>>>30&2)|(a=k)>>>31;e:{r:{a:{if(!(n|(a&=2147483647))){i:switch(i-2|0){case 0:break a;case 1:break i;default:break r}return-3.141592653589793}if(!((f&=2147483647)|o))break e;i:{if(2146435072==(0|f)){if(2146435072!=(0|a))break i;return m[308384+(i<<3)>>3]}if(!(f+67108864>>>0>=a>>>0&&2146435072!=(0|a)))break e;if(c&&(s=0,a+67108864>>>0<f>>>0)||(s=ck(g(e/r))),e=s,i>>>0<=2){f:switch(i-1|0){case 0:return-e;case 1:break f;default:break r}return 3.141592653589793-(e+-1.2246467991473532e-16)}return e+-1.2246467991473532e-16+-3.141592653589793}return m[308416+(i<<3)>>3]}e=3.141592653589793}return e}return(0|k)<0||(0|k)<=0&&!(n>>>0>=0)?-1.5707963267948966:1.5707963267948966}(n,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=n,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[20]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0,f=0;t(+e),r=0|b(1),a=0|b(0),i=r,n(0,0|a),n(1,2147483647&r),e=+s();e:{if((r=r>>>20&2047)>>>0<=1021){if(r>>>0<991)break e;e=(f=e+e)+f*e/(1-e)}else e/=1-e,e+=e;e=.5*If(e)}return(0|i)<0||(0|i)<=0&&!(a>>>0>=0)?-e:e}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[21]=function(e,r,a){e|=0,r|=0;var i,f,k,c,o,u,d=0,h=0;ne=r=ne-208|0,d=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=d,d=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=d,4==(15&v[r+128|0])?(d=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=d,d=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=d,i=Wb(r+16|0),f=0,k=0,c=0,o=0,u=0,t(+i),f=0|b(1),b(0),c=f,h=(f&=2147483647)>>>0>=2146435072?i+i:(o=715094163,f>>>0<=1048575&&(o=696219795,t(0x40000000000000*i),f=0|b(1),b(0),c=f,!(f&=2147483647))||(u=i,n(0,0),n(1,((f>>>0)/3|0)+o|-2147483648&c),k=+s(),t(+((i=k*k*(k/i))*(i*i)*(.14599619288661245*i-.758397934778766)+(i*(1.6214297201053545*i-1.8849797954337717)+1.87595182427177))*k),f=0|b(1),(c=(0|b(0))-2147483648|0)>>>0<2147483648&&(f=f+1|0),n(0,-1073741824&c),n(1,0|f),i=+s(),i=((k=u/(i*i))-i)/(i+i+k)*i+i),i),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=h,d=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=d,d=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=d,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(d=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=d,d=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=d,d=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=d,d=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=d,a=Xb(15&v[r+112|0]),d=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=d,d=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=d,Nb(r+160|0,r+96|0),d=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=d,d=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=d,d=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=d,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[22]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Xk(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[23]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0;t(+e),r=0|b(1),n(0,0|b(0)),n(1,0|(r&=2147483647)),e=+s();e:{if(r>>>0<=1072049729){if(a=1,r>>>0<1045430272)break e;return(e=Fb(e))*e/((a=e+1)+a)+1}if(r>>>0<=1082535489)return.5*((e=_b(e))+1/e);a=Na(e)}return a}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[24]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=_b(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[25]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0,f=0,k=0;e:{t(+e),a=0|b(1),f=0|b(0);r:{if((a=2147483647&(r=a))>>>0>=1083174912){if(!(a>>>0<1083179008|((0|r)<0?1:(0|r)<=0?f>>>0>=0?0:1:0)))return 8.98846567431158e307*e;if(a>>>0>=2146435072)return-1/e;if(!(e<=-1075))break e;if(i=0,(0|r)<-1||(0|r)<=-1&&!(f>>>0>4294967295))break r;break e}if(a>>>0>1016070143)break e;i=e+1}return i}return t(+(k=e+26388279066624)),b(1),r=128+(0|b(0))|0,i=m[308512+(f=r<<4&4080)>>3],e=e-(k+-26388279066624)-m[308512+(8|f)>>3],Ik(i+i*e*(e*(e*(e*(.0013333559164630223*e+.009618129842126066)+.0555041086648214)+.2402265069591)+.6931471805599453),(-256&r)/256|0)}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[26]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Wb(r+16|0),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=D(f),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[27]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,c=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,c=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,c=function(e,r){var a=0,i=0,f=0,k=0,c=0,o=0,u=0,l=0,v=0,d=0,h=0;ne=i=ne-32|0,t(+e),c=0|b(1),l=0|b(0),t(+r),k=0|b(1),v=0|b(0),c=(o=(0|(f=u=2147483647&c))==(0|(k=d=2147483647&k))&l>>>0<v>>>0|f>>>0<k>>>0)?l:v,h=f=o?f:k,n(0,0|c),n(1,0|f),e=+s(),a=e;e:if(2047!=(0|(k=f>>>20)))if(f=u=o?d:u,n(0,0|(o?v:l)),n(1,0|f),r=+s(),c|h&&2047!=(0|(c=f>>>20))){if(a=r+e,(c-k|0)>=65)break e;c>>>0>=1534?(e*=1.90109156629516e-211,r*=1.90109156629516e-211,a=5.260135901548374e210):(a=1,k>>>0>572||(e*=5.260135901548374e210,r*=5.260135901548374e210,a=1.90109156629516e-211)),Ca(i+24|0,i+16|0,r),Ca(i+8|0,i,e),a*=F(m[i>>3]+m[i+16>>3]+m[i+8>>3]+m[i+24>>3])}else a=r;return ne=i+32|0,e=a}(c,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=c,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[28]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=ff(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[29]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=kf(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[30]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Lk(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[31]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0,f=0,k=0,c=0,o=0,u=0,l=0,v=0,d=0,h=0,m=0;e:{r:{a:{if(t(+e),r=0|b(1),a=0|b(0),!(((0|r)>0||(0|r)>=0&&!(a>>>0<0))&&(f=r,r>>>0>1048575))){if(!(2147483647&r|a))return-1/(e*e);if((0|r)>-1||(0|r)>=-1&&!(a>>>0<=4294967295))break a;return(e-e)/0}if(f>>>0>2146435071)break e;if(r=1072693248,v=-1023,1072693248!=(0|f)){r=f;break r}if(a)break r;return 0}t(0x40000000000000*e),r=0|b(1),a=0|b(0),v=-1077}k=.30102999566361177*(d=+(((r=r+614242|0)>>>20)+v|0)),n(0,0|a),n(1,1072079006+(1048575&r)|0),i=+s()-1,e=(u=(o=i/(i+2))*o)*u,t(+(i-(c=i*(.5*i)))),r=0|b(1),b(0),n(0,0),n(1,0|r),l=+s(),e=(m=k+(h=.4342944818781689*l))+(h+(k-m)+(.4342944818781689*(e=i-l-c+o*(c+(e*(e*(.15313837699209373*e+.22222198432149784)+.3999999999940942)+u*(e*(e*(.14798198605116586*e+.1818357216161805)+.2857142874366239)+.6666666666666735))))+(3.694239077158931e-13*d+2.5082946711645275e-11*(e+l))))}return e}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[32]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0,f=0,k=0,c=0,o=0,u=0,l=0,v=0,d=0,h=0;e:{r:{a:{if(t(+e),r=0|b(1),a=0|b(0),!(((0|r)>0||(0|r)>=0&&!(a>>>0<0))&&(f=r,r>>>0>1048575))){if(!(2147483647&r|a))return-1/(e*e);if((0|r)>-1||(0|r)>=-1&&!(a>>>0<=4294967295))break a;return(e-e)/0}if(f>>>0>2146435071)break e;if(r=1072693248,l=-1023,1072693248!=(0|f)){r=f;break r}if(a)break r;return 0}t(0x40000000000000*e),r=0|b(1),a=0|b(0),l=-1077}n(0,0|a),n(1,1072079006+(1048575&(a=r+614242|0))|0),i=+s()-1,e=(o=(c=i/(i+2))*c)*o,t(+(i-(k=i*(.5*i)))),r=0|b(1),b(0),n(0,0),n(1,0|r),u=+s(),e=(h=(v=1.4426950407214463*u)+(d=+((a>>>20)+l|0)))+(v+(d-h)+(1.4426950407214463*(e=i-u-k+c*(k+(e*(e*(.15313837699209373*e+.22222198432149784)+.3999999999940942)+o*(e*(e*(.14798198605116586*e+.1818357216161805)+.2857142874366239)+.6666666666666735))))+1.6751713164886512e-10*(e+u)))}return e}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[33]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,b=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,b=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,b=Ma(b,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=b,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[34]=Da,f[35]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=ab(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[36]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0,f=0;t(+e),a=0|b(1),i=0|b(0),f=(0|a)<0||(0|a)<=0&&!(i>>>0>=0)?-.5:.5,n(0,0|i),n(1,0|(a&=2147483647)),r=+s(),i=a;e:{if(a>>>0<=1082535489){if(r=Fb(r),i>>>0<=1072693247){if(i>>>0<1045430272)break e;return f*(r+r-r*r/(r+1))}return f*(r+r/(r+1))}e=(f+f)*Na(r)}return e}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[37]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Wb(r+16|0),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=F(f),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[38]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Ke(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[39]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0;t(+e),r=0|b(1),a=0|b(0),i=r,n(0,0|a),n(1,0|(r&=2147483647)),e=+s();e:if(r>>>0>=1071748075){if(r>>>0>=1077149697){e=-0/e+1;break e}e=1-2/(Fb(e+e)+2)}else r>>>0>=1070618799?(e=Fb(e+e),e/=e+2):r>>>0<1048576||(e=-(e=Fb(-2*e))/(e+2));return(0|i)<0||(0|i)<=0&&!(a>>>0>=0)?-e:e}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[40]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r=0,a=0,i=0,f=0,k=0,n=0,s=0,c=0;if(t(+e),i=0|b(1),n=0|b(0),(i=2147483647&(r=i))>>>0>=2146435072)return e+x;if(i>>>0<=1016070143)return 1/e;if(D(e)==e){if((0|r)<0||(0|r)<=0&&!(n>>>0>=0))return A;if(e<=23)return r=g(e)<2147483648?~~e:-2147483648,m[305032+(r<<3)>>3]}return i>>>0>=1080492032?(0|r)<-1||(0|r)<=-1&&!(n>>>0>4294967295)?.5*D(e)==D(.5*e)?0:-0:8.98846567431158e307*e:(f=(a=(0|r)<0||(0|r)<=0&&!(n>>>0>=0)?-e:e)+5.52468004077673,s=a>5.52468004077673?f-a-5.52468004077673:f+-5.52468004077673-a,k=function(e){var r=0,a=0,i=0,f=0;if(e<8)for(a=12;i=i*e+m[305344+(r=a<<3)>>3],f=f*e+m[r+305232>>3],a=(r=a)+-1|0,r;);else for(;i=i/e+m[305344+(r=a<<3)>>3],f=f/e+m[r+305232>>3],13!=(0|(a=a+1|0)););return f/i}(a)*_b(-f),c=a+-.5,e<0&&(c=-c,s=-s,k=-3.141592653589793/(k*(a*function(e){var r=0,a=0;e=(e*=.5)-D(e),r=g(a=4*(e+=e))<2147483648?~~a:-2147483648,e=3.141592653589793*(e-.5*+(0|(r=(r+1|0)/2|0)));e:{r:{a:{if((r=r+-1|0)>>>0<=2)switch(r-1|0){case 1:break e;case 0:break r;default:break a}return Pn(e,0,0)}return xn(e,0)}return Pn(-e,0,0)}return-xn(e,0)}(a)))),(e=Ma(f,.5*c))*(e*(k+6.02468004077673*s*k/f)))}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[41]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=pk(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[42]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=gk(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[43]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,n=0;ne=r=ne-400|0,n=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=n,n=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=n,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,k=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,k=function(e,r){var a,i=0,f=0,k=0,n=0,s=0,c=0,o=0,u=0,l=0,v=0;if(t(+r),l=f=0|b(1),(((a=c=0|b(0))|0-a)>>>31|(c=2147483647&f))>>>0<=2146435072){if(!e)return ff(r);if(r=(f=(0|e)<0)?-r:r,!(f=f?-1^e:e+-1|0))return kf(r);l=(l>>>31^e>>>31)&e,n=g(r);e:if(!(!(c|a)|2146435072==(0|c)))if(n>(r=+(0|f))){if(c>>>0>=1389363200){r:{switch((3&f)-1|0){default:r=Xk(n),r=ab(n)-r;break r;case 0:r=-Xk(n)-ab(n);break r;case 1:r=Xk(n)-ab(n);break r;case 2:}r=Xk(n)+ab(n)}i=.5641895835477563*r/F(n);break e}if(k=ff(n),i=kf(n),(0|f)<1)break e;for(e=0;i=(r=i)*(((i=+(0|(e=e+1|0)))+i)/n)-k,k=r,(0|e)!=(0|f););}else if(c>>>0<=1041235967){if((0|f)>32)break e;if(k=.5*n,(0|f)<1)r=1,i=k;else for(c=f+1|0,e=2,r=1,i=k;i*=k,r*=+(0|e),f=(0|e)!=(0|c),e=e+1|0,f;);i/=r}else{if(e=1,(i=(o=((u=r+1)+u)/n)*(k=o+(v=2/n))-1)<1e9)for(s=o;e=e+1|0,i=(r=i)*(k=v+k)-s,s=r,i<1e9;);for(i=0;i=1/(((r=u+ +(0|e))+r)/n-i),c=(0|e)>0,e=e+-1|0,c;);r:{a:{i:{if(!(u*Lk(g(o))<709.782712893384)){if(k=1,(0|f)>0)break i;break a}if(k=1,(0|f)<1)break a;for(s=i;k=(r=k)*((k=+(0|f))+k)/n-s,s=r,(0|(f=f+-1|0))>0;);break r}for(r=i;(s=k*((s=+(0|f))+s)/n-r)>3.273390607896142e150?(i/=s,r=k/s,k=1):(r=k,k=s),(0|(f=f+-1|0))>0;);break r}r=i}s=ff(n),o=kf(n),i=g(s)>=g(o)?i*s/k:i*o/r}r=l?-i:i}return r}(a=g(k)<2147483648?~~k:-2147483648,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=k,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[44]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,n=0;ne=r=ne-400|0,n=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=n,n=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=n,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,k=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,k=function(e,r){var a,i=0,f=0,k=0,n=0,s=0,c=0;if(t(+r),s=n=0|b(1),a=f=0|b(0),((n&=2147483647)|(0-f|f)>>>31)>>>0>2146435072)return r;if(!(((0|s)<-1||(0|s)<=-1&&!(f>>>0>4294967295))&&(i=A,n|a))&&(i=0,2146435072!=(0|n))){if(!e)return pk(r);if(s=e>>>31&e,!(e=(0|e)<0?-1^e:e+-1|0))return r=gk(r),s?-r:r;e:if(n>>>0>=1389363200){r:{switch((3&e)-1|0){default:i=-ab(r)-Xk(r);break r;case 0:i=ab(r),i=Xk(r)-i;break r;case 1:i=ab(r)+Xk(r);break r;case 2:}i=ab(r)-Xk(r)}k=.5641895835477563*i/F(r)}else if(c=pk(r),k=gk(r),!((0|e)<1)&&(t(+k),f=0|b(1),b(0),-1048576!=(0|f)))for(f=0;;){if(k=(i=k)*(((k=+(0|(f=f+1|0)))+k)/r)-c,(0|f)>=(0|e))break e;if(c=i,t(+k),n=0|b(1),b(0),-1048576==(0|n))break}i=s?-k:k}return i}(a=g(k)<2147483648?~~k:-2147483648,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=k,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[45]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Wb(r+16|0),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=S(f),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[46]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,c=0,o=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,c=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,t(+c),a=0|b(1),o=0|b(0),t(+Wb(r+32|0)),k=0|b(1),b(0),n(0,0|o),n(1,2147483647&a|-2147483648&k),c=+s(),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=c,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[47]=Da,f[48]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r,a,i=0,f=0;return t(+e),f=0|b(1),a=0|b(0),r=f,(f&=2147483647)>>>0>=2146435072?1/e+ +(1-(r>>>30&2)|0):f>>>0<=1072365567?f>>>0<=1043333119?.125*(8*e+1.0270333367641007*e):((i=e*e)*(i*(i*(-23763016656650163e-21*i-.005770270296489442)-.02848174957559851)-.3250421072470015)+.12837916709551256)/(i*(i*(i*(i*(-3960228278775368e-21*i+.00013249473800432164)+.005081306281875766)+.0650222499887673)+.39791722395915535)+1)*e+e:(i=1,f>>>0<=1075314687&&(i=1-Ha(f,e)),(0|r)<0||(0|r)<=0&&!(a>>>0>=0)?-i:i)}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[49]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r,a,i=0,f=0;return t(+e),f=0|b(1),a=0|b(0),(f=2147483647&(r=f))>>>0>=2146435072?1/e+ +(r>>>30&2):f>>>0<=1072365567?f>>>0<=1013972991?1-e:(i=((i=e*e)*(i*(i*(-23763016656650163e-21*i-.005770270296489442)-.02848174957559851)-.3250421072470015)+.12837916709551256)/(i*(i*(i*(i*(-3960228278775368e-21*i+.00013249473800432164)+.005081306281875766)+.0650222499887673)+.39791722395915535)+1),f>>>0>1070596095&&((0|r)>0||(0|r)>=0&&!(a>>>0<0))?.5-(e+-.5+i*e):1-(i*e+e)):f>>>0<=1077673983?(e=Ha(f,e),(0|r)<0||(0|r)<=0&&!(a>>>0>=0)?2-e:e):(0|r)<0||(0|r)<=0&&!(a>>>0>=0)?2:0}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[50]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Fb(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[51]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Wb(r+16|0),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=g(f),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[52]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,n=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,n=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,n=function(e,r){var a=0,i=0;if(t(+e),a=0|b(1),i=0|b(0),2146435072==(0|(a&=2147483647))&i>>>0<=0|a>>>0<2146435072){if(t(+r),a=0|b(1),i=0|b(0),2146435072==(0|(a&=2147483647))&i>>>0>0|a>>>0>2146435072)return r;e=e>r?e-r:0}return e}(n,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=n,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[53]=function(e,r,a,i,f,k){e|=0,r|=0,i|=0,f|=0,k|=0;var b=0,n=0,s=0;ne=r=ne-608|0,b=l[12+(a|=0)>>2],l[r+536>>2]=l[a+8>>2],l[r+540>>2]=b,b=l[a+4>>2],l[r+528>>2]=l[a>>2],l[r+532>>2]=b,zb(r+528|0),a=l[i+12>>2],l[r+520>>2]=l[i+8>>2],l[r+524>>2]=a,a=l[i+4>>2],l[r+512>>2]=l[i>>2],l[r+516>>2]=a,4==(15&v[r+512|0])?(a=l[f+12>>2],l[r+376>>2]=l[f+8>>2],l[r+380>>2]=a,a=l[f+4>>2],l[r+368>>2]=l[f>>2],l[r+372>>2]=a,4==(15&v[r+368|0])?(a=l[k+12>>2],l[r+232>>2]=l[k+8>>2],l[r+236>>2]=a,a=l[k+4>>2],l[r+224>>2]=l[k>>2],l[r+228>>2]=a,4==(15&v[r+224|0])?(a=l[i+12>>2],l[r+88>>2]=l[i+8>>2],l[r+92>>2]=a,a=l[i+4>>2],l[r+80>>2]=l[i>>2],l[r+84>>2]=a,n=Wb(r+80|0),a=l[f+12>>2],l[r+72>>2]=l[f+8>>2],l[r+76>>2]=a,a=l[f+4>>2],l[r+64>>2]=l[f>>2],l[r+68>>2]=a,s=Wb(r- -64|0),a=l[k+12>>2],l[r+56>>2]=l[k+8>>2],l[r+60>>2]=a,a=l[k+4>>2],l[r+48>>2]=l[k>>2],l[r+52>>2]=a,n=nr(n,s,Wb(r+48|0)),l[r+592>>2]=4,l[r+596>>2]=0,m[r+600>>3]=n,a=l[i+12>>2],l[r+40>>2]=l[i+8>>2],l[r+44>>2]=a,a=l[i+4>>2],l[r+32>>2]=l[i>>2],l[r+36>>2]=a,zb(r+32|0),a=l[f+12>>2],l[r+24>>2]=l[f+8>>2],l[r+28>>2]=a,a=l[f+4>>2],l[r+16>>2]=l[f>>2],l[r+20>>2]=a,zb(r+16|0),a=l[k+12>>2],l[r+8>>2]=l[k+8>>2],l[r+12>>2]=a,a=l[k+4>>2],l[r>>2]=l[k>>2],l[r+4>>2]=a,zb(r),a=l[r+604>>2],l[e+8>>2]=l[r+600>>2],l[e+12>>2]=a,a=l[r+596>>2],l[e>>2]=l[r+592>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+216>>2]=l[i+8>>2],l[r+220>>2]=a,a=l[i+4>>2],l[r+208>>2]=l[i>>2],l[r+212>>2]=a,zb(r+208|0),a=l[f+12>>2],l[r+200>>2]=l[f+8>>2],l[r+204>>2]=a,a=l[f+4>>2],l[r+192>>2]=l[f>>2],l[r+196>>2]=a,zb(r+192|0),a=l[k+12>>2],l[r+568>>2]=l[k+8>>2],l[r+572>>2]=a,a=l[k+4>>2],l[r+560>>2]=l[k>>2],l[r+564>>2]=a,a=l[k+12>>2],l[r+184>>2]=l[k+8>>2],l[r+188>>2]=a,a=l[k+4>>2],l[r+176>>2]=l[k>>2],l[r+180>>2]=a,a=Xb(15&v[r+176|0]),i=l[r+572>>2],l[r+168>>2]=l[r+568>>2],l[r+172>>2]=i,i=l[r+564>>2],l[r+160>>2]=l[r+560>>2],l[r+164>>2]=i,Nb(r+576|0,r+160|0),i=l[r+588>>2],l[r+152>>2]=l[r+584>>2],l[r+156>>2]=i,i=l[r+580>>2],l[r+144>>2]=l[r+576>>2],l[r+148>>2]=i,i=Jb(r+144|0,r+545|0,15),l[r+136>>2]=39516,l[r+132>>2]=i,l[r+128>>2]=a,Yb(r+592|0,39550,r+128|0),a=l[r+604>>2],l[r+120>>2]=l[r+600>>2],l[r+124>>2]=a,a=l[r+596>>2],l[r+112>>2]=l[r+592>>2],l[r+116>>2]=a,Hb(e,r+112|0),e=l[r+572>>2],l[r+104>>2]=l[r+568>>2],l[r+108>>2]=e,e=l[r+564>>2],l[r+96>>2]=l[r+560>>2],l[r+100>>2]=e,zb(r+96|0))):(a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,zb(r+352|0),a=l[k+12>>2],l[r+344>>2]=l[k+8>>2],l[r+348>>2]=a,a=l[k+4>>2],l[r+336>>2]=l[k>>2],l[r+340>>2]=a,zb(r+336|0),a=l[f+12>>2],l[r+568>>2]=l[f+8>>2],l[r+572>>2]=a,a=l[f+4>>2],l[r+560>>2]=l[f>>2],l[r+564>>2]=a,a=l[f+12>>2],l[r+328>>2]=l[f+8>>2],l[r+332>>2]=a,a=l[f+4>>2],l[r+320>>2]=l[f>>2],l[r+324>>2]=a,a=Xb(15&v[r+320|0]),i=l[r+572>>2],l[r+312>>2]=l[r+568>>2],l[r+316>>2]=i,i=l[r+564>>2],l[r+304>>2]=l[r+560>>2],l[r+308>>2]=i,Nb(r+576|0,r+304|0),i=l[r+588>>2],l[r+296>>2]=l[r+584>>2],l[r+300>>2]=i,i=l[r+580>>2],l[r+288>>2]=l[r+576>>2],l[r+292>>2]=i,i=Jb(r+288|0,r+545|0,15),l[r+280>>2]=39516,l[r+276>>2]=i,l[r+272>>2]=a,Yb(r+592|0,39550,r+272|0),a=l[r+604>>2],l[r+264>>2]=l[r+600>>2],l[r+268>>2]=a,a=l[r+596>>2],l[r+256>>2]=l[r+592>>2],l[r+260>>2]=a,Hb(e,r+256|0),e=l[r+572>>2],l[r+248>>2]=l[r+568>>2],l[r+252>>2]=e,e=l[r+564>>2],l[r+240>>2]=l[r+560>>2],l[r+244>>2]=e,zb(r+240|0))):(a=l[f+12>>2],l[r+504>>2]=l[f+8>>2],l[r+508>>2]=a,a=l[f+4>>2],l[r+496>>2]=l[f>>2],l[r+500>>2]=a,zb(r+496|0),a=l[k+12>>2],l[r+488>>2]=l[k+8>>2],l[r+492>>2]=a,a=l[k+4>>2],l[r+480>>2]=l[k>>2],l[r+484>>2]=a,zb(r+480|0),a=l[i+12>>2],l[r+568>>2]=l[i+8>>2],l[r+572>>2]=a,a=l[i+4>>2],l[r+560>>2]=l[i>>2],l[r+564>>2]=a,a=l[i+12>>2],l[r+472>>2]=l[i+8>>2],l[r+476>>2]=a,a=l[i+4>>2],l[r+464>>2]=l[i>>2],l[r+468>>2]=a,a=Xb(15&v[r+464|0]),i=l[r+572>>2],l[r+456>>2]=l[r+568>>2],l[r+460>>2]=i,i=l[r+564>>2],l[r+448>>2]=l[r+560>>2],l[r+452>>2]=i,Nb(r+576|0,r+448|0),i=l[r+588>>2],l[r+440>>2]=l[r+584>>2],l[r+444>>2]=i,i=l[r+580>>2],l[r+432>>2]=l[r+576>>2],l[r+436>>2]=i,i=Jb(r+432|0,r+545|0,15),l[r+424>>2]=39516,l[r+420>>2]=i,l[r+416>>2]=a,Yb(r+592|0,39550,r+416|0),a=l[r+604>>2],l[r+408>>2]=l[r+600>>2],l[r+412>>2]=a,a=l[r+596>>2],l[r+400>>2]=l[r+592>>2],l[r+404>>2]=a,Hb(e,r+400|0),e=l[r+572>>2],l[r+392>>2]=l[r+568>>2],l[r+396>>2]=e,e=l[r+564>>2],l[r+384>>2]=l[r+560>>2],l[r+388>>2]=e,zb(r+384|0)),ne=r+608|0},f[54]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k,n,s,c,o=0,u=0;ne=r=ne-400|0,o=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=o,o=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=o,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,u=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,k=u,n=Wb(r+32|0),s=0,c=0,t(+k),s=0|b(1),c=0|b(0),u=2146435072==(0|(s&=2147483647))&c>>>0<=0|s>>>0<2146435072?(t(+n),s=0|b(1),c=0|b(0),2146435072==(0|(s&=2147483647))&c>>>0>0|s>>>0>2146435072?k:_(k,n)):n,l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=u,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[55]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k,n,s,c,o=0,u=0;ne=r=ne-400|0,o=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=o,o=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=o,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,u=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,k=u,n=Wb(r+32|0),s=0,c=0,t(+k),s=0|b(1),c=0|b(0),u=2146435072==(0|(s&=2147483647))&c>>>0<=0|s>>>0<2146435072?(t(+n),s=0|b(1),c=0|b(0),2146435072==(0|(s&=2147483647))&c>>>0>0|s>>>0>2146435072?k:E(k,n)):n,l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=u,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[56]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,c=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,c=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,c=function(e,r){var a=0,i=0,f=0,k=0,c=0,o=0,u=0,l=0,v=0,d=0,h=0,m=0;if(t(+r),u=i=0|b(1),k=(f=v=0|b(0))<<1,f=a=i<<1|f>>>31,!(a|k)||2146435072==(0|(i=2147483647&u))&v>>>0>0|i>>>0>2146435072||(t(+e),i=0|b(1),a=0|b(0),d=i,2047==(0|(o=i>>>20&2047))))return(e*=r)/e;if(c=i=d<<1|a>>>31,(0|f)==(0|i)&(l=a<<1)>>>0>k>>>0|i>>>0>f>>>0){if(l=u>>>20&2047,o)i=1048575&d|1048576;else{if(o=0,c=a<<12,(0|(i=f=d<<12|a>>>20))>0||(0|i)>=0&&!(c>>>0<0))for(;o=o+-1|0,f=i<<1|c>>>31,c<<=1,(0|(i=f))>-1||(0|i)>=-1&&!(c>>>0<=4294967295););i=d,c=a,a=31&(f=1-o|0),32<=(63&f)>>>0?(f=c<<a,a=0):(f=(1<<a)-1&c>>>32-a|i<<a,a=c<<a),i=f}if(c=a,h=a,m=i,l)f=1048575&u|1048576;else{if(l=0,f=u<<12|(k=v)>>>20,k<<=12,(0|(a=f))>0||(0|a)>=0&&!(k>>>0<0))for(;l=l+-1|0,f=a<<1|k>>>31,k<<=1,(0|(a=f))>-1||(0|a)>=-1&&!(k>>>0<=4294967295););k=v,a=31&(f=1-l|0),32<=(63&f)>>>0?(f=k<<a,v=0):(f=(1<<a)-1&k>>>32-a|u<<a,v=k<<a)}if(a=m-((h>>>0<(k=v)>>>0)+f|0)|0,k=h-k|0,u=(0|a)>-1?1:(0|a)>=-1?k>>>0<=4294967295?0:1:0,(0|o)>(0|l)){for(;;){if(u&&(i=a,c=k,!(k|a)))return 0*e;if(u=(i=i<<1|(a=c)>>>31)-(((a=c=a<<1)>>>0<(k=v)>>>0)+f|0)|0,k=a-k|0,u=(0|(a=u))>-1?1:(0|a)>=-1?k>>>0<=4294967295?0:1:0,!((0|(o=o+-1|0))>(0|l)))break}o=l}if(u&&(i=a,c=k,!(k|a)))return 0*e;if(1048575==(0|i)&c>>>0>4294967295|i>>>0>1048575)k=c,a=i;else for(;o=o+-1|0,u=524288==(0|i)&c>>>0<0|i>>>0<524288,c=k=(f=c)<<1,i=a=i<<1|f>>>31,u;);return c=0,u=-2147483648&d,(0|o)>=1?(f=a+-1048576|0,f=o<<20|((i=k)>>>0<0?f+1|0:f)):(i=31&(f=1-o|0),32<=(63&f)>>>0?(f=0,i=a>>>i):(f=a>>>i,i=((1<<i)-1&a)<<32-i|k>>>i)),n(0,i|c),n(1,f|u),+s()}return(0|k)==(0|l)&(0|f)==(0|c)?0*e:e}(c,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=c,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[57]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r,a,i,f=0,k=0,n=0,s=0,c=0;if(l[82956]=1,t(+e),k=0|b(1),i=0|b(0),r=k,a=k,(k&=2147483647)>>>0>=2146435072)return e*e;if(k>>>0<=999292927)return((0|r)<-1||(0|r)<=-1&&!(i>>>0>4294967295))&&(l[82956]=-1,e=-e),-Lk(e);if((0|r)>-1||(0|r)>=-1&&!(i>>>0<=4294967295))f=e;else{if(0==(s=tr(f=-e)))return 1/(e-e);s>0?l[82956]=-1:s=-s,s=Lk(3.141592653589793/(s*f))}e:{r:{a:{if((0|a)<=1072693247){if(-1074790400==(0|a)|-1073741824==(0|a))break a;break r}if(1073741824!=(0|a)&&1072693248!=(0|a))break r}if(!i){e=0;break e}}if(k>>>0<=1073741823){r:{a:{i:{f:{k:{if(k>>>0<=1072483532){if(n=-Lk(f),e=1,k>>>0>1072130371)break k;if(k>>>0<=1070442080)break r;e=f+-.46163214496836225;break i}if(k>>>0<=1073460418)break f;e=2}e=n+((f=e-f)*((e=f*f)*(e*(e*(e*(25214456545125733e-21*e+.00022086279071390839)+.0011927076318336207)+.007385550860814029)+.06735230105312927)+.07721566490153287)+e*(e*(e*(e*(e*(44864094961891516e-21*e+.00010801156724758394)+.0005100697921535113)+.0028905138367341563)+.020580808432516733)+.3224670334241136)+-.5*f);break e}if(k>>>0<1072936132)break a;e=f+-1.4616321449683622}e=n+((c=f=e*e)*((f*=e)*(f*(f*(.00031563207090362595*f-.0014034646998923284)+.006100538702462913)-.032788541075985965)+.48383612272381005)-(-3.638676997039505e-18-f*(f*(f*(f*(-.00031275416837512086*f+.000881081882437654)-.0036845201678113826)+.01797067508118204)-.1475877229945939+e*(f*(f*(f*(.0003355291926355191*f-.0005385953053567405)+.0022596478090061247)-.010314224129834144)+.06462494023913339)))-.12148629053584961);break e}f+=-1}e=n+(f*(f*(f*(f*(f*(.013381091853678766*f+.22896372806469245)+.9777175279633727)+1.4549225013723477)+.6328270640250934)-.07721566490153287)/(f*(f*(f*(f*(.003217092422824239*f+.10422264559336913)+.7692851504566728)+2.128489763798934)+2.4559779371304113)+1)+-.5*f)}else if(k>>>0<=1075838975){if(n=1,e=.5*(f=(e=f)-+(0|(k=g(f)<2147483648?~~f:-2147483648)))+f*(f*(f*(f*(f*(f*(3194753265841009e-20*f+.0018402845140733772)+.02664227030336386)+.14635047265246445)+.325778796408931)+.21498241596060885)-.07721566490153287)/(f*(f*(f*(f*(f*(7326684307446256e-21*f+.0007779424963818936)+.01864591917156529)+.17193386563280308)+.7219355475671381)+1.3920053346762105)+1),(k=k+-3|0)>>>0>4)break e;switch(k-1|0){case 3:n=f+6;case 2:n*=f+5;case 1:n*=f+4;case 0:n*=f+3}e+=Lk((f+2)*n)}else n=Lk(f),e=k>>>0<=1133510655?(c=1/f)*((e=c*c)*(e*(e*(e*(-.0016309293409657527*e+.0008363399189962821)-.00059518755745034)+.0007936505586430196)-.0027777777772877554)+.08333333333333297)+.4189385332046727+(f+-.5)*(n+-1):f*(n+-1)}return(0|r)<0||(0|r)<=0&&!(i>>>0>=0)?s-e:e}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[58]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=If(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[59]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=function(e){var r;return t(+e),r=0|b(1),b(0),2146435072==(2146435072&r)?e*e:0==e?-1/(e*e):+(0|wk(e))}(Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[60]=Je,f[61]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,c=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,c=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,c=function(e,r){var a,i,f=0,k=0,c=0,o=0,u=0,l=0,v=0,d=0;if(t(+e),f=0|b(1),k=0|b(0),o=2146435072==(0|(f&=2147483647))&k>>>0<=0|f>>>0<2146435072,t(+r),f=0|b(1),k=0|b(0),!(2146435072==(0|(f&=2147483647))&k>>>0<1|f>>>0<2146435072&&o))return e+r;t(+e),f=0|b(1),a=0|b(0),t(+r),c=0|b(1),i=0|b(0);e:if(!((0|a)==(0|i)&(0|f)==(0|c))){if(l=i,u=2147483647&c,v=k=2147483647&f,d=a,k|a)k=f+-1|0,(o=a+-1|0)>>>0<4294967295&&(k=k+1|0),((0|(c^=f))>-1||(0|c)>=-1&&!((a^i)>>>0<=4294967295))&&(0|u)==(0|v)&d>>>0<=l>>>0|v>>>0<u>>>0&&((k=a+1|0)>>>0<1&&(f=f+1|0),o=k,k=f);else{if(!(u|l))break e;o=1,k=-2147483648&c}n(0,0|o),n(1,0|k),r=+s()}return r}(c,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=c,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[62]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,b=0;ne=r=ne-416|0,k=l[12+(a|=0)>>2],l[r+344>>2]=l[a+8>>2],l[r+348>>2]=k,k=l[a+4>>2],l[r+336>>2]=l[a>>2],l[r+340>>2]=k,zb(r+336|0),a=l[i+12>>2],l[r+328>>2]=l[i+8>>2],l[r+332>>2]=a,a=l[i+4>>2],l[r+320>>2]=l[i>>2],l[r+324>>2]=a,4==(15&v[r+320|0])?(a=l[f+12>>2],l[r+200>>2]=l[f+8>>2],l[r+204>>2]=a,a=l[f+4>>2],l[r+192>>2]=l[f>>2],l[r+196>>2]=a,4==(15&v[r+192|0])?(a=l[i+12>>2],l[r+72>>2]=l[i+8>>2],l[r+76>>2]=a,a=l[i+4>>2],l[r+64>>2]=l[i>>2],l[r+68>>2]=a,b=Wb(r- -64|0),a=l[f+12>>2],l[r+56>>2]=l[f+8>>2],l[r+60>>2]=a,a=l[f+4>>2],l[r+48>>2]=l[f>>2],l[r+52>>2]=a,vk(r,Wb(r+48|0)),b=kr(b,l[r>>2],l[r+4>>2],l[r+8>>2],l[r+12>>2]),l[r+400>>2]=4,l[r+404>>2]=0,m[r+408>>3]=b,a=l[i+12>>2],l[r+40>>2]=l[i+8>>2],l[r+44>>2]=a,a=l[i+4>>2],l[r+32>>2]=l[i>>2],l[r+36>>2]=a,zb(r+32|0),a=l[f+12>>2],l[r+24>>2]=l[f+8>>2],l[r+28>>2]=a,a=l[f+4>>2],l[r+16>>2]=l[f>>2],l[r+20>>2]=a,zb(r+16|0),a=l[r+412>>2],l[e+8>>2]=l[r+408>>2],l[e+12>>2]=a,a=l[r+404>>2],l[e>>2]=l[r+400>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+184>>2]=l[i+8>>2],l[r+188>>2]=a,a=l[i+4>>2],l[r+176>>2]=l[i>>2],l[r+180>>2]=a,zb(r+176|0),a=l[f+12>>2],l[r+376>>2]=l[f+8>>2],l[r+380>>2]=a,a=l[f+4>>2],l[r+368>>2]=l[f>>2],l[r+372>>2]=a,a=l[f+12>>2],l[r+168>>2]=l[f+8>>2],l[r+172>>2]=a,a=l[f+4>>2],l[r+160>>2]=l[f>>2],l[r+164>>2]=a,a=Xb(15&v[r+160|0]),i=l[r+380>>2],l[r+152>>2]=l[r+376>>2],l[r+156>>2]=i,i=l[r+372>>2],l[r+144>>2]=l[r+368>>2],l[r+148>>2]=i,Nb(r+384|0,r+144|0),i=l[r+396>>2],l[r+136>>2]=l[r+392>>2],l[r+140>>2]=i,i=l[r+388>>2],l[r+128>>2]=l[r+384>>2],l[r+132>>2]=i,i=Jb(r+128|0,r+353|0,15),l[r+120>>2]=39516,l[r+116>>2]=i,l[r+112>>2]=a,Yb(r+400|0,39550,r+112|0),a=l[r+412>>2],l[r+104>>2]=l[r+408>>2],l[r+108>>2]=a,a=l[r+404>>2],l[r+96>>2]=l[r+400>>2],l[r+100>>2]=a,Hb(e,r+96|0),e=l[r+380>>2],l[r+88>>2]=l[r+376>>2],l[r+92>>2]=e,e=l[r+372>>2],l[r+80>>2]=l[r+368>>2],l[r+84>>2]=e,zb(r+80|0))):(a=l[f+12>>2],l[r+312>>2]=l[f+8>>2],l[r+316>>2]=a,a=l[f+4>>2],l[r+304>>2]=l[f>>2],l[r+308>>2]=a,zb(r+304|0),a=l[i+12>>2],l[r+376>>2]=l[i+8>>2],l[r+380>>2]=a,a=l[i+4>>2],l[r+368>>2]=l[i>>2],l[r+372>>2]=a,a=l[i+12>>2],l[r+296>>2]=l[i+8>>2],l[r+300>>2]=a,a=l[i+4>>2],l[r+288>>2]=l[i>>2],l[r+292>>2]=a,a=Xb(15&v[r+288|0]),i=l[r+380>>2],l[r+280>>2]=l[r+376>>2],l[r+284>>2]=i,i=l[r+372>>2],l[r+272>>2]=l[r+368>>2],l[r+276>>2]=i,Nb(r+384|0,r+272|0),i=l[r+396>>2],l[r+264>>2]=l[r+392>>2],l[r+268>>2]=i,i=l[r+388>>2],l[r+256>>2]=l[r+384>>2],l[r+260>>2]=i,i=Jb(r+256|0,r+353|0,15),l[r+248>>2]=39516,l[r+244>>2]=i,l[r+240>>2]=a,Yb(r+400|0,39550,r+240|0),a=l[r+412>>2],l[r+232>>2]=l[r+408>>2],l[r+236>>2]=a,a=l[r+404>>2],l[r+224>>2]=l[r+400>>2],l[r+228>>2]=a,Hb(e,r+224|0),e=l[r+380>>2],l[r+216>>2]=l[r+376>>2],l[r+220>>2]=e,e=l[r+372>>2],l[r+208>>2]=l[r+368>>2],l[r+212>>2]=e,zb(r+208|0)),ne=r+416|0},f[63]=Je,f[64]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=+Q(+Wb(r+16|0)),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[65]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,n=0;ne=r=ne-400|0,k=l[12+(a|=0)>>2],l[r+328>>2]=l[a+8>>2],l[r+332>>2]=k,k=l[a+4>>2],l[r+320>>2]=l[a>>2],l[r+324>>2]=k,zb(r+320|0),a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4==(15&v[r+304|0])?(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4==(15&v[r+176|0])?(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,n=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,n=function(e,r){var a=0,i=0;t(+e),a=0|b(1),i=0|b(0);e:if(!(2146435072==(0|(a&=2147483647))&i>>>0>0|a>>>0>2146435072||(t(+r),a=i=0|b(1),2146435072==(0|(i&=2147483647))&b(0)>>>0>=1|i>>>0>2146435072))){if(2146435072==(2146435072&a)){if(r>0)break e;return e/-r}return ji(r)!=r?(e=r-r)/e:Ik(e,r>65e3?65e3:r<-65e3?-65e3:a=g(r)<2147483648?~~r:-2147483648)}return e*r}(n,Wb(r+32|0)),l[r+384>>2]=4,l[r+388>>2]=0,m[r+392>>3]=n,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,zb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,zb(r),a=l[r+396>>2],l[e+8>>2]=l[r+392>>2],l[e+12>>2]=a,a=l[r+388>>2],l[e>>2]=l[r+384>>2],l[e+4>>2]=a):(a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,zb(r+160|0),a=l[f+12>>2],l[r+360>>2]=l[f+8>>2],l[r+364>>2]=a,a=l[f+4>>2],l[r+352>>2]=l[f>>2],l[r+356>>2]=a,a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,a=Xb(15&v[r+144|0]),i=l[r+364>>2],l[r+136>>2]=l[r+360>>2],l[r+140>>2]=i,i=l[r+356>>2],l[r+128>>2]=l[r+352>>2],l[r+132>>2]=i,Nb(r+368|0,r+128|0),i=l[r+380>>2],l[r+120>>2]=l[r+376>>2],l[r+124>>2]=i,i=l[r+372>>2],l[r+112>>2]=l[r+368>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+337|0,15),l[r+104>>2]=39516,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+384|0,39550,r+96|0),a=l[r+396>>2],l[r+88>>2]=l[r+392>>2],l[r+92>>2]=a,a=l[r+388>>2],l[r+80>>2]=l[r+384>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+364>>2],l[r+72>>2]=l[r+360>>2],l[r+76>>2]=e,e=l[r+356>>2],l[r+64>>2]=l[r+352>>2],l[r+68>>2]=e,zb(r- -64|0))):(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,zb(r+288|0),a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,a=Xb(15&v[r+272|0]),i=l[r+364>>2],l[r+264>>2]=l[r+360>>2],l[r+268>>2]=i,i=l[r+356>>2],l[r+256>>2]=l[r+352>>2],l[r+260>>2]=i,Nb(r+368|0,r+256|0),i=l[r+380>>2],l[r+248>>2]=l[r+376>>2],l[r+252>>2]=i,i=l[r+372>>2],l[r+240>>2]=l[r+368>>2],l[r+244>>2]=i,i=Jb(r+240|0,r+337|0,15),l[r+232>>2]=39516,l[r+228>>2]=i,l[r+224>>2]=a,Yb(r+384|0,39550,r+224|0),a=l[r+396>>2],l[r+216>>2]=l[r+392>>2],l[r+220>>2]=a,a=l[r+388>>2],l[r+208>>2]=l[r+384>>2],l[r+212>>2]=a,Hb(e,r+208|0),e=l[r+364>>2],l[r+200>>2]=l[r+360>>2],l[r+204>>2]=e,e=l[r+356>>2],l[r+192>>2]=l[r+352>>2],l[r+196>>2]=e,zb(r+192|0)),ne=r+400|0},f[66]=Xe,f[67]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Ik(f=Wb(r+16|0),0-wk(f)|0),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[68]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=(f=Wb(r+16|0))<0?S(f):D(f),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39516,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[69]=Xe,f[70]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-336|0,i=l[12+(a|=0)>>2],l[r+200>>2]=l[a+8>>2],l[r+204>>2]=i,i=l[a+4>>2],l[r+192>>2]=l[a>>2],l[r+196>>2]=i,4==(15&v[r+192|0])?(i=l[a+12>>2],l[r+88>>2]=l[a+8>>2],l[r+92>>2]=i,i=l[a+4>>2],l[r+80>>2]=l[a>>2],l[r+84>>2]=i,f=Sb(Wb(r+80|0),r+288|0),rn(r+240|0),l[r+224>>2]=4,l[r+228>>2]=0,m[r+232>>3]=f,i=l[r+252>>2],l[r+72>>2]=l[r+248>>2],l[r+76>>2]=i,i=l[r+236>>2],l[r+56>>2]=l[r+232>>2],l[r+60>>2]=i,i=l[r+244>>2],l[r+64>>2]=l[r+240>>2],l[r+68>>2]=i,i=l[r+228>>2],l[r+48>>2]=l[r+224>>2],l[r+52>>2]=i,Vb(r+256|0,r- -64|0,r+48|0),f=+l[r+288>>2],l[r+208>>2]=4,l[r+212>>2]=0,m[r+216>>3]=f,i=l[r+268>>2],l[r+40>>2]=l[r+264>>2],l[r+44>>2]=i,i=l[r+220>>2],l[r+24>>2]=l[r+216>>2],l[r+28>>2]=i,i=l[r+260>>2],l[r+32>>2]=l[r+256>>2],l[r+36>>2]=i,i=l[r+212>>2],l[r+16>>2]=l[r+208>>2],l[r+20>>2]=i,Vb(r+304|0,r+32|0,r+16|0),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+316>>2],l[e+8>>2]=l[r+312>>2],l[e+12>>2]=a,a=l[r+308>>2],l[e>>2]=l[r+304>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+280>>2]=l[a+8>>2],l[r+284>>2]=i,i=l[a+4>>2],l[r+272>>2]=l[a>>2],l[r+276>>2]=i,i=l[a+12>>2],l[r+184>>2]=l[a+8>>2],l[r+188>>2]=i,i=l[a+4>>2],l[r+176>>2]=l[a>>2],l[r+180>>2]=i,a=Xb(15&v[r+176|0]),i=l[r+284>>2],l[r+168>>2]=l[r+280>>2],l[r+172>>2]=i,i=l[r+276>>2],l[r+160>>2]=l[r+272>>2],l[r+164>>2]=i,Nb(r+288|0,r+160|0),i=l[r+300>>2],l[r+152>>2]=l[r+296>>2],l[r+156>>2]=i,i=l[r+292>>2],l[r+144>>2]=l[r+288>>2],l[r+148>>2]=i,i=Jb(r+144|0,r+321|0,15),l[r+136>>2]=39516,l[r+132>>2]=i,l[r+128>>2]=a,Yb(r+304|0,39550,r+128|0),a=l[r+316>>2],l[r+120>>2]=l[r+312>>2],l[r+124>>2]=a,a=l[r+308>>2],l[r+112>>2]=l[r+304>>2],l[r+116>>2]=a,Hb(e,r+112|0),e=l[r+284>>2],l[r+104>>2]=l[r+280>>2],l[r+108>>2]=e,e=l[r+276>>2],l[r+96>>2]=l[r+272>>2],l[r+100>>2]=e,zb(r+96|0)),ne=r+336|0},f[71]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,b=0;ne=r=ne-368|0,k=l[12+(a|=0)>>2],l[r+360>>2]=l[a+8>>2],l[r+364>>2]=k,k=l[a+4>>2],l[r+352>>2]=l[a>>2],l[r+356>>2]=k,zb(r+352|0),a=l[i+12>>2],l[r+344>>2]=l[i+8>>2],l[r+348>>2]=a,a=l[i+4>>2],l[r+336>>2]=l[i>>2],l[r+340>>2]=a,1!=(15&v[r+336|0])?(a=l[f+12>>2],l[r+328>>2]=l[f+8>>2],l[r+332>>2]=a,a=l[f+4>>2],l[r+320>>2]=l[f>>2],l[r+324>>2]=a,1!=(15&v[r+320|0])?(a=l[i+12>>2],l[r+312>>2]=l[i+8>>2],l[r+316>>2]=a,a=l[i+4>>2],l[r+304>>2]=l[i>>2],l[r+308>>2]=a,4!=(15&v[r+304|0])||(a=l[f+12>>2],l[r+296>>2]=l[f+8>>2],l[r+300>>2]=a,a=l[f+4>>2],l[r+288>>2]=l[f>>2],l[r+292>>2]=a,4!=(15&v[r+288|0]))?(a=l[i+12>>2],l[r+280>>2]=l[i+8>>2],l[r+284>>2]=a,a=l[i+4>>2],l[r+272>>2]=l[i>>2],l[r+276>>2]=a,5!=(15&v[r+272|0])||(a=l[f+12>>2],l[r+264>>2]=l[f+8>>2],l[r+268>>2]=a,a=l[f+4>>2],l[r+256>>2]=l[f>>2],l[r+260>>2]=a,5!=(15&v[r+256|0]))?(a=l[i+12>>2],l[r+248>>2]=l[i+8>>2],l[r+252>>2]=a,a=l[i+4>>2],l[r+240>>2]=l[i>>2],l[r+244>>2]=a,6!=(15&v[r+240|0])||(a=l[f+12>>2],l[r+232>>2]=l[f+8>>2],l[r+236>>2]=a,a=l[f+4>>2],l[r+224>>2]=l[f>>2],l[r+228>>2]=a,6!=(15&v[r+224|0]))?(a=l[i+12>>2],l[r+216>>2]=l[i+8>>2],l[r+220>>2]=a,a=l[i+4>>2],l[r+208>>2]=l[i>>2],l[r+212>>2]=a,7!=(15&v[r+208|0])||(a=l[f+12>>2],l[r+200>>2]=l[f+8>>2],l[r+204>>2]=a,a=l[f+4>>2],l[r+192>>2]=l[f>>2],l[r+196>>2]=a,7!=(15&v[r+192|0]))?(a=l[i+12>>2],l[r+184>>2]=l[i+8>>2],l[r+188>>2]=a,a=l[i+4>>2],l[r+176>>2]=l[i>>2],l[r+180>>2]=a,a=l[f+12>>2],l[r+168>>2]=l[f+8>>2],l[r+172>>2]=a,a=l[f+4>>2],l[r+160>>2]=l[f>>2],l[r+164>>2]=a,Zk(e,r+176|0,r+160|0,39574)):(a=l[i+12>>2],l[r+152>>2]=l[i+8>>2],l[r+156>>2]=a,a=l[i+4>>2],l[r+144>>2]=l[i>>2],l[r+148>>2]=a,a=l[f+12>>2],l[r+136>>2]=l[f+8>>2],l[r+140>>2]=a,a=l[f+4>>2],l[r+128>>2]=l[f>>2],l[r+132>>2]=a,Ae(e,r+144|0,r+128|0))):(a=l[i+12>>2],l[r+120>>2]=l[i+8>>2],l[r+124>>2]=a,a=l[i+4>>2],l[r+112>>2]=l[i>>2],l[r+116>>2]=a,a=l[f+12>>2],l[r+104>>2]=l[f+8>>2],l[r+108>>2]=a,a=l[f+4>>2],l[r+96>>2]=l[f>>2],l[r+100>>2]=a,la(e,r+112|0,r+96|0))):(a=l[i+12>>2],l[r+88>>2]=l[i+8>>2],l[r+92>>2]=a,a=l[i+4>>2],l[r+80>>2]=l[i>>2],l[r+84>>2]=a,a=l[f+12>>2],l[r+72>>2]=l[f+8>>2],l[r+76>>2]=a,a=l[f+4>>2],l[r+64>>2]=l[f>>2],l[r+68>>2]=a,Ok(e,r+80|0,r- -64|0))):(a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,b=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,b+=Wb(r+32|0),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=b)):(a=l[f+12>>2],l[r+24>>2]=l[f+8>>2],l[r+28>>2]=a,a=l[f+4>>2],l[r+16>>2]=l[f>>2],l[r+20>>2]=a,zb(r+16|0),a=l[i+12>>2],l[e+8>>2]=l[i+8>>2],l[e+12>>2]=a,a=l[i+4>>2],l[e>>2]=l[i>>2],l[e+4>>2]=a)):(a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,zb(r),a=l[f+12>>2],l[e+8>>2]=l[f+8>>2],l[e+12>>2]=a,a=l[f+4>>2],l[e>>2]=l[f>>2],l[e+4>>2]=a),ne=r+368|0},f[72]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,4==(15&v[r+128|0])?(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Wb(r+16|0),l[r+176>>2]=4,l[r+180>>2]=0,m[r+184>>3]=-f,i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+188>>2],l[e+8>>2]=l[r+184>>2],l[e+12>>2]=a,a=l[r+180>>2],l[e>>2]=l[r+176>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,a=Xb(15&v[r+112|0]),i=l[r+156>>2],l[r+104>>2]=l[r+152>>2],l[r+108>>2]=i,i=l[r+148>>2],l[r+96>>2]=l[r+144>>2],l[r+100>>2]=i,Nb(r+160|0,r+96|0),i=l[r+172>>2],l[r+88>>2]=l[r+168>>2],l[r+92>>2]=i,i=l[r+164>>2],l[r+80>>2]=l[r+160>>2],l[r+84>>2]=i,i=Jb(r+80|0,r+193|0,15),l[r+72>>2]=39676,l[r+68>>2]=i,l[r+64>>2]=a,Yb(r+176|0,39550,r- -64|0),a=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=a,a=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=a,Hb(e,r+48|0),e=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=e,e=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=e,zb(r+32|0)),ne=r+208|0},f[73]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,b=0,n=0,s=0,t=0;if(ne=r=ne-560|0,b=l[12+(a|=0)>>2],l[r+408>>2]=l[a+8>>2],l[r+412>>2]=b,b=l[a+4>>2],l[r+400>>2]=l[a>>2],l[r+404>>2]=b,zb(r+400|0),a=l[i+12>>2],l[r+392>>2]=l[i+8>>2],l[r+396>>2]=a,a=l[i+4>>2],l[r+384>>2]=l[i>>2],l[r+388>>2]=a,4!=(15&v[r+384|0])||(a=l[f+12>>2],l[r+376>>2]=l[f+8>>2],l[r+380>>2]=a,a=l[f+4>>2],l[r+368>>2]=l[f>>2],l[r+372>>2]=a,4!=(15&v[r+368|0])))if(a=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=a,a=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=a,6!=(15&v[r+352|0])||(a=l[f+12>>2],l[r+344>>2]=l[f+8>>2],l[r+348>>2]=a,a=l[f+4>>2],l[r+336>>2]=l[f>>2],l[r+340>>2]=a,6!=(15&v[r+336|0])))a=l[i+12>>2],l[r+328>>2]=l[i+8>>2],l[r+332>>2]=a,a=l[i+4>>2],l[r+320>>2]=l[i>>2],l[r+324>>2]=a,a=l[f+12>>2],l[r+312>>2]=l[f+8>>2],l[r+316>>2]=a,a=l[f+4>>2],l[r+304>>2]=l[f>>2],l[r+308>>2]=a,Zk(e,r+320|0,r+304|0,39706);else{if(rn(e),a=l[i+12>>2],l[r+296>>2]=l[i+8>>2],l[r+300>>2]=a,a=l[i+4>>2],l[r+288>>2]=l[i>>2],l[r+292>>2]=a,Nb(r+544|0,r+288|0),a=l[r+556>>2],l[r+280>>2]=l[r+552>>2],l[r+284>>2]=a,a=l[r+548>>2],l[r+272>>2]=l[r+544>>2],l[r+276>>2]=a,(0|(b=Zb(r+272|0)))>=1)for(;;){a=l[i+12>>2],l[r+264>>2]=l[i+8>>2],l[r+268>>2]=a,a=l[i+4>>2],l[r+256>>2]=l[i>>2],l[r+260>>2]=a,Nb(r+496|0,r+256|0),a=l[r+508>>2],l[r+248>>2]=l[r+504>>2],l[r+252>>2]=a,a=l[r+500>>2],l[r+240>>2]=l[r+496>>2],l[r+244>>2]=a,Kb(r+512|0,r+240|0,t),a=l[r+524>>2],l[r+536>>2]=l[r+520>>2],l[r+540>>2]=a,a=l[r+516>>2],l[r+528>>2]=l[r+512>>2],l[r+532>>2]=a,a=l[f+12>>2],l[r+232>>2]=l[f+8>>2],l[r+236>>2]=a,a=l[f+4>>2],l[r+224>>2]=l[f>>2],l[r+228>>2]=a,Nb(r+480|0,r+224|0),a=l[r+492>>2],l[r+216>>2]=l[r+488>>2],l[r+220>>2]=a,a=l[r+484>>2],l[r+208>>2]=l[r+480>>2],l[r+212>>2]=a,a=0,n=Zb(r+208|0);e:{if((0|n)>0)for(;;){if(k=l[f+12>>2],l[r+200>>2]=l[f+8>>2],l[r+204>>2]=k,k=l[f+4>>2],l[r+192>>2]=l[f>>2],l[r+196>>2]=k,Nb(r+448|0,r+192|0),k=l[r+460>>2],l[r+184>>2]=l[r+456>>2],l[r+188>>2]=k,k=l[r+452>>2],l[r+176>>2]=l[r+448>>2],l[r+180>>2]=k,Kb(r+464|0,r+176|0,a),k=l[r+476>>2],l[r+520>>2]=l[r+472>>2],l[r+524>>2]=k,k=l[r+540>>2],l[r+168>>2]=l[r+536>>2],l[r+172>>2]=k,k=l[r+468>>2],l[r+512>>2]=l[r+464>>2],l[r+516>>2]=k,k=l[r+532>>2],l[r+160>>2]=l[r+528>>2],l[r+164>>2]=k,Nb(r+432|0,r+160|0),k=l[r+444>>2],l[r+152>>2]=l[r+440>>2],l[r+156>>2]=k,k=l[r+524>>2],l[r+136>>2]=l[r+520>>2],l[r+140>>2]=k,k=l[r+436>>2],l[r+144>>2]=l[r+432>>2],l[r+148>>2]=k,k=l[r+516>>2],l[r+128>>2]=l[r+512>>2],l[r+132>>2]=k,gn(r+144|0,r+128|0))break e;if((0|n)==(0|(a=a+1|0)))break}a=l[r+540>>2],l[r+120>>2]=l[r+536>>2],l[r+124>>2]=a,a=l[r+532>>2],l[r+112>>2]=l[r+528>>2],l[r+116>>2]=a,Nb(r+416|0,r+112|0),a=l[e+12>>2],l[r+104>>2]=l[e+8>>2],l[r+108>>2]=a,a=l[e>>2],n=l[e+4>>2],k=l[r+428>>2],l[r+88>>2]=l[r+424>>2],l[r+92>>2]=k,l[r+96>>2]=a,l[r+100>>2]=n,a=l[r+420>>2],l[r+80>>2]=l[r+416>>2],l[r+84>>2]=a,Vb(r+512|0,r+96|0,r+80|0),a=l[r+524>>2],l[e+8>>2]=l[r+520>>2],l[e+12>>2]=a,a=l[r+516>>2],l[e>>2]=l[r+512>>2],l[e+4>>2]=a}if(a=l[r+540>>2],l[r+72>>2]=l[r+536>>2],l[r+76>>2]=a,a=l[r+532>>2],l[r+64>>2]=l[r+528>>2],l[r+68>>2]=a,zb(r- -64|0),(0|b)==(0|(t=t+1|0)))break}e=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=e,e=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=e,zb(r+48|0),e=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=e,e=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=e,zb(r+32|0)}else a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,s=Wb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,s-=Wb(r),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=s;ne=r+560|0},f[74]=function(e,r,a,i,f){e|=0,r|=0,a|=0,f|=0;var k=0,b=0,n=0,s=0;ne=r=ne-352|0,k=l[12+(i|=0)>>2],l[r+264>>2]=l[i+8>>2],l[r+268>>2]=k,k=l[i+4>>2],l[r+256>>2]=l[i>>2],l[r+260>>2]=k,k=15&v[r+256|0],b=l[f+12>>2],l[r+248>>2]=l[f+8>>2],l[r+252>>2]=b,b=l[f+4>>2],l[r+240>>2]=l[f>>2],l[r+244>>2]=b,b=15&v[r+240|0],s=l[a+12>>2],l[r+232>>2]=l[a+8>>2],l[r+236>>2]=s,s=l[a+4>>2],l[r+224>>2]=l[a>>2],l[r+228>>2]=s,zb(r+224|0);e:if(4!=(0|k)|4!=(0|b)){r:{if(4==(0|k)&5==(0|b)||5==(0|k)&4==(0|b)){if(a=l[i+12>>2],l[r+344>>2]=l[i+8>>2],l[r+348>>2]=a,a=l[i+4>>2],l[r+336>>2]=l[i>>2],l[r+340>>2]=a,a=l[f+12>>2],l[r+328>>2]=l[f+8>>2],l[r+332>>2]=a,a=l[f+4>>2],l[r+320>>2]=l[f>>2],l[r+324>>2]=a,4==(0|k)&&(a=l[f+12>>2],l[r+344>>2]=l[f+8>>2],l[r+348>>2]=a,a=l[f+4>>2],l[r+336>>2]=l[f>>2],l[r+340>>2]=a,a=l[i+12>>2],l[r+328>>2]=l[i+8>>2],l[r+332>>2]=a,a=l[i+4>>2],l[r+320>>2]=l[i>>2],l[r+324>>2]=a),a=l[r+348>>2],l[r+152>>2]=l[r+344>>2],l[r+156>>2]=a,a=l[r+340>>2],l[r+144>>2]=l[r+336>>2],l[r+148>>2]=a,Nb(r+304|0,r+144|0),a=l[r+316>>2],l[r+136>>2]=l[r+312>>2],l[r+140>>2]=a,a=l[r+308>>2],l[r+128>>2]=l[r+304>>2],l[r+132>>2]=a,a=vn(r+128|0),i=l[r+348>>2],l[r+296>>2]=l[r+344>>2],l[r+300>>2]=i,i=l[r+332>>2],l[r+120>>2]=l[r+328>>2],l[r+124>>2]=i,i=l[r+340>>2],l[r+288>>2]=l[r+336>>2],l[r+292>>2]=i,i=l[r+324>>2],l[r+112>>2]=l[r+320>>2],l[r+116>>2]=i,n=Wb(r+112|0)+-1,(0|(f=g(n)<2147483648?~~n:-2147483648))>=1){for(;i=l[r+348>>2],l[r+72>>2]=l[r+344>>2],l[r+76>>2]=i,i=l[r+340>>2],l[r+64>>2]=l[r+336>>2],l[r+68>>2]=i,i=Gb(r- -64|0),k=l[r+300>>2],l[r+56>>2]=l[r+296>>2],l[r+60>>2]=k,k=l[r+292>>2],l[r+48>>2]=l[r+288>>2],l[r+52>>2]=k,Qb(r+272|0,r+48|0,i,a),i=l[r+284>>2],l[r+296>>2]=l[r+280>>2],l[r+300>>2]=i,i=l[r+276>>2],l[r+288>>2]=l[r+272>>2],l[r+292>>2]=i,(0|(f=f+-1|0))>0;);a=l[r+332>>2],l[r+40>>2]=l[r+328>>2],l[r+44>>2]=a,a=l[r+324>>2],l[r+32>>2]=l[r+320>>2],l[r+36>>2]=a,zb(r+32|0);break r}if(a=l[r+332>>2],l[r+104>>2]=l[r+328>>2],l[r+108>>2]=a,a=l[r+324>>2],l[r+96>>2]=l[r+320>>2],l[r+100>>2]=a,zb(r+96|0),(0|f)>-1)break r;a=l[r+348>>2],l[r+88>>2]=l[r+344>>2],l[r+92>>2]=a,a=l[r+340>>2],l[r+80>>2]=l[r+336>>2],l[r+84>>2]=a,zb(r+80|0),a=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=a,a=l[10945],l[e>>2]=l[10944],l[e+4>>2]=a;break e}if(!(7!=(0|k)|7!=(0|b))){a=l[i+12>>2],l[r+184>>2]=l[i+8>>2],l[r+188>>2]=a,a=l[i+4>>2],l[r+176>>2]=l[i>>2],l[r+180>>2]=a,a=l[f+12>>2],l[r+168>>2]=l[f+8>>2],l[r+172>>2]=a,a=l[f+4>>2],l[r+160>>2]=l[f>>2],l[r+164>>2]=a,Me(e,r+176|0,r+160|0);break e}a=l[i+12>>2],l[r+216>>2]=l[i+8>>2],l[r+220>>2]=a,a=l[i+4>>2],l[r+208>>2]=l[i>>2],l[r+212>>2]=a,a=l[f+12>>2],l[r+200>>2]=l[f+8>>2],l[r+204>>2]=a,a=l[f+4>>2],l[r+192>>2]=l[f>>2],l[r+196>>2]=a,Zk(e,r+208|0,r+192|0,39752);break e}a=l[r+292>>2],l[e>>2]=l[r+288>>2],l[e+4>>2]=a,a=l[r+300>>2],l[e+8>>2]=l[r+296>>2],l[e+12>>2]=a}else a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,n=Wb(r+16|0),a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,n*=Wb(r),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=n;ne=r+352|0},f[75]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,b=0;ne=r=ne-224|0,k=l[12+(a|=0)>>2],l[r+216>>2]=l[a+8>>2],l[r+220>>2]=k,k=l[a+4>>2],l[r+208>>2]=l[a>>2],l[r+212>>2]=k,zb(r+208|0),a=l[i+12>>2],l[r+200>>2]=l[i+8>>2],l[r+204>>2]=a,a=l[i+4>>2],l[r+192>>2]=l[i>>2],l[r+196>>2]=a;e:if(4!=(15&v[r+192|0])||(a=l[f+12>>2],l[r+184>>2]=l[f+8>>2],l[r+188>>2]=a,a=l[f+4>>2],l[r+176>>2]=l[f>>2],l[r+180>>2]=a,4!=(15&v[r+176|0])))a=l[i+12>>2],l[r+168>>2]=l[i+8>>2],l[r+172>>2]=a,a=l[i+4>>2],l[r+160>>2]=l[i>>2],l[r+164>>2]=a,5!=(15&v[r+160|0])||(a=l[f+12>>2],l[r+152>>2]=l[f+8>>2],l[r+156>>2]=a,a=l[f+4>>2],l[r+144>>2]=l[f>>2],l[r+148>>2]=a,5!=(15&v[r+144|0]))?(a=l[i+12>>2],l[r+136>>2]=l[i+8>>2],l[r+140>>2]=a,a=l[i+4>>2],l[r+128>>2]=l[i>>2],l[r+132>>2]=a,a=l[f+12>>2],l[r+120>>2]=l[f+8>>2],l[r+124>>2]=a,a=l[f+4>>2],l[r+112>>2]=l[f>>2],l[r+116>>2]=a,Zk(e,r+128|0,r+112|0,39862)):(a=l[i+12>>2],l[r+104>>2]=l[i+8>>2],l[r+108>>2]=a,a=l[i+4>>2],l[r+96>>2]=l[i>>2],l[r+100>>2]=a,a=l[f+12>>2],l[r+88>>2]=l[f+8>>2],l[r+92>>2]=a,a=l[f+4>>2],l[r+80>>2]=l[f>>2],l[r+84>>2]=a,oa(e,r+96|0,r+80|0));else{if(a=l[f+12>>2],l[r+72>>2]=l[f+8>>2],l[r+76>>2]=a,a=l[f+4>>2],l[r+64>>2]=l[f>>2],l[r+68>>2]=a,0==Wb(r- -64|0)){a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,Zk(e,r+16|0,r,39802);break e}a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,b=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,b/=Wb(r+32|0),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=b}ne=r+224|0},f[76]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0,b=0;ne=r=ne-160|0,b=l[12+(a|=0)>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=b,b=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=b,zb(r+144|0),a=l[i+12>>2],l[r+136>>2]=l[i+8>>2],l[r+140>>2]=a,a=l[i+4>>2],l[r+128>>2]=l[i>>2],l[r+132>>2]=a;e:if(4!=(15&v[r+128|0])||(a=l[f+12>>2],l[r+120>>2]=l[f+8>>2],l[r+124>>2]=a,a=l[f+4>>2],l[r+112>>2]=l[f>>2],l[r+116>>2]=a,4!=(15&v[r+112|0])))a=l[i+12>>2],l[r+104>>2]=l[i+8>>2],l[r+108>>2]=a,a=l[i+4>>2],l[r+96>>2]=l[i>>2],l[r+100>>2]=a,a=l[f+12>>2],l[r+88>>2]=l[f+8>>2],l[r+92>>2]=a,a=l[f+4>>2],l[r+80>>2]=l[f>>2],l[r+84>>2]=a,Zk(e,r+96|0,r+80|0,39961);else{if(a=l[f+12>>2],l[r+72>>2]=l[f+8>>2],l[r+76>>2]=a,a=l[f+4>>2],l[r+64>>2]=l[f>>2],l[r+68>>2]=a,k=Wb(r- -64|0),g(k)<0x8000000000000000?(a=g(k)>=1?k>0?~~E(D(k/4294967296),4294967295)>>>0:~~S((k-+(~~k>>>0>>>0))/4294967296)>>>0:0,b=~~k>>>0):(a=-2147483648,b=0),!(b|a)){a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,Zk(e,r+16|0,r,39894);break e}a=l[i+12>>2],l[r+56>>2]=l[i+8>>2],l[r+60>>2]=a,a=l[i+4>>2],l[r+48>>2]=l[i>>2],l[r+52>>2]=a,k=Wb(r+48|0),a=l[f+12>>2],l[r+40>>2]=l[f+8>>2],l[r+44>>2]=a,a=l[f+4>>2],l[r+32>>2]=l[f>>2],l[r+36>>2]=a,g(k)<0x8000000000000000?(i=g(k)>=1?k>0?~~E(D(k/4294967296),4294967295)>>>0:~~S((k-+(~~k>>>0>>>0))/4294967296)>>>0:0,f=~~k>>>0):(i=-2147483648,f=0),k=Wb(r+32|0),g(k)<0x8000000000000000?(a=g(k)>=1?k>0?~~E(D(k/4294967296),4294967295)>>>0:~~S((k-+(~~k>>>0>>>0))/4294967296)>>>0:0,b=~~k>>>0):(a=-2147483648,b=0),k=+(function(e,r,a,i){var f=0,k=0;return Ii((k=e^(f=r>>31))-f|0,(r^(e=r>>31))-((k>>>0<f>>>0)+e|0)|0,(a^=r=i>>31)-r|0,(i^(k=i>>31))-((a>>>0<r>>>0)+k|0)|0),r=0|c(),se=0|be(),se=(e^se)-(((r^=f)>>>0<f>>>0)+e|0)|0,a=r-f|0}(f,i,b,a)>>>0)+4294967296*+(0|se),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=k}ne=r+160|0},f[77]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-16|0,i=l[12+(a|=0)>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,jk(e,r,0),ne=r+16|0},f[78]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-256|0,i=l[12+(a|=0)>>2],l[r+168>>2]=l[a+8>>2],l[r+172>>2]=i,i=l[a+4>>2],l[r+160>>2]=l[a>>2],l[r+164>>2]=i,5==(15&v[r+160|0])?(i=l[a+12>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=i,i=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=i,i=Gb(r+48|0),f=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=f,f=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=f,Nb(r+176|0,r+32|0),f=l[r+188>>2],l[r+24>>2]=l[r+184>>2],l[r+28>>2]=f,f=l[r+180>>2],l[r+16>>2]=l[r+176>>2],l[r+20>>2]=f,wf(r+224|0,i,vn(r+16|0)),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=l[r+236>>2],l[e+8>>2]=l[r+232>>2],l[e+12>>2]=a,a=l[r+228>>2],l[e>>2]=l[r+224>>2],l[e+4>>2]=a):(i=l[a+12>>2],l[r+200>>2]=l[a+8>>2],l[r+204>>2]=i,i=l[a+4>>2],l[r+192>>2]=l[a>>2],l[r+196>>2]=i,i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,a=Xb(15&v[r+144|0]),i=l[r+204>>2],l[r+136>>2]=l[r+200>>2],l[r+140>>2]=i,i=l[r+196>>2],l[r+128>>2]=l[r+192>>2],l[r+132>>2]=i,Nb(r+208|0,r+128|0),i=l[r+220>>2],l[r+120>>2]=l[r+216>>2],l[r+124>>2]=i,i=l[r+212>>2],l[r+112>>2]=l[r+208>>2],l[r+116>>2]=i,i=Jb(r+112|0,r+241|0,15),l[r+104>>2]=40003,l[r+100>>2]=i,l[r+96>>2]=a,Yb(r+224|0,39550,r+96|0),a=l[r+236>>2],l[r+88>>2]=l[r+232>>2],l[r+92>>2]=a,a=l[r+228>>2],l[r+80>>2]=l[r+224>>2],l[r+84>>2]=a,Hb(e,r+80|0),e=l[r+204>>2],l[r+72>>2]=l[r+200>>2],l[r+76>>2]=e,e=l[r+196>>2],l[r+64>>2]=l[r+192>>2],l[r+68>>2]=e,zb(r- -64|0)),ne=r+256|0},f[79]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-256|0,i=l[12+(a|=0)>>2],l[r+184>>2]=l[a+8>>2],l[r+188>>2]=i,i=l[a+4>>2],l[r+176>>2]=l[a>>2],l[r+180>>2]=i,4!=(15&v[r+176|0])?(i=l[a+12>>2],l[r+168>>2]=l[a+8>>2],l[r+172>>2]=i,i=l[a+4>>2],l[r+160>>2]=l[a>>2],l[r+164>>2]=i,5!=(15&v[r+160|0])||(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,wb(e,Gb(r+144|0)),i=l[e+12>>2],l[r+136>>2]=l[e+8>>2],l[r+140>>2]=i,i=l[e+4>>2],l[r+128>>2]=l[e>>2],l[r+132>>2]=i,15&v[r+128|0]&&(i=l[e+12>>2],l[r+120>>2]=l[e+8>>2],l[r+124>>2]=i,i=l[e+4>>2],l[r+112>>2]=l[e>>2],l[r+116>>2]=i,4!=(15&v[r+112|0])))?(i=l[a+12>>2],l[r+200>>2]=l[a+8>>2],l[r+204>>2]=i,i=l[a+4>>2],l[r+192>>2]=l[a>>2],l[r+196>>2]=i,i=l[a+12>>2],l[r+104>>2]=l[a+8>>2],l[r+108>>2]=i,i=l[a+4>>2],l[r+96>>2]=l[a>>2],l[r+100>>2]=i,a=Xb(15&v[r+96|0]),i=l[r+204>>2],l[r+88>>2]=l[r+200>>2],l[r+92>>2]=i,i=l[r+196>>2],l[r+80>>2]=l[r+192>>2],l[r+84>>2]=i,Nb(r+208|0,r+80|0),i=l[r+220>>2],l[r+72>>2]=l[r+216>>2],l[r+76>>2]=i,i=l[r+212>>2],l[r+64>>2]=l[r+208>>2],l[r+68>>2]=i,i=Jb(r- -64|0,r+241|0,15),l[r+56>>2]=40050,l[r+52>>2]=i,l[r+48>>2]=a,Yb(r+224|0,39550,r+48|0),a=l[r+236>>2],l[r+40>>2]=l[r+232>>2],l[r+44>>2]=a,a=l[r+228>>2],l[r+32>>2]=l[r+224>>2],l[r+36>>2]=a,Hb(e,r+32|0),e=l[r+204>>2],l[r+24>>2]=l[r+200>>2],l[r+28>>2]=e,e=l[r+196>>2],l[r+16>>2]=l[r+192>>2],l[r+20>>2]=e,zb(r+16|0)):(e=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=e,e=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=e,zb(r))):(i=l[a+4>>2],l[e>>2]=l[a>>2],l[e+4>>2]=i,i=l[a+12>>2],l[e+8>>2]=l[a+8>>2],l[e+12>>2]=i),ne=r+256|0},f[80]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-32|0,i=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,5!=(15&v[r+16|0])?(i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,jk(e,r,0)):(i=l[a+4>>2],l[e>>2]=l[a>>2],l[e+4>>2]=i,i=l[a+12>>2],l[e+8>>2]=l[a+8>>2],l[e+12>>2]=i),ne=r+32|0},f[81]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,7!=(15&v[r+128|0])&&(i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,6!=(15&v[r+112|0]))?(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+104>>2]=l[a+8>>2],l[r+108>>2]=i,i=l[a+4>>2],l[r+96>>2]=l[a>>2],l[r+100>>2]=i,a=Xb(15&v[r+96|0]),i=l[r+156>>2],l[r+88>>2]=l[r+152>>2],l[r+92>>2]=i,i=l[r+148>>2],l[r+80>>2]=l[r+144>>2],l[r+84>>2]=i,Nb(r+160|0,r+80|0),i=l[r+172>>2],l[r+72>>2]=l[r+168>>2],l[r+76>>2]=i,i=l[r+164>>2],l[r+64>>2]=l[r+160>>2],l[r+68>>2]=i,i=Jb(r- -64|0,r+193|0,15),l[r+56>>2]=40101,l[r+52>>2]=i,l[r+48>>2]=a,Yb(r+176|0,39550,r+48|0),a=l[r+188>>2],l[r+40>>2]=l[r+184>>2],l[r+44>>2]=a,a=l[r+180>>2],l[r+32>>2]=l[r+176>>2],l[r+36>>2]=a,Hb(e,r+32|0),e=l[r+156>>2],l[r+24>>2]=l[r+152>>2],l[r+28>>2]=e,e=l[r+148>>2],l[r+16>>2]=l[r+144>>2],l[r+20>>2]=e,zb(r+16|0)):(i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,Ef(e,r)),ne=r+208|0},f[82]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-208|0,i=l[12+(a|=0)>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,7!=(15&v[r+128|0])&&(i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,6!=(15&v[r+112|0]))?(i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,i=l[a+12>>2],l[r+104>>2]=l[a+8>>2],l[r+108>>2]=i,i=l[a+4>>2],l[r+96>>2]=l[a>>2],l[r+100>>2]=i,a=Xb(15&v[r+96|0]),i=l[r+156>>2],l[r+88>>2]=l[r+152>>2],l[r+92>>2]=i,i=l[r+148>>2],l[r+80>>2]=l[r+144>>2],l[r+84>>2]=i,Nb(r+160|0,r+80|0),i=l[r+172>>2],l[r+72>>2]=l[r+168>>2],l[r+76>>2]=i,i=l[r+164>>2],l[r+64>>2]=l[r+160>>2],l[r+68>>2]=i,i=Jb(r- -64|0,r+193|0,15),l[r+56>>2]=40101,l[r+52>>2]=i,l[r+48>>2]=a,Yb(r+176|0,39550,r+48|0),a=l[r+188>>2],l[r+40>>2]=l[r+184>>2],l[r+44>>2]=a,a=l[r+180>>2],l[r+32>>2]=l[r+176>>2],l[r+36>>2]=a,Hb(e,r+32|0),e=l[r+156>>2],l[r+24>>2]=l[r+152>>2],l[r+28>>2]=e,e=l[r+148>>2],l[r+16>>2]=l[r+144>>2],l[r+20>>2]=e,zb(r+16|0)):(i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,ye(e,r)),ne=r+208|0},f[83]=Ge,f[84]=We,f[85]=function(e,r,a,i){e|=0,r|=0,i|=0;var f,k=0;ne=f=ne-256|0,k=l[12+(a|=0)>>2],l[f+168>>2]=l[a+8>>2],l[f+172>>2]=k,k=l[a+4>>2],l[f+160>>2]=l[a>>2],l[f+164>>2]=k,Nb(f+224|0,f+160|0),k=l[i+12>>2],l[f+152>>2]=l[i+8>>2],l[f+156>>2]=k,k=l[i+4>>2],l[f+144>>2]=l[i>>2],l[f+148>>2]=k,Nb(f+208|0,f+144|0),k=l[f+236>>2],l[f+136>>2]=l[f+232>>2],l[f+140>>2]=k,k=l[f+220>>2],l[f+120>>2]=l[f+216>>2],l[f+124>>2]=k,k=l[f+228>>2],l[f+128>>2]=l[f+224>>2],l[f+132>>2]=k,k=l[f+212>>2],l[f+112>>2]=l[f+208>>2],l[f+116>>2]=k,Ge(f+240|0,r,f+128|0,f+112|0),r=l[f+252>>2],l[f+104>>2]=l[f+248>>2],l[f+108>>2]=r,r=l[f+244>>2],l[f+96>>2]=l[f+240>>2],l[f+100>>2]=r,3==(15&v[f+96|0])?(r=l[i+12>>2],l[f+72>>2]=l[i+8>>2],l[f+76>>2]=r,r=l[i+4>>2],l[f+64>>2]=l[i>>2],l[f+68>>2]=r,r=vn(f- -64|0),i=l[a+12>>2],l[f+56>>2]=l[a+8>>2],l[f+60>>2]=i,i=l[a+4>>2],l[f+48>>2]=l[a>>2],l[f+52>>2]=i,i=Gb(f+48|0),k=l[a+12>>2],l[f+40>>2]=l[a+8>>2],l[f+44>>2]=k,k=l[a+4>>2],l[f+32>>2]=l[a>>2],l[f+36>>2]=k,Nb(f+176|0,f+32|0),k=l[f+188>>2],l[f+24>>2]=l[f+184>>2],l[f+28>>2]=k,k=l[f+180>>2],l[f+16>>2]=l[f+176>>2],l[f+20>>2]=k,Uk(f+192|0,r+i|0,vn(f+16|0)-r|0),r=l[a+12>>2],l[f+8>>2]=l[a+8>>2],l[f+12>>2]=r,r=l[a+4>>2],l[f>>2]=l[a>>2],l[f+4>>2]=r,zb(f),r=l[f+204>>2],l[e+8>>2]=l[f+200>>2],l[e+12>>2]=r,r=l[f+196>>2],l[e>>2]=l[f+192>>2],l[e+4>>2]=r):(r=l[i+12>>2],l[f+88>>2]=l[i+8>>2],l[f+92>>2]=r,r=l[i+4>>2],l[f+80>>2]=l[i>>2],l[f+84>>2]=r,zb(f+80|0),r=l[a+12>>2],l[e+8>>2]=l[a+8>>2],l[e+12>>2]=r,r=l[a+4>>2],l[e>>2]=l[a>>2],l[e+4>>2]=r),ne=f+256|0},f[86]=function(e,r,a,i){e|=0,r|=0,i|=0;var f,k=0,b=0;ne=f=ne-240|0,k=l[12+(a|=0)>>2],l[f+168>>2]=l[a+8>>2],l[f+172>>2]=k,k=l[a+4>>2],l[f+160>>2]=l[a>>2],l[f+164>>2]=k,Nb(f+208|0,f+160|0),k=l[i+12>>2],l[f+152>>2]=l[i+8>>2],l[f+156>>2]=k,k=l[i+4>>2],l[f+144>>2]=l[i>>2],l[f+148>>2]=k,Nb(f+192|0,f+144|0),k=l[f+220>>2],l[f+136>>2]=l[f+216>>2],l[f+140>>2]=k,k=l[f+204>>2],l[f+120>>2]=l[f+200>>2],l[f+124>>2]=k,k=l[f+212>>2],l[f+128>>2]=l[f+208>>2],l[f+132>>2]=k,k=l[f+196>>2],l[f+112>>2]=l[f+192>>2],l[f+116>>2]=k,We(f+224|0,r,f+128|0,f+112|0),r=l[f+236>>2],l[f+104>>2]=l[f+232>>2],l[f+108>>2]=r,r=l[f+228>>2],l[f+96>>2]=l[f+224>>2],l[f+100>>2]=r,3!=(15&v[f+96|0])?(r=l[i+12>>2],l[f+88>>2]=l[i+8>>2],l[f+92>>2]=r,r=l[i+4>>2],l[f+80>>2]=l[i>>2],l[f+84>>2]=r,zb(f+80|0),r=l[a+12>>2],l[e+8>>2]=l[a+8>>2],l[e+12>>2]=r,r=l[a+4>>2],l[e>>2]=l[a>>2],l[e+4>>2]=r):(r=l[a+12>>2],l[f+72>>2]=l[a+8>>2],l[f+76>>2]=r,r=l[a+4>>2],l[f+64>>2]=l[a>>2],l[f+68>>2]=r,r=Gb(f- -64|0),k=l[a+12>>2],l[f+56>>2]=l[a+8>>2],l[f+60>>2]=k,k=l[a+4>>2],l[f+48>>2]=l[a>>2],l[f+52>>2]=k,Nb(f+176|0,f+48|0),k=l[f+188>>2],l[f+40>>2]=l[f+184>>2],l[f+44>>2]=k,k=l[f+180>>2],l[f+32>>2]=l[f+176>>2],l[f+36>>2]=k,k=vn(f+32|0),b=l[i+12>>2],l[f+24>>2]=l[i+8>>2],l[f+28>>2]=b,b=l[i+4>>2],l[f+16>>2]=l[i>>2],l[f+20>>2]=b,Uk(e,r,k-vn(f+16|0)|0),e=l[a+12>>2],l[f+8>>2]=l[a+8>>2],l[f+12>>2]=e,e=l[a+4>>2],l[f>>2]=l[a>>2],l[f+4>>2]=e,zb(f)),ne=f+240|0},f[87]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0;ne=r=ne-160|0,f=l[12+(a|=0)>>2],l[r+104>>2]=l[a+8>>2],l[r+108>>2]=f,f=l[a+4>>2],l[r+96>>2]=l[a>>2],l[r+100>>2]=f,5==(15&v[r+96|0])&&(f=l[i+12>>2],l[r+88>>2]=l[i+8>>2],l[r+92>>2]=f,f=l[i+4>>2],l[r+80>>2]=l[i>>2],l[r+84>>2]=f,5==(15&v[r+80|0]))?(f=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,oa(e,r+16|0,r)):(jb(r+112|0,40228),f=l[r+124>>2],l[r+152>>2]=l[r+120>>2],l[r+156>>2]=f,f=l[r+116>>2],l[r+144>>2]=l[r+112>>2],l[r+148>>2]=f,f=l[i+12>>2],l[r+136>>2]=l[i+8>>2],l[r+140>>2]=f,f=l[i+4>>2],l[r+128>>2]=l[i>>2],l[r+132>>2]=f,i=l[a+12>>2],l[r+72>>2]=l[a+8>>2],l[r+76>>2]=i,i=l[a+4>>2],l[r+64>>2]=l[a>>2],l[r+68>>2]=i,zb(r- -64|0),a=l[r+140>>2],l[r+56>>2]=l[r+136>>2],l[r+60>>2]=a,a=l[r+132>>2],l[r+48>>2]=l[r+128>>2],l[r+52>>2]=a,zb(r+48|0),a=l[r+156>>2],l[r+40>>2]=l[r+152>>2],l[r+44>>2]=a,a=l[r+148>>2],l[r+32>>2]=l[r+144>>2],l[r+36>>2]=a,Hb(e,r+32|0)),ne=r+160|0},f[88]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-96|0,i=l[12+(a|=0)>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=i,i=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=i,5==(15&v[r+48|0])?(i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,Te(e,r)):(jb(r- -64|0,40280),i=l[r+76>>2],l[r+88>>2]=l[r+72>>2],l[r+92>>2]=i,i=l[r+68>>2],l[r+80>>2]=l[r+64>>2],l[r+84>>2]=i,i=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=i,i=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=i,zb(r+32|0),a=l[r+92>>2],l[r+24>>2]=l[r+88>>2],l[r+28>>2]=a,a=l[r+84>>2],l[r+16>>2]=l[r+80>>2],l[r+20>>2]=a,Hb(e,r+16|0)),ne=r+96|0},f[89]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-96|0,i=l[12+(a|=0)>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=i,i=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=i,6==(15&v[r+48|0])?(i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,function(e,r){var a=0,i=0,f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0;ne=a=ne-128|0;e:{r:{if(c=v[0|r],6==(0|(o=15&c))){if(u=l[r+12>>2],n=l[r+8>>2],l[n>>2]=l[n>>2]+1,k[a+112|0]=c,i=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,s=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24,l[a+124>>2]=u,l[a+120>>2]=n,t=l[a+124>>2],l[(b=a- -64|0)>>2]=l[a+120>>2],l[b+4>>2]=t,k[a+113|0]=s,k[a+114|0]=s>>>8,k[a+115|0]=s>>>16,k[a+116|0]=s>>>24,k[a+116|0]=i,k[a+117|0]=i>>>8,k[a+118|0]=i>>>16,k[a+119|0]=i>>>24,i=l[a+116>>2],l[a+56>>2]=l[a+112>>2],l[a+60>>2]=i,b=l[a+116>>2],zb(a+56|0),i=Bb(b+17|0),l[i+12>>2]=b,l[i>>2]=1,l[i+8>>2]=0,wn(i+16|0,0,b),l[e+8>>2]=i,l[e>>2]=5,l[e+4>>2]=0,(0|b)<0)break r;if(b)for(s=a+72|1,t=0,h=o>>>0>7;;){i=v[r+4|0]|v[r+5|0]<<8|v[r+6|0]<<16|v[r+7|0]<<24,k[a+115|0]=i,k[a+116|0]=i>>>8,k[a+117|0]=i>>>16,k[a+118|0]=i>>>24,l[a+112>>2]=v[r+1|0]|v[r+2|0]<<8|v[r+3|0]<<16|v[r+4|0]<<24;a:if(!h){switch(o-1|0){default:if(!n)break a;break;case 0:case 1:case 2:case 3:break a;case 4:case 5:case 6:}l[n>>2]=l[n>>2]+1}if(k[a+72|0]=c,i=s,f=v[a+115|0]|v[a+116|0]<<8|v[a+117|0]<<16|v[a+118|0]<<24,k[i+3|0]=f,k[i+4|0]=f>>>8,k[i+5|0]=f>>>16,k[i+6|0]=f>>>24,f=l[a+112>>2],k[0|i]=f,k[i+1|0]=f>>>8,k[i+2|0]=f>>>16,k[i+3|0]=f>>>24,l[a+84>>2]=u,l[a+80>>2]=n,i=l[a+84>>2],l[a+48>>2]=l[a+80>>2],l[a+52>>2]=i,i=l[a+76>>2],l[a+40>>2]=l[a+72>>2],l[a+44>>2]=i,Kb(a+88|0,a+40|0,t),4!=(15&v[a+88|0]))break e;if(d=m[a+96>>3],i=l[e+12>>2],l[a+120>>2]=l[e+8>>2],l[a+124>>2]=i,i=l[e+4>>2],l[a+112>>2]=l[e>>2],l[a+116>>2]=i,i=Zf((0|(i=g(d)<2147483648?~~d:-2147483648))>1114111?65533:i,a+107|0),f=l[e+12>>2],l[a+32>>2]=l[e+8>>2],l[a+36>>2]=f,f=l[e+4>>2],l[a+24>>2]=l[e>>2],l[a+28>>2]=f,Ff(a+112|0,a+24|0,a+107|0,i),i=l[a+124>>2],l[e+8>>2]=l[a+120>>2],l[e+12>>2]=i,i=l[a+116>>2],l[e>>2]=l[a+112>>2],l[e+4>>2]=i,(0|b)==(0|(t=t+1|0)))break}return e=l[r+12>>2],l[a+16>>2]=l[r+8>>2],l[a+20>>2]=e,e=l[r+4>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=e,zb(a+8|0),void(ne=a+128|0)}P(18173,17172,717,43487),M()}P(21e3,17172,722,43487),M()}P(21359,17172,726,43487),M()}(e,r)):(jb(r- -64|0,40319),i=l[r+76>>2],l[r+88>>2]=l[r+72>>2],l[r+92>>2]=i,i=l[r+68>>2],l[r+80>>2]=l[r+64>>2],l[r+84>>2]=i,i=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=i,i=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=i,zb(r+32|0),a=l[r+92>>2],l[r+24>>2]=l[r+88>>2],l[r+28>>2]=a,a=l[r+84>>2],l[r+16>>2]=l[r+80>>2],l[r+20>>2]=a,Hb(e,r+16|0)),ne=r+96|0},f[90]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0;ne=r=ne-32|0,f=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,Yi(e,r+16|0,r),ne=r+32|0},f[91]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0;ne=r=ne-48|0,k=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=k,k=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=k,a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,Se(e,r+32|0,r+16|0,r),ne=r+48|0},f[92]=function(e,r,a,i){e|=0,r|=0,i|=0;var f,k,b,n=0;ne=f=ne-160|0,n=l[12+(a|=0)>>2],l[f+104>>2]=l[a+8>>2],l[f+108>>2]=n,n=l[a+4>>2],l[f+96>>2]=l[a>>2],l[f+100>>2]=n,Nb(f+128|0,f+96|0),n=l[i+12>>2],l[f+88>>2]=l[i+8>>2],l[f+92>>2]=n,n=l[i+4>>2],l[f+80>>2]=l[i>>2],l[f+84>>2]=n,Nb(f+112|0,f+80|0),n=l[f+140>>2],l[f+72>>2]=l[f+136>>2],l[f+76>>2]=n,n=l[f+124>>2],l[f+56>>2]=l[f+120>>2],l[f+60>>2]=n,n=l[f+132>>2],l[f+64>>2]=l[f+128>>2],l[f+68>>2]=n,n=l[f+116>>2],l[f+48>>2]=l[f+112>>2],l[f+52>>2]=n,De(f+144|0,f- -64|0,f+48|0),n=l[a+12>>2],l[f+40>>2]=l[a+8>>2],l[f+44>>2]=n,n=l[a+4>>2],l[f+32>>2]=l[a>>2],l[f+36>>2]=n,a=l[i+8>>2],n=l[i+12>>2],k=l[i>>2],i=l[i+4>>2],b=l[f+156>>2],l[f+8>>2]=l[f+152>>2],l[f+12>>2]=b,l[f+24>>2]=a,l[f+28>>2]=n,a=l[f+148>>2],l[f>>2]=l[f+144>>2],l[f+4>>2]=a,l[f+16>>2]=k,l[f+20>>2]=i,Xi(e,r,f+32|0,f+16|0,f),ne=f+160|0},f[93]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0;ne=r=ne-32|0,f=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,Li(e,r+16|0,r),ne=r+32|0},f[94]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0;ne=r=ne-32|0,f=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,Hi(e,r+16|0,r),ne=r+32|0},f[95]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0;ne=r=ne-48|0,k=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=k,k=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=k,zb(r+32|0),a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,In(e,gn(r+16|0,r)),ne=r+48|0},f[96]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0;ne=r=ne-48|0,k=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=k,k=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=k,zb(r+32|0),a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,In(e,!gn(r+16|0,r)),ne=r+48|0},f[97]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0;ne=r=ne-48|0,k=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=k,k=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=k,zb(r+32|0),a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,In(e,cb(r+16|0,r)>>>31),ne=r+48|0},f[98]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0;ne=r=ne-48|0,k=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=k,k=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=k,zb(r+32|0),a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,In(e,(0|cb(r+16|0,r))>0),ne=r+48|0},f[99]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0;ne=r=ne-48|0,k=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=k,k=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=k,zb(r+32|0),a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,In(e,(0|cb(r+16|0,r))<1),ne=r+48|0},f[100]=function(e,r,a,i,f){e|=0,r|=0,i|=0,f|=0;var k=0;ne=r=ne-48|0,k=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=k,k=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=k,zb(r+32|0),a=l[i+12>>2],l[r+24>>2]=l[i+8>>2],l[r+28>>2]=a,a=l[i+4>>2],l[r+16>>2]=l[i>>2],l[r+20>>2]=a,a=l[f+12>>2],l[r+8>>2]=l[f+8>>2],l[r+12>>2]=a,a=l[f+4>>2],l[r>>2]=l[f>>2],l[r+4>>2]=a,In(e,(-1^cb(r+16|0,r))>>>31),ne=r+48|0},f[101]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0,k=0;ne=r=ne-96|0,f=l[12+(a|=0)>>2],l[r+88>>2]=l[a+8>>2],l[r+92>>2]=f,f=l[a+4>>2],l[r+80>>2]=l[a>>2],l[r+84>>2]=f,f=v[r+80|0],k=l[i+12>>2],l[r+72>>2]=l[i+8>>2],l[r+76>>2]=k,k=l[i+4>>2],l[r+64>>2]=l[i>>2],l[r+68>>2]=k,(15&f)!=(15&v[r- -64|0])?(f=l[a+12>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=f,f=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=f,a=l[i+12>>2],l[r+40>>2]=l[i+8>>2],l[r+44>>2]=a,a=l[i+4>>2],l[r+32>>2]=l[i>>2],l[r+36>>2]=a,Zk(e,r+48|0,r+32|0,40359)):(f=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,In(e,ua(r+16|0,r))),ne=r+96|0},f[102]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-320|0,i=l[12+(a|=0)>>2],l[r+248>>2]=l[a+8>>2],l[r+252>>2]=i,i=l[a+4>>2],l[r+240>>2]=l[a>>2],l[r+244>>2]=i,6!=(15&v[r+240|0])?(i=l[a+12>>2],l[r+232>>2]=l[a+8>>2],l[r+236>>2]=i,i=l[a+4>>2],l[r+224>>2]=l[a>>2],l[r+228>>2]=i,7!=(15&v[r+224|0])?(i=l[a+12>>2],l[r+216>>2]=l[a+8>>2],l[r+220>>2]=i,i=l[a+4>>2],l[r+208>>2]=l[a>>2],l[r+212>>2]=i,5!=(15&v[r+208|0])?(i=l[a+12>>2],l[r+200>>2]=l[a+8>>2],l[r+204>>2]=i,i=l[a+4>>2],l[r+192>>2]=l[a>>2],l[r+196>>2]=i,4!=(15&v[r+192|0])?(i=l[a+12>>2],l[r+184>>2]=l[a+8>>2],l[r+188>>2]=i,i=l[a+4>>2],l[r+176>>2]=l[a>>2],l[r+180>>2]=i,1!=(15&v[r+176|0])?(i=l[a+12>>2],l[r+264>>2]=l[a+8>>2],l[r+268>>2]=i,i=l[a+4>>2],l[r+256>>2]=l[a>>2],l[r+260>>2]=i,i=l[a+12>>2],l[r+168>>2]=l[a+8>>2],l[r+172>>2]=i,i=l[a+4>>2],l[r+160>>2]=l[a>>2],l[r+164>>2]=i,a=Xb(15&v[r+160|0]),i=l[r+268>>2],l[r+152>>2]=l[r+264>>2],l[r+156>>2]=i,i=l[r+260>>2],l[r+144>>2]=l[r+256>>2],l[r+148>>2]=i,Nb(r+272|0,r+144|0),i=l[r+284>>2],l[r+136>>2]=l[r+280>>2],l[r+140>>2]=i,i=l[r+276>>2],l[r+128>>2]=l[r+272>>2],l[r+132>>2]=i,i=Jb(r+128|0,r+305|0,15),l[r+120>>2]=40413,l[r+116>>2]=i,l[r+112>>2]=a,Yb(r+288|0,39550,r+112|0),a=l[r+300>>2],l[r+104>>2]=l[r+296>>2],l[r+108>>2]=a,a=l[r+292>>2],l[r+96>>2]=l[r+288>>2],l[r+100>>2]=a,Hb(e,r+96|0),e=l[r+268>>2],l[r+88>>2]=l[r+264>>2],l[r+92>>2]=e,e=l[r+260>>2],l[r+80>>2]=l[r+256>>2],l[r+84>>2]=e,zb(r+80|0)):(i=l[a+12>>2],l[r+72>>2]=l[a+8>>2],l[r+76>>2]=i,i=l[a+4>>2],l[r+64>>2]=l[a>>2],l[r+68>>2]=i,zb(r- -64|0),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=0)):(i=l[a+12>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=i,i=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=i,f=g(Wb(r+48|0)),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=f)):(i=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=i,i=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=i,f=+(0|Re(r+32|0)),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=f)):(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=+(0|Sf(r+16|0)),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=f)):(i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,f=+(0|Zb(r)),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=f),ne=r+320|0},f[103]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-192|0,i=l[12+(a|=0)>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,5==(15&v[r+112|0])?(i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,a=vn(r),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=0|a):(i=l[a+12>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,i=l[a+12>>2],l[r+104>>2]=l[a+8>>2],l[r+108>>2]=i,i=l[a+4>>2],l[r+96>>2]=l[a>>2],l[r+100>>2]=i,a=Xb(15&v[r+96|0]),i=l[r+140>>2],l[r+88>>2]=l[r+136>>2],l[r+92>>2]=i,i=l[r+132>>2],l[r+80>>2]=l[r+128>>2],l[r+84>>2]=i,Nb(r+144|0,r+80|0),i=l[r+156>>2],l[r+72>>2]=l[r+152>>2],l[r+76>>2]=i,i=l[r+148>>2],l[r+64>>2]=l[r+144>>2],l[r+68>>2]=i,i=Jb(r- -64|0,r+177|0,15),l[r+56>>2]=40441,l[r+52>>2]=i,l[r+48>>2]=a,Yb(r+160|0,39550,r+48|0),a=l[r+172>>2],l[r+40>>2]=l[r+168>>2],l[r+44>>2]=a,a=l[r+164>>2],l[r+32>>2]=l[r+160>>2],l[r+36>>2]=a,Hb(e,r+32|0),e=l[r+140>>2],l[r+24>>2]=l[r+136>>2],l[r+28>>2]=e,e=l[r+132>>2],l[r+16>>2]=l[r+128>>2],l[r+20>>2]=e,zb(r+16|0)),ne=r+192|0},f[104]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-32|0,i=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,jb(e,Xb(15&v[r+16|0])),e=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=e,e=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=e,zb(r),ne=r+32|0},f[105]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne+-64|0,i=l[12+(a|=0)>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=i,i=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=i;e:{if(4==(15&v[r+48|0])){if(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Wb(r+16|0),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),t(+f),a=0|b(1),!(b(0)|2146435072!=(2147483647&a))){a=l[10939],l[e+8>>2]=l[10938],l[e+12>>2]=a,a=l[10937],l[e>>2]=l[10936],l[e+4>>2]=a;break e}}else i=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=i,i=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=i,zb(r+32|0);a=l[10943],l[e+8>>2]=l[10942],l[e+12>>2]=a,a=l[10941],l[e>>2]=l[10940],l[e+4>>2]=a}ne=r- -64|0},f[106]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne+-64|0,i=l[12+(a|=0)>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=i,i=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=i;e:{if(4==(15&v[r+48|0])){if(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Wb(r+16|0),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),t(+f),a=0|b(1),i=0|b(0),!(2146435072==(0|(a&=2147483647))&i>>>0<1|a>>>0<2146435072)){a=l[10939],l[e+8>>2]=l[10938],l[e+12>>2]=a,a=l[10937],l[e>>2]=l[10936],l[e+4>>2]=a;break e}}else i=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=i,i=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=i,zb(r+32|0);a=l[10943],l[e+8>>2]=l[10942],l[e+12>>2]=a,a=l[10941],l[e>>2]=l[10940],l[e+4>>2]=a}ne=r- -64|0},f[107]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne+-64|0,i=l[12+(a|=0)>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=i,i=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=i;e:{if(4==(15&v[r+48|0])){if(i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,f=Wb(r+16|0),i=l[a+12>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),t(+f),a=(a=0|b(1))- -1048576|0,2145386496&((i=0|b(0))>>>0<0?a+1|0:a)){a=l[10939],l[e+8>>2]=l[10938],l[e+12>>2]=a,a=l[10937],l[e>>2]=l[10936],l[e+4>>2]=a;break e}}else i=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=i,i=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=i,zb(r+32|0);a=l[10943],l[e+8>>2]=l[10942],l[e+12>>2]=a,a=l[10941],l[e>>2]=l[10940],l[e+4>>2]=a}ne=r- -64|0},f[108]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-16|0,i=l[12+(a|=0)>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=x,ne=r+16|0},f[109]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-16|0,i=l[12+(a|=0)>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=A,ne=r+16|0},f[110]=function(e,r,a){e|=0,r|=0;var i=0,f=0;ne=r=ne-240|0,i=l[12+(a|=0)>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,6!=(15&v[r+144|0])?(i=l[a+12>>2],l[r+184>>2]=l[a+8>>2],l[r+188>>2]=i,i=l[a+4>>2],l[r+176>>2]=l[a>>2],l[r+180>>2]=i,i=l[a+12>>2],l[r+136>>2]=l[a+8>>2],l[r+140>>2]=i,i=l[a+4>>2],l[r+128>>2]=l[a>>2],l[r+132>>2]=i,a=Xb(15&v[r+128|0]),i=l[r+188>>2],l[r+120>>2]=l[r+184>>2],l[r+124>>2]=i,i=l[r+180>>2],l[r+112>>2]=l[r+176>>2],l[r+116>>2]=i,Nb(r+192|0,r+112|0),i=l[r+204>>2],l[r+104>>2]=l[r+200>>2],l[r+108>>2]=i,i=l[r+196>>2],l[r+96>>2]=l[r+192>>2],l[r+100>>2]=i,i=Jb(r+96|0,r+225|0,15),l[r+88>>2]=40489,l[r+84>>2]=i,l[r+80>>2]=a,Yb(r+208|0,39550,r+80|0),a=l[r+220>>2],l[r+72>>2]=l[r+216>>2],l[r+76>>2]=a,a=l[r+212>>2],l[r+64>>2]=l[r+208>>2],l[r+68>>2]=a,Hb(e,r- -64|0),e=l[r+188>>2],l[r+56>>2]=l[r+184>>2],l[r+60>>2]=e,e=l[r+180>>2],l[r+48>>2]=l[r+176>>2],l[r+52>>2]=e,zb(r+48|0)):(i=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=i,i=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=i,Nb(r+160|0,r+32|0),i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a>>2],a=l[a+4>>2],f=l[r+172>>2],l[r+8>>2]=l[r+168>>2],l[r+12>>2]=f,l[r+16>>2]=i,l[r+20>>2]=a,a=l[r+164>>2],l[r>>2]=l[r+160>>2],l[r+4>>2]=a,sa(e,r+16|0,r)),ne=r+240|0},f[111]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0,k=0;ne=r=ne-192|0,f=l[12+(a|=0)>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=f,f=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=f,6!=(15&v[r+144|0])||(f=l[i+12>>2],l[r+136>>2]=l[i+8>>2],l[r+140>>2]=f,f=l[i+4>>2],l[r+128>>2]=l[i>>2],l[r+132>>2]=f,6!=(15&v[r+128|0])||(f=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=f,f=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=f,Nb(r+176|0,r+112|0),f=l[r+188>>2],l[r+104>>2]=l[r+184>>2],l[r+108>>2]=f,f=l[r+180>>2],l[r+96>>2]=l[r+176>>2],l[r+100>>2]=f,f=Zb(r+96|0),k=l[i+12>>2],l[r+88>>2]=l[i+8>>2],l[r+92>>2]=k,k=l[i+4>>2],l[r+80>>2]=l[i>>2],l[r+84>>2]=k,Nb(r+160|0,r+80|0),k=l[r+172>>2],l[r+72>>2]=l[r+168>>2],l[r+76>>2]=k,k=l[r+164>>2],l[r+64>>2]=l[r+160>>2],l[r+68>>2]=k,(0|Zb(r- -64|0))!=(0|f)))?(f=l[a+12>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=f,f=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=f,a=l[i+12>>2],l[r+40>>2]=l[i+8>>2],l[r+44>>2]=a,a=l[i+4>>2],l[r+32>>2]=l[i>>2],l[r+36>>2]=a,Zk(e,r+48|0,r+32|0,40555)):(f=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,sa(e,r+16|0,r)),ne=r+192|0},f[112]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0,k=0;ne=r=ne-192|0,f=l[12+(a|=0)>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=f,f=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=f,6!=(15&v[r+144|0])||(f=l[i+12>>2],l[r+136>>2]=l[i+8>>2],l[r+140>>2]=f,f=l[i+4>>2],l[r+128>>2]=l[i>>2],l[r+132>>2]=f,6!=(15&v[r+128|0])||(f=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=f,f=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=f,Nb(r+176|0,r+112|0),f=l[r+188>>2],l[r+104>>2]=l[r+184>>2],l[r+108>>2]=f,f=l[r+180>>2],l[r+96>>2]=l[r+176>>2],l[r+100>>2]=f,f=Zb(r+96|0),k=l[i+12>>2],l[r+88>>2]=l[i+8>>2],l[r+92>>2]=k,k=l[i+4>>2],l[r+80>>2]=l[i>>2],l[r+84>>2]=k,Nb(r+160|0,r+80|0),k=l[r+172>>2],l[r+72>>2]=l[r+168>>2],l[r+76>>2]=k,k=l[r+164>>2],l[r+64>>2]=l[r+160>>2],l[r+68>>2]=k,(0|Zb(r- -64|0))!=(0|f)))?(f=l[a+12>>2],l[r+56>>2]=l[a+8>>2],l[r+60>>2]=f,f=l[a+4>>2],l[r+48>>2]=l[a>>2],l[r+52>>2]=f,a=l[i+12>>2],l[r+40>>2]=l[i+8>>2],l[r+44>>2]=a,a=l[i+4>>2],l[r+32>>2]=l[i>>2],l[r+36>>2]=a,Zk(e,r+48|0,r+32|0,40555)):(f=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,function(e,r,a){var i=0,f=0,k=0,b=0,n=0,s=0;ne=i=ne-544|0,k=l[r+12>>2],l[i+392>>2]=l[r+8>>2],l[i+396>>2]=k,k=l[r+4>>2],l[i+384>>2]=l[r>>2],l[i+388>>2]=k;e:{r:{if(6==(15&v[i+384|0])){if(k=l[a+12>>2],l[i+376>>2]=l[a+8>>2],l[i+380>>2]=k,k=l[a+4>>2],l[i+368>>2]=l[a>>2],l[i+372>>2]=k,6!=(15&v[i+368|0]))break r;if(k=l[r+12>>2],l[i+360>>2]=l[r+8>>2],l[i+364>>2]=k,k=l[r+4>>2],l[i+352>>2]=l[r>>2],l[i+356>>2]=k,Nb(i+528|0,i+352|0),k=l[i+540>>2],l[i+344>>2]=l[i+536>>2],l[i+348>>2]=k,k=l[i+532>>2],l[i+336>>2]=l[i+528>>2],l[i+340>>2]=k,k=Zb(i+336|0),b=l[a+12>>2],l[i+328>>2]=l[a+8>>2],l[i+332>>2]=b,b=l[a+4>>2],l[i+320>>2]=l[a>>2],l[i+324>>2]=b,Nb(i+512|0,i+320|0),b=l[i+524>>2],l[i+312>>2]=l[i+520>>2],l[i+316>>2]=b,b=l[i+516>>2],l[i+304>>2]=l[i+512>>2],l[i+308>>2]=b,(0|Zb(i+304|0))!=(0|k))break e;if(k=l[r+12>>2],l[i+296>>2]=l[r+8>>2],l[i+300>>2]=k,k=l[r+4>>2],l[i+288>>2]=l[r>>2],l[i+292>>2]=k,Nb(i+496|0,i+288|0),k=l[i+508>>2],l[i+280>>2]=l[i+504>>2],l[i+284>>2]=k,k=l[i+500>>2],l[i+272>>2]=l[i+496>>2],l[i+276>>2]=k,b=Zb(i+272|0),k=l[r+12>>2],l[i+264>>2]=l[r+8>>2],l[i+268>>2]=k,k=l[r+4>>2],l[i+256>>2]=l[r>>2],l[i+260>>2]=k,r=l[a+12>>2],l[i+248>>2]=l[a+8>>2],l[i+252>>2]=r,r=l[a+4>>2],l[i+240>>2]=l[a>>2],l[i+244>>2]=r,k=Ee(i+256|0,i+240|0),rn(e),(0|b)>=1){if(r=l[k+28>>2],l[i+488>>2]=l[k+24>>2],l[i+492>>2]=r,r=l[k+20>>2],l[i+480>>2]=l[k+16>>2],l[i+484>>2]=r,rn(i+448|0),r=l[i+460>>2],l[i+232>>2]=l[i+456>>2],l[i+236>>2]=r,r=l[i+452>>2],l[i+224>>2]=l[i+448>>2],l[i+228>>2]=r,r=l[k+12>>2],l[i+216>>2]=l[k+8>>2],l[i+220>>2]=r,r=l[k+4>>2],l[i+208>>2]=l[k>>2],l[i+212>>2]=r,Vb(i+464|0,i+224|0,i+208|0),1!=(0|b))for(a=1;r=l[i+492>>2],l[i+200>>2]=l[i+488>>2],l[i+204>>2]=r,r=l[i+484>>2],l[i+192>>2]=l[i+480>>2],l[i+196>>2]=r,Nb(i+432|0,i+192|0),r=k+w(a,40)|0,n=l[r+28>>2],l[i+184>>2]=l[r+24>>2],l[i+188>>2]=n,n=l[r+20>>2],l[i+176>>2]=l[r+16>>2],l[i+180>>2]=n,Nb(i+416|0,i+176|0),f=l[i+444>>2],l[i+168>>2]=l[i+440>>2],l[i+172>>2]=f,f=l[i+428>>2],l[i+152>>2]=l[i+424>>2],l[i+156>>2]=f,f=l[i+436>>2],l[i+160>>2]=l[i+432>>2],l[i+164>>2]=f,f=l[i+420>>2],l[i+144>>2]=l[i+416>>2],l[i+148>>2]=f,gn(i+160|0,i+144|0)?(f=l[r+28>>2],l[i+136>>2]=l[r+24>>2],l[i+140>>2]=f,f=l[r+20>>2],l[i+128>>2]=l[r+16>>2],l[i+132>>2]=f,zb(i+128|0)):(f=l[i+492>>2],l[i+120>>2]=l[i+488>>2],l[i+124>>2]=f,f=l[i+484>>2],l[i+112>>2]=l[i+480>>2],l[i+116>>2]=f,zb(i+112|0),f=l[r+28>>2],l[i+488>>2]=l[r+24>>2],l[i+492>>2]=f,f=l[r+20>>2],l[i+480>>2]=l[r+16>>2],l[i+484>>2]=f,f=l[e+12>>2],l[i+104>>2]=l[e+8>>2],l[i+108>>2]=f,f=l[e>>2],n=l[e+4>>2],s=l[i+476>>2],l[i+88>>2]=l[i+472>>2],l[i+92>>2]=s,l[i+96>>2]=f,l[i+100>>2]=n,f=l[i+468>>2],l[i+80>>2]=l[i+464>>2],l[i+84>>2]=f,Vb(i+400|0,i+96|0,i+80|0),f=l[i+412>>2],l[e+8>>2]=l[i+408>>2],l[e+12>>2]=f,f=l[i+404>>2],l[e>>2]=l[i+400>>2],l[e+4>>2]=f,rn(i+400|0),f=l[i+412>>2],l[i+472>>2]=l[i+408>>2],l[i+476>>2]=f,f=l[i+404>>2],l[i+464>>2]=l[i+400>>2],l[i+468>>2]=f),f=l[i+476>>2],l[i+72>>2]=l[i+472>>2],l[i+76>>2]=f,f=l[i+468>>2],l[i+64>>2]=l[i+464>>2],l[i+68>>2]=f,f=l[r+12>>2],l[i+56>>2]=l[r+8>>2],l[i+60>>2]=f,f=l[r+4>>2],l[i+48>>2]=l[r>>2],l[i+52>>2]=f,Vb(i+400|0,i- -64|0,i+48|0),r=l[i+412>>2],l[i+472>>2]=l[i+408>>2],l[i+476>>2]=r,r=l[i+404>>2],l[i+464>>2]=l[i+400>>2],l[i+468>>2]=r,(0|b)!=(0|(a=a+1|0)););r=l[i+492>>2],l[i+40>>2]=l[i+488>>2],l[i+44>>2]=r,r=l[i+484>>2],l[i+32>>2]=l[i+480>>2],l[i+36>>2]=r,zb(i+32|0),r=l[e+12>>2],l[i+24>>2]=l[e+8>>2],l[i+28>>2]=r,r=l[e>>2],a=l[e+4>>2],b=l[i+476>>2],l[i+8>>2]=l[i+472>>2],l[i+12>>2]=b,l[i+16>>2]=r,l[i+20>>2]=a,r=l[i+468>>2],l[i>>2]=l[i+464>>2],l[i+4>>2]=r,Vb(i+400|0,i+16|0,i),r=l[i+412>>2],l[e+8>>2]=l[i+408>>2],l[e+12>>2]=r,r=l[i+404>>2],l[e>>2]=l[i+400>>2],l[e+4>>2]=r}return Lb(k),void(ne=i+544|0)}P(19901,16044,618,44201),M()}P(20245,16044,619,44201),M()}P(20477,16044,620,44201),M()}(e,r+16|0,r)),ne=r+192|0},f[113]=function(e,r,a){e|=0,r|=0;var i,f=0;ne=r=ne+-64|0,f=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=f,f=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=f,Nb(r+48|0,r+32|0),f=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a>>2],a=l[a+4>>2],i=l[r+60>>2],l[r+8>>2]=l[r+56>>2],l[r+12>>2]=i,l[r+16>>2]=f,l[r+20>>2]=a,a=l[r+52>>2],l[r>>2]=l[r+48>>2],l[r+4>>2]=a,sk(e,r+16|0,r,1),ne=r- -64|0},f[114]=function(e,r,a){e|=0,r|=0;var i,f=0;ne=r=ne+-64|0,f=l[12+(a|=0)>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=f,f=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=f,Nb(r+48|0,r+32|0),f=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a>>2],a=l[a+4>>2],i=l[r+60>>2],l[r+8>>2]=l[r+56>>2],l[r+12>>2]=i,l[r+16>>2]=f,l[r+20>>2]=a,a=l[r+52>>2],l[r>>2]=l[r+48>>2],l[r+4>>2]=a,sk(e,r+16|0,r,0),ne=r- -64|0},f[115]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0;ne=r=ne-32|0,f=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,sk(e,r+16|0,r,1),ne=r+32|0},f[116]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0;ne=r=ne-32|0,f=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,sk(e,r+16|0,r,0),ne=r+32|0},f[117]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0;ne=r=ne-32|0,f=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=f,f=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=f,zb(r+16|0),a=l[i+12>>2],l[r+8>>2]=l[i+8>>2],l[r+12>>2]=a,a=l[i+4>>2],l[r>>2]=l[i>>2],l[r+4>>2]=a,Hb(e,r),ne=r+32|0},f[118]=function(e,r,a,i){e|=0,r|=0,a|=0;var f,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0;ne=f=ne-2896|0,n=l[12+(i|=0)>>2],l[(r=f+2024|0)>>2]=l[i+8>>2],l[r+4>>2]=n,r=l[i+4>>2],l[f+2016>>2]=l[i>>2],l[f+2020>>2]=r;e:if(5==(15&v[f+2016|0]))if(n=l[i+12>>2],l[(r=f+1896|0)>>2]=l[i+8>>2],l[r+4>>2]=n,r=l[i+4>>2],l[f+1888>>2]=l[i>>2],l[f+1892>>2]=r,fn(r=Gb(f+1888|0),40742))if(fn(r,40764)){r:{if(fn(r,40789)){if(fn(r,40806))break r;b=40961,c=40972,o=40978,r=40921}else b=40869,c=40886,o=40909,r=40820;if(n=l[i+12>>2],l[f+680>>2]=l[i+8>>2],l[f+684>>2]=n,n=l[i+4>>2],l[f+672>>2]=l[i>>2],l[f+676>>2]=n,zb(f+672|0),i=l[a+12>>2],l[f+664>>2]=l[a+8>>2],l[f+668>>2]=i,i=l[a+4>>2],l[f+656>>2]=l[a>>2],l[f+660>>2]=i,6!=(15&v[f+656|0])){n=l[a+12>>2],l[(i=f+2872|0)>>2]=l[a+8>>2],l[i+4>>2]=n,b=l[a+4>>2],l[f+2864>>2]=l[a>>2],l[f+2868>>2]=b,b=l[a+12>>2],l[f+648>>2]=l[a+8>>2],l[f+652>>2]=b,b=l[a+4>>2],l[f+640>>2]=l[a>>2],l[f+644>>2]=b,a=Xb(15&v[f+640|0]),b=l[i+4>>2],l[f+632>>2]=l[i>>2],l[f+636>>2]=b,b=l[f+2868>>2],l[f+624>>2]=l[f+2864>>2],l[f+628>>2]=b,Nb(f+2880|0,f+624|0),n=l[4+(b=f+2888|0)>>2],l[f+616>>2]=l[b>>2],l[f+620>>2]=n,b=l[f+2884>>2],l[f+608>>2]=l[f+2880>>2],l[f+612>>2]=b,b=Jb(f+608|0,f+2849|0,15),l[f+600>>2]=r,l[f+596>>2]=b,l[f+592>>2]=a,Yb(f+2208|0,39550,f+592|0),a=l[4+(r=f+2216|0)>>2],l[f+584>>2]=l[r>>2],l[f+588>>2]=a,r=l[f+2212>>2],l[f+576>>2]=l[f+2208>>2],l[f+580>>2]=r,Hb(e,f+576|0),e=l[i+4>>2],l[f+568>>2]=l[i>>2],l[f+572>>2]=e,e=l[f+2868>>2],l[f+560>>2]=l[f+2864>>2],l[f+564>>2]=e,zb(f+560|0);break e}jb(f+2832|0,40961),r=l[a+12>>2],l[f+552>>2]=l[a+8>>2],l[f+556>>2]=r,r=l[a+4>>2],l[f+544>>2]=l[a>>2],l[f+548>>2]=r,Nb(f+2816|0,f+544|0),i=l[4+(r=f+2824|0)>>2],l[f+536>>2]=l[r>>2],l[f+540>>2]=i,r=l[f+2820>>2],l[f+528>>2]=l[f+2816>>2],l[f+532>>2]=r;a:{if((0|(u=Zb(f+528|0)))>=1)for(i=0;;){if(r=l[a+12>>2],l[f+520>>2]=l[a+8>>2],l[f+524>>2]=r,r=l[a+4>>2],l[f+512>>2]=l[a>>2],l[f+516>>2]=r,Nb(f+2784|0,f+512|0),n=l[4+(r=f+2792|0)>>2],l[f+504>>2]=l[r>>2],l[f+508>>2]=n,r=l[f+2788>>2],l[f+496>>2]=l[f+2784>>2],l[f+500>>2]=r,Kb(f+2208|0,f+496|0,i),d=l[4+(n=f+2216|0)>>2],l[(r=f+2808|0)>>2]=l[n>>2],l[r+4>>2]=d,s=l[f+2212>>2],l[f+2800>>2]=l[f+2208>>2],l[f+2804>>2]=s,i&&(d=l[4+(s=f+2840|0)>>2],l[f+488>>2]=l[s>>2],l[f+492>>2]=d,t=l[f+2836>>2],l[f+480>>2]=l[f+2832>>2],l[f+484>>2]=t,Un(f+2208|0,f+480|0,c),t=l[n+4>>2],l[s>>2]=l[n>>2],l[s+4>>2]=t,s=l[f+2212>>2],l[f+2832>>2]=l[f+2208>>2],l[f+2836>>2]=s),s=l[r+4>>2],l[f+472>>2]=l[r>>2],l[f+476>>2]=s,s=l[f+2804>>2],l[f+464>>2]=l[f+2800>>2],l[f+468>>2]=s,(s=(15&v[f+464|0])-1|0)>>>0>4)break a;i:{switch(s-1|0){default:n=l[r+4>>2],l[f+232>>2]=l[r>>2],l[f+236>>2]=n,r=l[f+2804>>2],l[f+224>>2]=l[f+2800>>2],l[f+228>>2]=r,zb(f+224|0);break i;case 0:case 1:s=l[r+4>>2],l[f+280>>2]=l[r>>2],l[f+284>>2]=s,r=l[f+2804>>2],l[f+272>>2]=l[f+2800>>2],l[f+276>>2]=r,jk(f+2768|0,f+272|0,0),t=l[4+(r=f+2840|0)>>2],l[f+264>>2]=l[r>>2],l[f+268>>2]=t,t=l[4+(s=f+2776|0)>>2],l[f+248>>2]=l[s>>2],l[f+252>>2]=t,s=l[f+2836>>2],l[f+256>>2]=l[f+2832>>2],l[f+260>>2]=s,s=l[f+2772>>2],l[f+240>>2]=l[f+2768>>2],l[f+244>>2]=s,Ok(f+2208|0,f+256|0,f+240|0),s=l[n+4>>2],l[r>>2]=l[n>>2],l[r+4>>2]=s,r=l[f+2212>>2],l[f+2832>>2]=l[f+2208>>2],l[f+2836>>2]=r;break i;case 2:if(s=l[r+4>>2],l[f+376>>2]=l[r>>2],l[f+380>>2]=s,s=l[f+2804>>2],l[f+368>>2]=l[f+2800>>2],l[f+372>>2]=s,h=Wb(f+368|0),s=l[r+4>>2],l[f+360>>2]=l[r>>2],l[f+364>>2]=s,s=l[f+2804>>2],l[f+352>>2]=l[f+2800>>2],l[f+356>>2]=s,h!=Wb(f+352|0)){n=l[r+4>>2],l[f+296>>2]=l[r>>2],l[f+300>>2]=n,r=l[f+2804>>2],l[f+288>>2]=l[f+2800>>2],l[f+292>>2]=r,zb(f+288|0);break i}s=l[r+4>>2],l[f+344>>2]=l[r>>2],l[f+348>>2]=s,r=l[f+2804>>2],l[f+336>>2]=l[f+2800>>2],l[f+340>>2]=r,jk(f+2752|0,f+336|0,0),t=l[4+(r=f+2840|0)>>2],l[f+328>>2]=l[r>>2],l[f+332>>2]=t,t=l[4+(s=f+2760|0)>>2],l[f+312>>2]=l[s>>2],l[f+316>>2]=t,s=l[f+2836>>2],l[f+320>>2]=l[f+2832>>2],l[f+324>>2]=s,s=l[f+2756>>2],l[f+304>>2]=l[f+2752>>2],l[f+308>>2]=s,Ok(f+2208|0,f+320|0,f+304|0),s=l[n+4>>2],l[r>>2]=l[n>>2],l[r+4>>2]=s,r=l[f+2212>>2],l[f+2832>>2]=l[f+2208>>2],l[f+2836>>2]=r;break i;case 3:}d=l[4+(s=f+2840|0)>>2],l[f+456>>2]=l[s>>2],l[f+460>>2]=d,t=l[f+2836>>2],l[f+448>>2]=l[f+2832>>2],l[f+452>>2]=t,Un(f+2208|0,f+448|0,b),t=l[n+4>>2],l[s>>2]=l[n>>2],l[s+4>>2]=t,t=l[r+4>>2],l[f+440>>2]=l[r>>2],l[f+444>>2]=t,r=l[f+2212>>2],l[f+2832>>2]=l[f+2208>>2],l[f+2836>>2]=r,r=l[f+2804>>2],l[f+432>>2]=l[f+2800>>2],l[f+436>>2]=r,_a(f+2736|0,f+432|0,o),r=l[s+4>>2],l[f+424>>2]=l[s>>2],l[f+428>>2]=r,t=l[4+(r=f+2744|0)>>2],l[f+408>>2]=l[r>>2],l[f+412>>2]=t,r=l[f+2836>>2],l[f+416>>2]=l[f+2832>>2],l[f+420>>2]=r,r=l[f+2740>>2],l[f+400>>2]=l[f+2736>>2],l[f+404>>2]=r,Ok(f+2208|0,f+416|0,f+400|0),r=l[n+4>>2],t=l[n>>2],l[s>>2]=t,l[s+4>>2]=r,l[f+392>>2]=t,l[f+396>>2]=r,r=l[f+2212>>2],t=l[f+2208>>2],l[f+2832>>2]=t,l[f+2836>>2]=r,l[f+384>>2]=t,l[f+388>>2]=r,Un(f+2208|0,f+384|0,b),r=l[n+4>>2],l[s>>2]=l[n>>2],l[s+4>>2]=r,r=l[f+2212>>2],l[f+2832>>2]=l[f+2208>>2],l[f+2836>>2]=r}if((0|u)==(0|(i=i+1|0)))break}r=l[a+12>>2],l[f+216>>2]=l[a+8>>2],l[f+220>>2]=r,r=l[a+4>>2],l[f+208>>2]=l[a>>2],l[f+212>>2]=r,zb(f+208|0),a=l[4+(r=f+2840|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[f+2836>>2],l[e>>2]=l[f+2832>>2],l[e+4>>2]=r;break e}r=l[a+12>>2],l[f+200>>2]=l[a+8>>2],l[f+204>>2]=r,r=l[a+4>>2],l[f+192>>2]=l[a>>2],l[f+196>>2]=r,zb(f+192|0),a=l[4+(r=f+2840|0)>>2],l[f+184>>2]=l[r>>2],l[f+188>>2]=a,r=l[f+2836>>2],l[f+176>>2]=l[f+2832>>2],l[f+180>>2]=r,zb(f+176|0),a=l[4+(b=f+2808|0)>>2],r=f+2872|0,b=l[b>>2],l[r>>2]=b,l[r+4>>2]=a,l[f+168>>2]=b,l[f+172>>2]=a,a=l[f+2804>>2],i=l[f+2800>>2],l[f+2864>>2]=i,l[f+2868>>2]=a,l[f+160>>2]=i,l[f+164>>2]=a,a=Xb(15&v[f+160|0]),i=l[r+4>>2],l[f+152>>2]=l[r>>2],l[f+156>>2]=i,i=l[f+2868>>2],l[f+144>>2]=l[f+2864>>2],l[f+148>>2]=i,Nb(f+2880|0,f+144|0),b=l[4+(i=f+2888|0)>>2],l[f+136>>2]=l[i>>2],l[f+140>>2]=b,i=l[f+2884>>2],l[f+128>>2]=l[f+2880>>2],l[f+132>>2]=i,i=Jb(f+128|0,f+2849|0,15),l[f+120>>2]=41e3,l[f+116>>2]=i,l[f+112>>2]=a,Yb(f+2208|0,39550,f+112|0),i=l[4+(a=f+2216|0)>>2],l[f+104>>2]=l[a>>2],l[f+108>>2]=i,a=l[f+2212>>2],l[f+96>>2]=l[f+2208>>2],l[f+100>>2]=a,Hb(e,f+96|0),e=l[r+4>>2],l[f+88>>2]=l[r>>2],l[f+92>>2]=e,e=l[f+2868>>2],l[f+80>>2]=l[f+2864>>2],l[f+84>>2]=e,zb(f+80|0);break e}if(fn(r,41031))if(fn(r,41085))if(fn(r,41209))if(fn(r,41308))if(fn(r,41393))b=l[a+12>>2],l[(r=f+1880|0)>>2]=l[a+8>>2],l[r+4>>2]=b,r=l[a+4>>2],l[f+1872>>2]=l[a>>2],l[f+1876>>2]=r,zb(f+1872|0),jb(f+2032|0,41735),a=l[i+12>>2],l[(r=f+1864|0)>>2]=l[i+8>>2],l[r+4>>2]=a,r=l[i>>2],a=l[i+4>>2],n=l[4+(b=f+2040|0)>>2],l[(i=f+1848|0)>>2]=l[b>>2],l[i+4>>2]=n,l[f+1856>>2]=r,l[f+1860>>2]=a,r=l[f+2036>>2],l[f+1840>>2]=l[f+2032>>2],l[f+1844>>2]=r,Ok(f+2048|0,f+1856|0,f+1840|0),i=l[4+(a=f+2056|0)>>2],l[(r=f+1832|0)>>2]=l[a>>2],l[r+4>>2]=i,r=l[f+2052>>2],l[f+1824>>2]=l[f+2048>>2],l[f+1828>>2]=r,Hb(e,f+1824|0);else{n=l[i+12>>2],l[(r=f+1816|0)>>2]=l[i+8>>2],l[r+4>>2]=n,r=l[i+4>>2],l[f+1808>>2]=l[i>>2],l[f+1812>>2]=r,zb(f+1808|0),n=l[a+12>>2],l[(r=f+2216|0)>>2]=l[a+8>>2],l[r+4>>2]=n,i=l[a+4>>2],l[f+2208>>2]=l[a>>2],l[f+2212>>2]=i,n=l[a+12>>2],l[(i=f+1800|0)>>2]=l[a+8>>2],l[i+4>>2]=n,i=l[a+4>>2],l[f+1792>>2]=l[a>>2],l[f+1796>>2]=i,5!=(15&v[f+1792|0])?(n=l[r+4>>2],l[(i=f+1784|0)>>2]=l[r>>2],l[i+4>>2]=n,r=l[f+2212>>2],l[f+1776>>2]=l[f+2208>>2],l[f+1780>>2]=r,jk(f+2880|0,f+1776|0,0)):(n=l[r+4>>2],l[(i=f+2888|0)>>2]=l[r>>2],l[i+4>>2]=n,r=l[f+2212>>2],l[f+2880>>2]=l[f+2208>>2],l[f+2884>>2]=r),r=l[f+2884>>2],l[a>>2]=l[f+2880>>2],l[a+4>>2]=r,i=l[4+(r=f+2888|0)>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=i,i=l[a+12>>2],l[(r=f+1768|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1760>>2]=l[a>>2],l[f+1764>>2]=r,u=Gb(f+1760|0),i=l[a+12>>2],l[(r=f+1752|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1744>>2]=l[a>>2],l[f+1748>>2]=r,Nb(f+2064|0,f+1744|0),n=l[4+(i=f+2072|0)>>2],l[(r=f+1736|0)>>2]=l[i>>2],l[r+4>>2]=n,r=l[f+2068>>2],l[f+1728>>2]=l[f+2064>>2],l[f+1732>>2]=r,m=f+2208|0,c=vn(f+1728|0),d=s=wn(gb(r=(0|w(c,3))/4|0,1),0,r),i=0,t=0;r:if(!((0|c)<1)){for(r=0;;){if(61!=(0|(n=v[i+u|0]))){if(255==(0|(n=v[n+41408|0]))){Lb(s),b=l[a+12>>2],l[(r=f+2872|0)>>2]=l[a+8>>2],l[r+4>>2]=b,i=l[a+4>>2],l[f+2864>>2]=l[a>>2],l[f+2868>>2]=i,b=l[a+12>>2],l[(i=f+1720|0)>>2]=l[a+8>>2],l[i+4>>2]=b,i=l[a+4>>2],l[f+1712>>2]=l[a>>2],l[f+1716>>2]=i,a=Xb(15&v[f+1712|0]),b=l[r+4>>2],l[(i=f+1704|0)>>2]=l[r>>2],l[i+4>>2]=b,i=l[f+2868>>2],l[f+1696>>2]=l[f+2864>>2],l[f+1700>>2]=i,Nb(f+2880|0,f+1696|0),n=l[4+(b=f+2888|0)>>2],l[(i=f+1688|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[f+2884>>2],l[f+1680>>2]=l[f+2880>>2],l[f+1684>>2]=i,i=Jb(f+1680|0,f+2849|0,15),l[f+1672>>2]=41663,l[f+1668>>2]=i,l[f+1664>>2]=a,Yb(f+2208|0,39550,f+1664|0),b=l[4+(i=f+2216|0)>>2],l[(a=f+1656|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2212>>2],l[f+1648>>2]=l[f+2208>>2],l[f+1652>>2]=a,Hb(e,f+1648|0),a=l[r+4>>2],l[(e=f+1640|0)>>2]=l[r>>2],l[e+4>>2]=a,e=l[f+2868>>2],l[f+1632>>2]=l[f+2864>>2],l[f+1636>>2]=e,zb(f+1632|0);break e}if(n=t=n|r<<6,4==(0|(o=o+1|0))&&(k[0|(n=b+s|0)]=r>>>10,k[n+2|0]=t,k[n+1|0]=r>>>2,b=b+3|0,o=0,n=0),r=n,(0|c)!=(0|(i=i+1|0)))continue}break}if(t=b,!((i=o+-1|0)>>>0>2)){switch(i-1|0){case 0:k[b+s|0]=r>>>4,t=b+1|0;break r;default:Lb(s),b=l[a+12>>2],l[(r=f+2872|0)>>2]=l[a+8>>2],l[r+4>>2]=b,i=l[a+4>>2],l[f+2864>>2]=l[a>>2],l[f+2868>>2]=i,b=l[a+12>>2],l[(i=f+1624|0)>>2]=l[a+8>>2],l[i+4>>2]=b,i=l[a+4>>2],l[f+1616>>2]=l[a>>2],l[f+1620>>2]=i,a=Xb(15&v[f+1616|0]),b=l[r+4>>2],l[(i=f+1608|0)>>2]=l[r>>2],l[i+4>>2]=b,i=l[f+2868>>2],l[f+1600>>2]=l[f+2864>>2],l[f+1604>>2]=i,Nb(f+2880|0,f+1600|0),n=l[4+(b=f+2888|0)>>2],l[(i=f+1592|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[f+2884>>2],l[f+1584>>2]=l[f+2880>>2],l[f+1588>>2]=i,i=Jb(f+1584|0,f+2849|0,15),l[f+1576>>2]=41702,l[f+1572>>2]=i,l[f+1568>>2]=a,Yb(f+2208|0,39550,f+1568|0),b=l[4+(i=f+2216|0)>>2],l[(a=f+1560|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2212>>2],l[f+1552>>2]=l[f+2208>>2],l[f+1556>>2]=a,Hb(e,f+1552|0),a=l[r+4>>2],l[(e=f+1544|0)>>2]=l[r>>2],l[e+4>>2]=a,e=l[f+2868>>2],l[f+1536>>2]=l[f+2864>>2],l[f+1540>>2]=e,zb(f+1536|0);break e;case 1:}k[0|(i=b+s|0)]=r>>>10,k[i+1|0]=r>>>2,t=b+2|0}}Uk(m,d,t),i=l[a+12>>2],l[(r=f+1528|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1520>>2]=l[a>>2],l[f+1524>>2]=r,zb(f+1520|0),Lb(s),a=l[4+(r=f+2216|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[f+2212>>2],l[e>>2]=l[f+2208>>2],l[e+4>>2]=r}else{if(b=l[i+12>>2],l[(r=f+1512|0)>>2]=l[i+8>>2],l[r+4>>2]=b,r=l[i+4>>2],l[f+1504>>2]=l[i>>2],l[f+1508>>2]=r,zb(f+1504|0),b=l[a+12>>2],l[(r=f+2216|0)>>2]=l[a+8>>2],l[r+4>>2]=b,i=l[a+4>>2],l[f+2208>>2]=l[a>>2],l[f+2212>>2]=i,b=l[a+12>>2],l[(i=f+1496|0)>>2]=l[a+8>>2],l[i+4>>2]=b,i=l[a+4>>2],l[f+1488>>2]=l[a>>2],l[f+1492>>2]=i,5!=(15&v[f+1488|0])?(b=l[r+4>>2],l[(i=f+1480|0)>>2]=l[r>>2],l[i+4>>2]=b,r=l[f+2212>>2],l[f+1472>>2]=l[f+2208>>2],l[f+1476>>2]=r,jk(f+2880|0,f+1472|0,0)):(b=l[r+4>>2],l[(i=f+2888|0)>>2]=l[r>>2],l[i+4>>2]=b,r=l[f+2212>>2],l[f+2880>>2]=l[f+2208>>2],l[f+2884>>2]=r),r=l[f+2884>>2],l[a>>2]=l[f+2880>>2],l[a+4>>2]=r,i=l[4+(r=f+2888|0)>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=i,jb(e,40961),i=l[a+12>>2],l[(r=f+1464|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1456>>2]=l[a>>2],l[f+1460>>2]=r,c=Gb(f+1456|0),i=l[a+12>>2],l[(r=f+1448|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1440>>2]=l[a>>2],l[f+1444>>2]=r,Nb(f+2080|0,f+1440|0),b=l[4+(i=f+2088|0)>>2],l[(r=f+1432|0)>>2]=l[i>>2],l[r+4>>2]=b,r=l[f+2084>>2],l[f+1424>>2]=l[f+2080>>2],l[f+1428>>2]=r,(0|(u=vn(f+1424|0)))>=1)for(i=0;n=(t=(0|(b=u-i|0))<3)?b:3,r=0,s=(r=(0|b)>=1?v[i+c|0]:r)<<8,(0|n)<=1?(o=r<<16,b=0):(o=(s=v[1+(d=i+c|0)|0]|s)<<8,b=0,2!=(0|n)&&(b=v[d+2|0])),k[f+2880|0]=v[41328+(r>>>2)|0],k[f+2883|0]=t?61:v[41328+(63&b)|0],k[f+2881|0]=v[41328+(s>>>4&63)|0],k[f+2882|0]=v[41328+((b|o)>>>6&63)|0],(0|n)<2&&(k[f+2882|0]=61),b=l[e+12>>2],l[(r=f+1416|0)>>2]=l[e+8>>2],l[r+4>>2]=b,r=l[e+4>>2],l[f+1408>>2]=l[e>>2],l[f+1412>>2]=r,Qb(f+2208|0,f+1408|0,f+2880|0,4),b=l[4+(r=f+2216|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=b,r=l[f+2212>>2],l[e>>2]=l[f+2208>>2],l[e+4>>2]=r,(0|u)>(0|(i=i+3|0)););r=l[a+12>>2],l[(e=f+1400|0)>>2]=l[a+8>>2],l[e+4>>2]=r,e=l[a+4>>2],l[f+1392>>2]=l[a>>2],l[f+1396>>2]=e,zb(f+1392|0)}else{if(b=l[i+12>>2],l[(r=f+1384|0)>>2]=l[i+8>>2],l[r+4>>2]=b,r=l[i+4>>2],l[f+1376>>2]=l[i>>2],l[f+1380>>2]=r,zb(f+1376|0),i=l[a+12>>2],l[(r=f+1368|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1360>>2]=l[a>>2],l[f+1364>>2]=r,6!=(15&v[f+1360|0])&&(rn(f+2160|0),b=l[4+(i=f+2168|0)>>2],l[(r=f+1352|0)>>2]=l[i>>2],l[r+4>>2]=b,r=l[f+2164>>2],l[f+1344>>2]=l[f+2160>>2],l[f+1348>>2]=r,i=l[a+12>>2],l[(r=f+1336|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1328>>2]=l[a>>2],l[f+1332>>2]=r,Dn(f+2208|0,f+1344|0,0,f+1328|0),i=l[4+(r=f+2216|0)>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=i,r=l[f+2212>>2],l[a>>2]=l[f+2208>>2],l[a+4>>2]=r),jb(f+2832|0,40961),i=l[a+12>>2],l[(r=f+1320|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1312>>2]=l[a>>2],l[f+1316>>2]=r,Nb(f+2144|0,f+1312|0),b=l[4+(i=f+2152|0)>>2],l[(r=f+1304|0)>>2]=l[i>>2],l[r+4>>2]=b,r=l[f+2148>>2],l[f+1296>>2]=l[f+2144>>2],l[f+1300>>2]=r,(0|(o=Zb(f+1296|0)))>=1)for(i=0;;){b=l[a+12>>2],l[(r=f+1288|0)>>2]=l[a+8>>2],l[r+4>>2]=b,r=l[a+4>>2],l[f+1280>>2]=l[a>>2],l[f+1284>>2]=r,Nb(f+2128|0,f+1280|0),n=l[4+(b=f+2136|0)>>2],l[(r=f+1272|0)>>2]=l[b>>2],l[r+4>>2]=n,r=l[f+2132>>2],l[f+1264>>2]=l[f+2128>>2],l[f+1268>>2]=r,Kb(f+2208|0,f+1264|0,i),c=l[4+(r=f+2216|0)>>2],l[(b=n=f+2808|0)>>2]=l[r>>2],l[b+4>>2]=c,b=l[f+2212>>2],l[f+2800>>2]=l[f+2208>>2],l[f+2804>>2]=b,i&&(u=l[4+(b=f+2840|0)>>2],l[(s=f+1256|0)>>2]=l[b>>2],l[s+4>>2]=u,s=l[f+2836>>2],l[f+1248>>2]=l[f+2832>>2],l[f+1252>>2]=s,Un(f+2208|0,f+1248|0,41233),s=l[r+4>>2],l[b>>2]=l[r>>2],l[b+4>>2]=s,b=l[f+2212>>2],l[f+2832>>2]=l[f+2208>>2],l[f+2836>>2]=b),s=l[n+4>>2],l[(b=f+1240|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+2804>>2],l[f+1232>>2]=l[f+2800>>2],l[f+1236>>2]=b,b=15&v[f+1232|0];r:{if(b+-1>>>0>=4){if(5==(0|b)){u=l[4+(b=f+2840|0)>>2],l[(s=f+1224|0)>>2]=l[b>>2],l[s+4>>2]=u,s=l[f+2836>>2],l[f+1216>>2]=l[f+2832>>2],l[f+1220>>2]=s,Un(f+2208|0,f+1216|0,41240),s=l[r+4>>2],l[b>>2]=l[r>>2],l[b+4>>2]=s,c=l[n+4>>2],l[(s=f+1208|0)>>2]=l[n>>2],l[s+4>>2]=c,n=l[f+2212>>2],l[f+2832>>2]=l[f+2208>>2],l[f+2836>>2]=n,n=l[f+2804>>2],l[f+1200>>2]=l[f+2800>>2],l[f+1204>>2]=n,_a(f+2096|0,f+1200|0,41246),s=l[b+4>>2],l[(n=f+1192|0)>>2]=l[b>>2],l[n+4>>2]=s,c=l[4+(s=f+2104|0)>>2],l[(n=f+1176|0)>>2]=l[s>>2],l[n+4>>2]=c,n=l[f+2836>>2],l[f+1184>>2]=l[f+2832>>2],l[f+1188>>2]=n,n=l[f+2100>>2],l[f+1168>>2]=l[f+2096>>2],l[f+1172>>2]=n,Ok(f+2208|0,f+1184|0,f+1168|0),n=l[r+4>>2],s=l[r>>2],l[b>>2]=s,l[b+4>>2]=n,l[(c=f+1160|0)>>2]=s,l[c+4>>2]=n,n=l[f+2212>>2],s=l[f+2208>>2],l[f+2832>>2]=s,l[f+2836>>2]=n,l[f+1152>>2]=s,l[f+1156>>2]=n,Un(f+2208|0,f+1152|0,41240);break r}i=l[a+12>>2],l[(r=f+1080|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1072>>2]=l[a>>2],l[f+1076>>2]=r,zb(f+1072|0),i=l[4+(a=f+2840|0)>>2],l[(r=f+1064|0)>>2]=l[a>>2],l[r+4>>2]=i,r=l[f+2836>>2],l[f+1056>>2]=l[f+2832>>2],l[f+1060>>2]=r,zb(f+1056|0),a=l[4+(b=f+2808|0)>>2],r=f+2872|0,b=l[b>>2],l[r>>2]=b,l[r+4>>2]=a,l[(i=f+1048|0)>>2]=b,l[i+4>>2]=a,a=l[f+2804>>2],i=l[f+2800>>2],l[f+2864>>2]=i,l[f+2868>>2]=a,l[f+1040>>2]=i,l[f+1044>>2]=a,a=Xb(15&v[f+1040|0]),b=l[r+4>>2],l[(i=f+1032|0)>>2]=l[r>>2],l[i+4>>2]=b,i=l[f+2868>>2],l[f+1024>>2]=l[f+2864>>2],l[f+1028>>2]=i,Nb(f+2880|0,f+1024|0),b=l[4+(i=f+2888|0)>>2],l[f+1016>>2]=l[i>>2],l[f+1020>>2]=b,i=l[f+2884>>2],l[f+1008>>2]=l[f+2880>>2],l[f+1012>>2]=i,i=Jb(f+1008|0,f+2849|0,15),l[f+1e3>>2]=41265,l[f+996>>2]=i,l[f+992>>2]=a,Yb(f+2208|0,39550,f+992|0),i=l[4+(a=f+2216|0)>>2],l[f+984>>2]=l[a>>2],l[f+988>>2]=i,a=l[f+2212>>2],l[f+976>>2]=l[f+2208>>2],l[f+980>>2]=a,Hb(e,f+976|0),e=l[r+4>>2],l[f+968>>2]=l[r>>2],l[f+972>>2]=e,e=l[f+2868>>2],l[f+960>>2]=l[f+2864>>2],l[f+964>>2]=e,zb(f+960|0);break e}s=l[n+4>>2],l[(b=f+1144|0)>>2]=l[n>>2],l[b+4>>2]=s,b=l[f+2804>>2],l[f+1136>>2]=l[f+2800>>2],l[f+1140>>2]=b,jk(f+2112|0,f+1136|0,0),c=l[4+(b=f+2840|0)>>2],l[(n=f+1128|0)>>2]=l[b>>2],l[n+4>>2]=c,c=l[4+(s=f+2120|0)>>2],l[(n=f+1112|0)>>2]=l[s>>2],l[n+4>>2]=c,n=l[f+2836>>2],l[f+1120>>2]=l[f+2832>>2],l[f+1124>>2]=n,n=l[f+2116>>2],l[f+1104>>2]=l[f+2112>>2],l[f+1108>>2]=n,Ok(f+2208|0,f+1120|0,f+1104|0)}if(n=l[r+4>>2],l[b>>2]=l[r>>2],l[b+4>>2]=n,r=l[f+2212>>2],l[f+2832>>2]=l[f+2208>>2],l[f+2836>>2]=r,(0|o)==(0|(i=i+1|0)))break}i=l[a+12>>2],l[(r=f+1096|0)>>2]=l[a+8>>2],l[r+4>>2]=i,r=l[a+4>>2],l[f+1088>>2]=l[a>>2],l[f+1092>>2]=r,zb(f+1088|0),a=l[4+(r=f+2840|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[f+2836>>2],l[e>>2]=l[f+2832>>2],l[e+4>>2]=r}else{for(r=l[i+12>>2],l[f+952>>2]=l[i+8>>2],l[f+956>>2]=r,r=l[i+4>>2],l[f+944>>2]=l[i>>2],l[f+948>>2]=r,zb(f+944|0),b=l[a+12>>2],l[(r=f+2216|0)>>2]=l[a+8>>2],l[r+4>>2]=b,i=l[a+4>>2],l[f+2208>>2]=l[a>>2],l[f+2212>>2]=i,i=l[a+12>>2],l[f+936>>2]=l[a+8>>2],l[f+940>>2]=i,i=l[a+4>>2],l[f+928>>2]=l[a>>2],l[f+932>>2]=i,5!=(15&v[f+928|0])?(i=l[r+4>>2],l[f+920>>2]=l[r>>2],l[f+924>>2]=i,r=l[f+2212>>2],l[f+912>>2]=l[f+2208>>2],l[f+916>>2]=r,jk(f+2880|0,f+912|0,0)):(b=l[r+4>>2],l[(i=f+2888|0)>>2]=l[r>>2],l[i+4>>2]=b,r=l[f+2212>>2],l[f+2880>>2]=l[f+2208>>2],l[f+2884>>2]=r),r=l[f+2884>>2],l[a>>2]=l[f+2880>>2],l[a+4>>2]=r,i=l[4+(r=f+2888|0)>>2],l[a+8>>2]=l[r>>2],l[a+12>>2]=i,wn(f+2208|0,0,512),i=41094,r=65;l[(f+2208|0)+(r<<24>>24<<2)>>2]=1,r=v[i+1|0],41165!=(0|(i=i+1|0)););if(jb(e,40961),r=l[a+12>>2],l[f+904>>2]=l[a+8>>2],l[f+908>>2]=r,r=l[a+4>>2],l[f+896>>2]=l[a>>2],l[f+900>>2]=r,i=Gb(f+896|0),r=l[a+12>>2],l[f+888>>2]=l[a+8>>2],l[f+892>>2]=r,r=l[a+4>>2],l[f+880>>2]=l[a>>2],l[f+884>>2]=r,Nb(f+2192|0,f+880|0),n=l[4+(r=f+2200|0)>>2],l[f+872>>2]=l[r>>2],l[f+876>>2]=n,b=l[f+2196>>2],l[f+864>>2]=l[f+2192>>2],l[f+868>>2]=b,(0|vn(f+864|0))>=1)for(;n=k[0|i],!l[(f+2208|0)+((b=255&n)<<2)>>2]|(0|n)<0?(l[f+832>>2]=b,Yb(f+2176|0,41176,f+832|0),b=l[e+12>>2],l[f+824>>2]=l[e+8>>2],l[f+828>>2]=b,b=l[e>>2],n=l[e+4>>2],c=l[4+(s=f+2184|0)>>2],l[f+808>>2]=l[s>>2],l[f+812>>2]=c,l[f+816>>2]=b,l[f+820>>2]=n,b=l[f+2180>>2],l[f+800>>2]=l[f+2176>>2],l[f+804>>2]=b,Ok(f+2880|0,f+816|0,f+800|0)):(b=l[e+12>>2],l[f+856>>2]=l[e+8>>2],l[f+860>>2]=b,b=l[e+4>>2],l[f+848>>2]=l[e>>2],l[f+852>>2]=b,Qb(f+2880|0,f+848|0,i,1)),n=l[4+(b=f+2888|0)>>2],l[e+8>>2]=l[b>>2],l[e+12>>2]=n,b=l[f+2884>>2],l[e>>2]=l[f+2880>>2],l[e+4>>2]=b,b=l[a+12>>2],l[f+792>>2]=l[a+8>>2],l[f+796>>2]=b,b=l[a+4>>2],l[f+784>>2]=l[a>>2],l[f+788>>2]=b,Nb(f+2192|0,f+784|0),b=l[r+4>>2],l[f+776>>2]=l[r>>2],l[f+780>>2]=b,b=l[f+2196>>2],l[f+768>>2]=l[f+2192>>2],l[f+772>>2]=b,i=i+1|0,(0|(o=o+1|0))<(0|vn(f+768|0)););e=l[a+12>>2],l[f+760>>2]=l[a+8>>2],l[f+764>>2]=e,e=l[a+4>>2],l[f+752>>2]=l[a>>2],l[f+756>>2]=e,zb(f+752|0)}else r=l[i+12>>2],l[f+744>>2]=l[i+8>>2],l[f+748>>2]=r,r=l[i+4>>2],l[f+736>>2]=l[i>>2],l[f+740>>2]=r,zb(f+736|0),b=l[a+12>>2],l[(r=f+2216|0)>>2]=l[a+8>>2],l[r+4>>2]=b,i=l[a+4>>2],l[f+2208>>2]=l[a>>2],l[f+2212>>2]=i,i=l[a+12>>2],l[f+728>>2]=l[a+8>>2],l[f+732>>2]=i,i=l[a+4>>2],l[f+720>>2]=l[a>>2],l[f+724>>2]=i,5!=(15&v[f+720|0])?(a=l[r+4>>2],l[f+712>>2]=l[r>>2],l[f+716>>2]=a,r=l[f+2212>>2],l[f+704>>2]=l[f+2208>>2],l[f+708>>2]=r,jk(f+2720|0,f+704|0,0)):(i=l[r+4>>2],l[(a=f+2728|0)>>2]=l[r>>2],l[a+4>>2]=i,r=l[f+2212>>2],l[f+2720>>2]=l[f+2208>>2],l[f+2724>>2]=r),a=l[4+(r=f+2728|0)>>2],l[f+696>>2]=l[r>>2],l[f+700>>2]=a,r=l[f+2724>>2],l[f+688>>2]=l[f+2720>>2],l[f+692>>2]=r,_a(e,f+688|0,41041)}else{if(r=l[i+12>>2],l[f+72>>2]=l[i+8>>2],l[f+76>>2]=r,r=l[i+4>>2],l[f+64>>2]=l[i>>2],l[f+68>>2]=r,zb(f- -64|0),b=l[a+12>>2],l[(r=f+2216|0)>>2]=l[a+8>>2],l[r+4>>2]=b,i=l[a+4>>2],l[f+2208>>2]=l[a>>2],l[f+2212>>2]=i,i=l[a+12>>2],l[f+56>>2]=l[a+8>>2],l[f+60>>2]=i,i=l[a+4>>2],l[f+48>>2]=l[a>>2],l[f+52>>2]=i,5==(15&v[f+48|0])){a=l[f+2212>>2],l[e>>2]=l[f+2208>>2],l[e+4>>2]=a,a=l[r+4>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a;break e}a=l[r+4>>2],l[f+40>>2]=l[r>>2],l[f+44>>2]=a,r=l[f+2212>>2],l[f+32>>2]=l[f+2208>>2],l[f+36>>2]=r,jk(e,f+32|0,0)}else r=l[i+12>>2],l[f+24>>2]=l[i+8>>2],l[f+28>>2]=r,r=l[i+4>>2],l[f+16>>2]=l[i>>2],l[f+20>>2]=r,zb(f+16|0),r=l[a+12>>2],l[f+8>>2]=l[a+8>>2],l[f+12>>2]=r,r=l[a+4>>2],l[f>>2]=l[a>>2],l[f+4>>2]=r,jk(e,f,0);else b=l[a+12>>2],l[(r=f+2008|0)>>2]=l[a+8>>2],l[r+4>>2]=b,r=l[a+4>>2],l[f+2e3>>2]=l[a>>2],l[f+2004>>2]=r,zb(f+2e3|0),b=l[i+12>>2],l[(r=f+2872|0)>>2]=l[i+8>>2],l[r+4>>2]=b,a=l[i+4>>2],l[f+2864>>2]=l[i>>2],l[f+2868>>2]=a,b=l[i+12>>2],l[(a=f+1992|0)>>2]=l[i+8>>2],l[a+4>>2]=b,a=l[i+4>>2],l[f+1984>>2]=l[i>>2],l[f+1988>>2]=a,a=Xb(15&v[f+1984|0]),b=l[r+4>>2],l[(i=f+1976|0)>>2]=l[r>>2],l[i+4>>2]=b,i=l[f+2868>>2],l[f+1968>>2]=l[f+2864>>2],l[f+1972>>2]=i,Nb(f+2880|0,f+1968|0),n=l[4+(b=f+2888|0)>>2],l[(i=f+1960|0)>>2]=l[b>>2],l[i+4>>2]=n,i=l[f+2884>>2],l[f+1952>>2]=l[f+2880>>2],l[f+1956>>2]=i,i=Jb(f+1952|0,f+2849|0,15),l[f+1944>>2]=40706,l[f+1940>>2]=i,l[f+1936>>2]=a,Yb(f+2208|0,39550,f+1936|0),b=l[4+(i=f+2216|0)>>2],l[(a=f+1928|0)>>2]=l[i>>2],l[a+4>>2]=b,a=l[f+2212>>2],l[f+1920>>2]=l[f+2208>>2],l[f+1924>>2]=a,Hb(e,f+1920|0),a=l[r+4>>2],l[(e=f+1912|0)>>2]=l[r>>2],l[e+4>>2]=a,e=l[f+2868>>2],l[f+1904>>2]=l[f+2864>>2],l[f+1908>>2]=e,zb(f+1904|0);ne=f+2896|0},f[119]=function(e,r,a){e|=0,r|=0;var i,f=0,k=0;if(ne=i=ne-192|0,r=l[12+(a|=0)>>2],l[i+104>>2]=l[a+8>>2],l[i+108>>2]=r,r=l[a+4>>2],l[i+96>>2]=l[a>>2],l[i+100>>2]=r,zb(i+96|0),mn(e),r=l[82973],a=l[r>>2])for(;k=r,(r=hn(a,61))?2147483647!=(a-r|0)&&(Uk(i+128|0,a,r-a|0),jb(i+112|0,r+1|0),r=l[e+12>>2],l[i+88>>2]=l[e+8>>2],l[i+92>>2]=r,r=l[e>>2],a=l[e+4>>2],f=l[i+140>>2],l[i+72>>2]=l[i+136>>2],l[i+76>>2]=f,f=l[i+124>>2],l[i+56>>2]=l[i+120>>2],l[i+60>>2]=f,l[i+80>>2]=r,l[i+84>>2]=a,r=l[i+132>>2],l[i+64>>2]=l[i+128>>2],l[i+68>>2]=r,r=l[i+116>>2],l[i+48>>2]=l[i+112>>2],l[i+52>>2]=r,en(i+176|0,i+80|0,i- -64|0,i+48|0),r=l[i+188>>2],l[e+8>>2]=l[i+184>>2],l[e+12>>2]=r,r=l[i+180>>2],l[e>>2]=l[i+176>>2],l[e+4>>2]=r):(jb(i+160|0,a),r=l[10947],l[i+152>>2]=l[10946],l[i+156>>2]=r,r=l[10945],l[i+144>>2]=l[10944],l[i+148>>2]=r,r=l[e+12>>2],l[i+40>>2]=l[e+8>>2],l[i+44>>2]=r,r=l[e>>2],a=l[e+4>>2],f=l[i+172>>2],l[i+24>>2]=l[i+168>>2],l[i+28>>2]=f,f=l[i+156>>2],l[i+8>>2]=l[i+152>>2],l[i+12>>2]=f,l[i+32>>2]=r,l[i+36>>2]=a,r=l[i+164>>2],l[i+16>>2]=l[i+160>>2],l[i+20>>2]=r,r=l[i+148>>2],l[i>>2]=l[i+144>>2],l[i+4>>2]=r,en(i+176|0,i+32|0,i+16|0,i),r=l[i+188>>2],l[e+8>>2]=l[i+184>>2],l[e+12>>2]=r,r=l[i+180>>2],l[e>>2]=l[i+176>>2],l[e+4>>2]=r),r=k+4|0,a=l[k+4>>2];);ne=i+192|0},f[120]=function(e,r,a){e|=0,r|=0;var i,f=0;ne=i=ne-80|0,f=l[12+(a|=0)>>2],l[i+40>>2]=l[a+8>>2],l[i+44>>2]=f,f=l[a+4>>2],l[i+32>>2]=l[a>>2],l[i+36>>2]=f,zb(i+32|0),l[(a=i- -64|0)>>2]=0,l[a+4>>2]=0,l[a+8>>2]=0,l[a+12>>2]=0,l[i+48>>2]=0,l[i+52>>2]=0,l[i+56>>2]=0,l[i+60>>2]=0,a=l[i+76>>2],l[i+24>>2]=l[i+72>>2],l[i+28>>2]=a,a=l[i+60>>2],l[i+8>>2]=l[i+56>>2],l[i+12>>2]=a,a=l[i+68>>2],l[i+16>>2]=l[i+64>>2],l[i+20>>2]=a,a=l[i+52>>2],l[i>>2]=l[i+48>>2],l[i+4>>2]=a,ze(r,i+16|0,i),r=l[10939],l[e+8>>2]=l[10938],l[e+12>>2]=r,r=l[10937],l[e>>2]=l[10936],l[e+4>>2]=r,ne=i+80|0},f[121]=function(e,r,a,i){e|=0,r|=0,a|=0;var f,k=0;ne=f=ne-224|0,k=l[12+(i|=0)>>2],l[f+152>>2]=l[i+8>>2],l[f+156>>2]=k,k=l[i+4>>2],l[f+144>>2]=l[i>>2],l[f+148>>2]=k,4==(15&v[f+144|0])?(k=l[i+12>>2],l[f+24>>2]=l[i+8>>2],l[f+28>>2]=k,k=l[i+4>>2],l[f+16>>2]=l[i>>2],l[f+20>>2]=k,i=l[a+12>>2],l[f+8>>2]=l[a+8>>2],l[f+12>>2]=i,i=l[a+4>>2],l[f>>2]=l[a>>2],l[f+4>>2]=i,ze(r,f+16|0,f),r=l[10939],l[e+8>>2]=l[10938],l[e+12>>2]=r,r=l[10937],l[e>>2]=l[10936],l[e+4>>2]=r):(r=l[i+12>>2],l[f+136>>2]=l[i+8>>2],l[f+140>>2]=r,r=l[i+4>>2],l[f+128>>2]=l[i>>2],l[f+132>>2]=r,zb(f+128|0),r=l[a+12>>2],l[f+168>>2]=l[a+8>>2],l[f+172>>2]=r,r=l[a+4>>2],l[f+160>>2]=l[a>>2],l[f+164>>2]=r,r=l[a+12>>2],l[f+120>>2]=l[a+8>>2],l[f+124>>2]=r,r=l[a+4>>2],l[f+112>>2]=l[a>>2],l[f+116>>2]=r,r=Xb(15&v[f+112|0]),a=l[f+172>>2],l[f+104>>2]=l[f+168>>2],l[f+108>>2]=a,a=l[f+164>>2],l[f+96>>2]=l[f+160>>2],l[f+100>>2]=a,Nb(f+176|0,f+96|0),a=l[f+188>>2],l[f+88>>2]=l[f+184>>2],l[f+92>>2]=a,a=l[f+180>>2],l[f+80>>2]=l[f+176>>2],l[f+84>>2]=a,a=Jb(f+80|0,f+209|0,15),l[f+72>>2]=41831,l[f+68>>2]=a,l[f+64>>2]=r,Yb(f+192|0,39550,f- -64|0),r=l[f+204>>2],l[f+56>>2]=l[f+200>>2],l[f+60>>2]=r,r=l[f+196>>2],l[f+48>>2]=l[f+192>>2],l[f+52>>2]=r,Hb(e,f+48|0),e=l[f+172>>2],l[f+40>>2]=l[f+168>>2],l[f+44>>2]=e,e=l[f+164>>2],l[f+32>>2]=l[f+160>>2],l[f+36>>2]=e,zb(f+32|0)),ne=f+224|0},f[122]=function(e,r,a){e|=0,r|=0;var i,f=0;ne=i=ne-16|0,f=l[12+(a|=0)>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,zb(i),va(e,r),ne=i+16|0},f[123]=function(e,r,a){e|=0,r|=0;var i,f=0;ne=i=ne-16|0,f=l[12+(a|=0)>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,zb(i),je(e,r),ne=i+16|0},f[124]=function(e,r,a){e|=0,r|=0;var i,f=0;ne=i=ne-16|0,f=l[12+(a|=0)>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,zb(i),bk(e,r),ne=i+16|0},f[125]=function(e,r,a,i,f,b){e|=0,r|=0,a|=0,i|=0,f|=0,b|=0;var n,s,t,c,o,u,d=0,h=0,w=0,p=0,y=0,E=0,_=0,D=0,S=0,F=0,M=0,A=0;ne=n=ne-3088|0,p=l[10939],l[8+(r=n+3040|0)>>2]=l[10938],l[r+12>>2]=p,d=l[10937],l[r>>2]=l[10936],l[r+4>>2]=d,d=l[b+12>>2],l[(r=n+2040|0)>>2]=l[b+8>>2],l[r+4>>2]=d,r=l[b>>2],b=l[b+4>>2],h=l[4+(p=n+3048|0)>>2],l[(d=n+2024|0)>>2]=l[p>>2],l[d+4>>2]=h,l[n+2032>>2]=r,l[n+2036>>2]=b,r=l[n+3044>>2],l[n+2016>>2]=l[n+3040>>2],l[n+2020>>2]=r,s=gn(n+2032|0,n+2016|0),b=l[a+12>>2],l[(r=n+2008|0)>>2]=l[a+8>>2],l[r+4>>2]=b,r=l[a+4>>2],l[n+2e3>>2]=l[a>>2],l[n+2004>>2]=r;e:if(5==(15&v[n+2e3|0]))if(b=l[i+12>>2],l[(r=n+1864|0)>>2]=l[i+8>>2],l[r+4>>2]=b,r=l[i+4>>2],l[n+1856>>2]=l[i>>2],l[n+1860>>2]=r,5==(15&v[n+1856|0])){b=l[f+12>>2],l[(r=n+1720|0)>>2]=l[f+8>>2],l[r+4>>2]=b,r=l[f+4>>2],l[n+1712>>2]=l[f>>2],l[n+1716>>2]=r;r:{a:{if(5==(15&v[n+1712|0])){b=l[f+12>>2],l[(r=n+1560|0)>>2]=l[f+8>>2],l[r+4>>2]=b,r=l[f+4>>2],l[n+1552>>2]=l[f>>2],l[n+1556>>2]=r,Nb(n+3008|0,n+1552|0),d=l[4+(b=n+3016|0)>>2],l[(r=n+1544|0)>>2]=l[b>>2],l[r+4>>2]=d,r=l[n+3012>>2],l[n+1536>>2]=l[n+3008>>2],l[n+1540>>2]=r,Te(n+2832|0,n+1536|0),d=l[4+(b=n+2840|0)>>2],l[(r=n+1528|0)>>2]=l[b>>2],l[r+4>>2]=d,r=l[n+2836>>2],l[n+1520>>2]=l[n+2832>>2],l[n+1524>>2]=r,Nb(n+2992|0,n+1520|0),d=l[4+(b=n+3e3|0)>>2],l[(r=n+1512|0)>>2]=l[b>>2],l[r+4>>2]=d,r=l[n+2996>>2],l[n+1504>>2]=l[n+2992>>2],l[n+1508>>2]=r,d=256;i:{if((0|(p=Zb(n+1504|0)))>=1)for(b=0;;){if(y=l[4+(h=n+2840|0)>>2],l[(r=n+1496|0)>>2]=l[h>>2],l[r+4>>2]=y,r=l[n+2836>>2],l[n+1488>>2]=l[n+2832>>2],l[n+1492>>2]=r,Nb(n+2976|0,n+1488|0),y=l[4+(h=n+2984|0)>>2],l[(r=n+1480|0)>>2]=l[h>>2],l[r+4>>2]=y,r=l[n+2980>>2],l[n+1472>>2]=l[n+2976>>2],l[n+1476>>2]=r,Kb(n+3056|0,n+1472|0,b),r=l[4+(y=n+3064|0)>>2],h=n+3080|0,y=l[y>>2],l[h>>2]=y,l[h+4>>2]=r,l[(h=n+1464|0)>>2]=y,l[h+4>>2]=r,r=l[n+3060>>2],h=l[n+3056>>2],l[n+3072>>2]=h,l[n+3076>>2]=r,l[n+1456>>2]=h,l[n+1460>>2]=r,A=Wb(n+1456|0),(h=(r=g(A)<2147483648?~~A:-2147483648)-103|0)>>>0>17)break i;r=F,F=1;f:{k:{b:switch(h-1|0){case 1:d|=1;break k;case 16:d|=2;break k;case 5:d|=4;break k;case 11:d|=8;break k;case 8:d|=12;break k;case 4:d|=16;break k;case 6:break b;case 0:case 2:case 3:case 7:case 9:case 10:case 12:case 13:case 14:case 15:break i;default:break f}d|=32}F=r}if((0|p)==(0|(b=b+1|0)))break}p=l[4+(b=n+2840|0)>>2],l[(r=n+1448|0)>>2]=l[b>>2],l[r+4>>2]=p,r=l[n+2836>>2],l[n+1440>>2]=l[n+2832>>2],l[n+1444>>2]=r,zb(n+1440|0);break a}r=l[a+12>>2],l[n+88>>2]=l[a+8>>2],l[n+92>>2]=r,r=l[a+4>>2],l[n+80>>2]=l[a>>2],l[n+84>>2]=r,zb(n+80|0),r=l[i+12>>2],l[n+72>>2]=l[i+8>>2],l[n+76>>2]=r,r=l[i+4>>2],l[n+64>>2]=l[i>>2],l[n+68>>2]=r,zb(n- -64|0),a=l[4+(r=n+2840|0)>>2],l[n+56>>2]=l[r>>2],l[n+60>>2]=a,r=l[n+2836>>2],l[n+48>>2]=l[n+2832>>2],l[n+52>>2]=r,zb(n+48|0),jb(n+2944|0,41934),r=l[f+12>>2],l[n+40>>2]=l[f+8>>2],l[n+44>>2]=r,r=l[f>>2],a=l[f+4>>2],f=l[4+(i=n+2952|0)>>2],l[n+24>>2]=l[i>>2],l[n+28>>2]=f,l[n+32>>2]=r,l[n+36>>2]=a,r=l[n+2948>>2],l[n+16>>2]=l[n+2944>>2],l[n+20>>2]=r,Ok(n+2960|0,n+32|0,n+16|0),a=l[4+(r=n+2968|0)>>2],l[n+8>>2]=l[r>>2],l[n+12>>2]=a,r=l[n+2964>>2],l[n>>2]=l[n+2960>>2],l[n+4>>2]=r,Hb(e,n);break e}if(b=l[f+12>>2],l[(r=n+1704|0)>>2]=l[f+8>>2],l[r+4>>2]=b,r=l[f+4>>2],l[n+1696>>2]=l[f>>2],l[n+1700>>2]=r,1!=(15&v[n+1696|0]))break r;d=256}if(b=l[f+12>>2],l[(r=n+1432|0)>>2]=l[f+8>>2],l[r+4>>2]=b,r=l[f+4>>2],l[n+1424>>2]=l[f>>2],l[n+1428>>2]=r,zb(n+1424|0),f=l[i+12>>2],l[(r=n+1416|0)>>2]=l[i+8>>2],l[r+4>>2]=f,r=l[i+4>>2],l[n+1408>>2]=l[i>>2],l[n+1412>>2]=r,r=Gb(n+1408|0),b=l[i+12>>2],l[(f=n+1400|0)>>2]=l[i+8>>2],l[f+4>>2]=b,f=l[i+4>>2],l[n+1392>>2]=l[i>>2],l[n+1396>>2]=f,f=Gb(n+1392|0),p=l[i+12>>2],l[(b=n+1384|0)>>2]=l[i+8>>2],l[b+4>>2]=p,b=l[i+4>>2],l[n+1376>>2]=l[i>>2],l[n+1380>>2]=b,Nb(n+2928|0,n+1376|0),h=l[4+(p=n+2936|0)>>2],l[(b=n+1368|0)>>2]=l[p>>2],l[b+4>>2]=h,b=l[n+2932>>2],l[n+1360>>2]=l[n+2928>>2],l[n+1364>>2]=b,r=_r(n+3036|0,r,vn(n+1360|0)+f|0,d,n+3024|0)){Si(n+2832|0,r,n+3024|0),f=l[a+12>>2],l[(r=n+1352|0)>>2]=l[a+8>>2],l[r+4>>2]=f,r=l[a+4>>2],l[n+1344>>2]=l[a>>2],l[n+1348>>2]=r,zb(n+1344|0),a=l[i+12>>2],l[(r=n+1336|0)>>2]=l[i+8>>2],l[r+4>>2]=a,r=l[i+4>>2],l[n+1328>>2]=l[i>>2],l[n+1332>>2]=r,zb(n+1328|0),jb(n+2800|0,41980),jb(n+2784|0,n+2832|0),i=l[4+(a=n+2808|0)>>2],l[(r=n+1320|0)>>2]=l[a>>2],l[r+4>>2]=i,i=l[4+(a=n+2792|0)>>2],l[(r=n+1304|0)>>2]=l[a>>2],l[r+4>>2]=i,r=l[n+2804>>2],l[n+1312>>2]=l[n+2800>>2],l[n+1316>>2]=r,r=l[n+2788>>2],l[n+1296>>2]=l[n+2784>>2],l[n+1300>>2]=r,Ok(n+2816|0,n+1312|0,n+1296|0),i=l[4+(a=n+2824|0)>>2],l[(r=n+1288|0)>>2]=l[a>>2],l[r+4>>2]=i,r=l[n+2820>>2],l[n+1280>>2]=l[n+2816>>2],l[n+1284>>2]=r,Hb(e,n+1280|0);break e}for(s?(b=l[10943],l[8+(f=r=n+2832|0)>>2]=l[10942],l[f+12>>2]=b,f=l[10941],l[r>>2]=l[10940],l[r+4>>2]=f):rn(n+2832|0),b=l[4+(f=n+2840|0)>>2],l[(r=n+3080|0)>>2]=l[f>>2],l[r+4>>2]=b,r=l[n+2836>>2],l[n+3072>>2]=l[n+2832>>2],l[n+3076>>2]=r,f=l[a+12>>2],l[(r=n+1272|0)>>2]=l[a+8>>2],l[r+4>>2]=f,r=l[a+4>>2],l[n+1264>>2]=l[a>>2],l[n+1268>>2]=r,r=Gb(n+1264|0),b=l[a+12>>2],l[(f=n+1256|0)>>2]=l[a+8>>2],l[f+4>>2]=b,f=l[a+4>>2],l[n+1248>>2]=l[a>>2],l[n+1252>>2]=f,d=Gb(n+1248|0),b=l[a+12>>2],l[(f=n+1240|0)>>2]=l[a+8>>2],l[f+4>>2]=b,f=l[a+4>>2],l[n+1232>>2]=l[a>>2],l[n+1236>>2]=f,Nb(n+2768|0,n+1232|0),p=l[4+(b=n+2776|0)>>2],l[(f=n+1224|0)>>2]=l[b>>2],l[f+4>>2]=p,f=l[n+2772>>2],l[n+1216>>2]=l[n+2768>>2],l[n+1220>>2]=f,M=vn(n+1216|0)+d|0,p=Cb(20),l[p>>2]=0,l[p+4>>2]=0,l[p+16>>2]=0,l[p+8>>2]=0,l[p+12>>2]=0;;){b=l[a+12>>2],l[(f=n+1208|0)>>2]=l[a+8>>2],l[f+4>>2]=b,f=l[a+4>>2],l[n+1200>>2]=l[a>>2],l[n+1204>>2]=f;a:{i:{f:{if(!((0|(f=gr(l[n+3036>>2],Gb(n+1200|0),M,d,M,p)))>=0)){if(-1==(0|f))break a;l[n+1192>>2]=l[n+3032>>2],r=l[n+3028>>2],l[n+1184>>2]=l[n+3024>>2],l[n+1188>>2]=r,Si(n+2832|0,f,n+1184|0),d=l[4+(b=r=n+3080|0)>>2],l[(f=n+1176|0)>>2]=l[b>>2],l[f+4>>2]=d,f=l[n+3076>>2],l[n+1168>>2]=l[n+3072>>2],l[n+1172>>2]=f,zb(n+1168|0),jb(n+2064|0,41980),jb(n+2048|0,n+2832|0),d=l[4+(b=n+2072|0)>>2],l[(f=n+1160|0)>>2]=l[b>>2],l[f+4>>2]=d,d=l[4+(b=n+2056|0)>>2],l[(f=n+1144|0)>>2]=l[b>>2],l[f+4>>2]=d,f=l[n+2068>>2],l[n+1152>>2]=l[n+2064>>2],l[n+1156>>2]=f,f=l[n+2052>>2],l[n+1136>>2]=l[n+2048>>2],l[n+1140>>2]=f,Ok(n+2080|0,n+1152|0,n+1136|0),d=l[4+(b=n+2088|0)>>2],l[(f=n+1128|0)>>2]=l[b>>2],l[f+4>>2]=d,f=l[n+2084>>2],l[n+1120>>2]=l[n+2080>>2],l[n+1124>>2]=f,Hb(n+3056|0,n+1120|0),b=l[4+(f=n+3064|0)>>2],l[r>>2]=l[f>>2],l[r+4>>2]=b,r=l[n+3060>>2],l[n+3072>>2]=l[n+3056>>2],l[n+3076>>2]=r;break a}if(s){b=l[10939],l[8+(f=r=n+2832|0)>>2]=l[10938],l[f+12>>2]=b,f=l[10937],l[r>>2]=l[10936],l[r+4>>2]=f,b=l[4+(f=n+2840|0)>>2],l[(r=n+3080|0)>>2]=l[f>>2],l[r+4>>2]=b,r=l[n+2836>>2],l[n+3072>>2]=l[n+2832>>2],l[n+3076>>2]=r;break a}k:{if((0|(h=l[l[p+12>>2]>>2]))!=l[l[p+8>>2]>>2]){if(d=0,(0|h)<1)h=0;else if(h=1,!((0|(f=hf(k[0|r])))>=l[l[p+12>>2]>>2]))for(b=r+f|0,f=1;d=(h=(r+l[l[p+8>>2]>>2]|0)==(0|b))?f:d,f=h=h?1:f+1|0,(b=hf(k[0|b])+b|0)>>>0<r+l[l[p+12>>2]>>2]>>>0;);if(mn(n+2608|0),jb(n+2592|0,42003),l[(f=n+2576|0)>>2]=4,l[f+4>>2]=0,m[f+8>>3]=d>>>0,d=l[4+(b=n+2616|0)>>2],l[(f=n+1112|0)>>2]=l[b>>2],l[f+4>>2]=d,d=l[4+(b=n+2600|0)>>2],l[(f=n+1096|0)>>2]=l[b>>2],l[f+4>>2]=d,d=l[4+(b=n+2584|0)>>2],l[(f=n+1080|0)>>2]=l[b>>2],l[f+4>>2]=d,f=l[n+2612>>2],l[n+1104>>2]=l[n+2608>>2],l[n+1108>>2]=f,f=l[n+2596>>2],l[n+1088>>2]=l[n+2592>>2],l[n+1092>>2]=f,f=l[n+2580>>2],l[n+1072>>2]=l[n+2576>>2],l[n+1076>>2]=f,en(n+2832|0,n+1104|0,n+1088|0,n+1072|0),b=l[l[p+8>>2]>>2],d=l[l[p+12>>2]>>2],jb(n+2560|0,38495),l[(f=n+2544|0)>>2]=4,l[f+4>>2]=0,m[f+8>>3]=h>>>0,w=l[4+(h=y=n+2840|0)>>2],l[(f=n+1064|0)>>2]=l[h>>2],l[f+4>>2]=w,w=l[4+(h=n+2568|0)>>2],l[(f=n+1048|0)>>2]=l[h>>2],l[f+4>>2]=w,w=l[4+(h=n+2552|0)>>2],l[(f=n+1032|0)>>2]=l[h>>2],l[f+4>>2]=w,f=l[n+2836>>2],l[n+1056>>2]=l[n+2832>>2],l[n+1060>>2]=f,f=l[n+2564>>2],l[n+1040>>2]=l[n+2560>>2],l[n+1044>>2]=f,f=l[n+2548>>2],l[n+1024>>2]=l[n+2544>>2],l[n+1028>>2]=f,en(n+3056|0,n+1056|0,n+1040|0,n+1024|0),w=l[4+(f=h=n+3064|0)>>2],l[y>>2]=l[f>>2],l[y+4>>2]=w,f=l[n+3060>>2],l[n+2832>>2]=l[n+3056>>2],l[n+2836>>2]=f,jb(n+2528|0,42021),Uk(n+2512|0,r+l[l[p+8>>2]>>2]|0,d-b|0),f=l[y+4>>2],l[n+1016>>2]=l[y>>2],l[n+1020>>2]=f,b=l[4+(f=n+2536|0)>>2],l[n+1e3>>2]=l[f>>2],l[n+1004>>2]=b,b=l[4+(f=n+2520|0)>>2],l[n+984>>2]=l[f>>2],l[n+988>>2]=b,f=l[n+2836>>2],l[n+1008>>2]=l[n+2832>>2],l[n+1012>>2]=f,f=l[n+2532>>2],l[n+992>>2]=l[n+2528>>2],l[n+996>>2]=f,f=l[n+2516>>2],l[n+976>>2]=l[n+2512>>2],l[n+980>>2]=f,en(n+3056|0,n+1008|0,n+992|0,n+976|0),f=l[h+4>>2],l[y>>2]=l[h>>2],l[y+4>>2]=f,f=l[n+3060>>2],l[n+2832>>2]=l[n+3056>>2],l[n+2836>>2]=f,rn(n+3056|0),D=1,l[p+4>>2]>1)break k;break f}if(f=0,b=r,h)for(;f=f+1|0,(0|(b=hf(k[0|b])+b|0))!=(r+l[l[p+8>>2]>>2]|0););mn(n+2752|0),jb(n+2736|0,42003),l[(b=n+2720|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=f>>>0,b=l[4+(f=n+2760|0)>>2],l[n+344>>2]=l[f>>2],l[n+348>>2]=b,b=l[4+(f=n+2744|0)>>2],l[n+328>>2]=l[f>>2],l[n+332>>2]=b,b=l[4+(f=n+2728|0)>>2],l[n+312>>2]=l[f>>2],l[n+316>>2]=b,f=l[n+2756>>2],l[n+336>>2]=l[n+2752>>2],l[n+340>>2]=f,f=l[n+2740>>2],l[n+320>>2]=l[n+2736>>2],l[n+324>>2]=f,f=l[n+2724>>2],l[n+304>>2]=l[n+2720>>2],l[n+308>>2]=f,en(n+2832|0,n+336|0,n+320|0,n+304|0),jb(n+2704|0,38495),l[(f=n+2688|0)>>2]=4,l[f+4>>2]=0,m[f+8>>3]=0,h=l[4+(f=n+2840|0)>>2],l[n+296>>2]=l[f>>2],l[n+300>>2]=h,h=l[4+(b=n+2712|0)>>2],l[n+280>>2]=l[b>>2],l[n+284>>2]=h,h=l[4+(b=n+2696|0)>>2],l[n+264>>2]=l[b>>2],l[n+268>>2]=h,b=l[n+2836>>2],l[n+288>>2]=l[n+2832>>2],l[n+292>>2]=b,b=l[n+2708>>2],l[n+272>>2]=l[n+2704>>2],l[n+276>>2]=b,b=l[n+2692>>2],l[n+256>>2]=l[n+2688>>2],l[n+260>>2]=b,en(n+3056|0,n+288|0,n+272|0,n+256|0),y=l[4+(b=n+3064|0)>>2],l[f>>2]=l[b>>2],l[f+4>>2]=y,h=l[n+3060>>2],l[n+2832>>2]=l[n+3056>>2],l[n+2836>>2]=h,jb(n+2672|0,42021),jb(n+2656|0,40961),h=l[f+4>>2],l[n+248>>2]=l[f>>2],l[n+252>>2]=h,y=l[4+(h=n+2680|0)>>2],l[n+232>>2]=l[h>>2],l[n+236>>2]=y,y=l[4+(h=n+2664|0)>>2],l[n+216>>2]=l[h>>2],l[n+220>>2]=y,h=l[n+2836>>2],l[n+240>>2]=l[n+2832>>2],l[n+244>>2]=h,h=l[n+2676>>2],l[n+224>>2]=l[n+2672>>2],l[n+228>>2]=h,h=l[n+2660>>2],l[n+208>>2]=l[n+2656>>2],l[n+212>>2]=h,en(n+3056|0,n+240|0,n+224|0,n+208|0),h=l[b+4>>2],l[f>>2]=l[b>>2],l[f+4>>2]=h,h=l[n+3060>>2],l[n+2832>>2]=l[n+3056>>2],l[n+2836>>2]=h,jb(n+2640|0,42051),rn(n+2624|0),h=l[f+4>>2],l[n+200>>2]=l[f>>2],l[n+204>>2]=h,y=l[4+(h=n+2648|0)>>2],l[n+184>>2]=l[h>>2],l[n+188>>2]=y,y=l[4+(h=n+2632|0)>>2],l[n+168>>2]=l[h>>2],l[n+172>>2]=y,h=l[n+2836>>2],l[n+192>>2]=l[n+2832>>2],l[n+196>>2]=h,h=l[n+2644>>2],l[n+176>>2]=l[n+2640>>2],l[n+180>>2]=h,h=l[n+2628>>2],l[n+160>>2]=l[n+2624>>2],l[n+164>>2]=h,en(n+3056|0,n+192|0,n+176|0,n+160|0),h=l[b+4>>2],y=l[b>>2],l[f>>2]=y,l[f+4>>2]=h,D=l[4+(f=n+3080|0)>>2],l[n+152>>2]=l[f>>2],l[n+156>>2]=D,l[n+136>>2]=y,l[n+140>>2]=h,h=l[n+3060>>2],y=l[n+3056>>2],l[n+2832>>2]=y,l[n+2836>>2]=h,w=l[n+3076>>2],l[n+144>>2]=l[n+3072>>2],l[n+148>>2]=w,l[n+128>>2]=y,l[n+132>>2]=h,Vb(n+3056|0,n+144|0,n+128|0),h=l[b+4>>2],l[f>>2]=l[b>>2],l[f+4>>2]=h,f=l[n+3060>>2],l[n+3072>>2]=l[n+3056>>2],l[n+3076>>2]=f,d=d+1|0;break i}for(;;){if((0|(f=l[(w=D<<2)+l[p+8>>2]>>2]))==(0|(_=l[l[p+12>>2]+w>>2]))){k:{if((b=f+1|0)>>>0>1)for(f=0,b=r;f=f+1|0,(0|(b=hf(k[0|b])+b|0))!=(r+l[l[p+8>>2]+w>>2]|0););else if(b-1){mn(n+2464|0),jb(n+2448|0,42003),l[(f=n+2432|0)>>2]=4,l[f+4>>2]=0,m[f+8>>3]=-1,b=l[4+(f=n+2472|0)>>2],l[n+744>>2]=l[f>>2],l[n+748>>2]=b,b=l[4+(f=n+2456|0)>>2],l[n+728>>2]=l[f>>2],l[n+732>>2]=b,b=l[4+(f=n+2440|0)>>2],l[n+712>>2]=l[f>>2],l[n+716>>2]=b,f=l[n+2468>>2],l[n+736>>2]=l[n+2464>>2],l[n+740>>2]=f,f=l[n+2452>>2],l[n+720>>2]=l[n+2448>>2],l[n+724>>2]=f,f=l[n+2436>>2],l[n+704>>2]=l[n+2432>>2],l[n+708>>2]=f,en(n+2480|0,n+736|0,n+720|0,n+704|0),E=l[4+(b=n+2488|0)>>2],l[(f=n+2504|0)>>2]=l[b>>2],l[f+4>>2]=E,d=l[n+2484>>2],l[n+2496>>2]=l[n+2480>>2],l[n+2500>>2]=d,jb(n+2416|0,42021),E=l[10947],l[8+(d=n+2400|0)>>2]=l[10946],l[d+12>>2]=E,w=l[10945],l[d>>2]=l[10944],l[d+4>>2]=w,d=l[f+4>>2],l[n+696>>2]=l[f>>2],l[n+700>>2]=d,w=l[4+(d=n+2424|0)>>2],l[n+680>>2]=l[d>>2],l[n+684>>2]=w,w=l[4+(d=n+2408|0)>>2],l[n+664>>2]=l[d>>2],l[n+668>>2]=w,d=l[n+2500>>2],l[n+688>>2]=l[n+2496>>2],l[n+692>>2]=d,d=l[n+2420>>2],l[n+672>>2]=l[n+2416>>2],l[n+676>>2]=d,d=l[n+2404>>2],l[n+656>>2]=l[n+2400>>2],l[n+660>>2]=d,en(n+2480|0,n+688|0,n+672|0,n+656|0);break k}mn(n+2384|0),jb(n+2368|0,42003),l[(b=n+2352|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=f>>>0,b=l[4+(f=n+2392|0)>>2],l[n+648>>2]=l[f>>2],l[n+652>>2]=b,b=l[4+(f=n+2376|0)>>2],l[n+632>>2]=l[f>>2],l[n+636>>2]=b,b=l[4+(f=n+2360|0)>>2],l[n+616>>2]=l[f>>2],l[n+620>>2]=b,f=l[n+2388>>2],l[n+640>>2]=l[n+2384>>2],l[n+644>>2]=f,f=l[n+2372>>2],l[n+624>>2]=l[n+2368>>2],l[n+628>>2]=f,f=l[n+2356>>2],l[n+608>>2]=l[n+2352>>2],l[n+612>>2]=f,en(n+2480|0,n+640|0,n+624|0,n+608|0),E=l[4+(b=n+2488|0)>>2],l[(f=n+2504|0)>>2]=l[b>>2],l[f+4>>2]=E,d=l[n+2484>>2],l[n+2496>>2]=l[n+2480>>2],l[n+2500>>2]=d,jb(n+2336|0,42021),jb(n+2320|0,40961),d=l[f+4>>2],l[n+600>>2]=l[f>>2],l[n+604>>2]=d,w=l[4+(d=n+2344|0)>>2],l[n+584>>2]=l[d>>2],l[n+588>>2]=w,w=l[4+(d=n+2328|0)>>2],l[n+568>>2]=l[d>>2],l[n+572>>2]=w,d=l[n+2500>>2],l[n+592>>2]=l[n+2496>>2],l[n+596>>2]=d,d=l[n+2340>>2],l[n+576>>2]=l[n+2336>>2],l[n+580>>2]=d,d=l[n+2324>>2],l[n+560>>2]=l[n+2320>>2],l[n+564>>2]=d,en(n+2480|0,n+592|0,n+576|0,n+560|0)}d=l[b+4>>2],l[f>>2]=l[b>>2],l[f+4>>2]=d,f=l[n+2484>>2],l[n+2496>>2]=l[n+2480>>2],l[n+2500>>2]=f,jb(n+2304|0,38495),l[(f=n+2288|0)>>2]=4,l[f+4>>2]=0,m[f+8>>3]=0,d=l[4+(f=n+2504|0)>>2],l[n+552>>2]=l[f>>2],l[n+556>>2]=d,d=l[4+(b=n+2312|0)>>2],l[n+536>>2]=l[b>>2],l[n+540>>2]=d,d=l[4+(b=n+2296|0)>>2],l[n+520>>2]=l[b>>2],l[n+524>>2]=d,b=l[n+2500>>2],l[n+544>>2]=l[n+2496>>2],l[n+548>>2]=b,b=l[n+2308>>2],l[n+528>>2]=l[n+2304>>2],l[n+532>>2]=b,b=l[n+2292>>2],l[n+512>>2]=l[n+2288>>2],l[n+516>>2]=b,en(n+2480|0,n+544|0,n+528|0,n+512|0),w=l[4+(b=n+2488|0)>>2],l[f>>2]=l[b>>2],l[f+4>>2]=w,d=l[n+2484>>2],l[n+2496>>2]=l[n+2480>>2],l[n+2500>>2]=d,jb(n+2272|0,42069),E=l[10947],l[8+(d=n+2256|0)>>2]=l[10946],l[d+12>>2]=E,w=l[10945],l[d>>2]=l[10944],l[d+4>>2]=w,d=l[f+4>>2],l[n+504>>2]=l[f>>2],l[n+508>>2]=d,w=l[4+(d=n+2280|0)>>2],l[n+488>>2]=l[d>>2],l[n+492>>2]=w,w=l[4+(d=n+2264|0)>>2],l[n+472>>2]=l[d>>2],l[n+476>>2]=w,d=l[n+2500>>2],l[n+496>>2]=l[n+2496>>2],l[n+500>>2]=d,d=l[n+2276>>2],l[n+480>>2]=l[n+2272>>2],l[n+484>>2]=d,d=l[n+2260>>2],l[n+464>>2]=l[n+2256>>2],l[n+468>>2]=d,en(n+2480|0,n+496|0,n+480|0,n+464|0),d=l[b+4>>2],w=l[b>>2],l[f>>2]=w,l[f+4>>2]=d,f=l[h+4>>2],l[n+456>>2]=l[h>>2],l[n+460>>2]=f,l[n+440>>2]=w,l[n+444>>2]=d,f=l[n+2484>>2],d=l[n+2480>>2],l[n+2496>>2]=d,l[n+2500>>2]=f,w=l[n+3060>>2],l[n+448>>2]=l[n+3056>>2],l[n+452>>2]=w,l[n+432>>2]=d,l[n+436>>2]=f,Vb(n+2480|0,n+448|0,n+432|0),f=l[b+4>>2],l[h>>2]=l[b>>2],l[h+4>>2]=f}else{if(d=0,b=r,E=0,S=0,_)for(;S=hf(k[0|b]),E=(_=(r+f|0)==(0|b))?d:E,f=l[l[p+8>>2]+w>>2],d=_?1:d+1|0,(0|(b=b+S|0))!=(r+(S=l[l[p+12>>2]+w>>2])|0););mn(n+2240|0),jb(n+2224|0,42003),l[(b=n+2208|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=E>>>0,E=l[4+(b=n+2248|0)>>2],l[n+968>>2]=l[b>>2],l[n+972>>2]=E,E=l[4+(b=n+2232|0)>>2],l[n+952>>2]=l[b>>2],l[n+956>>2]=E,E=l[4+(b=n+2216|0)>>2],l[n+936>>2]=l[b>>2],l[n+940>>2]=E,b=l[n+2244>>2],l[n+960>>2]=l[n+2240>>2],l[n+964>>2]=b,b=l[n+2228>>2],l[n+944>>2]=l[n+2224>>2],l[n+948>>2]=b,b=l[n+2212>>2],l[n+928>>2]=l[n+2208>>2],l[n+932>>2]=b,en(n+2496|0,n+960|0,n+944|0,n+928|0),jb(n+2192|0,38495),l[(b=n+2176|0)>>2]=4,l[b+4>>2]=0,m[b+8>>3]=d>>>0,E=l[4+(b=n+2504|0)>>2],l[n+920>>2]=l[b>>2],l[n+924>>2]=E,E=l[4+(d=n+2200|0)>>2],l[n+904>>2]=l[d>>2],l[n+908>>2]=E,E=l[4+(d=n+2184|0)>>2],l[n+888>>2]=l[d>>2],l[n+892>>2]=E,d=l[n+2500>>2],l[n+912>>2]=l[n+2496>>2],l[n+916>>2]=d,d=l[n+2196>>2],l[n+896>>2]=l[n+2192>>2],l[n+900>>2]=d,d=l[n+2180>>2],l[n+880>>2]=l[n+2176>>2],l[n+884>>2]=d,en(n+2480|0,n+912|0,n+896|0,n+880|0),_=l[4+(d=n+2488|0)>>2],l[b>>2]=l[d>>2],l[b+4>>2]=_,E=l[n+2484>>2],l[n+2496>>2]=l[n+2480>>2],l[n+2500>>2]=E,jb(n+2160|0,42021),Uk(n+2144|0,r+l[l[p+8>>2]+w>>2]|0,S-f|0),f=l[b+4>>2],l[n+872>>2]=l[b>>2],l[n+876>>2]=f,w=l[4+(f=n+2168|0)>>2],l[n+856>>2]=l[f>>2],l[n+860>>2]=w,w=l[4+(f=n+2152|0)>>2],l[n+840>>2]=l[f>>2],l[n+844>>2]=w,f=l[n+2500>>2],l[n+864>>2]=l[n+2496>>2],l[n+868>>2]=f,f=l[n+2164>>2],l[n+848>>2]=l[n+2160>>2],l[n+852>>2]=f,f=l[n+2148>>2],l[n+832>>2]=l[n+2144>>2],l[n+836>>2]=f,en(n+2480|0,n+864|0,n+848|0,n+832|0),f=l[d+4>>2],l[b>>2]=l[d>>2],l[b+4>>2]=f,f=l[n+2484>>2],l[n+2496>>2]=l[n+2480>>2],l[n+2500>>2]=f,jb(n+2128|0,42069),E=l[10947],l[8+(f=n+2112|0)>>2]=l[10946],l[f+12>>2]=E,w=l[10945],l[f>>2]=l[10944],l[f+4>>2]=w,f=l[b+4>>2],l[n+824>>2]=l[b>>2],l[n+828>>2]=f,w=l[4+(f=n+2136|0)>>2],l[n+808>>2]=l[f>>2],l[n+812>>2]=w,w=l[4+(f=n+2120|0)>>2],l[n+792>>2]=l[f>>2],l[n+796>>2]=w,f=l[n+2500>>2],l[n+816>>2]=l[n+2496>>2],l[n+820>>2]=f,f=l[n+2132>>2],l[n+800>>2]=l[n+2128>>2],l[n+804>>2]=f,f=l[n+2116>>2],l[n+784>>2]=l[n+2112>>2],l[n+788>>2]=f,en(n+2480|0,n+816|0,n+800|0,n+784|0),f=l[d+4>>2],w=l[d>>2],l[b>>2]=w,l[b+4>>2]=f,b=l[h+4>>2],l[n+776>>2]=l[h>>2],l[n+780>>2]=b,l[n+760>>2]=w,l[n+764>>2]=f,f=l[n+2484>>2],b=l[n+2480>>2],l[n+2496>>2]=b,l[n+2500>>2]=f,w=l[n+3060>>2],l[n+768>>2]=l[n+3056>>2],l[n+772>>2]=w,l[n+752>>2]=b,l[n+756>>2]=f,Vb(n+2480|0,n+768|0,n+752|0),f=l[d+4>>2],l[h>>2]=l[d>>2],l[h+4>>2]=f}if(f=l[n+2484>>2],l[n+3056>>2]=l[n+2480>>2],l[n+3060>>2]=f,!((0|(D=D+1|0))<l[p+4>>2]))break}}t=l[n+3036>>2],c=n+3056|0,o=void 0,u=void 0,ne=o=ne-32|0,u=l[t+72>>2],l[o+20>>2]=0,u&&(l[o+16>>2]=c,l[o+8>>2]=3,l[o+12>>2]=t,l[o+24>>2]=l[t+56>>2],Lf(u,11,o+8|0)),ne=o+32|0,jb(n+2096|0,42051),f=l[y+4>>2],l[n+424>>2]=l[y>>2],l[n+428>>2]=f,b=l[4+(f=n+2104|0)>>2],l[n+408>>2]=l[f>>2],l[n+412>>2]=b,f=l[h+4>>2],l[n+392>>2]=l[h>>2],l[n+396>>2]=f,f=l[n+2836>>2],l[n+416>>2]=l[n+2832>>2],l[n+420>>2]=f,f=l[n+2100>>2],l[n+400>>2]=l[n+2096>>2],l[n+404>>2]=f,f=l[n+3060>>2],l[n+384>>2]=l[n+3056>>2],l[n+388>>2]=f,en(n+2496|0,n+416|0,n+400|0,n+384|0),b=l[4+(f=n+2504|0)>>2],h=l[f>>2],l[y>>2]=h,l[y+4>>2]=b,w=l[4+(d=n+3080|0)>>2],l[n+376>>2]=l[d>>2],l[n+380>>2]=w,l[n+360>>2]=h,l[n+364>>2]=b,b=l[n+2500>>2],h=l[n+2496>>2],l[n+2832>>2]=h,l[n+2836>>2]=b,y=l[n+3076>>2],l[n+368>>2]=l[n+3072>>2],l[n+372>>2]=y,l[n+352>>2]=h,l[n+356>>2]=b,Vb(n+2496|0,n+368|0,n+352|0),b=l[f+4>>2],l[d>>2]=l[f>>2],l[d+4>>2]=b,f=l[n+2500>>2],l[n+3072>>2]=l[n+2496>>2],l[n+3076>>2]=f,f=l[l[p+12>>2]>>2],li(p,0),d=r+f|0}if(F&&(0|d)!=(0|M))continue}break}li(p,1),(r=l[n+3036>>2])&&($r(r),Lb(r)),r=l[a+12>>2],l[n+120>>2]=l[a+8>>2],l[n+124>>2]=r,r=l[a+4>>2],l[n+112>>2]=l[a>>2],l[n+116>>2]=r,zb(n+112|0),r=l[i+12>>2],l[n+104>>2]=l[i+8>>2],l[n+108>>2]=r,r=l[i+4>>2],l[n+96>>2]=l[i>>2],l[n+100>>2]=r,zb(n+96|0),a=l[4+(r=n+3080|0)>>2],l[e+8>>2]=l[r>>2],l[e+12>>2]=a,r=l[n+3076>>2],l[e>>2]=l[n+3072>>2],l[e+4>>2]=r;break e}b=l[a+12>>2],l[(r=n+1688|0)>>2]=l[a+8>>2],l[r+4>>2]=b,r=l[a+4>>2],l[n+1680>>2]=l[a>>2],l[n+1684>>2]=r,zb(n+1680|0),a=l[i+12>>2],l[(r=n+1672|0)>>2]=l[i+8>>2],l[r+4>>2]=a,r=l[i+4>>2],l[n+1664>>2]=l[i>>2],l[n+1668>>2]=r,zb(n+1664|0),i=l[f+12>>2],l[(r=n+3064|0)>>2]=l[f+8>>2],l[r+4>>2]=i,a=l[f+4>>2],l[n+3056>>2]=l[f>>2],l[n+3060>>2]=a,i=l[f+12>>2],l[(a=n+1656|0)>>2]=l[f+8>>2],l[a+4>>2]=i,a=l[f+4>>2],l[n+1648>>2]=l[f>>2],l[n+1652>>2]=a,a=Xb(15&v[n+1648|0]),f=l[r+4>>2],l[(i=n+1640|0)>>2]=l[r>>2],l[i+4>>2]=f,i=l[n+3060>>2],l[n+1632>>2]=l[n+3056>>2],l[n+1636>>2]=i,Nb(n+3072|0,n+1632|0),b=l[4+(f=n+3080|0)>>2],l[(i=n+1624|0)>>2]=l[f>>2],l[i+4>>2]=b,i=l[n+3076>>2],l[n+1616>>2]=l[n+3072>>2],l[n+1620>>2]=i,i=Jb(n+1616|0,n+2496|0,15),l[n+1608>>2]=41911,l[n+1604>>2]=i,l[n+1600>>2]=a,Yb(n+2832|0,39550,n+1600|0),f=l[4+(i=n+2840|0)>>2],l[(a=n+1592|0)>>2]=l[i>>2],l[a+4>>2]=f,a=l[n+2836>>2],l[n+1584>>2]=l[n+2832>>2],l[n+1588>>2]=a,Hb(e,n+1584|0),a=l[r+4>>2],l[(e=n+1576|0)>>2]=l[r>>2],l[e+4>>2]=a,e=l[n+3060>>2],l[n+1568>>2]=l[n+3056>>2],l[n+1572>>2]=e,zb(n+1568|0)}else b=l[a+12>>2],l[(r=n+1848|0)>>2]=l[a+8>>2],l[r+4>>2]=b,r=l[a+4>>2],l[n+1840>>2]=l[a>>2],l[n+1844>>2]=r,zb(n+1840|0),a=l[f+12>>2],l[(r=n+1832|0)>>2]=l[f+8>>2],l[r+4>>2]=a,r=l[f+4>>2],l[n+1824>>2]=l[f>>2],l[n+1828>>2]=r,zb(n+1824|0),f=l[i+12>>2],l[(r=n+3064|0)>>2]=l[i+8>>2],l[r+4>>2]=f,a=l[i+4>>2],l[n+3056>>2]=l[i>>2],l[n+3060>>2]=a,f=l[i+12>>2],l[(a=n+1816|0)>>2]=l[i+8>>2],l[a+4>>2]=f,a=l[i+4>>2],l[n+1808>>2]=l[i>>2],l[n+1812>>2]=a,a=Xb(15&v[n+1808|0]),f=l[r+4>>2],l[(i=n+1800|0)>>2]=l[r>>2],l[i+4>>2]=f,i=l[n+3060>>2],l[n+1792>>2]=l[n+3056>>2],l[n+1796>>2]=i,Nb(n+3072|0,n+1792|0),b=l[4+(f=n+3080|0)>>2],l[(i=n+1784|0)>>2]=l[f>>2],l[i+4>>2]=b,i=l[n+3076>>2],l[n+1776>>2]=l[n+3072>>2],l[n+1780>>2]=i,i=Jb(n+1776|0,n+2496|0,15),l[n+1768>>2]=41911,l[n+1764>>2]=i,l[n+1760>>2]=a,Yb(n+2832|0,39550,n+1760|0),f=l[4+(i=n+2840|0)>>2],l[(a=n+1752|0)>>2]=l[i>>2],l[a+4>>2]=f,a=l[n+2836>>2],l[n+1744>>2]=l[n+2832>>2],l[n+1748>>2]=a,Hb(e,n+1744|0),a=l[r+4>>2],l[(e=n+1736|0)>>2]=l[r>>2],l[e+4>>2]=a,e=l[n+3060>>2],l[n+1728>>2]=l[n+3056>>2],l[n+1732>>2]=e,zb(n+1728|0);else b=l[i+12>>2],l[(r=n+1992|0)>>2]=l[i+8>>2],l[r+4>>2]=b,r=l[i+4>>2],l[n+1984>>2]=l[i>>2],l[n+1988>>2]=r,zb(n+1984|0),i=l[f+12>>2],l[(r=n+1976|0)>>2]=l[f+8>>2],l[r+4>>2]=i,r=l[f+4>>2],l[n+1968>>2]=l[f>>2],l[n+1972>>2]=r,zb(n+1968|0),f=l[a+12>>2],l[(r=n+3064|0)>>2]=l[a+8>>2],l[r+4>>2]=f,i=l[a+4>>2],l[n+3056>>2]=l[a>>2],l[n+3060>>2]=i,f=l[a+12>>2],l[(i=n+1960|0)>>2]=l[a+8>>2],l[i+4>>2]=f,i=l[a+4>>2],l[n+1952>>2]=l[a>>2],l[n+1956>>2]=i,a=Xb(15&v[n+1952|0]),f=l[r+4>>2],l[(i=n+1944|0)>>2]=l[r>>2],l[i+4>>2]=f,i=l[n+3060>>2],l[n+1936>>2]=l[n+3056>>2],l[n+1940>>2]=i,Nb(n+3072|0,n+1936|0),b=l[4+(f=n+3080|0)>>2],l[(i=n+1928|0)>>2]=l[f>>2],l[i+4>>2]=b,i=l[n+3076>>2],l[n+1920>>2]=l[n+3072>>2],l[n+1924>>2]=i,i=Jb(n+1920|0,n+2496|0,15),l[n+1912>>2]=41865,l[n+1908>>2]=i,l[n+1904>>2]=a,Yb(n+2832|0,39550,n+1904|0),f=l[4+(i=n+2840|0)>>2],l[(a=n+1896|0)>>2]=l[i>>2],l[a+4>>2]=f,a=l[n+2836>>2],l[n+1888>>2]=l[n+2832>>2],l[n+1892>>2]=a,Hb(e,n+1888|0),a=l[r+4>>2],l[(e=n+1880|0)>>2]=l[r>>2],l[e+4>>2]=a,e=l[n+3060>>2],l[n+1872>>2]=l[n+3056>>2],l[n+1876>>2]=e,zb(n+1872|0);ne=n+3088|0},f[126]=function(e,r,a){e|=0,r|=0;var i,f=0;ne=i=ne-96|0,f=l[12+(a|=0)>>2],l[i+56>>2]=l[a+8>>2],l[i+60>>2]=f,f=l[a+4>>2],l[i+48>>2]=l[a>>2],l[i+52>>2]=f,5==(15&v[i+48|0])?(f=l[a+12>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=f,f=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=f,Br(e,r,i)):(jb(i- -64|0,42077),r=l[i+76>>2],l[i+88>>2]=l[i+72>>2],l[i+92>>2]=r,r=l[i+68>>2],l[i+80>>2]=l[i+64>>2],l[i+84>>2]=r,r=l[a+12>>2],l[i+40>>2]=l[a+8>>2],l[i+44>>2]=r,r=l[a+4>>2],l[i+32>>2]=l[a>>2],l[i+36>>2]=r,zb(i+32|0),r=l[i+92>>2],l[i+24>>2]=l[i+88>>2],l[i+28>>2]=r,r=l[i+84>>2],l[i+16>>2]=l[i+80>>2],l[i+20>>2]=r,Hb(e,i+16|0)),ne=i+96|0},f[127]=function(e,r,a){e|=0,r|=0;var i,k=0;ne=i=ne-176|0,k=l[12+(a|=0)>>2],l[i+96>>2]=l[a+8>>2],l[i+100>>2]=k,k=l[a+4>>2],l[i+88>>2]=l[a>>2],l[i+92>>2]=k,zb(i+88|0),l[i+172>>2]=l[r+168>>2],l[i+168>>2]=l[r+172>>2],(a=l[i+172>>2])?(f[a](i+136|0,r,l[i+168>>2]),r=l[i+148>>2],l[i+80>>2]=l[i+144>>2],l[i+84>>2]=r,r=l[i+140>>2],l[i+72>>2]=l[i+136>>2],l[i+76>>2]=r,15&v[i+72|0]||(a=l[i+148>>2],l[(r=i- -64|0)>>2]=l[i+144>>2],l[r+4>>2]=a,r=l[i+140>>2],l[i+56>>2]=l[i+136>>2],l[i+60>>2]=r,Nb(i+120|0,i+56|0),r=l[i+132>>2],l[i+48>>2]=l[i+128>>2],l[i+52>>2]=r,r=l[i+124>>2],l[i+40>>2]=l[i+120>>2],l[i+44>>2]=r,rb(i+40|0))?(r=l[i+140>>2],l[e>>2]=l[i+136>>2],l[e+4>>2]=r,r=l[i+148>>2],l[e+8>>2]=l[i+144>>2],l[e+12>>2]=r):(jb(i+104|0,42129),r=l[i+116>>2],l[i+32>>2]=l[i+112>>2],l[i+36>>2]=r,r=l[i+108>>2],l[i+24>>2]=l[i+104>>2],l[i+28>>2]=r,Hb(e,i+24|0))):(jb(i+152|0,42129),r=l[i+164>>2],l[i+16>>2]=l[i+160>>2],l[i+20>>2]=r,r=l[i+156>>2],l[i+8>>2]=l[i+152>>2],l[i+12>>2]=r,Hb(e,i+8|0)),ne=i+176|0},f[128]=function(e,r,a){e|=0,r|=0,a|=0;var i,k,b=0;ne=i=ne+-64|0,l[i+60>>2]=l[r+176>>2],l[i+56>>2]=l[r+180>>2],(k=l[i+60>>2])&&(b=l[(r=a)+12>>2],l[i+32>>2]=l[r+8>>2],l[i+36>>2]=b,b=l[r+4>>2],l[i+24>>2]=l[r>>2],l[i+28>>2]=b,r=l[i+56>>2],Nb(i+40|0,i+24|0),b=l[i+52>>2],l[i+16>>2]=l[i+48>>2],l[i+20>>2]=b,b=l[i+44>>2],l[i+8>>2]=l[i+40>>2],l[i+12>>2]=b,f[k](r,i+8|0)),r=l[a+4>>2],l[e>>2]=l[a>>2],l[e+4>>2]=r,r=l[a+12>>2],l[e+8>>2]=l[a+8>>2],l[e+12>>2]=r,ne=i- -64|0},f[129]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-48|0,i=l[12+(a|=0)>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,Nb(r+32|0,r+16|0),i=l[r+44>>2],l[r+8>>2]=l[r+40>>2],l[r+12>>2]=i,i=l[r+36>>2],l[r>>2]=l[r+32>>2],l[r+4>>2]=i,ba(r,l[75398],0),i=l[a+12>>2],l[e+8>>2]=l[a+8>>2],l[e+12>>2]=i,i=l[a+4>>2],l[e>>2]=l[a>>2],l[e+4>>2]=i,ne=r+48|0},f[130]=function(e,r,a,i){e|=0,r|=0,i|=0;var f=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0;ne=r=ne-368|0,f=l[12+(a|=0)>>2],l[r+232>>2]=l[a+8>>2],l[r+236>>2]=f,f=l[a+4>>2],l[r+224>>2]=l[a>>2],l[r+228>>2]=f,5==(15&v[r+224|0])&&(f=l[i+12>>2],l[r+216>>2]=l[i+8>>2],l[r+220>>2]=f,f=l[i+4>>2],l[r+208>>2]=l[i>>2],l[r+212>>2]=f,5==(15&v[r+208|0]))?(l[r+296>>2]=8,l[r+300>>2]=367,l[r+312>>2]=0,l[r+304>>2]=0,l[r+308>>2]=0,l[r+288>>2]=0,l[r+292>>2]=0,l[r+280>>2]=0,l[r+284>>2]=0,l[r+272>>2]=0,l[r+276>>2]=0,f=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=f,f=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=f,b=Gb(r+144|0),f=l[i+12>>2],l[r+136>>2]=l[i+8>>2],l[r+140>>2]=f,f=l[i+4>>2],l[r+128>>2]=l[i>>2],l[r+132>>2]=f,t=Gb(r+128|0),(f=0|W(0|b,0|t,r+272|0))&&!(n=k[0|f])|32==(0|n)|n+-9>>>0<5?(b=l[i+12>>2],l[r+120>>2]=l[i+8>>2],l[r+124>>2]=b,b=l[i+4>>2],l[r+112>>2]=l[i>>2],l[r+116>>2]=b,zb(r+112|0),8==l[r+296>>2]&&(t=l[r+284>>2])&&((b=l[r+288>>2])>>>0>11||(o=(0|b)<2,u=(i=(0|(n=l[r+292>>2]+1900|0))/100|0)<<1,c=n=(n-w(i,100)|0)-o|0,s=D(2.6*+(b+(o?11:-1)|0)-.2),b=c+(((b=g(s)<2147483648?~~s:-2147483648)+t|0)-u|0)|0,s=D(.25*+(0|i)),t=(i=g(s)<2147483648?~~s:-2147483648)+b|0,c=r,s=D(.25*+(0|n)),i=((i=g(s)<2147483648?~~s:-2147483648)+t|0)%7|0,l[c+296>>2]=(0|i)<0?i+7|0:i)),367==l[r+300>>2]&&(n=l[r+284>>2])&&((b=l[r+288>>2])>>>0>11||(i=r,c=l[42272+(b<<2)>>2],b=(0|b)>=2?0-(0!=((0|(b=l[r+292>>2]+1900|0))%400|0)&(!((0|b)%100)|0!=(3&b)))|0:-1,l[i+300>>2]=c+(b+n|0))),Ea(r+352|0,r+272|0),v[0|f]&&(jb(r+240|0,f),i=l[r+364>>2],l[r+104>>2]=l[r+360>>2],l[r+108>>2]=i,i=l[r+252>>2],l[r+88>>2]=l[r+248>>2],l[r+92>>2]=i,i=l[r+356>>2],l[r+96>>2]=l[r+352>>2],l[r+100>>2]=i,i=l[r+244>>2],l[r+80>>2]=l[r+240>>2],l[r+84>>2]=i,Vb(r+336|0,r+96|0,r+80|0),i=l[r+348>>2],l[r+360>>2]=l[r+344>>2],l[r+364>>2]=i,i=l[r+340>>2],l[r+352>>2]=l[r+336>>2],l[r+356>>2]=i),i=l[a+12>>2],l[r+72>>2]=l[a+8>>2],l[r+76>>2]=i,i=l[a+4>>2],l[r+64>>2]=l[a>>2],l[r+68>>2]=i,zb(r- -64|0),a=l[r+364>>2],l[e+8>>2]=l[r+360>>2],l[e+12>>2]=a,a=l[r+356>>2],l[e>>2]=l[r+352>>2],l[e+4>>2]=a):(l[r+52>>2]=t,l[r+48>>2]=b,Yb(r+256|0,42215,r+48|0),f=l[r+268>>2],l[r+360>>2]=l[r+264>>2],l[r+364>>2]=f,f=l[r+260>>2],l[r+352>>2]=l[r+256>>2],l[r+356>>2]=f,f=l[i+12>>2],l[r+344>>2]=l[i+8>>2],l[r+348>>2]=f,f=l[i+4>>2],l[r+336>>2]=l[i>>2],l[r+340>>2]=f,i=l[a+12>>2],l[r+40>>2]=l[a+8>>2],l[r+44>>2]=i,i=l[a+4>>2],l[r+32>>2]=l[a>>2],l[r+36>>2]=i,zb(r+32|0),a=l[r+348>>2],l[r+24>>2]=l[r+344>>2],l[r+28>>2]=a,a=l[r+340>>2],l[r+16>>2]=l[r+336>>2],l[r+20>>2]=a,zb(r+16|0),a=l[r+364>>2],l[r+8>>2]=l[r+360>>2],l[r+12>>2]=a,a=l[r+356>>2],l[r>>2]=l[r+352>>2],l[r+4>>2]=a,Hb(e,r))):(jb(r+320|0,42160),f=l[r+332>>2],l[r+280>>2]=l[r+328>>2],l[r+284>>2]=f,f=l[r+324>>2],l[r+272>>2]=l[r+320>>2],l[r+276>>2]=f,f=l[i+12>>2],l[r+360>>2]=l[i+8>>2],l[r+364>>2]=f,f=l[i+4>>2],l[r+352>>2]=l[i>>2],l[r+356>>2]=f,i=l[a+12>>2],l[r+200>>2]=l[a+8>>2],l[r+204>>2]=i,i=l[a+4>>2],l[r+192>>2]=l[a>>2],l[r+196>>2]=i,zb(r+192|0),a=l[r+364>>2],l[r+184>>2]=l[r+360>>2],l[r+188>>2]=a,a=l[r+356>>2],l[r+176>>2]=l[r+352>>2],l[r+180>>2]=a,zb(r+176|0),a=l[r+284>>2],l[r+168>>2]=l[r+280>>2],l[r+172>>2]=a,a=l[r+276>>2],l[r+160>>2]=l[r+272>>2],l[r+164>>2]=a,Hb(e,r+160|0)),ne=r+368|0},f[131]=function(e,r,a,i){e|=0,r|=0,i|=0;var f,k=0,b=0;ne=f=ne-384|0,k=l[12+(a|=0)>>2],l[f+248>>2]=l[a+8>>2],l[f+252>>2]=k,k=l[a+4>>2],l[f+240>>2]=l[a>>2],l[f+244>>2]=k;e:{if(4!=(15&v[f+240|0])){if(r=l[a+12>>2],l[f+232>>2]=l[a+8>>2],l[f+236>>2]=r,r=l[a+4>>2],l[f+224>>2]=l[a>>2],l[f+228>>2]=r,6!=(15&v[f+224|0])){jb(f+352|0,42320),r=l[f+364>>2],l[f+296>>2]=l[f+360>>2],l[f+300>>2]=r,r=l[f+356>>2],l[f+288>>2]=l[f+352>>2],l[f+292>>2]=r,r=l[i+12>>2],l[f+376>>2]=l[i+8>>2],l[f+380>>2]=r,r=l[i+4>>2],l[f+368>>2]=l[i>>2],l[f+372>>2]=r,r=l[a+12>>2],l[f+216>>2]=l[a+8>>2],l[f+220>>2]=r,r=l[a+4>>2],l[f+208>>2]=l[a>>2],l[f+212>>2]=r,zb(f+208|0),r=l[f+380>>2],l[f+200>>2]=l[f+376>>2],l[f+204>>2]=r,r=l[f+372>>2],l[f+192>>2]=l[f+368>>2],l[f+196>>2]=r,zb(f+192|0),r=l[f+300>>2],l[f+184>>2]=l[f+296>>2],l[f+188>>2]=r,r=l[f+292>>2],l[f+176>>2]=l[f+288>>2],l[f+180>>2]=r,Hb(e,f+176|0);break e}if(r=l[i+12>>2],l[f+168>>2]=l[i+8>>2],l[f+172>>2]=r,r=l[i+4>>2],l[f+160>>2]=l[i>>2],l[f+164>>2]=r,5!=(15&v[f+160|0])){jb(f+336|0,42370),r=l[f+348>>2],l[f+296>>2]=l[f+344>>2],l[f+300>>2]=r,r=l[f+340>>2],l[f+288>>2]=l[f+336>>2],l[f+292>>2]=r,r=l[i+12>>2],l[f+376>>2]=l[i+8>>2],l[f+380>>2]=r,r=l[i+4>>2],l[f+368>>2]=l[i>>2],l[f+372>>2]=r,r=l[a+12>>2],l[f+152>>2]=l[a+8>>2],l[f+156>>2]=r,r=l[a+4>>2],l[f+144>>2]=l[a>>2],l[f+148>>2]=r,zb(f+144|0),r=l[f+380>>2],l[f+136>>2]=l[f+376>>2],l[f+140>>2]=r,r=l[f+372>>2],l[f+128>>2]=l[f+368>>2],l[f+132>>2]=r,zb(f+128|0),r=l[f+300>>2],l[f+120>>2]=l[f+296>>2],l[f+124>>2]=r,r=l[f+292>>2],l[f+112>>2]=l[f+288>>2],l[f+116>>2]=r,Hb(e,f+112|0);break e}}else k=l[a+12>>2],l[f+104>>2]=l[a+8>>2],l[f+108>>2]=k,k=l[a+4>>2],l[f+96>>2]=l[a>>2],l[f+100>>2]=k,qe(f+288|0,r,f+96|0),r=l[f+300>>2],l[a+8>>2]=l[f+296>>2],l[a+12>>2]=r,r=l[f+292>>2],l[a>>2]=l[f+288>>2],l[a+4>>2]=r;r=l[a+12>>2],l[f+88>>2]=l[a+8>>2],l[f+92>>2]=r,r=l[a+4>>2],l[f+80>>2]=l[a>>2],l[f+84>>2]=r,ya(f+80|0,f+288|0)?(r=l[i+12>>2],l[f+72>>2]=l[i+8>>2],l[f+76>>2]=r,r=l[i+4>>2],l[f+64>>2]=l[i>>2],l[f+68>>2]=r,k=on(a=Gb(f- -64|0)),ne=r=f-(k+115&-16)|0,a=0|z(0|r,0|(k=k+100|0),0|a,f+288|0),b=l[i+12>>2],l[f+56>>2]=l[i+8>>2],l[f+60>>2]=b,b=l[i+4>>2],l[f+48>>2]=l[i>>2],l[f+52>>2]=b,zb(f+48|0),a+-1>>>0>=k>>>0?(jb(f+256|0,42421),r=l[f+268>>2],l[f+40>>2]=l[f+264>>2],l[f+44>>2]=r,r=l[f+260>>2],l[f+32>>2]=l[f+256>>2],l[f+36>>2]=r,Hb(e,f+32|0)):jb(e,r)):(jb(f+272|0,42320),r=l[f+284>>2],l[f+376>>2]=l[f+280>>2],l[f+380>>2]=r,r=l[f+276>>2],l[f+368>>2]=l[f+272>>2],l[f+372>>2]=r,r=l[i+12>>2],l[f+24>>2]=l[i+8>>2],l[f+28>>2]=r,r=l[i+4>>2],l[f+16>>2]=l[i>>2],l[f+20>>2]=r,zb(f+16|0),r=l[f+380>>2],l[f+8>>2]=l[f+376>>2],l[f+12>>2]=r,r=l[f+372>>2],l[f>>2]=l[f+368>>2],l[f+4>>2]=r,Hb(e,f))}ne=f+384|0},f[132]=function(e,r,a,i){e|=0,r|=0,i|=0;var f,k=0,b=0;ne=f=ne-368|0,k=l[12+(a|=0)>>2],l[f+232>>2]=l[a+8>>2],l[f+236>>2]=k,k=l[a+4>>2],l[f+224>>2]=l[a>>2],l[f+228>>2]=k;e:{if(4!=(15&v[f+224|0])){if(r=l[a+12>>2],l[f+216>>2]=l[a+8>>2],l[f+220>>2]=r,r=l[a+4>>2],l[f+208>>2]=l[a>>2],l[f+212>>2]=r,6!=(15&v[f+208|0])){jb(f+336|0,42468),r=l[f+348>>2],l[f+280>>2]=l[f+344>>2],l[f+284>>2]=r,r=l[f+340>>2],l[f+272>>2]=l[f+336>>2],l[f+276>>2]=r,r=l[i+12>>2],l[f+360>>2]=l[i+8>>2],l[f+364>>2]=r,r=l[i+4>>2],l[f+352>>2]=l[i>>2],l[f+356>>2]=r,r=l[a+12>>2],l[f+200>>2]=l[a+8>>2],l[f+204>>2]=r,r=l[a+4>>2],l[f+192>>2]=l[a>>2],l[f+196>>2]=r,zb(f+192|0),r=l[f+364>>2],l[f+184>>2]=l[f+360>>2],l[f+188>>2]=r,r=l[f+356>>2],l[f+176>>2]=l[f+352>>2],l[f+180>>2]=r,zb(f+176|0),r=l[f+284>>2],l[f+168>>2]=l[f+280>>2],l[f+172>>2]=r,r=l[f+276>>2],l[f+160>>2]=l[f+272>>2],l[f+164>>2]=r,Hb(e,f+160|0);break e}if(r=l[i+12>>2],l[f+152>>2]=l[i+8>>2],l[f+156>>2]=r,r=l[i+4>>2],l[f+144>>2]=l[i>>2],l[f+148>>2]=r,5!=(15&v[f+144|0])){jb(f+320|0,42532),r=l[f+332>>2],l[f+280>>2]=l[f+328>>2],l[f+284>>2]=r,r=l[f+324>>2],l[f+272>>2]=l[f+320>>2],l[f+276>>2]=r,r=l[i+12>>2],l[f+360>>2]=l[i+8>>2],l[f+364>>2]=r,r=l[i+4>>2],l[f+352>>2]=l[i>>2],l[f+356>>2]=r,r=l[a+12>>2],l[f+136>>2]=l[a+8>>2],l[f+140>>2]=r,r=l[a+4>>2],l[f+128>>2]=l[a>>2],l[f+132>>2]=r,zb(f+128|0),r=l[f+364>>2],l[f+120>>2]=l[f+360>>2],l[f+124>>2]=r,r=l[f+356>>2],l[f+112>>2]=l[f+352>>2],l[f+116>>2]=r,zb(f+112|0),r=l[f+284>>2],l[f+104>>2]=l[f+280>>2],l[f+108>>2]=r,r=l[f+276>>2],l[f+96>>2]=l[f+272>>2],l[f+100>>2]=r,Hb(e,f+96|0);break e}}else k=l[a+12>>2],l[f+88>>2]=l[a+8>>2],l[f+92>>2]=k,k=l[a+4>>2],l[f+80>>2]=l[a>>2],l[f+84>>2]=k,He(f+272|0,r,f+80|0),r=l[f+284>>2],l[a+8>>2]=l[f+280>>2],l[a+12>>2]=r,r=l[f+276>>2],l[a>>2]=l[f+272>>2],l[a+4>>2]=r;r=l[a+12>>2],l[f+72>>2]=l[a+8>>2],l[f+76>>2]=r,r=l[a+4>>2],l[f+64>>2]=l[a>>2],l[f+68>>2]=r,ya(f- -64|0,f+272|0)?(r=l[i+12>>2],l[f+56>>2]=l[i+8>>2],l[f+60>>2]=r,r=l[i+4>>2],l[f+48>>2]=l[i>>2],l[f+52>>2]=r,k=on(a=Gb(f+48|0)),ne=r=f-(k+115&-16)|0,a=0|z(0|r,0|(k=k+100|0),0|a,f+272|0),b=l[i+12>>2],l[f+40>>2]=l[i+8>>2],l[f+44>>2]=b,b=l[i+4>>2],l[f+32>>2]=l[i>>2],l[f+36>>2]=b,zb(f+32|0),a+-1>>>0>=k>>>0?(jb(f+240|0,42577),r=l[f+252>>2],l[f+24>>2]=l[f+248>>2],l[f+28>>2]=r,r=l[f+244>>2],l[f+16>>2]=l[f+240>>2],l[f+20>>2]=r,Hb(e,f+16|0)):jb(e,r)):(jb(f+256|0,42468),r=l[f+268>>2],l[f+8>>2]=l[f+264>>2],l[f+12>>2]=r,r=l[f+260>>2],l[f>>2]=l[f+256>>2],l[f+4>>2]=r,Hb(e,f))}ne=f+368|0},f[133]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-320|0,i=l[12+(a|=0)>>2],l[r+168>>2]=l[a+8>>2],l[r+172>>2]=i,i=l[a+4>>2],l[r+160>>2]=l[a>>2],l[r+164>>2]=i;e:if(6==(15&v[r+160|0]))if(i=l[a+12>>2],l[r+120>>2]=l[a+8>>2],l[r+124>>2]=i,i=l[a+4>>2],l[r+112>>2]=l[a>>2],l[r+116>>2]=i,Nb(r+288|0,r+112|0),i=l[r+300>>2],l[r+104>>2]=l[r+296>>2],l[r+108>>2]=i,i=l[r+292>>2],l[r+96>>2]=l[r+288>>2],l[r+100>>2]=i,(0|Zb(r+96|0))<=5)jb(r+272|0,42660),i=l[r+284>>2],l[r+232>>2]=l[r+280>>2],l[r+236>>2]=i,i=l[r+276>>2],l[r+224>>2]=l[r+272>>2],l[r+228>>2]=i,i=l[a+12>>2],l[r+24>>2]=l[a+8>>2],l[r+28>>2]=i,i=l[a+4>>2],l[r+16>>2]=l[a>>2],l[r+20>>2]=i,zb(r+16|0),a=l[r+236>>2],l[r+8>>2]=l[r+232>>2],l[r+12>>2]=a,a=l[r+228>>2],l[r>>2]=l[r+224>>2],l[r+4>>2]=a,Hb(e,r);else if(i=l[a+12>>2],l[r+88>>2]=l[a+8>>2],l[r+92>>2]=i,i=l[a+4>>2],l[r+80>>2]=l[a>>2],l[r+84>>2]=i,ya(r+80|0,r+224|0)){r:{a:{if(-1!=(0|(a=0|q(r+224|0)))){if((i=2+(a=a+l[r+260>>2]|0)|0)>>>0>1)break r;if(i-1)break a}jb(r+192|0,42704),a=l[r+204>>2],l[r+56>>2]=l[r+200>>2],l[r+60>>2]=a,a=l[r+196>>2],l[r+48>>2]=l[r+192>>2],l[r+52>>2]=a,Hb(e,r+48|0);break e}jb(r+176|0,42747),a=l[r+188>>2],l[r+72>>2]=l[r+184>>2],l[r+76>>2]=a,a=l[r+180>>2],l[r+64>>2]=l[r+176>>2],l[r+68>>2]=a,Hb(e,r- -64|0);break e}l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=0|a}else jb(r+208|0,42660),a=l[r+220>>2],l[r+40>>2]=l[r+216>>2],l[r+44>>2]=a,a=l[r+212>>2],l[r+32>>2]=l[r+208>>2],l[r+36>>2]=a,Hb(e,r+32|0);else jb(r+304|0,42622),i=l[r+316>>2],l[r+232>>2]=l[r+312>>2],l[r+236>>2]=i,i=l[r+308>>2],l[r+224>>2]=l[r+304>>2],l[r+228>>2]=i,i=l[a+12>>2],l[r+152>>2]=l[a+8>>2],l[r+156>>2]=i,i=l[a+4>>2],l[r+144>>2]=l[a>>2],l[r+148>>2]=i,zb(r+144|0),a=l[r+236>>2],l[r+136>>2]=l[r+232>>2],l[r+140>>2]=a,a=l[r+228>>2],l[r+128>>2]=l[r+224>>2],l[r+132>>2]=a,Hb(e,r+128|0);ne=r+320|0},f[134]=qe,f[135]=He,f[136]=function(e,r,a){e|=0,r|=0;var i=0;ne=r=ne-16|0,i=l[12+(a|=0)>>2],l[r+8>>2]=l[a+8>>2],l[r+12>>2]=i,i=l[a+4>>2],l[r>>2]=l[a>>2],l[r+4>>2]=i,zb(r),a=0|C(0),l[e>>2]=4,l[e+4>>2]=0,m[e+8>>3]=0|a,ne=r+16|0},f[137]=function(e,r,a){e|=0,r|=0;var i,f,k,b,n,s,t=0;ne=i=ne+-64|0,t=l[12+(a|=0)>>2],l[i+40>>2]=l[a+8>>2],l[i+44>>2]=t,t=l[a+4>>2],l[i+32>>2]=l[a>>2],l[i+36>>2]=t,zb(i+32|0),f=i+48|0,k=r,n=0,s=0,ne=b=ne-80|0,l[b+76>>2]=0,l[b+72>>2]=0,l[b+76>>2]=l[k+168>>2],l[b+72>>2]=l[k+172>>2],1==l[b+76>>2]?(k=l[b+72>>2],s=l[4+(n=k+4160|0)>>2],l[b+16>>2]=l[n>>2],l[b+20>>2]=s,n=l[k+4156>>2],l[b+8>>2]=l[k+4152>>2],l[b+12>>2]=n,Nb(b+40|0,b+8|0),k=l[b+52>>2],l[f+8>>2]=l[b+48>>2],l[f+12>>2]=k,k=l[b+44>>2],l[f>>2]=l[b+40>>2],l[f+4>>2]=k):(jb(b+56|0,18726),n=l[4+(k=b- -64|0)>>2],l[b+32>>2]=l[k>>2],l[b+36>>2]=n,k=l[b+60>>2],l[b+24>>2]=l[b+56>>2],l[b+28>>2]=k,Hb(f,b+24|0)),ne=b+80|0,r=l[i+60>>2],l[i+24>>2]=l[i+56>>2],l[i+28>>2]=r,r=l[i+52>>2],l[i+16>>2]=l[i+48>>2],l[i+20>>2]=r,15&v[i+16|0]?(r=l[i+52>>2],l[e>>2]=l[i+48>>2],l[e+4>>2]=r,r=l[i+60>>2],l[e+8>>2]=l[i+56>>2],l[e+12>>2]=r):(r=l[i+60>>2],l[i+8>>2]=l[i+56>>2],l[i+12>>2]=r,r=l[i+52>>2],l[i>>2]=l[i+48>>2],l[i+4>>2]=r,zb(i),r=l[10947],l[e+8>>2]=l[10946],l[e+12>>2]=r,r=l[10945],l[e>>2]=l[10944],l[e+4>>2]=r),ne=i- -64|0},f[138]=function(e,r,a){e|=0,r|=0;var i,f,k,b,n=0;ne=i=ne-16|0,n=l[12+(a|=0)>>2],l[i+8>>2]=l[a+8>>2],l[i+12>>2]=n,n=l[a+4>>2],l[i>>2]=l[a>>2],l[i+4>>2]=n,zb(i),f=e,k=r,ne=b=ne+-64|0,l[b+60>>2]=0,l[b+56>>2]=0,l[b+60>>2]=l[k+168>>2],l[b+56>>2]=l[k+172>>2],1==l[b+60>>2]?(k=l[l[b+56>>2]+4168>>2],l[b+24>>2]=4,l[b+28>>2]=0,m[b+32>>3]=k>>>0,k=l[b+36>>2],l[f+8>>2]=l[b+32>>2],l[f+12>>2]=k,k=l[b+28>>2],l[f>>2]=l[b+24>>2],l[f+4>>2]=k):(jb(b+40|0,19037),k=l[b+52>>2],l[b+16>>2]=l[b+48>>2],l[b+20>>2]=k,k=l[b+44>>2],l[b+8>>2]=l[b+40>>2],l[b+12>>2]=k,Hb(f,b+8|0)),ne=b- -64|0,ne=i+16|0},f[139]=function(e,r){r|=0;var a,i,f=0;f=1,a=l[4+(e|=0)>>2],e=l[e>>2],i=l[r+4>>2],r=l[r>>2];e:if((a-e|0)==(i-r|0)){if(e>>>0<a>>>0)for(;;){if(f=v[0|e]-v[0|r]|0)break e;if(r=r+1|0,!((e=e+1|0)>>>0<a>>>0))break}f=0}return 0|f},f[140]=function(e){var r=0,a=0;if((r=l[(e|=0)>>2])>>>0<(e=l[e+4>>2])>>>0)for(;a=v[0|r]+w(a,997)|0,(r=r+1|0)>>>0<e>>>0;);return(a>>5)+a|0},f[141]=function(e){return 1},f[142]=ti,f[143]=function(e,r){return v[0|(e|=0)]},f[144]=function(e){return 0|((e|=0)>>>0<256?1:-400)},f[145]=function(e,r){return e|=0,k[0|(r|=0)]=e,1},f[146]=function(e,r,a,i){return r|=0,k[0|(i|=0)]=v[v[l[r>>2]]+59616|0],l[r>>2]=l[r>>2]+1,1},f[147]=function(e,r,a){e|=0,r|=0,a|=0;var i=0,k=0,b=0,n=0;ne=e=ne-16|0;e:{for(;;){if(b=l[60388+(i=k<<3)>>2],l[e+12>>2]=b,n=l[i+60384>>2],i=0|f[r](n,e+12|0,1,a))break e;if(l[e+12>>2]=n,i=0|f[r](b,e+12|0,1,a))break e;if(26==(0|(k=k+1|0)))break}i=0}return ne=e+16|0,0|i},f[148]=function(e,r,a,i){e|=0,a|=0,i|=0;var f=0;return e=32,((a=v[0|(r|=0)])+-65&255)>>>0>=26&&(e=-32,f=0,(a+-97&255)>>>0>25)||(l[i>>2]=1,l[i+4>>2]=1,l[i+8>>2]=v[0|r]+e,f=1),0|f},f[149]=function(e,r,a){e|=0;var i=0,k=0,b=0,n=0,s=0,t=0;if((r|=0)>>>0<(a|=0)>>>0)for(i=r;b=b+1|0,(i=(0|f[l[e>>2]](i))+i|0)>>>0<a>>>0;);for(i=60592,k=14256;;){n=i;e:if((0|(t=u[i+8>>1]))==(0|b)){s=b,i=r;r:if(!((0|t)<1)){for(;;){if(i>>>0<a>>>0){if((0|f[l[e+20>>2]](i,a))!=v[0|k])break e;if(k=k+1|0,i=(0|f[l[e>>2]](i))+i|0,(0|(s=s+-1|0))>0)continue;break r}break}if(v[0|k])break e}return l[n+4>>2]}if(i=n+12|0,!(k=l[n+12>>2]))break}return-223},f[150]=function(e,r){return r|=0,0|((e|=0)>>>0<=127?d[59872+(e<<1)>>1]>>>r&1:0)},f[151]=function(e,r,a){return-2},f[152]=function(e,r){return 0|(r|=0)},f[153]=si,f[154]=si,f[155]=function(e){return l[299856+(v[0|(e|=0)]<<2)>>2]},f[156]=ti,f[157]=function(e,r){var a=0,i=0;if(a=(r|=0)-(e|=0)|0,r=v[0|e],(0|(a=(0|(i=l[299856+(r<<2)>>2]))>(0|a)?a:i))>=2)for(i=a+-1|0,r&=-1<<7-a^-1;r=63&v[e+1|0]|r<<6,e=e+1|0,i=i+-1|0;);return 0|r},f[158]=function(e){var r=0;return r=1,(e|=0)>>>0<128||(r=2,e>>>0<2048||(r=3,e>>>0<65536||(r=4,e>>>0<2097152||(r=5,e>>>0<67108864||(r=(0|e)>-1?6:-400))))),0|r},f[159]=function(e,r){r|=0;var a=0,i=0,f=0;if((e|=0)>>>0<=127)return k[0|r]=e,1;if(e>>>0<=2047)i=e>>>6|-64,a=1,f=r;else if(e>>>0<=65535)k[0|r]=e>>>12|224,i=e>>>6&63|-128,a=2,f=r+1|0;else if(e>>>0<=2097151)k[0|r]=e>>>18|240,k[r+1|0]=e>>>12&63|128,i=e>>>6&63|-128,a=3,f=r+2|0;else if(e>>>0<=67108863)k[0|r]=e>>>24|248,k[r+2|0]=e>>>12&63|128,k[r+1|0]=e>>>18&63|128,i=e>>>6&63|-128,a=4,f=r+3|0;else{if((0|e)<0)return-401;k[0|r]=e>>>30|252,k[r+3|0]=e>>>12&63|128,k[r+2|0]=e>>>18&63|128,k[r+1|0]=e>>>24&63|128,i=e>>>6&63|-128,a=5,f=r+4|0}return k[0|f]=i,k[r+a|0]=63&e|128,a+1|0},f[160]=function(e,r,a,i){return e|=0,a|=0,i|=0,(0|(e=k[l[(r|=0)>>2]]))>=0?(k[0|i]=v[59616+(255&e)|0],l[r>>2]=l[r>>2]+1,1):0|function(e,r,a){var i=0,b=0,n=0;i=l[e>>2],b=0|f[l[82153]](i,r),r=0|f[l[82148]](i),l[e>>2]=r+l[e>>2],e=Cf(b);e:if(e){i=l[e+8>>2];r:if((r=i+-1|0)>>>0<=2){switch(r-1|0){default:return 0|f[l[82155]](l[312784+(l[e+4>>2]<<2)>>2],a);case 0:b=327232+(l[e+4>>2]<<2)|0;break r;case 1:}b=328304+(l[e+4>>2]<<2)|0}else if(b=0,r=0,(0|i)<1)break e;for(r=0,i=0;n=0|f[l[82155]](l[(i<<2)+b>>2],a),r=n+r|0,a=a+n|0,(0|(i=i+1|0))<l[e+8>>2];);}else{if(e=0,(0|r)<=0)break e;for(;k[0|a]=v[0|i],a=a+1|0,i=i+1|0,(0|r)!=(0|(e=e+1|0)););}return r}(r,a,i)},f[161]=function(e,r,a){e|=0;var i,k=0,b=0,n=0,s=0,t=0,c=0,o=0;ne=i=ne-16|0,k=fi(0,3606,r|=0,a|=0);e:if(!k&&!(k=fi(3606,3609,r,a))&&(k=0,1073741824&e)){for(;;){if((0|(n=l[(t=327240+(e=s<<2)|0)>>2]))>=1){for(o=12+(c=e+327232|0)|0,b=0;;){if(e=l[o+(b<<2)>>2],l[i+12>>2]=e,k=0|f[r](e,c,2,a))break e;if(e=0,b)for(;;){if(l[i+8>>2]=l[o+(e<<2)>>2],k=0|f[r](l[i+12>>2],i+8|0,1,a))break e;if(k=0|f[r](l[i+8>>2],i+12|0,1,a))break e;if((0|b)==(0|(e=e+1|0)))break}if((0|n)==(0|(b=b+1|0)))break}n=l[t>>2]}if(!((0|(s=3+(n+s|0)|0))<261))break}for(s=261;;){if((0|(n=l[(t=327240+(e=s<<2)|0)>>2]))>=1){for(o=12+(c=e+327232|0)|0,b=0;;){if(e=l[o+(b<<2)>>2],l[i+12>>2]=e,k=0|f[r](e,c,2,a))break e;if(e=0,b)for(;;){if(l[i+8>>2]=l[o+(e<<2)>>2],k=0|f[r](l[i+12>>2],i+8|0,1,a))break e;if(k=0|f[r](l[i+8>>2],i+12|0,1,a))break e;if((0|b)==(0|(e=e+1|0)))break}if((0|n)==(0|(b=b+1|0)))break}n=l[t>>2]}if(!((0|(s=3+(n+s|0)|0))<265))break}for(s=0;;){if((0|(n=l[(t=328316+(e=s<<2)|0)>>2]))>=1){for(o=16+(c=e+328304|0)|0,b=0;;){if(e=l[o+(b<<2)>>2],l[i+12>>2]=e,k=0|f[r](e,c,3,a))break e;if(e=0,b)for(;;){if(l[i+8>>2]=l[o+(e<<2)>>2],k=0|f[r](l[i+12>>2],i+8|0,1,a))break e;if(k=0|f[r](l[i+8>>2],i+12|0,1,a))break e;if((0|b)==(0|(e=e+1|0)))break}if((0|n)==(0|(b=b+1|0)))break}n=l[t>>2]}if(k=0,!((0|(s=4+(n+s|0)|0))<72))break}}return ne=i+16|0,0|k},f[162]=function(e,r,a,i){return 0|function(e,r,a,i){var k=0,b=0,n=0,s=0,t=0,c=0,o=0,u=0,d=0,h=0,m=0;ne=b=ne+-64|0,h=0|f[l[82153]](r,a),l[b+60>>2]=h,d=0|f[l[82148]](r);e:{r:{a:{o=Cf(h);i:{if(o){if(n=1,1==(0|(s=l[o+8>>2]))){if(l[i+4>>2]=1,l[i>>2]=d,c=l[312784+(l[o+4>>2]<<2)>>2],l[i+8>>2]=c,s=b,t=l[o+4>>2],(0|(m=l[312788+(t<<2)>>2]))>=1){for(;(0|(c=l[312792+((t<<2)+(k<<2)|0)>>2]))!=(0|h)&&(u=w(n,20)+i|0,l[u+8>>2]=c,l[u+4>>2]=1,l[u>>2]=d,n=n+1|0),(0|m)!=(0|(k=k+1|0));)t=l[o+4>>2];c=l[i+8>>2]}l[s+60>>2]=c;break i}if(n=0,!(1073741824&e))break i;if(k=l[o+4>>2],2==(0|s)){if((0|(r=l[327240+(k<<2)>>2]))>0)for(;(0|(e=l[327244+((k<<2)+(t<<2)|0)>>2]))!=(0|h)&&(a=w(n,20)+i|0,l[a+8>>2]=e,l[a+4>>2]=1,l[a>>2]=d,n=n+1|0),k=l[o+4>>2],(0|r)!=(0|(t=t+1|0)););if(l[b>>2]=l[327232+(k<<2)>>2],k=1,r=1,(0|(a=Tb(b)))>-1&&((0|(e=l[312788+(a<<2)>>2]))>=1&&qb(4|b,312792+(a<<2)|0,e<<2),r=e+1|0),l[b+16>>2]=l[327236+(l[o+4>>2]<<2)>>2],(0|(e=Tb(b+16|0)))>-1&&((0|(a=l[312788+(e<<=2)>>2]))>=1&&qb(b+20|0,e+312792|0,a<<2),k=a+1|0),e=0,(0|r)<=0)break e;for(s=(0|k)<1;;){if(!s)for(a=l[(e<<2)+b>>2],t=0;c=w(n,20)+i|0,l[c+8>>2]=a,l[c+4>>2]=2,l[c>>2]=d,l[c+12>>2]=l[16+((t<<2)+b|0)>>2],n=n+1|0,(0|(t=t+1|0))!=(0|k););if(!((0|(e=e+1|0))<(0|r)))break}break e}if((0|(r=l[328316+(k<<2)>>2]))>0)for(;(0|(e=l[328320+((k<<2)+(t<<2)|0)>>2]))!=(0|h)&&(a=w(n,20)+i|0,l[a+8>>2]=e,l[a+4>>2]=1,l[a>>2]=d,n=n+1|0),k=l[o+4>>2],(0|r)!=(0|(t=t+1|0)););if(l[b>>2]=l[328304+(k<<2)>>2],k=1,e=1,(0|(r=Tb(b)))>-1&&((0|(e=l[312788+(r<<2)>>2]))>=1&&qb(4|b,312792+(r<<2)|0,e<<2),e=e+1|0),l[b+16>>2]=l[328308+(l[o+4>>2]<<2)>>2],(0|(r=Tb(b+16|0)))>-1&&((0|(a=l[312788+(r<<=2)>>2]))>=1&&qb(b+20|0,r+312792|0,a<<2),k=a+1|0),l[b+32>>2]=l[328312+(l[o+4>>2]<<2)>>2],(0|(a=Tb(b+32|0)))>=0)break a;s=1;break r}if(!((0|(s=Tb(b+60|0)))<0||(0|(s=l[312788+(c=s<<2)>>2]))<1)){for(c=c+312792|0;n=w(k,20)+i|0,l[n+4>>2]=1,l[n>>2]=d,l[n+8>>2]=l[c+(k<<2)>>2],(0|s)!=(0|(k=k+1|0)););n=s}}if(!(1073741824&e))break e;if((u=r+d|0)>>>0>=a>>>0)break e;if(l[b>>2]=l[b+60>>2],e=0|f[l[82153]](u,a),l[b+60>>2]=e,k=b+60|0,r=b,!(e=Cf(e))|1!=l[e+8>>2]||(k=312784+(l[e+4>>2]<<2)|0),l[r+4>>2]=l[k>>2],s=0|f[l[82148]](u),m=s+d|0,!((0|(e=function(e){var r=0,a=0;return r=kb(e,5),(r=v[80576+(255&kb(e,2))|0]+v[80576+(255&r)|0]|0)>>>0<=58&&(a=e,e=l[86832+(r<<2)>>2],!Gr(a,327232+(e<<2)|0,2))||(e=-1),e}(b)))<0||(0|(r=l[327240+(e<<=2)>>2]))<1))for(e=e+327244|0,k=0;c=w(n,20)+i|0,l[c+4>>2]=1,l[c>>2]=m,l[c+8>>2]=l[e+(k<<2)>>2],n=n+1|0,(0|r)!=(0|(k=k+1|0)););if((r=s+u|0)>>>0>=a>>>0)break e;if(e=0|f[l[82153]](r,a),l[b+60>>2]=e,t=b+60|0,a=b,!(e=Cf(e))|1!=l[e+8>>2]||(t=312784+(l[e+4>>2]<<2)|0),l[a+8>>2]=l[t>>2],r=0|f[l[82148]](r),(0|(e=function(e){var r=0,a=0;return r=kb(e,8),(r=(v[80832+(255&kb(e,5))|0]+v[80832+(255&r)|0]|0)+v[80832+(255&kb(e,2))|0]|0)>>>0<=13&&(a=e,e=l[87072+(r<<2)>>2],!Gr(a,328304+(e<<2)|0,3))||(e=-1),e}(b)))<0)break e;if((0|(a=l[328316+(e<<=2)>>2]))<1)break e;for(r=r+m|0,e=e+328320|0,k=0;s=w(n,20)+i|0,l[s+4>>2]=1,l[s>>2]=r,l[s+8>>2]=l[e+(k<<2)>>2],n=n+1|0,(0|a)!=(0|(k=k+1|0)););break e}(0|(r=l[312788+(a<<2)>>2]))>=1&&qb(b+36|0,312792+(a<<2)|0,r<<2),s=r+1|0}if(!((0|e)<=0))for(a=0,h=(0|k)<1;;){if(!h)for(u=(a<<2)+b|0,r=0;;){if((0|s)>=1)for(m=l[16+((r<<2)+b|0)>>2],c=l[u>>2],t=0;o=w(n,20)+i|0,l[o+8>>2]=c,l[o+4>>2]=3,l[o>>2]=d,l[o+12>>2]=m,l[o+16>>2]=l[32+((t<<2)+b|0)>>2],n=n+1|0,(0|s)!=(0|(t=t+1|0)););if((0|k)==(0|(r=r+1|0)))break}if(!((0|(a=a+1|0))<(0|e)))break}}return ne=b- -64|0,n}(e|=0,r|=0,a|=0,i|=0)},f[163]=function(e,r,a){e|=0;var i,b,n,s,t,c,o=0,u=0,h=0,m=0;ne=i=ne-80|0;e:{if((r|=0)>>>0<(a|=0)>>>0)for(;;){if(u=-223,(h=0|f[l[e+20>>2]](r,a))>>>0>127)break e;r:{a:if((m=h+-32|0)>>>0>13){if(95==(0|h))break r}else switch(m-1|0){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:break a;default:break r}if(k[(i+16|0)+o|0]=h,(0|o)>57)break e;o=o+1|0}if(!((r=(0|f[l[e>>2]](r))+r|0)>>>0<a>>>0))break}k[0|(e=(i+16|0)+o|0)]=0,u=(r=l[82384])&&(l[i+12>>2]=0,b=r,n=i+16|0,s=e,t=i+12|0,c=0,ne=c=ne-16|0,l[c+12>>2]=s,l[c+8>>2]=n,Hf(b,c+8|0,t),ne=c+16|0,e=l[i+12>>2])?l[e>>2]:(e=function(e,r){var a=0,i=0,f=0,k=0,b=0,n=0,s=0;r:if(!((a=r+-1|0)>>>0>43)){a:{i:{f:{k:{b:{n:{if(a>>>0<=14)switch(b=r,s=r,i=r,n=r,k=r,f=r,a-1|0){case 0:break i;case 1:case 2:break f;case 3:break k;case 4:case 5:case 6:case 7:case 8:case 9:break b;case 10:case 11:case 12:case 13:break n;default:break a}b=d[81088+(v[e+15|0]<<1)>>1]+r|0}s=d[81088+(v[e+11|0]<<1)>>1]+b|0}i=d[81088+(v[e+5|0]<<1)>>1]+s|0}n=d[81088+(v[e+4|0]<<1)>>1]+i|0}k=d[81088+(v[e+2|0]<<1)>>1]+n|0}f=d[81088+(v[e+1|0]<<1)>>1]+k|0}i=v[0|e],f=d[81088+(v[e+a|0]<<1)>>1]+(d[81088+(i<<1)>>1]+f|0)|0;a:if(!(f>>>0>5162||(b=l[(n=87136+(f<<3)|0)>>2],223&(i^v[0|b])))){f=b,i=r;i:{for(;;){if(!i)break i;if(k=v[0|e],s=v[k+136896|0],a=0!=(0|k),k=v[v[0|f]+136896|0],i=i-(a&=(0|k)==(0|s))|0,f=f+1|0,e=e+1|0,!a)break}if((0|k)!=(0|s))break a}if(!v[r+b|0])break r}n=0}return n}(i+16|0,o))?l[e+4>>2]:-223}return ne=i+80|0,0|u},f[164]=function(e,r){var a=0;if(!((e|=0)>>>0>255|(r|=0)>>>0>14))return d[134368+(e<<1)>>1]>>>r&1;e:{if(r>>>0>=501){if(a=-6,(0|(r=r+-501|0))>=l[82383])break e;return 0|Yf(l[329556+(r<<3)>>2],e)}a=Yf(l[134880+(r<<2)>>2],e)}return 0|a},f[165]=function(e,r,a){return e|=0,a|=0,l[(r|=0)>>2]=128,0|function(e,r){var a=0;e:{if((0|e)>=501){if(a=-6,(0|(e=e+-501|0))>=l[82383])break e;e=329556+(e<<3)|0}else e=134880+(e<<2)|0;l[r>>2]=l[e>>2],a=0}return a}(e,a)},f[166]=function(e,r){var a=0;if((r|=0)>>>0<=(e|=0)>>>0)return 0|r;for(;(a=r)>>>0>e>>>0&&(r=a+-1|0,128==(-64&v[0|a])););return 0|a},f[167]=function(e,r){var a=0,i=0,f=0;i=1;e:if(!((e|=0)>>>0>=(r|=0)>>>0)){for(;;){if(i=0,128==(192&(a=v[0|e])))break e;if(f=1,e=e+1|0,a+-192>>>0<=61)for(a=l[299856+(a<<2)>>2];;){if((0|e)==(0|r)|128!=(192&v[0|e]))break e;if(e=e+1|0,!((0|(f=f+1|0))<(0|a)))break}if(!(e>>>0<r>>>0))break}i=1}return 0|i},f[168]=function(e,r,a){r|=0,a|=0;var i,f=0;return qb(i=l[20+(e|=0)>>2],r,f=(f=l[e+16>>2]-i|0)>>>0>a>>>0?a:f),l[e+20>>2]=f+l[e+20>>2],0|a},f[169]=function(e){return 0|R(l[60+(e|=0)>>2])},f[170]=function(e,r,a){e|=0,r|=0,a|=0;var i,f=0,b=0,n=0;ne=i=ne-32|0,l[i+16>>2]=r,f=l[e+48>>2],l[i+20>>2]=a-(0!=(0|f)),b=l[e+44>>2],l[i+28>>2]=f,l[i+24>>2]=b;e:{r:{if(f=0,(b=0|$(l[e+60>>2],i+16|0,2,i+12|0))&&(l[82952]=b,f=-1),f)l[i+12>>2]=-1,a=-1;else{if((0|(f=l[i+12>>2]))>0)break r;a=f}l[e>>2]=l[e>>2]|48&a^16;break e}f>>>0<=(n=l[i+20>>2])>>>0?a=f:(b=l[e+44>>2],l[e+4>>2]=b,l[e+8>>2]=b+(f-n|0),l[e+48>>2]&&(l[e+4>>2]=b+1,k[(r+a|0)-1|0]=v[0|b]))}return ne=i+32|0,0|a},f[171]=function(e,r,a,i){var f;return r|=0,a|=0,i|=0,ne=f=ne-16|0,e=0|Y(l[60+(e|=0)>>2],0|r,0|a,255&i,f+8|0),r=0,e&&(l[82952]=e,r=-1),r?(l[f+8>>2]=-1,l[f+12>>2]=-1,r=-1,e=-1):(r=l[f+12>>2],e=l[f+8>>2]),ne=f+16|0,se=r,0|e},f[172]=function(e,r,a){r|=0,a|=0;var i,f=0,k=0,b=0,n=0,s=0;for(ne=i=ne-32|0,f=l[28+(e|=0)>>2],l[i+16>>2]=f,b=l[e+20>>2],l[i+28>>2]=a,l[i+24>>2]=r,r=b-f|0,l[i+20>>2]=r,b=r+a|0,n=2,r=i+16|0;;){e:{if(f=0,(k=0|re(l[e+60>>2],0|r,0|n,i+12|0))&&(l[82952]=k,f=-1),f?(l[i+12>>2]=-1,f=-1):f=l[i+12>>2],(0|f)!=(0|b)){if((0|f)>-1)break e;l[e+28>>2]=0,l[e+16>>2]=0,l[e+20>>2]=0,l[e>>2]=32|l[e>>2],e=0,2!=(0|n)&&(e=a-l[r+4>>2]|0)}else r=l[e+44>>2],l[e+28>>2]=r,l[e+20>>2]=r,l[e+16>>2]=r+l[e+48>>2],e=a;return ne=i+32|0,0|e}r=(s=f>>>0>(k=l[r+4>>2])>>>0)?r+8|0:r,k=f-(s?k:0)|0,l[r>>2]=k+l[r>>2],l[r+4>>2]=l[r+4>>2]-k,b=b-f|0,n=n-s|0}},f[173]=function(e){return 0},f[174]=function(e,r,a,i){return se=0,0},f[175]=function(e,r,a,i,f,n){e|=0,r=+r,a|=0,i|=0,f|=0,n|=0;var s,c=0,o=0,u=0,d=0,h=0,m=0,p=0,y=0,E=0,_=0,D=0,S=0,F=0,M=0,A=0,x=0,P=0,T=0,R=0,O=0;if(ne=s=ne-560|0,l[s+44>>2]=0,t(+r),c=0|b(1),R=1,O=b(0)>>>0>4294967295?0:1,((0|c)<-1?R:(0|c)<=-1&&O)?(t(+(r=-r)),c=0|b(1),b(0),A=1,x=301552):2048&f?(A=1,x=301555):x=(A=1&f)?301558:301553,2146435072!=(2146435072&c))if(r=Sb(r,s+44|0),0!=(r+=r)&&(l[s+44>>2]=l[s+44>>2]+-1),S=s+16|0,97!=(0|(P=32|n))){for(c=(0|i)<0,0!=r?(d=l[s+44>>2]+-28|0,l[s+44>>2]=d,r*=268435456):d=l[s+44>>2],p=c?6:i,u=_=(0|d)<0?s+48|0:s+336|0;i=u,c=r<4294967296&r>=0?~~r>>>0:0,l[i>>2]=c,u=u+4|0,0!=(r=1e9*(r-+(c>>>0))););if((0|d)<1)c=u,o=_;else for(o=_;;){if(E=(0|d)<29?d:29,!((c=u+-4|0)>>>0<o>>>0)){for(i=E,y=0;D=c,m=0,T=y,y=l[c>>2],h=31&i,32<=(63&i)>>>0?(d=y<<h,h=0):(d=(1<<h)-1&y>>>32-h,h=y<<h),m=d+m|0,m=(y=T+h|0)>>>0<h>>>0?m+1|0:m,T=D,D=zi(y=Ni(h=y,m,1e9),se,1e9,0),l[T>>2]=h-D,(c=c+-4|0)>>>0>=o>>>0;);(i=y)&&(l[(o=o+-4|0)>>2]=i)}for(;(c=u)>>>0>o>>>0&&!l[(u=c+-4|0)>>2];);if(d=l[s+44>>2]-E|0,l[s+44>>2]=d,u=c,!((0|d)>0))break}if((0|d)<=-1)for(M=1+((p+25|0)/9|0)|0,E=102==(0|P);;){if(y=(0|d)<-9?9:0-d|0,o>>>0>=c>>>0)o=l[o>>2]?o:o+4|0;else{for(D=1e9>>>y,h=-1<<y^-1,d=0,u=o;i=l[u>>2],l[u>>2]=(i>>>y)+d,d=w(D,i&h),(u=u+4|0)>>>0<c>>>0;);o=l[o>>2]?o:o+4|0,d&&(l[c>>2]=d,c=c+4|0)}if(d=y+l[s+44>>2]|0,l[s+44>>2]=d,c=c-(i=E?_:o)>>2>(0|M)?i+(M<<2)|0:c,!((0|d)<0))break}if(u=0,!(o>>>0>=c>>>0||(u=w(_-o>>2,9),d=10,(i=l[o>>2])>>>0<10)))for(;u=u+1|0,i>>>0>=(d=w(d,10))>>>0;);if((0|(i=(p-(102==(0|P)?0:u)|0)-(103==(0|P)&0!=(0|p))|0))<(w(c-_>>2,9)+-9|0)){if(m=(_+((i=(0|(h=i+9216|0))/9|0)<<2)|0)-4092|0,d=10,(0|(i=1+(h-w(i,9)|0)|0))<=8)for(;d=w(d,10),9!=(0|(i=i+1|0)););if(M=m+4|0,((E=(D=l[m>>2])-w(d,h=(D>>>0)/(d>>>0)|0)|0)||(0|M)!=(0|c))&&(F=E>>>0<(i=d>>>1)>>>0?.5:(0|c)==(0|M)&&(0|i)==(0|E)?1:1.5,r=1&h?9007199254740994:9007199254740992,!A|45!=v[0|x]||(F=-F,r=-r),i=D-E|0,l[m>>2]=i,r+F!=r)){if(i=i+d|0,l[m>>2]=i,i>>>0>=1e9)for(;l[m>>2]=0,(m=m+-4|0)>>>0<o>>>0&&(l[(o=o+-4|0)>>2]=0),i=l[m>>2]+1|0,l[m>>2]=i,i>>>0>999999999;);if(u=w(_-o>>2,9),d=10,!((i=l[o>>2])>>>0<10))for(;u=u+1|0,i>>>0>=(d=w(d,10))>>>0;);}c=c>>>0>(i=m+4|0)>>>0?i:c}e:{for(;;){if(E=c,D=0,c>>>0<=o>>>0)break e;if(l[(c=E+-4|0)>>2])break}D=1}if(103==(0|P)){if(p=((i=(0|(c=p||1))>(0|u)&(0|u)>-5)?-1^u:-1)+c|0,n=(i?-1:-2)+n|0,!(h=8&f)){if(c=9,D&&(h=l[E+-4>>2])&&(i=10,c=0,!((h>>>0)%10)))for(;c=c+1|0,!((h>>>0)%((i=w(i,10))>>>0)););i=w(E-_>>2,9)+-9|0,102!=(32|n)?(h=0,p=(0|p)<(0|(i=(0|(i=(i+u|0)-c|0))>0?i:0))?p:i):(h=0,p=(0|p)<(0|(i=(0|(i=i-c|0))>0?i:0))?p:i)}}else h=8&f;if(m=0!=(0|(d=p|h)),i=e,T=a,y=32|n,c=(0|u)>0?u:0,102!=(0|y)){if((S-(c=xb((c=u>>31)+u^c,0,S))|0)<=1)for(;k[0|(c=c+-1|0)]=48,(S-c|0)<2;);k[0|(M=c+-2|0)]=n,k[c+-1|0]=(0|u)<0?45:43,c=S-M|0}if(zk(i,32,T,m=1+(c+(m+(p+A|0)|0)|0)|0,f),Mn(e,x,A),zk(e,48,a,m,65536^f),102!=(0|y)){e:if(!((0|p)<0))for(n=D?E:o+4|0,i=s+16|8,_=s+16|9,u=o;;){(0|_)==(0|(c=xb(l[u>>2],0,_)))&&(k[s+24|0]=48,c=i);r:if((0|o)==(0|u))Mn(e,c,1),c=c+1|0,(0|p)<1&&!h||Mn(e,301587,1);else{if(c>>>0<=s+16>>>0)break r;for(;k[0|(c=c+-1|0)]=48,c>>>0>s+16>>>0;);}if(Mn(e,y=c,(0|p)>(0|(c=_-c|0))?c:p),p=p-c|0,(u=u+4|0)>>>0>=n>>>0)break e;if(!((0|p)>-1))break}zk(e,48,p+18|0,18,0),Mn(e,M,S-M|0)}else{for(i=s+16|8,u=s+16|9,o=n=o>>>0>_>>>0?_:o;;){c=xb(l[o>>2],0,u);e:if((0|n)==(0|o))(0|c)==(0|u)&&(k[s+24|0]=48,c=i);else{if(c>>>0<=s+16>>>0)break e;for(;k[0|(c=c+-1|0)]=48,c>>>0>s+16>>>0;);}if(Mn(e,c,u-c|0),!((o=o+4|0)>>>0<=_>>>0))break}d&&Mn(e,301587,1);e:if(!((0|p)<1|o>>>0>=E>>>0))for(;;){if((c=xb(l[o>>2],0,u))>>>0>s+16>>>0)for(;k[0|(c=c+-1|0)]=48,c>>>0>s+16>>>0;);if(Mn(e,c,(0|p)<9?p:9),p=p+-9|0,(o=o+4|0)>>>0>=E>>>0)break e;if(!((0|p)>0))break}zk(e,48,p+9|0,9,0)}}else{if(D=(h=32&n)?x+9|0:x,!(i>>>0>11)&&(c=12-i|0)){for(F=8;F*=16,c=c+-1|0;);r=45!=v[0|D]?r+F-F:-(F+(-r-F))}for((0|S)==(0|(c=xb((u=(c=l[s+44>>2])>>31)^c+u,0,S)))&&(k[s+15|0]=48,c=s+15|0),_=2|A,u=l[s+44>>2],k[0|(E=c+-2|0)]=n+15,k[c+-1|0]=(0|u)<0?45:43,c=8&f,o=s+16|0;n=o,y=h,u=g(r)<2147483648?~~r:-2147483648,k[0|o]=y|v[u+301536|0],1!=((o=n+1|0)-(s+16|0)|0)|(0==(r=16*(r-+(0|u)))?!((0|i)>0|c):0)||(k[n+1|0]=46,o=n+2|0),0!=r;);zk(n=e,32,c=a,m=(h=!i|((o-s|0)-18|0)>=(0|i)?((S-(s+16|0)|0)-E|0)+o|0:2+((i+S|0)-E|0)|0)+_|0,f),Mn(e,D,_),zk(e,48,a,m,65536^f),Mn(e,s+16|0,i=o-(s+16|0)|0),zk(e,48,h-((n=i)+(i=S-E|0)|0)|0,0,0),Mn(e,E,i)}else zk(e,32,a,m=A+3|0,-65537&f),Mn(e,x,A),i=n>>>5&1,Mn(e,r!=r?i?301579:301583:i?301571:301575,3);return zk(e,32,a,m,8192^f),ne=s+560|0,0|((0|m)<(0|a)?a:m)},f[176]=function(e,r){var a;e|=0,a=r|=0,r=l[r>>2]+15&-16,l[a>>2]=r+16,m[e>>3]=uk(l[r>>2],l[r+4>>2],l[r+8>>2],l[r+12>>2])},{E:function(){var e,r,a;r=0,a=0,ne=e=ne-16|0,V(e+12|0,e+8|0)||(r=Cb(4+(l[e+12>>2]<<2)|0),l[82973]=r,r&&((r=Cb(l[e+8>>2]))&&(a=l[82973])?(l[(l[e+12>>2]<<2)+a>>2]=0,J(l[82973],0|r)&&(l[82973]=0)):l[82973]=0)),ne=e+16|0},F:function(e,r){e|=0,r|=0;var a,i,f,b,n,s=0,t=0,c=0,o=0,d=0,h=0,m=0,w=0,p=0,g=0,y=0,E=0,_=0,D=0,S=0,F=0,A=0;ne=a=ne-2896|0,l[a+2892>>2]=0,rn(a+2872|0),mn(a+2856|0),e&&(l[82340]=l[r>>2]),s=Ce(),l[a+2892>>2]=s;e:{r:{a:{i:{f:if(s){if(l[a+2852>>2]=513,l[a+2848>>2]=(n=0,ne=f=ne-16|0,i=wn(Bb(4176),0,4176),l[i+8>>2]=0,l[i+12>>2]=0,l[i+4>>2]=l[75398],l[i>>2]=8,l[i+16>>2]=0,l[i+20>>2]=0,l[i+24>>2]=0,l[f>>2]=0,l[f+4>>2]=0,l[f+8>>2]=0,l[f+12>>2]=0,n=l[f+12>>2],l[i+40>>2]=l[f+8>>2],l[i+44>>2]=n,n=l[f+4>>2],l[i+32>>2]=l[f>>2],l[i+36>>2]=n,l[i+4144>>2]=0,k[i+48|0]=0,l[f>>2]=0,l[f+4>>2]=0,l[f+8>>2]=0,l[f+12>>2]=0,b=l[f+12>>2],l[(n=i+4160|0)>>2]=l[f+8>>2],l[n+4>>2]=b,n=l[f+4>>2],l[i+4152>>2]=l[f>>2],l[i+4156>>2]=n,l[i+4168>>2]=0,ne=f+16|0,i),o=l[10947],l[8+(s=a+2832|0)>>2]=l[10946],l[s+12>>2]=o,o=l[10945],l[s>>2]=l[10944],l[s+4>>2]=o,(0|e)>=2)for(F=e+-2|0,A=e+-1|0,o=1,s=0;;){k:{b:{n:{s:{t:{if(s){if(y){jb(a+2800|0,l[(o<<2)+r>>2]),d=l[4+(t=a+2880|0)>>2],l[(m=a+1928|0)>>2]=l[t>>2],l[m+4>>2]=d,d=l[4+(c=a+2808|0)>>2],l[(m=a+1912|0)>>2]=l[c>>2],l[m+4>>2]=d,c=l[a+2876>>2],l[a+1920>>2]=l[a+2872>>2],l[a+1924>>2]=c,c=l[a+2804>>2],l[a+1904>>2]=l[a+2800>>2],l[a+1908>>2]=c,Vb(a+2816|0,a+1920|0,a+1904|0),d=l[4+(c=a+2824|0)>>2],l[t>>2]=l[c>>2],l[t+4>>2]=d,t=l[a+2820>>2],l[a+2872>>2]=l[a+2816>>2],l[a+2876>>2]=t;break k}if(!_)break t;wb(a+2784|0,l[(o<<2)+r>>2]),d=l[4+(t=a+2880|0)>>2],l[(m=a+1896|0)>>2]=l[t>>2],l[m+4>>2]=d,d=l[4+(c=a+2792|0)>>2],l[(m=a+1880|0)>>2]=l[c>>2],l[m+4>>2]=d,c=l[a+2876>>2],l[a+1888>>2]=l[a+2872>>2],l[a+1892>>2]=c,c=l[a+2788>>2],l[a+1872>>2]=l[a+2784>>2],l[a+1876>>2]=c,Vb(a+2816|0,a+1888|0,a+1872|0),d=l[4+(c=a+2824|0)>>2],l[t>>2]=l[c>>2],l[t+4>>2]=d,t=l[a+2820>>2],l[a+2872>>2]=l[a+2816>>2],l[a+2876>>2]=t,y=0;break k}if(!fn(t=l[(m=(o<<2)+r|0)>>2],14278)){if(s=1,w)break k;ga(2,1),M()}c:{o:{u:{l:{v:{if(45==v[0|t]){if(45==(0|(s=v[t+1|0])))break l;if((s<<24>>24|32)-97>>>0<26)break v}if(s=0,!w){w=t;break k}if(y){jb(a+2768|0,t),d=l[4+(t=a+2880|0)>>2],l[(m=a+1752|0)>>2]=l[t>>2],l[m+4>>2]=d,d=l[4+(c=a+2776|0)>>2],l[(m=a+1736|0)>>2]=l[c>>2],l[m+4>>2]=d,c=l[a+2876>>2],l[a+1744>>2]=l[a+2872>>2],l[a+1748>>2]=c,c=l[a+2772>>2],l[a+1728>>2]=l[a+2768>>2],l[a+1732>>2]=c,Vb(a+2816|0,a+1744|0,a+1728|0),d=l[4+(c=a+2824|0)>>2],l[t>>2]=l[c>>2],l[t+4>>2]=d,t=l[a+2820>>2],l[a+2872>>2]=l[a+2816>>2],l[a+2876>>2]=t;break k}if(_){wb(a+2752|0,t),c=l[4+(t=s=a+2880|0)>>2],l[(d=a+1720|0)>>2]=l[t>>2],l[d+4>>2]=c,c=l[4+(t=a+2760|0)>>2],l[(d=a+1704|0)>>2]=l[t>>2],l[d+4>>2]=c,t=l[a+2876>>2],l[a+1712>>2]=l[a+2872>>2],l[a+1716>>2]=t,t=l[a+2756>>2],l[a+1696>>2]=l[a+2752>>2],l[a+1700>>2]=t,Vb(a+2816|0,a+1712|0,a+1696|0),c=l[4+(t=a+2824|0)>>2],l[s>>2]=l[t>>2],l[s+4>>2]=c,s=l[a+2820>>2],l[a+2872>>2]=l[a+2816>>2],l[a+2876>>2]=s,y=0,s=0;break k}fa(l[a+2848>>2],t),D=D+1|0,y=0,_=0;break k}if(76==(0|s)){if(c=l[4+(t=s=a+2840|0)>>2],l[(d=a+1864|0)>>2]=l[t>>2],l[d+4>>2]=c,t=l[a+2836>>2],l[a+1856>>2]=l[a+2832>>2],l[a+1860>>2]=t,1==(15&v[a+1856|0])&&(rn(a+2816|0),c=l[4+(t=a+2824|0)>>2],l[s>>2]=l[t>>2],l[s+4>>2]=c,t=l[a+2820>>2],l[a+2832>>2]=l[a+2816>>2],l[a+2836>>2]=t),t=l[m>>2],v[t+2|0]){jb(a+2720|0,t+2|0),c=l[4+(t=a+2728|0)>>2],l[(d=a+1848|0)>>2]=l[t>>2],l[d+4>>2]=c,t=l[a+2724>>2],l[a+1840>>2]=l[a+2720>>2],l[a+1844>>2]=t,db(a+2736|0,a+1840|0),t=l[s+4>>2],l[(c=a+1832|0)>>2]=l[s>>2],l[c+4>>2]=t,c=l[4+(t=a+2744|0)>>2],l[(d=a+1816|0)>>2]=l[t>>2],l[d+4>>2]=c,t=l[a+2836>>2],l[a+1824>>2]=l[a+2832>>2],l[a+1828>>2]=t,t=l[a+2740>>2],l[a+1808>>2]=l[a+2736>>2],l[a+1812>>2]=t,Vb(a+2816|0,a+1824|0,a+1808|0),c=l[4+(t=a+2824|0)>>2],l[s>>2]=l[t>>2],l[s+4>>2]=c,s=l[a+2820>>2],l[a+2832>>2]=l[a+2816>>2],l[a+2836>>2]=s,s=0;break k}if((0|o)>=(0|A))break s;jb(a+2688|0,l[((o=o+1|0)<<2)+r>>2]),c=l[4+(t=a+2696|0)>>2],l[(d=a+1800|0)>>2]=l[t>>2],l[d+4>>2]=c,t=l[a+2692>>2],l[a+1792>>2]=l[a+2688>>2],l[a+1796>>2]=t,db(a+2704|0,a+1792|0),t=l[s+4>>2],l[(c=a+1784|0)>>2]=l[s>>2],l[c+4>>2]=t,c=l[4+(t=a+2712|0)>>2],l[(d=a+1768|0)>>2]=l[t>>2],l[d+4>>2]=c,t=l[a+2836>>2],l[a+1776>>2]=l[a+2832>>2],l[a+1780>>2]=t,t=l[a+2708>>2],l[a+1760>>2]=l[a+2704>>2],l[a+1764>>2]=t,Vb(a+2816|0,a+1776|0,a+1760|0),c=l[4+(t=a+2824|0)>>2],l[s>>2]=l[t>>2],l[s+4>>2]=c,s=l[a+2820>>2],l[a+2832>>2]=l[a+2816>>2],l[a+2836>>2]=s,s=0;break k}if(hn(t,115))break u;s=0;break o}if(fn(c=t+2|0,15083))break c;s=0,l[82341]=1|l[82341];break k}l[82341]=1|l[82341],s=1}if(hn(t,114)&&(l[82341]=8|l[82341],s=s+1|0),!hn(t,99))break n;if(l[a+2852>>2]=-1858&l[a+2852>>2],c=0,45!=v[0|t])break b;s=s+1|0;break n}if(!fn(c,15527)){s=0,l[82341]=8|l[82341];break k}if(s=0,fn(c,15952))break n;l[a+2852>>2]=-1858&l[a+2852>>2];break k}fa(l[a+2848>>2],l[(o<<2)+r>>2]),D=D+1|0,y=0,_=0;break k}cn(14711,63,1,l[75398]);break e}n:{s:{t:{c:{o:{u:{l:{v:{d:{h:{m:{w:{if(45!=v[t+1|0]){if(hn(t,67)&&(l[82341]=64|l[82341],s=s+1|0),hn(t,77)&&(l[82341]=128|l[82341],s=s+1|0),hn(t,97)&&(l[82341]=32|l[82341],s=s+1|0),hn(t,83)&&(l[82341]=256|l[82341],s=s+1|0),hn(t,82)&&(l[82341]=2|l[82341],s=s+1|0),hn(t,110)&&(l[82341]=4|l[82341],s=s+1|0),hn(t,102)&&(l[82341]=512|l[82341],s=s+1|0),hn(t,106)&&(l[82341]=1032|l[82341],s=s+1|0),hn(t,101))break w;break m}if(!fn(d=t+2|0,16316)){s=0,l[82341]=64|l[82341];break k}if(!fn(d,16715)){s=0,l[82341]=128|l[82341];break k}if(!fn(d,17078)){s=0,l[82341]=32|l[82341];break k}if(!fn(d,17406)){s=0,l[82341]=2048|l[82341];break k}if(!fn(d,17716)){s=0,l[82341]=256|l[82341];break k}if(!fn(d,18061)){s=0,l[82341]=2|l[82341];break k}if(!fn(d,18453)){s=0,l[82341]=4|l[82341];break k}if(!fn(d,18848)){s=0,l[82341]=512|l[82341];break k}if(!fn(d,19182)){s=0,l[82341]=1032|l[82341];break k}if(!fn(d,19562)){l[a+2852>>2]=-1858&l[a+2852>>2]|65,s=0;break k}if(!fn(d,19804)){if((0|o)>=(0|A))break l;if(c=-1858&l[a+2852>>2],l[a+2852>>2]=c,(t=fr(l[((o=o+1|0)<<2)+r>>2]))+1>>>0>=9)break u;s=0,l[a+2852>>2]=c|(t>>>0>7?65:t?t<<8|1:0);break k}if(!fn(d,20620)){s=0,l[82341]=16384|l[82341];break k}if(!fn(d,20859)){S|=2,s=0;break k}if(!fn(d,21225)){S|=4,s=0;break k}if(!fn(d,21570)){s=0,l[82341]=4096|l[82341];break k}if(!fn(d,21818)){_=0,y=1,s=0;break k}if(s=0,!fn(d,21996)){_=1,y=0;break k}if(!fn(d,22226)){if((0|o)>=(0|F))break o;if(d=l[4+(t=a+2864|0)>>2],l[(h=a+1208|0)>>2]=l[t>>2],l[h+4>>2]=d,c=l[a+2860>>2],l[a+1200>>2]=l[a+2856>>2],l[a+1204>>2]=c,Nb(a+2672|0,a+1200|0),jb(a+2656|0,l[m+4>>2]),d=l[4+(c=a+2680|0)>>2],l[(h=a+1192|0)>>2]=l[c>>2],l[h+4>>2]=d,d=l[4+(c=a+2664|0)>>2],l[(h=a+1176|0)>>2]=l[c>>2],l[h+4>>2]=d,c=l[a+2676>>2],l[a+1184>>2]=l[a+2672>>2],l[a+1188>>2]=c,c=l[a+2660>>2],l[a+1168>>2]=l[a+2656>>2],l[a+1172>>2]=c,kk(a+1184|0,a+1168|0)){o=o+2|0;break k}jb(a+2640|0,l[m+4>>2]),jb(a+2624|0,l[((o=o+2|0)<<2)+r>>2]),c=l[t+4>>2],l[(d=a+1160|0)>>2]=l[t>>2],l[d+4>>2]=c,d=l[4+(c=a+2648|0)>>2],l[(m=a+1144|0)>>2]=l[c>>2],l[m+4>>2]=d,d=l[4+(c=a+2632|0)>>2],l[(m=a+1128|0)>>2]=l[c>>2],l[m+4>>2]=d,c=l[a+2860>>2],l[a+1152>>2]=l[a+2856>>2],l[a+1156>>2]=c,c=l[a+2644>>2],l[a+1136>>2]=l[a+2640>>2],l[a+1140>>2]=c,c=l[a+2628>>2],l[a+1120>>2]=l[a+2624>>2],l[a+1124>>2]=c,en(a+2816|0,a+1152|0,a+1136|0,a+1120|0),d=l[4+(c=a+2824|0)>>2],l[t>>2]=l[c>>2],l[t+4>>2]=d,t=l[a+2820>>2],l[a+2856>>2]=l[a+2816>>2],l[a+2860>>2]=t;break k}if(!fn(d,22903)){if((0|o)>=(0|F))break c;if(d=l[4+(t=a+2864|0)>>2],l[(h=a+1352|0)>>2]=l[t>>2],l[h+4>>2]=d,c=l[a+2860>>2],l[a+1344>>2]=l[a+2856>>2],l[a+1348>>2]=c,Nb(a+2608|0,a+1344|0),jb(a+2592|0,l[m+4>>2]),d=l[4+(c=a+2616|0)>>2],l[(h=a+1336|0)>>2]=l[c>>2],l[h+4>>2]=d,d=l[4+(c=a+2600|0)>>2],l[(h=a+1320|0)>>2]=l[c>>2],l[h+4>>2]=d,c=l[a+2612>>2],l[a+1328>>2]=l[a+2608>>2],l[a+1332>>2]=c,c=l[a+2596>>2],l[a+1312>>2]=l[a+2592>>2],l[a+1316>>2]=c,kk(a+1328|0,a+1312|0)){o=o+2|0;break k}if(wb(a+2816|0,l[((o=o+2|0)<<2)+r>>2]),h=l[4+(c=a+2824|0)>>2],l[(p=a+1304|0)>>2]=l[c>>2],l[p+4>>2]=h,d=l[a+2820>>2],l[a+1296>>2]=l[a+2816>>2],l[a+1300>>2]=d,!(15&v[a+1296|0]))break t;jb(a+2560|0,l[m+4>>2]),d=l[t+4>>2],l[(m=a+1288|0)>>2]=l[t>>2],l[m+4>>2]=d,m=l[4+(d=a+2568|0)>>2],l[(h=a+1272|0)>>2]=l[d>>2],l[h+4>>2]=m,d=l[c+4>>2],l[(m=a+1256|0)>>2]=l[c>>2],l[m+4>>2]=d,c=l[a+2860>>2],l[a+1280>>2]=l[a+2856>>2],l[a+1284>>2]=c,c=l[a+2564>>2],l[a+1264>>2]=l[a+2560>>2],l[a+1268>>2]=c,c=l[a+2820>>2],l[a+1248>>2]=l[a+2816>>2],l[a+1252>>2]=c,en(a+2576|0,a+1280|0,a+1264|0,a+1248|0),d=l[4+(c=a+2584|0)>>2],l[t>>2]=l[c>>2],l[t+4>>2]=d,t=l[a+2580>>2],l[a+2856>>2]=l[a+2576>>2],l[a+2860>>2]=t;break k}if(!((c=fn(d,23892))&&fn(d,24194)&&fn(d,24353))){if(t=fn(d,24194),c=c?t?24353:24194:23892,(0|o)>=(0|F))break s;if(p=l[4+(d=a+2864|0)>>2],l[(g=a+1624|0)>>2]=l[d>>2],l[g+4>>2]=p,h=l[a+2860>>2],l[a+1616>>2]=l[a+2856>>2],l[a+1620>>2]=h,Nb(a+2544|0,a+1616|0),jb(a+2528|0,l[m+4>>2]),p=l[4+(h=a+2552|0)>>2],l[(g=a+1608|0)>>2]=l[h>>2],l[g+4>>2]=p,p=l[4+(h=a+2536|0)>>2],l[(g=a+1592|0)>>2]=l[h>>2],l[g+4>>2]=p,h=l[a+2548>>2],l[a+1600>>2]=l[a+2544>>2],l[a+1604>>2]=h,h=l[a+2532>>2],l[a+1584>>2]=l[a+2528>>2],l[a+1588>>2]=h,kk(a+1600|0,a+1584|0)){o=o+2|0;break k}if(Vi(a+2816|0,l[(h=((o=o+2|0)<<2)+r|0)>>2],!t),g=l[4+(t=a+2824|0)>>2],l[(p=a+1576|0)>>2]=l[t>>2],l[p+4>>2]=g,p=l[a+2820>>2],l[a+1568>>2]=l[a+2816>>2],l[a+1572>>2]=p,15&v[a+1568|0]){fn(c,23892)||(c=l[t+4>>2],l[(h=a+1560|0)>>2]=l[t>>2],l[h+4>>2]=c,c=l[a+2820>>2],l[a+1552>>2]=l[a+2816>>2],l[a+1556>>2]=c,6==(15&v[a+1552|0])&&(c=l[t+4>>2],l[(h=a+1544|0)>>2]=l[t>>2],l[h+4>>2]=c,c=l[a+2820>>2],l[a+1536>>2]=l[a+2816>>2],l[a+1540>>2]=c,Nb(a+2512|0,a+1536|0),h=l[4+(c=a+2520|0)>>2],l[(p=a+1528|0)>>2]=l[c>>2],l[p+4>>2]=h,c=l[a+2516>>2],l[a+1520>>2]=l[a+2512>>2],l[a+1524>>2]=c,1==(0|Zb(a+1520|0))&&(c=l[t+4>>2],l[(h=a+1512|0)>>2]=l[t>>2],l[h+4>>2]=c,c=l[a+2820>>2],l[a+1504>>2]=l[a+2816>>2],l[a+1508>>2]=c,Kb(a+2576|0,a+1504|0,0),h=l[4+(c=a+2584|0)>>2],l[t>>2]=l[c>>2],l[t+4>>2]=h,c=l[a+2580>>2],l[a+2816>>2]=l[a+2576>>2],l[a+2820>>2]=c))),jb(a+2496|0,l[m+4>>2]),c=l[d+4>>2],l[(m=a+1496|0)>>2]=l[d>>2],l[m+4>>2]=c,m=l[4+(c=a+2504|0)>>2],l[(h=a+1480|0)>>2]=l[c>>2],l[h+4>>2]=m,c=l[t+4>>2],l[(m=a+1464|0)>>2]=l[t>>2],l[m+4>>2]=c,t=l[a+2860>>2],l[a+1488>>2]=l[a+2856>>2],l[a+1492>>2]=t,t=l[a+2500>>2],l[a+1472>>2]=l[a+2496>>2],l[a+1476>>2]=t,t=l[a+2820>>2],l[a+1456>>2]=l[a+2816>>2],l[a+1460>>2]=t,en(a+2576|0,a+1488|0,a+1472|0,a+1456|0),c=l[4+(t=a+2584|0)>>2],l[d>>2]=l[t>>2],l[d+4>>2]=c,t=l[a+2580>>2],l[a+2856>>2]=l[a+2576>>2],l[a+2860>>2]=t;break k}s=l[4+(e=a+2824|0)>>2],l[(o=a+1448|0)>>2]=l[e>>2],l[o+4>>2]=s,r=l[a+2820>>2],l[a+1440>>2]=l[a+2816>>2],l[a+1444>>2]=r,Ck(a+2576|0,a+1440|0),r=l[4+(s=a+2584|0)>>2],o=l[s>>2],l[e>>2]=o,l[e+4>>2]=r,s=l[a+2580>>2],t=l[a+2576>>2],l[a+2816>>2]=t,l[a+2820>>2]=s,w=l[m+4>>2],d=l[h>>2],l[(m=a+1432|0)>>2]=o,l[m+4>>2]=r,l[a+1424>>2]=t,l[a+1428>>2]=s,r=l[82340],l[a+1408>>2]=Gb(a+1424|0),l[a+1404>>2]=d,l[a+1400>>2]=w,l[a+1396>>2]=c,l[a+1392>>2]=r,Sn(l[75398],24779,a+1392|0),r=l[e+4>>2],l[(s=a+1384|0)>>2]=l[e>>2],l[s+4>>2]=r,e=l[a+2820>>2],l[a+1376>>2]=l[a+2816>>2],l[a+1380>>2]=e,zb(a+1376|0),e=2;break f}if(!fn(d,24961)){l[82341]=65536|l[82341];break k}if(!fn(d,25170)){E|=3;break k}if(fn(d,25360))break h;E|=1;break k}l[82341]=4096|l[82341],s=s+1|0}if(c=s,hn(t,104))break n;if(hn(t,86))break d;break b}if(!fn(d,25523))break n;if(fn(d,25710))break v}l[a+1648>>2]=26199,tn(25893,a+1648|0),e=0;break f}if(c=0,fn(d,26460))break b;t=l[4+(s=a+2840|0)>>2],l[(w=a+1672|0)>>2]=l[s>>2],l[w+4>>2]=t,s=l[a+2836>>2],l[a+1664>>2]=l[a+2832>>2],l[a+1668>>2]=s,s=e,e=o+1|0,e=Wi(a+1664|0,0!=(65536&l[82341]|1&E),s-e|0,(e<<2)+r|0);break f}l[a+1104>>2]=l[82340],Sn(l[75398],20095,a+1104|0);break e}l[a+1088>>2]=l[82340],Sn(l[75398],20353,a+1088|0);break e}l[a+1216>>2]=l[82340],Sn(l[75398],22556,a+1216|0);break e}l[a+1360>>2]=l[82340],Sn(l[75398],23183,a+1360|0);break e}l[a+1232>>2]=l[82340],Sn(l[75398],23580,a+1232|0);break e}l[a+1636>>2]=c,l[a+1640>>2]=c,l[a+1632>>2]=l[82340],Sn(l[75398],24526,a+1632|0);break e}ga(0,0),M()}if(s=0,(0|on(t))!=(c+1|0)){l[a+1684>>2]=t,l[a+1680>>2]=l[82340],Sn(l[75398],26714,a+1680|0);break e}}if(!((0|(o=o+1|0))<(0|e)))break}if(bf(1)&&(l[a+2852>>2]=132|l[a+2852>>2]),256&(e=l[82341])&&(l[a+2852>>2]=8|l[a+2852>>2]),32&e&&(l[a+2852>>2]=2|l[a+2852>>2]),64&e&&(l[a+2852>>2]=4|l[a+2852>>2]),128&e&&(l[a+2852>>2]=-5&l[a+2852>>2]),(e=dk(26996))&&(function(e){var r=0,a=0,i=0,f=0,b=0,n=0,s=0;k:{if(e){for(l[78159]=312608,n=wn(329376,0,112),l[82378]=l[78158],r=l[78157],l[82376]=l[78156],l[82377]=r,r=l[78155],l[82374]=l[78154],l[82375]=r,r=l[78153],l[82372]=l[78152],l[82373]=r;;){if(v[0|e]){if((r=hn(e,58))||(r=on(e)+e|0),(i=r-e|0)>>>0>12)break k;if(u[(b=n+(f=a<<4)|0)>>1]=23323,ar(e=Ta(f+329378|0,e,i))>>>0<on(e)>>>0)break k;if(k[329378+(i+f|0)|0]=109,l[329488+(a<<2)>>2]=b,e=58==v[0|r]?r+1|0:r,7!=(0|(a=a+1|0)))continue}break}l[78159]=329488}s=1}return s}(e)||cn(27189,25,1,l[75398])),o=l[4+(s=e=a+2840|0)>>2],l[(t=a+1080|0)>>2]=l[s>>2],l[t+4>>2]=o,s=l[a+2836>>2],l[a+1072>>2]=l[a+2832>>2],l[a+1076>>2]=s,1==(15&v[a+1072|0])&&(rn(a+2448|0),jb(a+2432|0,27425),o=l[4+(s=a+2456|0)>>2],l[(t=a+1064|0)>>2]=l[s>>2],l[t+4>>2]=o,o=l[4+(s=a+2440|0)>>2],l[(t=a+1048|0)>>2]=l[s>>2],l[t+4>>2]=o,s=l[a+2452>>2],l[a+1056>>2]=l[a+2448>>2],l[a+1060>>2]=s,s=l[a+2436>>2],l[a+1040>>2]=l[a+2432>>2],l[a+1044>>2]=s,Vb(a+2464|0,a+1056|0,a+1040|0),jb(a+2416|0,27644),o=l[4+(s=a+2472|0)>>2],l[(t=a+1032|0)>>2]=l[s>>2],l[t+4>>2]=o,o=l[4+(s=a+2424|0)>>2],l[a+1016>>2]=l[s>>2],l[a+1020>>2]=o,s=l[a+2468>>2],l[a+1024>>2]=l[a+2464>>2],l[a+1028>>2]=s,s=l[a+2420>>2],l[a+1008>>2]=l[a+2416>>2],l[a+1012>>2]=s,Vb(a+2480|0,a+1024|0,a+1008|0),jb(a+2400|0,27938),o=l[4+(s=a+2488|0)>>2],l[a+1e3>>2]=l[s>>2],l[a+1004>>2]=o,o=l[4+(s=a+2408|0)>>2],l[a+984>>2]=l[s>>2],l[a+988>>2]=o,s=l[a+2484>>2],l[a+992>>2]=l[a+2480>>2],l[a+996>>2]=s,s=l[a+2404>>2],l[a+976>>2]=l[a+2400>>2],l[a+980>>2]=s,Vb(a+2816|0,a+992|0,a+976|0),o=l[4+(s=a+2824|0)>>2],l[e>>2]=l[s>>2],l[e+4>>2]=o,s=l[a+2820>>2],l[a+2832>>2]=l[a+2816>>2],l[a+2836>>2]=s),s=l[a+2892>>2],jb(a+2384|0,28110),t=l[4+(o=a+2392|0)>>2],l[a+968>>2]=l[o>>2],l[a+972>>2]=t,o=l[e+4>>2],l[a+952>>2]=l[e>>2],l[a+956>>2]=o,e=l[a+2388>>2],l[a+960>>2]=l[a+2384>>2],l[a+964>>2]=e,e=l[a+2836>>2],l[a+944>>2]=l[a+2832>>2],l[a+948>>2]=e,$i(s,a+960|0,a+944|0),!(e=En(l[r>>2])))break i;if(r=l[a+2892>>2],jb(a+2368|0,28624),jb(a+2352|0,qr(e)),o=l[4+(s=a+2376|0)>>2],l[a+936>>2]=l[s>>2],l[a+940>>2]=o,o=l[4+(s=a+2360|0)>>2],l[a+920>>2]=l[s>>2],l[a+924>>2]=o,s=l[a+2372>>2],l[a+928>>2]=l[a+2368>>2],l[a+932>>2]=s,s=l[a+2356>>2],l[a+912>>2]=l[a+2352>>2],l[a+916>>2]=s,$i(r,a+928|0,a+912|0),Lb(e),e=l[a+2892>>2],jb(a+2336|0,28860),l[a+900>>2]=26199,l[a+896>>2]=6,Yb(a+2320|0,29229,a+896|0),s=l[4+(r=a+2344|0)>>2],l[a+888>>2]=l[r>>2],l[a+892>>2]=s,s=l[4+(r=a+2328|0)>>2],l[a+872>>2]=l[r>>2],l[a+876>>2]=s,r=l[a+2340>>2],l[a+880>>2]=l[a+2336>>2],l[a+884>>2]=r,r=l[a+2324>>2],l[a+864>>2]=l[a+2320>>2],l[a+868>>2]=r,$i(e,a+880|0,a+864|0),!w&&(w=29406,bf(1)&&bf(0)))break a;k:{if(2&v[329365]){if(!(t=En(w)))break r;if(Vi(a+2816|0,w,1),s=l[4+(e=a+2824|0)>>2],l[a+856>>2]=l[e>>2],l[a+860>>2]=s,r=l[a+2820>>2],l[a+848>>2]=l[a+2816>>2],l[a+852>>2]=r,15&v[a+848|0]){r=l[a+2892>>2],jb(a+2304|0,29728),jb(a+2272|0,qr(t)),o=l[4+(s=a+2280|0)>>2],l[a+840>>2]=l[s>>2],l[a+844>>2]=o,s=l[a+2276>>2],l[a+832>>2]=l[a+2272>>2],l[a+836>>2]=s,db(a+2288|0,a+832|0),o=l[4+(s=a+2312|0)>>2],l[a+824>>2]=l[s>>2],l[a+828>>2]=o,o=l[4+(s=a+2296|0)>>2],l[a+808>>2]=l[s>>2],l[a+812>>2]=o,s=l[a+2308>>2],l[a+816>>2]=l[a+2304>>2],l[a+820>>2]=s,s=l[a+2292>>2],l[a+800>>2]=l[a+2288>>2],l[a+804>>2]=s,$i(r,a+816|0,a+800|0),mn(a+2240|0),jb(a+2224|0,29931),s=l[4+(r=a+2248|0)>>2],l[a+792>>2]=l[r>>2],l[a+796>>2]=s,s=l[4+(r=a+2232|0)>>2],l[a+776>>2]=l[r>>2],l[a+780>>2]=s,o=l[4+(s=r=a+2880|0)>>2],l[a+760>>2]=l[s>>2],l[a+764>>2]=o,s=l[a+2244>>2],l[a+784>>2]=l[a+2240>>2],l[a+788>>2]=s,s=l[a+2228>>2],l[a+768>>2]=l[a+2224>>2],l[a+772>>2]=s,s=l[a+2876>>2],l[a+752>>2]=l[a+2872>>2],l[a+756>>2]=s,en(a+2256|0,a+784|0,a+768|0,a+752|0),jb(a+2208|0,30062),w=l[4+(s=a+2864|0)>>2],l[a+744>>2]=l[s>>2],l[a+748>>2]=w,o=l[a+2860>>2],l[a+736>>2]=l[a+2856>>2],l[a+740>>2]=o,Nb(a+2192|0,a+736|0),w=l[4+(o=a+2264|0)>>2],l[a+728>>2]=l[o>>2],l[a+732>>2]=w,w=l[4+(o=a+2216|0)>>2],l[a+712>>2]=l[o>>2],l[a+716>>2]=w,w=l[4+(o=a+2200|0)>>2],l[a+696>>2]=l[o>>2],l[a+700>>2]=w,o=l[a+2260>>2],l[a+720>>2]=l[a+2256>>2],l[a+724>>2]=o,o=l[a+2212>>2],l[a+704>>2]=l[a+2208>>2],l[a+708>>2]=o,o=l[a+2196>>2],l[a+688>>2]=l[a+2192>>2],l[a+692>>2]=o,en(a+2576|0,a+720|0,a+704|0,a+688|0),c=l[4+(o=a+2584|0)>>2],l[r>>2]=l[o>>2],l[r+4>>2]=c,w=l[a+2580>>2],l[a+2872>>2]=l[a+2576>>2],l[a+2876>>2]=w,jb(a+2176|0,30297),w=l[r+4>>2],l[a+680>>2]=l[r>>2],l[a+684>>2]=w,r=l[a+2876>>2],l[a+672>>2]=l[a+2872>>2],l[a+676>>2]=r,Nb(a+2160|0,a+672|0),r=l[s+4>>2],l[a+664>>2]=l[s>>2],l[a+668>>2]=r,w=l[4+(r=a+2184|0)>>2],l[a+648>>2]=l[r>>2],l[a+652>>2]=w,w=l[4+(r=a+2168|0)>>2],l[a+632>>2]=l[r>>2],l[a+636>>2]=w,r=l[a+2860>>2],l[a+656>>2]=l[a+2856>>2],l[a+660>>2]=r,r=l[a+2180>>2],l[a+640>>2]=l[a+2176>>2],l[a+644>>2]=r,r=l[a+2164>>2],l[a+624>>2]=l[a+2160>>2],l[a+628>>2]=r,en(a+2576|0,a+656|0,a+640|0,a+624|0),r=l[o+4>>2],l[s>>2]=l[o>>2],l[s+4>>2]=r,r=l[e+4>>2],l[a+616>>2]=l[e>>2],l[a+620>>2]=r,e=l[a+2580>>2],l[a+2856>>2]=l[a+2576>>2],l[a+2860>>2]=e,e=l[a+2820>>2],l[a+608>>2]=l[a+2816>>2],l[a+612>>2]=e,r=l[a+2892>>2],Db(o=Gb(a+608|0),33594,2)||!(e=hn(o,10))|35!=v[e+1|0]||(e=hn(e+1|0,10))&&(!(s=v[e+1|0])|35==(0|s)|92==v[e+-2|0]|92!=v[e+-1|0]||(o=(e=hn(e+1|0,10))?e+1|0:o)),s=l[4+(e=a+2864|0)>>2],l[a+600>>2]=l[e>>2],l[a+604>>2]=s,e=l[a+2860>>2],l[a+592>>2]=l[a+2856>>2],l[a+596>>2]=e,Nb(a+2144|0,a+592|0),s=l[4+(e=a+2152|0)>>2],l[a+584>>2]=l[e>>2],l[a+588>>2]=s,e=l[a+2148>>2],l[a+576>>2]=l[a+2144>>2],l[a+580>>2]=e,o=da(r,o,a+576|0),Lb(t),r=l[4+(e=a+2824|0)>>2],l[a+568>>2]=l[e>>2],l[a+572>>2]=r,e=l[a+2820>>2],l[a+560>>2]=l[a+2816>>2],l[a+564>>2]=e,zb(a+560|0);break k}r=l[e+4>>2],l[a+552>>2]=l[e>>2],l[a+556>>2]=r,r=l[a+2820>>2],l[a+544>>2]=l[a+2816>>2],l[a+548>>2]=r,Ck(a+2576|0,a+544|0),r=l[4+(s=a+2584|0)>>2],s=l[s>>2],l[e>>2]=s,l[e+4>>2]=r,l[a+536>>2]=s,l[a+540>>2]=r,r=l[a+2580>>2],s=l[a+2576>>2],l[a+2816>>2]=s,l[a+2820>>2]=r,l[a+528>>2]=s,l[a+532>>2]=r,r=l[82340],l[a+516>>2]=Gb(a+528|0),l[a+512>>2]=r,Sn(l[75398],29574,a+512|0),r=l[e+4>>2],l[a+504>>2]=l[e>>2],l[a+508>>2]=r,e=l[a+2820>>2],l[a+496>>2]=l[a+2816>>2],l[a+500>>2]=e,zb(a+496|0),e=2;break f}e=l[a+2892>>2],jb(a+2128|0,29728),jb(a+2096|0,29406),s=l[4+(r=a+2104|0)>>2],l[a+488>>2]=l[r>>2],l[a+492>>2]=s,r=l[a+2100>>2],l[a+480>>2]=l[a+2096>>2],l[a+484>>2]=r,db(a+2112|0,a+480|0),s=l[4+(r=a+2136|0)>>2],l[a+472>>2]=l[r>>2],l[a+476>>2]=s,s=l[4+(r=a+2120|0)>>2],l[a+456>>2]=l[r>>2],l[a+460>>2]=s,r=l[a+2132>>2],l[a+464>>2]=l[a+2128>>2],l[a+468>>2]=r,r=l[a+2116>>2],l[a+448>>2]=l[a+2112>>2],l[a+452>>2]=r,$i(e,a+464|0,a+448|0),mn(a+2064|0),jb(a+2048|0,29931),r=l[4+(e=a+2072|0)>>2],l[a+440>>2]=l[e>>2],l[a+444>>2]=r,r=l[4+(e=a+2056|0)>>2],l[a+424>>2]=l[e>>2],l[a+428>>2]=r,s=l[4+(e=a+2880|0)>>2],l[a+408>>2]=l[e>>2],l[a+412>>2]=s,r=l[a+2068>>2],l[a+432>>2]=l[a+2064>>2],l[a+436>>2]=r,r=l[a+2052>>2],l[a+416>>2]=l[a+2048>>2],l[a+420>>2]=r,r=l[a+2876>>2],l[a+400>>2]=l[a+2872>>2],l[a+404>>2]=r,en(a+2080|0,a+432|0,a+416|0,a+400|0),jb(a+2032|0,30062),o=l[4+(s=r=a+2864|0)>>2],l[a+392>>2]=l[s>>2],l[a+396>>2]=o,s=l[a+2860>>2],l[a+384>>2]=l[a+2856>>2],l[a+388>>2]=s,Nb(a+2016|0,a+384|0),o=l[4+(s=a+2088|0)>>2],l[a+376>>2]=l[s>>2],l[a+380>>2]=o,o=l[4+(s=a+2040|0)>>2],l[a+360>>2]=l[s>>2],l[a+364>>2]=o,o=l[4+(s=a+2024|0)>>2],l[a+344>>2]=l[s>>2],l[a+348>>2]=o,s=l[a+2084>>2],l[a+368>>2]=l[a+2080>>2],l[a+372>>2]=s,s=l[a+2036>>2],l[a+352>>2]=l[a+2032>>2],l[a+356>>2]=s,s=l[a+2020>>2],l[a+336>>2]=l[a+2016>>2],l[a+340>>2]=s,en(a+2816|0,a+368|0,a+352|0,a+336|0),t=l[4+(s=a+2824|0)>>2],l[e>>2]=l[s>>2],l[e+4>>2]=t,o=l[a+2820>>2],l[a+2872>>2]=l[a+2816>>2],l[a+2876>>2]=o,jb(a+2e3|0,30297),o=l[e+4>>2],l[a+328>>2]=l[e>>2],l[a+332>>2]=o,e=l[a+2876>>2],l[a+320>>2]=l[a+2872>>2],l[a+324>>2]=e,Nb(a+1984|0,a+320|0),e=l[r+4>>2],l[a+312>>2]=l[r>>2],l[a+316>>2]=e,o=l[4+(e=a+2008|0)>>2],l[a+296>>2]=l[e>>2],l[a+300>>2]=o,o=l[4+(e=a+1992|0)>>2],l[a+280>>2]=l[e>>2],l[a+284>>2]=o,e=l[a+2860>>2],l[a+304>>2]=l[a+2856>>2],l[a+308>>2]=e,e=l[a+2004>>2],l[a+288>>2]=l[a+2e3>>2],l[a+292>>2]=e,e=l[a+1988>>2],l[a+272>>2]=l[a+1984>>2],l[a+276>>2]=e,en(a+2816|0,a+304|0,a+288|0,a+272|0),e=l[s+4>>2],s=l[s>>2],l[r>>2]=s,l[r+4>>2]=e,l[a+264>>2]=s,l[a+268>>2]=e,e=l[a+2820>>2],r=l[a+2816>>2],l[a+2856>>2]=r,l[a+2860>>2]=e,l[a+256>>2]=r,l[a+260>>2]=e,e=l[a+2892>>2],Nb(a+1968|0,a+256|0),s=l[4+(r=a+1976|0)>>2],l[a+248>>2]=l[r>>2],l[a+252>>2]=s,r=l[a+1972>>2],l[a+240>>2]=l[a+1968>>2],l[a+244>>2]=r,o=da(e,w,a+240|0)}if(e=3,o){s=0,65536&(o=l[82341])&&(Ne(l[a+2892>>2],0),Ab(10),o=l[82341]),e=l[a+2848>>2],2&o||(s=me(o>>>14&1|S),o=l[82341]),function(e,r,a){var i,f,k,b,n=0;if(ne=i=ne-32|0,f=v[(n=e)+44|0]|v[n+45|0]<<8|v[n+46|0]<<16|v[n+47|0]<<24,k=v[n+40|0]|v[n+41|0]<<8|v[n+42|0]<<16|v[n+43|0]<<24,l[i+24>>2]=k,l[i+28>>2]=f,b=v[n+32|0]|v[n+33|0]<<8|v[n+34|0]<<16|v[n+35|0]<<24,n=v[n+36|0]|v[n+37|0]<<8|v[n+38|0]<<16|v[n+39|0]<<24,l[i+8>>2]=k,l[i+12>>2]=f,l[i+16>>2]=b,l[i+20>>2]=n,l[i>>2]=b,l[i+4>>2]=n,!(15&v[0|i]))return l[e+8>>2]=r,!a|r?a?rn(i+16|0):(l[i+16>>2]=0,l[i+20>>2]=0,l[i+24>>2]=0,l[i+28>>2]=0):jb(i+16|0,16997),r=l[i+28>>2],l[e+40>>2]=l[i+24>>2],l[e+44>>2]=r,r=l[i+20>>2],l[e+32>>2]=l[i+16>>2],l[e+36>>2]=r,void(ne=i+32|0);P(16572,14553,230,45373),M()}(e,s,1&o),e=l[a+2892>>2],l[e+172>>2]=l[a+2848>>2],l[e+168>>2]=1,e=l[a+2892>>2],l[e+180>>2]=a+2852,l[e+176>>2]=2,D||fa(l[a+2848>>2],30522),s=0;k:if(4&v[329364])r=l[a+2892>>2],s=l[10947],l[8+(e=a+1952|0)>>2]=l[10946],l[e+12>>2]=s,s=l[10945],l[e>>2]=l[10944],l[e+4>>2]=s,s=l[4+(e=a+1960|0)>>2],l[a+232>>2]=l[e>>2],l[a+236>>2]=s,e=l[a+1956>>2],l[a+224>>2]=l[a+1952>>2],l[a+228>>2]=e,s=bi(r,a+224|0,E,l[a+2852>>2]);else if(!l[l[a+2848>>2]+28>>2])for(o=l[75398];;){if(te(a+2576|0,l[a+2848>>2]),t=l[4+(r=a+2584|0)>>2],e=a+2824|0,w=l[r>>2],l[e>>2]=w,l[e+4>>2]=t,l[a+216>>2]=w,l[a+220>>2]=t,t=l[a+2580>>2],w=l[a+2576>>2],l[a+2816>>2]=w,l[a+2820>>2]=t,l[a+208>>2]=w,l[a+212>>2]=t,!(15&v[a+208|0]||(t=l[e+4>>2],l[a+200>>2]=l[e>>2],l[a+204>>2]=t,t=l[a+2820>>2],l[a+192>>2]=l[a+2816>>2],l[a+196>>2]=t,Nb(a+1936|0,a+192|0),w=l[4+(t=a+1944|0)>>2],l[a+184>>2]=l[t>>2],l[a+188>>2]=w,t=l[a+1940>>2],l[a+176>>2]=l[a+1936>>2],l[a+180>>2]=t,rb(a+176|0))))break k;if(t=l[e+4>>2],l[a+168>>2]=l[e>>2],l[a+172>>2]=t,t=l[a+2820>>2],l[a+160>>2]=l[a+2816>>2],l[a+164>>2]=t,15&v[a+160|0]){if(r=l[e+4>>2],l[a+152>>2]=l[e>>2],l[a+156>>2]=r,e=l[a+2820>>2],l[a+144>>2]=l[a+2816>>2],l[a+148>>2]=e,s=bi(l[a+2892>>2],a+144|0,E,l[a+2852>>2]),!l[l[a+2848>>2]+28>>2])continue;break k}if(t=l[e+4>>2],l[a+136>>2]=l[e>>2],l[a+140>>2]=t,e=l[a+2820>>2],l[a+128>>2]=l[a+2816>>2],l[a+132>>2]=e,Ck(a+2576|0,a+128|0),e=l[r+4>>2],l[a+120>>2]=l[r>>2],l[a+124>>2]=e,e=l[a+2580>>2],l[a+112>>2]=l[a+2576>>2],l[a+116>>2]=e,t=l[82341],e=Gb(a+112|0),!(16384&t)){l[a+64>>2]=e,Sn(o,30653,a- -64|0),r=l[4+(e=a+2584|0)>>2],l[a+56>>2]=l[e>>2],l[a+60>>2]=r,e=l[a+2580>>2],l[a+48>>2]=l[a+2576>>2],l[a+52>>2]=e,zb(a+48|0),s=4;break k}if(l[a+96>>2]=e,Sn(o,30800,a+96|0),e=l[r+4>>2],l[a+88>>2]=l[r>>2],l[a+92>>2]=e,e=l[a+2580>>2],l[a+80>>2]=l[a+2576>>2],l[a+84>>2]=e,zb(a+80|0),l[l[a+2848>>2]+28>>2])break}e=l[l[a+2848>>2]+28>>2]?2:s}}else Fk(1024),e=2;o=e,r=l[75261],l[(e=r)+76>>2],(e=l[e>>2]>>>5&1)|xk(r)&&(l[a+32>>2]=lr(l[82952]),Sn(l[75398],30955,a+32|0),o=2),r=l[4+(e=a+2880|0)>>2],l[a+24>>2]=l[e>>2],l[a+28>>2]=r,e=l[a+2876>>2],l[a+16>>2]=l[a+2872>>2],l[a+20>>2]=e,zb(a+16|0),r=l[4+(e=a+2864|0)>>2],l[a+8>>2]=l[e>>2],l[a+12>>2]=r,e=l[a+2860>>2],l[a>>2]=l[a+2856>>2],l[a+4>>2]=e,zb(a),function(e){var r,a,i=0;if(ne=a=ne-32|0,r=l[e>>2],l[e>>2]=0,r){if((e=l[r+8>>2])&&he(e),e=0,l[r+20>>2]>0)for(;Lb(l[l[r+16>>2]+(e<<2)>>2]),(0|(e=e+1|0))<l[r+20>>2];);Lb(l[r+16>>2]),e=l[r+44>>2],l[a+24>>2]=l[r+40>>2],l[a+28>>2]=e,e=l[r+36>>2],l[a+16>>2]=l[r+32>>2],l[a+20>>2]=e,zb(a+16|0),i=l[4+(e=r+4160|0)>>2],l[a+8>>2]=l[e>>2],l[a+12>>2]=i,e=l[r+4156>>2],l[a>>2]=l[r+4152>>2],l[a+4>>2]=e,zb(a),Lb(r)}ne=a+32|0}(a+2848|0),Ue(a+2892|0);f:{if((0|o)>=10){if(s=0,4096&(e=l[82341])){s=o+-10|0;break f}if(!(8192&e))break f}s=o}return ne=a+2896|0,0|s}cn(28372,21,1,l[75398]),T(1),M()}ga(2,1),M()}Fk(1024),T(2),M()}!function(){var e=0,r=0;ne=e=ne-16|0,l[e>>2]=l[82340],Sn(r=l[75398],33327,e),cn(33465,72,1,r),T(2),M()}(),M()},G:function(){return 331808},H:Cb,I:function(){return 332400},J:function(){return 332408},K:function(){return 332412},L:function(e){return ne=e=ne-(e|=0)&-16,0|e},M:function(e){return 0|M()},N:function(e,r){r|=0,f[e|=0](r)}}}({Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,NaN:NaN,Infinity:1/0,Math:Math},e,r.buffer)}(qe,T,I)}},instantiate:function(e,r){return{then:function(a,i){a({instance:new R.Instance(new R.Module(e,r))})}}},RuntimeError:Error};function O(e,r,a,i){switch("*"===(a=a||"i8").charAt(a.length-1)&&(a="i32"),a){case"i1":case"i8":J[e>>0]=r;break;case"i16":K[e>>1]=r;break;case"i32":Z[e>>2]=r;break;case"i64":Ee=[r>>>0,(ye=r,+se(ye)>=1?ye>0?(0|oe(+ce(ye/4294967296),4294967295))>>>0:~~+te((ye-+(~~ye>>>0))/4294967296)>>>0:0)],Z[e>>2]=Ee[0],Z[e+4>>2]=Ee[1];break;case"float":$[e>>2]=r;break;case"double":Q[e>>3]=r;break;default:me("invalid type for setValue: "+a)}}P=[],"object"!=typeof R&&M("no native wasm support detected");var I=new R.Table({initial:177,maximum:177,element:"anyfunc"}),z=!1;function N(e,r){e||me("Assertion failed: "+r)}var j=0,U=3;function B(e,r,a,i){var f,k;"number"==typeof e?(f=!0,k=e):(f=!1,k=e.length);var b,n="string"==typeof r?r:null;if(b=a==U?i:[Xe,Ze,A][a](Math.max(k,n?1:r.length)),f){var s;for(i=b,N(0==(3&b)),s=b+(-4&k);i<s;i+=4)Z[i>>2]=0;for(s=b+k;i<s;)J[i++>>0]=0;return b}if("i8"===n)return e.subarray||e.slice?V.set(e,b):V.set(new Uint8Array(e),b),b;for(var t,c,o,u=0;u<k;){var l=e[u];0!==(t=n||r[u])?("i64"==t&&(t="i32"),O(b+u,l,t),o!==t&&(c=x(t),o=t),u+=c):u++}return b}var C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function L(e,r,a){for(var i=r+a,f=r;e[f]&&!(f>=i);)++f;if(f-r>16&&e.subarray&&C)return C.decode(e.subarray(r,f));for(var k="";r<f;){var b=e[r++];if(128&b){var n=63&e[r++];if(192!=(224&b)){var s=63&e[r++];if((b=224==(240&b)?(15&b)<<12|n<<6|s:(7&b)<<18|n<<12|s<<6|63&e[r++])<65536)k+=String.fromCharCode(b);else{var t=b-65536;k+=String.fromCharCode(55296|t>>10,56320|1023&t)}}else k+=String.fromCharCode((31&b)<<6|n)}else k+=String.fromCharCode(b)}return k}function H(e,r){return e?L(V,e,r):""}function q(e,r,a,i){if(!(i>0))return 0;for(var f=a,k=a+i-1,b=0;b<e.length;++b){var n=e.charCodeAt(b);if(n>=55296&&n<=57343)n=65536+((1023&n)<<10)|1023&e.charCodeAt(++b);if(n<=127){if(a>=k)break;r[a++]=n}else if(n<=2047){if(a+1>=k)break;r[a++]=192|n>>6,r[a++]=128|63&n}else if(n<=65535){if(a+2>=k)break;r[a++]=224|n>>12,r[a++]=128|n>>6&63,r[a++]=128|63&n}else{if(a+3>=k)break;r[a++]=240|n>>18,r[a++]=128|n>>12&63,r[a++]=128|n>>6&63,r[a++]=128|63&n}}return r[a]=0,a-f}function Y(e,r,a){return q(e,V,r,a)}function W(e){for(var r=0,a=0;a<e.length;++a){var i=e.charCodeAt(a);i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),i<=127?++r:r+=i<=2047?2:i<=65535?3:4}return r}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");function G(e){var r=W(e)+1,a=Ze(r);return q(e,J,a,r),a}var X,J,V,K,Z,$,Q;var ee,re=332416,ae=r.TOTAL_MEMORY||33554432;function ie(e){for(;e.length>0;){var a=e.shift();if("function"!=typeof a){var i=a.func;"number"==typeof i?void 0===a.arg?r.dynCall_v(i):r.dynCall_vi(i,a.arg):i(void 0===a.arg?null:a.arg)}else a()}}(T=r.wasmMemory?r.wasmMemory:new R.Memory({initial:ae/65536,maximum:ae/65536}))&&(X=T.buffer),ae=X.byteLength,X=ee=X,r.HEAP8=J=new Int8Array(ee),r.HEAP16=K=new Int16Array(ee),r.HEAP32=Z=new Int32Array(ee),r.HEAPU8=V=new Uint8Array(ee),r.HEAPU16=new Uint16Array(ee),r.HEAPU32=new Uint32Array(ee),r.HEAPF32=$=new Float32Array(ee),r.HEAPF64=Q=new Float64Array(ee),Z[re>>2]=5575456;var fe=[],ke=[],be=[],ne=[];var se=Math.abs,te=Math.ceil,ce=Math.floor,oe=Math.min,ue=0,le=null,ve=null;function de(e){ue++,r.monitorRunDependencies&&r.monitorRunDependencies(ue)}function he(e){if(ue--,r.monitorRunDependencies&&r.monitorRunDependencies(ue),0==ue&&(null!==le&&(clearInterval(le),le=null),ve)){var a=ve;ve=null,a()}}function me(e){throw r.onAbort&&r.onAbort(e),F(e+=""),M(e),z=!0,1,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new R.RuntimeError(e)}r.preloadedImages={},r.preloadedAudios={};var we="jq.asm.js.mem",pe="data:application/octet-stream;base64,";function ge(e){return String.prototype.startsWith?e.startsWith(pe):0===e.indexOf(pe)}var ye,Ee,_e="jq.asm.wasm";function De(){try{if(P)return new Uint8Array(P);if(y)return y(_e);throw"both async and sync fetching of the wasm failed"}catch(e){me(e)}}function Se(){var e=function(){var e=new Error;if(!e.stack){try{throw new Error(0)}catch(r){e=r}if(!e.stack)return"(no stack trace available)"}return e.stack.toString()}();return r.extraStackTrace&&(e+="\n"+r.extraStackTrace()),e.replace(/\b_Z[\w\d_]+/g,function(e){var r=e;return e===r?e:r+" ["+e+"]"})}ge(_e)||(_e=S(_e)),ke.push({func:function(){Ge()}});var Fe={splitPath:function(e){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1)},normalizeArray:function(e,r){for(var a=0,i=e.length-1;i>=0;i--){var f=e[i];"."===f?e.splice(i,1):".."===f?(e.splice(i,1),a++):a&&(e.splice(i,1),a--)}if(r)for(;a;a--)e.unshift("..");return e},normalize:function(e){var r="/"===e.charAt(0),a="/"===e.substr(-1);return(e=Fe.normalizeArray(e.split("/").filter(function(e){return!!e}),!r).join("/"))||r||(e="."),e&&a&&(e+="/"),(r?"/":"")+e},dirname:function(e){var r=Fe.splitPath(e),a=r[0],i=r[1];return a||i?(i&&(i=i.substr(0,i.length-1)),a+i):"."},basename:function(e){if("/"===e)return"/";var r=e.lastIndexOf("/");return-1===r?e:e.substr(r+1)},extname:function(e){return Fe.splitPath(e)[3]},join:function(){var e=Array.prototype.slice.call(arguments,0);return Fe.normalize(e.join("/"))},join2:function(e,r){return Fe.normalize(e+"/"+r)}};function Me(e){return r.___errno_location&&(Z[r.___errno_location()>>2]=e),e}var Ae={resolve:function(){for(var e="",r=!1,a=arguments.length-1;a>=-1&&!r;a--){var i=a>=0?arguments[a]:Te.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");if(!i)return"";e=i+"/"+e,r="/"===i.charAt(0)}return e=Fe.normalizeArray(e.split("/").filter(function(e){return!!e}),!r).join("/"),(r?"/":"")+e||"."},relative:function(e,r){function a(e){for(var r=0;r<e.length&&""===e[r];r++);for(var a=e.length-1;a>=0&&""===e[a];a--);return r>a?[]:e.slice(r,a-r+1)}e=Ae.resolve(e).substr(1),r=Ae.resolve(r).substr(1);for(var i=a(e.split("/")),f=a(r.split("/")),k=Math.min(i.length,f.length),b=k,n=0;n<k;n++)if(i[n]!==f[n]){b=n;break}var s=[];for(n=b;n<i.length;n++)s.push("..");return(s=s.concat(f.slice(b))).join("/")}},xe={ttys:[],init:function(){},shutdown:function(){},register:function(e,r){xe.ttys[e]={input:[],output:[],ops:r},Te.registerDevice(e,xe.stream_ops)},stream_ops:{open:function(e){var r=xe.ttys[e.node.rdev];if(!r)throw new Te.ErrnoError(43);e.tty=r,e.seekable=!1},close:function(e){e.tty.ops.flush(e.tty)},flush:function(e){e.tty.ops.flush(e.tty)},read:function(e,r,a,i,f){if(!e.tty||!e.tty.ops.get_char)throw new Te.ErrnoError(60);for(var k=0,b=0;b<i;b++){var n;try{n=e.tty.ops.get_char(e.tty)}catch(e){throw new Te.ErrnoError(29)}if(void 0===n&&0===k)throw new Te.ErrnoError(6);if(null===n||void 0===n)break;k++,r[a+b]=n}return k&&(e.node.timestamp=Date.now()),k},write:function(e,r,a,i,f){if(!e.tty||!e.tty.ops.put_char)throw new Te.ErrnoError(60);try{for(var k=0;k<i;k++)e.tty.ops.put_char(e.tty,r[a+k])}catch(e){throw new Te.ErrnoError(29)}return i&&(e.node.timestamp=Date.now()),k}},default_tty_ops:{get_char:function(e){if(!e.input.length){var r=null;if(o){var a=Buffer.alloc?Buffer.alloc(256):new Buffer(256),i=0;try{i=E.readSync(process.stdin.fd,a,0,256,null)}catch(e){if(-1==e.toString().indexOf("EOF"))throw e;i=0}r=i>0?a.slice(0,i).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(r=window.prompt("Input: "))&&(r+="\n"):"function"==typeof readline&&null!==(r=readline())&&(r+="\n");if(!r)return null;e.input=He(r,!0)}return e.input.shift()},put_char:function(e,r){null===r||10===r?(F(L(e.output,0)),e.output=[]):0!=r&&e.output.push(r)},flush:function(e){e.output&&e.output.length>0&&(F(L(e.output,0)),e.output=[])}},default_tty1_ops:{put_char:function(e,r){null===r||10===r?(M(L(e.output,0)),e.output=[]):0!=r&&e.output.push(r)},flush:function(e){e.output&&e.output.length>0&&(M(L(e.output,0)),e.output=[])}}},Pe={ops_table:null,mount:function(e){return Pe.createNode(null,"/",16895,0)},createNode:function(e,r,a,i){if(Te.isBlkdev(a)||Te.isFIFO(a))throw new Te.ErrnoError(63);Pe.ops_table||(Pe.ops_table={dir:{node:{getattr:Pe.node_ops.getattr,setattr:Pe.node_ops.setattr,lookup:Pe.node_ops.lookup,mknod:Pe.node_ops.mknod,rename:Pe.node_ops.rename,unlink:Pe.node_ops.unlink,rmdir:Pe.node_ops.rmdir,readdir:Pe.node_ops.readdir,symlink:Pe.node_ops.symlink},stream:{llseek:Pe.stream_ops.llseek}},file:{node:{getattr:Pe.node_ops.getattr,setattr:Pe.node_ops.setattr},stream:{llseek:Pe.stream_ops.llseek,read:Pe.stream_ops.read,write:Pe.stream_ops.write,allocate:Pe.stream_ops.allocate,mmap:Pe.stream_ops.mmap,msync:Pe.stream_ops.msync}},link:{node:{getattr:Pe.node_ops.getattr,setattr:Pe.node_ops.setattr,readlink:Pe.node_ops.readlink},stream:{}},chrdev:{node:{getattr:Pe.node_ops.getattr,setattr:Pe.node_ops.setattr},stream:Te.chrdev_stream_ops}});var f=Te.createNode(e,r,a,i);return Te.isDir(f.mode)?(f.node_ops=Pe.ops_table.dir.node,f.stream_ops=Pe.ops_table.dir.stream,f.contents={}):Te.isFile(f.mode)?(f.node_ops=Pe.ops_table.file.node,f.stream_ops=Pe.ops_table.file.stream,f.usedBytes=0,f.contents=null):Te.isLink(f.mode)?(f.node_ops=Pe.ops_table.link.node,f.stream_ops=Pe.ops_table.link.stream):Te.isChrdev(f.mode)&&(f.node_ops=Pe.ops_table.chrdev.node,f.stream_ops=Pe.ops_table.chrdev.stream),f.timestamp=Date.now(),e&&(e.contents[r]=f),f},getFileDataAsRegularArray:function(e){if(e.contents&&e.contents.subarray){for(var r=[],a=0;a<e.usedBytes;++a)r.push(e.contents[a]);return r}return e.contents},getFileDataAsTypedArray:function(e){return e.contents?e.contents.subarray?e.contents.subarray(0,e.usedBytes):new Uint8Array(e.contents):new Uint8Array},expandFileStorage:function(e,r){var a=e.contents?e.contents.length:0;if(!(a>=r)){r=Math.max(r,a*(a<1048576?2:1.125)|0),0!=a&&(r=Math.max(r,256));var i=e.contents;e.contents=new Uint8Array(r),e.usedBytes>0&&e.contents.set(i.subarray(0,e.usedBytes),0)}},resizeFileStorage:function(e,r){if(e.usedBytes!=r){if(0==r)return e.contents=null,void(e.usedBytes=0);if(!e.contents||e.contents.subarray){var a=e.contents;return e.contents=new Uint8Array(new ArrayBuffer(r)),a&&e.contents.set(a.subarray(0,Math.min(r,e.usedBytes))),void(e.usedBytes=r)}if(e.contents||(e.contents=[]),e.contents.length>r)e.contents.length=r;else for(;e.contents.length<r;)e.contents.push(0);e.usedBytes=r}},node_ops:{getattr:function(e){var r={};return r.dev=Te.isChrdev(e.mode)?e.id:1,r.ino=e.id,r.mode=e.mode,r.nlink=1,r.uid=0,r.gid=0,r.rdev=e.rdev,Te.isDir(e.mode)?r.size=4096:Te.isFile(e.mode)?r.size=e.usedBytes:Te.isLink(e.mode)?r.size=e.link.length:r.size=0,r.atime=new Date(e.timestamp),r.mtime=new Date(e.timestamp),r.ctime=new Date(e.timestamp),r.blksize=4096,r.blocks=Math.ceil(r.size/r.blksize),r},setattr:function(e,r){void 0!==r.mode&&(e.mode=r.mode),void 0!==r.timestamp&&(e.timestamp=r.timestamp),void 0!==r.size&&Pe.resizeFileStorage(e,r.size)},lookup:function(e,r){throw Te.genericErrors[44]},mknod:function(e,r,a,i){return Pe.createNode(e,r,a,i)},rename:function(e,r,a){if(Te.isDir(e.mode)){var i;try{i=Te.lookupNode(r,a)}catch(e){}if(i)for(var f in i.contents)throw new Te.ErrnoError(55)}delete e.parent.contents[e.name],e.name=a,r.contents[a]=e,e.parent=r},unlink:function(e,r){delete e.contents[r]},rmdir:function(e,r){var a=Te.lookupNode(e,r);for(var i in a.contents)throw new Te.ErrnoError(55);delete e.contents[r]},readdir:function(e){var r=[".",".."];for(var a in e.contents)e.contents.hasOwnProperty(a)&&r.push(a);return r},symlink:function(e,r,a){var i=Pe.createNode(e,r,41471,0);return i.link=a,i},readlink:function(e){if(!Te.isLink(e.mode))throw new Te.ErrnoError(28);return e.link}},stream_ops:{read:function(e,r,a,i,f){var k=e.node.contents;if(f>=e.node.usedBytes)return 0;var b=Math.min(e.node.usedBytes-f,i);if(b>8&&k.subarray)r.set(k.subarray(f,f+b),a);else for(var n=0;n<b;n++)r[a+n]=k[f+n];return b},write:function(e,r,a,i,f,k){if(!i)return 0;var b=e.node;if(b.timestamp=Date.now(),r.subarray&&(!b.contents||b.contents.subarray)){if(k)return b.contents=r.subarray(a,a+i),b.usedBytes=i,i;if(0===b.usedBytes&&0===f)return b.contents=new Uint8Array(r.subarray(a,a+i)),b.usedBytes=i,i;if(f+i<=b.usedBytes)return b.contents.set(r.subarray(a,a+i),f),i}if(Pe.expandFileStorage(b,f+i),b.contents.subarray&&r.subarray)b.contents.set(r.subarray(a,a+i),f);else for(var n=0;n<i;n++)b.contents[f+n]=r[a+n];return b.usedBytes=Math.max(b.usedBytes,f+i),i},llseek:function(e,r,a){var i=r;if(1===a?i+=e.position:2===a&&Te.isFile(e.node.mode)&&(i+=e.node.usedBytes),i<0)throw new Te.ErrnoError(28);return i},allocate:function(e,r,a){Pe.expandFileStorage(e.node,r+a),e.node.usedBytes=Math.max(e.node.usedBytes,r+a)},mmap:function(e,r,a,i,f,k,b){if(!Te.isFile(e.node.mode))throw new Te.ErrnoError(43);var n,s,t=e.node.contents;if(2&b||t.buffer!==r&&t.buffer!==r.buffer){(f>0||f+i<e.node.usedBytes)&&(t=t.subarray?t.subarray(f,f+i):Array.prototype.slice.call(t,f,f+i)),s=!0;var c=r.buffer==J.buffer;if(!(n=Xe(i)))throw new Te.ErrnoError(48);(c?J:r).set(t,n)}else s=!1,n=t.byteOffset;return{ptr:n,allocated:s}},msync:function(e,r,a,i,f){if(!Te.isFile(e.node.mode))throw new Te.ErrnoError(43);if(2&f)return 0;Pe.stream_ops.write(e,r,0,i,a,!1);return 0}}},Te={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof Te.ErrnoError))throw e+" : "+Se();return Me(e.errno)},lookupPath:function(e,r){if(e=Ae.resolve(Te.cwd(),e),r=r||{},!e)return{path:"",node:null};var a={follow_mount:!0,recurse_count:0};for(var i in a)void 0===r[i]&&(r[i]=a[i]);if(r.recurse_count>8)throw new Te.ErrnoError(32);for(var f=Fe.normalizeArray(e.split("/").filter(function(e){return!!e}),!1),k=Te.root,b="/",n=0;n<f.length;n++){var s=n===f.length-1;if(s&&r.parent)break;if(k=Te.lookupNode(k,f[n]),b=Fe.join2(b,f[n]),Te.isMountpoint(k)&&(!s||s&&r.follow_mount)&&(k=k.mounted.root),!s||r.follow)for(var t=0;Te.isLink(k.mode);){var c=Te.readlink(b);if(b=Ae.resolve(Fe.dirname(b),c),k=Te.lookupPath(b,{recurse_count:r.recurse_count}).node,t++>40)throw new Te.ErrnoError(32)}}return{path:b,node:k}},getPath:function(e){for(var r;;){if(Te.isRoot(e)){var a=e.mount.mountpoint;return r?"/"!==a[a.length-1]?a+"/"+r:a+r:a}r=r?e.name+"/"+r:e.name,e=e.parent}},hashName:function(e,r){for(var a=0,i=0;i<r.length;i++)a=(a<<5)-a+r.charCodeAt(i)|0;return(e+a>>>0)%Te.nameTable.length},hashAddNode:function(e){var r=Te.hashName(e.parent.id,e.name);e.name_next=Te.nameTable[r],Te.nameTable[r]=e},hashRemoveNode:function(e){var r=Te.hashName(e.parent.id,e.name);if(Te.nameTable[r]===e)Te.nameTable[r]=e.name_next;else for(var a=Te.nameTable[r];a;){if(a.name_next===e){a.name_next=e.name_next;break}a=a.name_next}},lookupNode:function(e,r){var a=Te.mayLookup(e);if(a)throw new Te.ErrnoError(a,e);for(var i=Te.hashName(e.id,r),f=Te.nameTable[i];f;f=f.name_next){var k=f.name;if(f.parent.id===e.id&&k===r)return f}return Te.lookup(e,r)},createNode:function(e,r,a,i){if(!Te.FSNode){Te.FSNode=function(e,r,a,i){e||(e=this),this.parent=e,this.mount=e.mount,this.mounted=null,this.id=Te.nextInode++,this.name=r,this.mode=a,this.node_ops={},this.stream_ops={},this.rdev=i},Te.FSNode.prototype={};Object.defineProperties(Te.FSNode.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(e){e?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(e){e?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return Te.isDir(this.mode)}},isDevice:{get:function(){return Te.isChrdev(this.mode)}}})}var f=new Te.FSNode(e,r,a,i);return Te.hashAddNode(f),f},destroyNode:function(e){Te.hashRemoveNode(e)},isRoot:function(e){return e===e.parent},isMountpoint:function(e){return!!e.mounted},isFile:function(e){return 32768==(61440&e)},isDir:function(e){return 16384==(61440&e)},isLink:function(e){return 40960==(61440&e)},isChrdev:function(e){return 8192==(61440&e)},isBlkdev:function(e){return 24576==(61440&e)},isFIFO:function(e){return 4096==(61440&e)},isSocket:function(e){return 49152==(49152&e)},flagModes:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(e){var r=Te.flagModes[e];if(void 0===r)throw new Error("Unknown file open mode: "+e);return r},flagsToPermissionString:function(e){var r=["r","w","rw"][3&e];return 512&e&&(r+="w"),r},nodePermissions:function(e,r){return Te.ignorePermissions?0:(-1===r.indexOf("r")||292&e.mode)&&(-1===r.indexOf("w")||146&e.mode)&&(-1===r.indexOf("x")||73&e.mode)?0:2},mayLookup:function(e){var r=Te.nodePermissions(e,"x");return r||(e.node_ops.lookup?0:2)},mayCreate:function(e,r){try{Te.lookupNode(e,r);return 20}catch(e){}return Te.nodePermissions(e,"wx")},mayDelete:function(e,r,a){var i;try{i=Te.lookupNode(e,r)}catch(e){return e.errno}var f=Te.nodePermissions(e,"wx");if(f)return f;if(a){if(!Te.isDir(i.mode))return 54;if(Te.isRoot(i)||Te.getPath(i)===Te.cwd())return 10}else if(Te.isDir(i.mode))return 31;return 0},mayOpen:function(e,r){return e?Te.isLink(e.mode)?32:Te.isDir(e.mode)&&("r"!==Te.flagsToPermissionString(r)||512&r)?31:Te.nodePermissions(e,Te.flagsToPermissionString(r)):44},MAX_OPEN_FDS:4096,nextfd:function(e,r){e=e||0,r=r||Te.MAX_OPEN_FDS;for(var a=e;a<=r;a++)if(!Te.streams[a])return a;throw new Te.ErrnoError(33)},getStream:function(e){return Te.streams[e]},createStream:function(e,r,a){Te.FSStream||(Te.FSStream=function(){},Te.FSStream.prototype={},Object.defineProperties(Te.FSStream.prototype,{object:{get:function(){return this.node},set:function(e){this.node=e}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}}));var i=new Te.FSStream;for(var f in e)i[f]=e[f];e=i;var k=Te.nextfd(r,a);return e.fd=k,Te.streams[k]=e,e},closeStream:function(e){Te.streams[e]=null},chrdev_stream_ops:{open:function(e){var r=Te.getDevice(e.node.rdev);e.stream_ops=r.stream_ops,e.stream_ops.open&&e.stream_ops.open(e)},llseek:function(){throw new Te.ErrnoError(70)}},major:function(e){return e>>8},minor:function(e){return 255&e},makedev:function(e,r){return e<<8|r},registerDevice:function(e,r){Te.devices[e]={stream_ops:r}},getDevice:function(e){return Te.devices[e]},getMounts:function(e){for(var r=[],a=[e];a.length;){var i=a.pop();r.push(i),a.push.apply(a,i.mounts)}return r},syncfs:function(e,r){"function"==typeof e&&(r=e,e=!1),Te.syncFSRequests++,Te.syncFSRequests>1&&console.log("warning: "+Te.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var a=Te.getMounts(Te.root.mount),i=0;function f(e){return Te.syncFSRequests--,r(e)}function k(e){if(e)return k.errored?void 0:(k.errored=!0,f(e));++i>=a.length&&f(null)}a.forEach(function(r){if(!r.type.syncfs)return k(null);r.type.syncfs(r,e,k)})},mount:function(e,r,a){var i,f="/"===a,k=!a;if(f&&Te.root)throw new Te.ErrnoError(10);if(!f&&!k){var b=Te.lookupPath(a,{follow_mount:!1});if(a=b.path,i=b.node,Te.isMountpoint(i))throw new Te.ErrnoError(10);if(!Te.isDir(i.mode))throw new Te.ErrnoError(54)}var n={type:e,opts:r,mountpoint:a,mounts:[]},s=e.mount(n);return s.mount=n,n.root=s,f?Te.root=s:i&&(i.mounted=n,i.mount&&i.mount.mounts.push(n)),s},unmount:function(e){var r=Te.lookupPath(e,{follow_mount:!1});if(!Te.isMountpoint(r.node))throw new Te.ErrnoError(28);var a=r.node,i=a.mounted,f=Te.getMounts(i);Object.keys(Te.nameTable).forEach(function(e){for(var r=Te.nameTable[e];r;){var a=r.name_next;-1!==f.indexOf(r.mount)&&Te.destroyNode(r),r=a}}),a.mounted=null;var k=a.mount.mounts.indexOf(i);a.mount.mounts.splice(k,1)},lookup:function(e,r){return e.node_ops.lookup(e,r)},mknod:function(e,r,a){var i=Te.lookupPath(e,{parent:!0}).node,f=Fe.basename(e);if(!f||"."===f||".."===f)throw new Te.ErrnoError(28);var k=Te.mayCreate(i,f);if(k)throw new Te.ErrnoError(k);if(!i.node_ops.mknod)throw new Te.ErrnoError(63);return i.node_ops.mknod(i,f,r,a)},create:function(e,r){return r=void 0!==r?r:438,r&=4095,r|=32768,Te.mknod(e,r,0)},mkdir:function(e,r){return r=void 0!==r?r:511,r&=1023,r|=16384,Te.mknod(e,r,0)},mkdirTree:function(e,r){for(var a=e.split("/"),i="",f=0;f<a.length;++f)if(a[f]){i+="/"+a[f];try{Te.mkdir(i,r)}catch(e){if(20!=e.errno)throw e}}},mkdev:function(e,r,a){return void 0===a&&(a=r,r=438),r|=8192,Te.mknod(e,r,a)},symlink:function(e,r){if(!Ae.resolve(e))throw new Te.ErrnoError(44);var a=Te.lookupPath(r,{parent:!0}).node;if(!a)throw new Te.ErrnoError(44);var i=Fe.basename(r),f=Te.mayCreate(a,i);if(f)throw new Te.ErrnoError(f);if(!a.node_ops.symlink)throw new Te.ErrnoError(63);return a.node_ops.symlink(a,i,e)},rename:function(e,r){var a,i,f=Fe.dirname(e),k=Fe.dirname(r),b=Fe.basename(e),n=Fe.basename(r);try{a=Te.lookupPath(e,{parent:!0}).node,i=Te.lookupPath(r,{parent:!0}).node}catch(e){throw new Te.ErrnoError(10)}if(!a||!i)throw new Te.ErrnoError(44);if(a.mount!==i.mount)throw new Te.ErrnoError(75);var s,t=Te.lookupNode(a,b),c=Ae.relative(e,k);if("."!==c.charAt(0))throw new Te.ErrnoError(28);if("."!==(c=Ae.relative(r,f)).charAt(0))throw new Te.ErrnoError(55);try{s=Te.lookupNode(i,n)}catch(e){}if(t!==s){var o=Te.isDir(t.mode),u=Te.mayDelete(a,b,o);if(u)throw new Te.ErrnoError(u);if(u=s?Te.mayDelete(i,n,o):Te.mayCreate(i,n))throw new Te.ErrnoError(u);if(!a.node_ops.rename)throw new Te.ErrnoError(63);if(Te.isMountpoint(t)||s&&Te.isMountpoint(s))throw new Te.ErrnoError(10);if(i!==a&&(u=Te.nodePermissions(a,"w")))throw new Te.ErrnoError(u);try{Te.trackingDelegate.willMovePath&&Te.trackingDelegate.willMovePath(e,r)}catch(a){console.log("FS.trackingDelegate['willMovePath']('"+e+"', '"+r+"') threw an exception: "+a.message)}Te.hashRemoveNode(t);try{a.node_ops.rename(t,i,n)}catch(e){throw e}finally{Te.hashAddNode(t)}try{Te.trackingDelegate.onMovePath&&Te.trackingDelegate.onMovePath(e,r)}catch(a){console.log("FS.trackingDelegate['onMovePath']('"+e+"', '"+r+"') threw an exception: "+a.message)}}},rmdir:function(e){var r=Te.lookupPath(e,{parent:!0}).node,a=Fe.basename(e),i=Te.lookupNode(r,a),f=Te.mayDelete(r,a,!0);if(f)throw new Te.ErrnoError(f);if(!r.node_ops.rmdir)throw new Te.ErrnoError(63);if(Te.isMountpoint(i))throw new Te.ErrnoError(10);try{Te.trackingDelegate.willDeletePath&&Te.trackingDelegate.willDeletePath(e)}catch(r){console.log("FS.trackingDelegate['willDeletePath']('"+e+"') threw an exception: "+r.message)}r.node_ops.rmdir(r,a),Te.destroyNode(i);try{Te.trackingDelegate.onDeletePath&&Te.trackingDelegate.onDeletePath(e)}catch(r){console.log("FS.trackingDelegate['onDeletePath']('"+e+"') threw an exception: "+r.message)}},readdir:function(e){var r=Te.lookupPath(e,{follow:!0}).node;if(!r.node_ops.readdir)throw new Te.ErrnoError(54);return r.node_ops.readdir(r)},unlink:function(e){var r=Te.lookupPath(e,{parent:!0}).node,a=Fe.basename(e),i=Te.lookupNode(r,a),f=Te.mayDelete(r,a,!1);if(f)throw new Te.ErrnoError(f);if(!r.node_ops.unlink)throw new Te.ErrnoError(63);if(Te.isMountpoint(i))throw new Te.ErrnoError(10);try{Te.trackingDelegate.willDeletePath&&Te.trackingDelegate.willDeletePath(e)}catch(r){console.log("FS.trackingDelegate['willDeletePath']('"+e+"') threw an exception: "+r.message)}r.node_ops.unlink(r,a),Te.destroyNode(i);try{Te.trackingDelegate.onDeletePath&&Te.trackingDelegate.onDeletePath(e)}catch(r){console.log("FS.trackingDelegate['onDeletePath']('"+e+"') threw an exception: "+r.message)}},readlink:function(e){var r=Te.lookupPath(e).node;if(!r)throw new Te.ErrnoError(44);if(!r.node_ops.readlink)throw new Te.ErrnoError(28);return Ae.resolve(Te.getPath(r.parent),r.node_ops.readlink(r))},stat:function(e,r){var a=Te.lookupPath(e,{follow:!r}).node;if(!a)throw new Te.ErrnoError(44);if(!a.node_ops.getattr)throw new Te.ErrnoError(63);return a.node_ops.getattr(a)},lstat:function(e){return Te.stat(e,!0)},chmod:function(e,r,a){var i;"string"==typeof e?i=Te.lookupPath(e,{follow:!a}).node:i=e;if(!i.node_ops.setattr)throw new Te.ErrnoError(63);i.node_ops.setattr(i,{mode:4095&r|-4096&i.mode,timestamp:Date.now()})},lchmod:function(e,r){Te.chmod(e,r,!0)},fchmod:function(e,r){var a=Te.getStream(e);if(!a)throw new Te.ErrnoError(8);Te.chmod(a.node,r)},chown:function(e,r,a,i){var f;"string"==typeof e?f=Te.lookupPath(e,{follow:!i}).node:f=e;if(!f.node_ops.setattr)throw new Te.ErrnoError(63);f.node_ops.setattr(f,{timestamp:Date.now()})},lchown:function(e,r,a){Te.chown(e,r,a,!0)},fchown:function(e,r,a){var i=Te.getStream(e);if(!i)throw new Te.ErrnoError(8);Te.chown(i.node,r,a)},truncate:function(e,r){if(r<0)throw new Te.ErrnoError(28);var a;"string"==typeof e?a=Te.lookupPath(e,{follow:!0}).node:a=e;if(!a.node_ops.setattr)throw new Te.ErrnoError(63);if(Te.isDir(a.mode))throw new Te.ErrnoError(31);if(!Te.isFile(a.mode))throw new Te.ErrnoError(28);var i=Te.nodePermissions(a,"w");if(i)throw new Te.ErrnoError(i);a.node_ops.setattr(a,{size:r,timestamp:Date.now()})},ftruncate:function(e,r){var a=Te.getStream(e);if(!a)throw new Te.ErrnoError(8);if(0==(2097155&a.flags))throw new Te.ErrnoError(28);Te.truncate(a.node,r)},utime:function(e,r,a){var i=Te.lookupPath(e,{follow:!0}).node;i.node_ops.setattr(i,{timestamp:Math.max(r,a)})},open:function(e,a,i,f,k){if(""===e)throw new Te.ErrnoError(44);var b;if(a="string"==typeof a?Te.modeStringToFlags(a):a,i=void 0===i?438:i,i=64&a?4095&i|32768:0,"object"==typeof e)b=e;else{e=Fe.normalize(e);try{b=Te.lookupPath(e,{follow:!(131072&a)}).node}catch(e){}}var n=!1;if(64&a)if(b){if(128&a)throw new Te.ErrnoError(20)}else b=Te.mknod(e,i,0),n=!0;if(!b)throw new Te.ErrnoError(44);if(Te.isChrdev(b.mode)&&(a&=-513),65536&a&&!Te.isDir(b.mode))throw new Te.ErrnoError(54);if(!n){var s=Te.mayOpen(b,a);if(s)throw new Te.ErrnoError(s)}512&a&&Te.truncate(b,0),a&=-641;var t=Te.createStream({node:b,path:Te.getPath(b),flags:a,seekable:!0,position:0,stream_ops:b.stream_ops,ungotten:[],error:!1},f,k);t.stream_ops.open&&t.stream_ops.open(t),!r.logReadFiles||1&a||(Te.readFiles||(Te.readFiles={}),e in Te.readFiles||(Te.readFiles[e]=1,console.log("FS.trackingDelegate error on read file: "+e)));try{if(Te.trackingDelegate.onOpenFile){var c=0;1!=(2097155&a)&&(c|=Te.tracking.openFlags.READ),0!=(2097155&a)&&(c|=Te.tracking.openFlags.WRITE),Te.trackingDelegate.onOpenFile(e,c)}}catch(r){console.log("FS.trackingDelegate['onOpenFile']('"+e+"', flags) threw an exception: "+r.message)}return t},close:function(e){if(Te.isClosed(e))throw new Te.ErrnoError(8);e.getdents&&(e.getdents=null);try{e.stream_ops.close&&e.stream_ops.close(e)}catch(e){throw e}finally{Te.closeStream(e.fd)}e.fd=null},isClosed:function(e){return null===e.fd},llseek:function(e,r,a){if(Te.isClosed(e))throw new Te.ErrnoError(8);if(!e.seekable||!e.stream_ops.llseek)throw new Te.ErrnoError(70);if(0!=a&&1!=a&&2!=a)throw new Te.ErrnoError(28);return e.position=e.stream_ops.llseek(e,r,a),e.ungotten=[],e.position},read:function(e,r,a,i,f){if(i<0||f<0)throw new Te.ErrnoError(28);if(Te.isClosed(e))throw new Te.ErrnoError(8);if(1==(2097155&e.flags))throw new Te.ErrnoError(8);if(Te.isDir(e.node.mode))throw new Te.ErrnoError(31);if(!e.stream_ops.read)throw new Te.ErrnoError(28);var k=void 0!==f;if(k){if(!e.seekable)throw new Te.ErrnoError(70)}else f=e.position;var b=e.stream_ops.read(e,r,a,i,f);return k||(e.position+=b),b},write:function(e,r,a,i,f,k){if(i<0||f<0)throw new Te.ErrnoError(28);if(Te.isClosed(e))throw new Te.ErrnoError(8);if(0==(2097155&e.flags))throw new Te.ErrnoError(8);if(Te.isDir(e.node.mode))throw new Te.ErrnoError(31);if(!e.stream_ops.write)throw new Te.ErrnoError(28);1024&e.flags&&Te.llseek(e,0,2);var b=void 0!==f;if(b){if(!e.seekable)throw new Te.ErrnoError(70)}else f=e.position;var n=e.stream_ops.write(e,r,a,i,f,k);b||(e.position+=n);try{e.path&&Te.trackingDelegate.onWriteToFile&&Te.trackingDelegate.onWriteToFile(e.path)}catch(r){console.log("FS.trackingDelegate['onWriteToFile']('"+e.path+"') threw an exception: "+r.message)}return n},allocate:function(e,r,a){if(Te.isClosed(e))throw new Te.ErrnoError(8);if(r<0||a<=0)throw new Te.ErrnoError(28);if(0==(2097155&e.flags))throw new Te.ErrnoError(8);if(!Te.isFile(e.node.mode)&&!Te.isDir(e.node.mode))throw new Te.ErrnoError(43);if(!e.stream_ops.allocate)throw new Te.ErrnoError(138);e.stream_ops.allocate(e,r,a)},mmap:function(e,r,a,i,f,k,b){if(0!=(2&k)&&0==(2&b)&&2!=(2097155&e.flags))throw new Te.ErrnoError(2);if(1==(2097155&e.flags))throw new Te.ErrnoError(2);if(!e.stream_ops.mmap)throw new Te.ErrnoError(43);return e.stream_ops.mmap(e,r,a,i,f,k,b)},msync:function(e,r,a,i,f){return e&&e.stream_ops.msync?e.stream_ops.msync(e,r,a,i,f):0},munmap:function(e){return 0},ioctl:function(e,r,a){if(!e.stream_ops.ioctl)throw new Te.ErrnoError(59);return e.stream_ops.ioctl(e,r,a)},readFile:function(e,r){if((r=r||{}).flags=r.flags||"r",r.encoding=r.encoding||"binary","utf8"!==r.encoding&&"binary"!==r.encoding)throw new Error('Invalid encoding type "'+r.encoding+'"');var a,i=Te.open(e,r.flags),f=Te.stat(e).size,k=new Uint8Array(f);return Te.read(i,k,0,f,0),"utf8"===r.encoding?a=L(k,0):"binary"===r.encoding&&(a=k),Te.close(i),a},writeFile:function(e,r,a){(a=a||{}).flags=a.flags||"w";var i=Te.open(e,a.flags,a.mode);if("string"==typeof r){var f=new Uint8Array(W(r)+1),k=q(r,f,0,f.length);Te.write(i,f,0,k,void 0,a.canOwn)}else{if(!ArrayBuffer.isView(r))throw new Error("Unsupported data type");Te.write(i,r,0,r.byteLength,void 0,a.canOwn)}Te.close(i)},cwd:function(){return Te.currentPath},chdir:function(e){var r=Te.lookupPath(e,{follow:!0});if(null===r.node)throw new Te.ErrnoError(44);if(!Te.isDir(r.node.mode))throw new Te.ErrnoError(54);var a=Te.nodePermissions(r.node,"x");if(a)throw new Te.ErrnoError(a);Te.currentPath=r.path},createDefaultDirectories:function(){Te.mkdir("/tmp"),Te.mkdir("/home"),Te.mkdir("/home/web_user")},createDefaultDevices:function(){var e;if(Te.mkdir("/dev"),Te.registerDevice(Te.makedev(1,3),{read:function(){return 0},write:function(e,r,a,i,f){return i}}),Te.mkdev("/dev/null",Te.makedev(1,3)),xe.register(Te.makedev(5,0),xe.default_tty_ops),xe.register(Te.makedev(6,0),xe.default_tty1_ops),Te.mkdev("/dev/tty",Te.makedev(5,0)),Te.mkdev("/dev/tty1",Te.makedev(6,0)),"object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var r=new Uint8Array(1);e=function(){return crypto.getRandomValues(r),r[0]}}else if(o)try{var a=require("crypto");e=function(){return a.randomBytes(1)[0]}}catch(e){}e||(e=function(){me("random_device")}),Te.createDevice("/dev","random",e),Te.createDevice("/dev","urandom",e),Te.mkdir("/dev/shm"),Te.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){Te.mkdir("/proc"),Te.mkdir("/proc/self"),Te.mkdir("/proc/self/fd"),Te.mount({mount:function(){var e=Te.createNode("/proc/self","fd",16895,73);return e.node_ops={lookup:function(e,r){var a=+r,i=Te.getStream(a);if(!i)throw new Te.ErrnoError(8);var f={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return i.path}}};return f.parent=f,f}},e}},{},"/proc/self/fd")},createStandardStreams:function(){r.stdin?Te.createDevice("/dev","stdin",r.stdin):Te.symlink("/dev/tty","/dev/stdin"),r.stdout?Te.createDevice("/dev","stdout",null,r.stdout):Te.symlink("/dev/tty","/dev/stdout"),r.stderr?Te.createDevice("/dev","stderr",null,r.stderr):Te.symlink("/dev/tty1","/dev/stderr");Te.open("/dev/stdin","r"),Te.open("/dev/stdout","w"),Te.open("/dev/stderr","w")},ensureErrnoError:function(){Te.ErrnoError||(Te.ErrnoError=function(e,r){this.node=r,this.setErrno=function(e){this.errno=e},this.setErrno(e),this.message="FS error"},Te.ErrnoError.prototype=new Error,Te.ErrnoError.prototype.constructor=Te.ErrnoError,[44].forEach(function(e){Te.genericErrors[e]=new Te.ErrnoError(e),Te.genericErrors[e].stack="<generic error, no stack>"}))},staticInit:function(){Te.ensureErrnoError(),Te.nameTable=new Array(4096),Te.mount(Pe,{},"/"),Te.createDefaultDirectories(),Te.createDefaultDevices(),Te.createSpecialDirectories(),Te.filesystems={MEMFS:Pe}},init:function(e,a,i){Te.init.initialized=!0,Te.ensureErrnoError(),r.stdin=e||r.stdin,r.stdout=a||r.stdout,r.stderr=i||r.stderr,Te.createStandardStreams()},quit:function(){Te.init.initialized=!1;var e=r._fflush;e&&e(0);for(var a=0;a<Te.streams.length;a++){var i=Te.streams[a];i&&Te.close(i)}},getMode:function(e,r){var a=0;return e&&(a|=365),r&&(a|=146),a},joinPath:function(e,r){var a=Fe.join.apply(null,e);return r&&"/"==a[0]&&(a=a.substr(1)),a},absolutePath:function(e,r){return Ae.resolve(r,e)},standardizePath:function(e){return Fe.normalize(e)},findObject:function(e,r){var a=Te.analyzePath(e,r);return a.exists?a.object:(Me(a.error),null)},analyzePath:function(e,r){try{e=(i=Te.lookupPath(e,{follow:!r})).path}catch(e){}var a={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var i=Te.lookupPath(e,{parent:!0});a.parentExists=!0,a.parentPath=i.path,a.parentObject=i.node,a.name=Fe.basename(e),i=Te.lookupPath(e,{follow:!r}),a.exists=!0,a.path=i.path,a.object=i.node,a.name=i.node.name,a.isRoot="/"===i.path}catch(e){a.error=e.errno}return a},createFolder:function(e,r,a,i){var f=Fe.join2("string"==typeof e?e:Te.getPath(e),r),k=Te.getMode(a,i);return Te.mkdir(f,k)},createPath:function(e,r,a,i){e="string"==typeof e?e:Te.getPath(e);for(var f=r.split("/").reverse();f.length;){var k=f.pop();if(k){var b=Fe.join2(e,k);try{Te.mkdir(b)}catch(e){}e=b}}return b},createFile:function(e,r,a,i,f){var k=Fe.join2("string"==typeof e?e:Te.getPath(e),r),b=Te.getMode(i,f);return Te.create(k,b)},createDataFile:function(e,r,a,i,f,k){var b=r?Fe.join2("string"==typeof e?e:Te.getPath(e),r):e,n=Te.getMode(i,f),s=Te.create(b,n);if(a){if("string"==typeof a){for(var t=new Array(a.length),c=0,o=a.length;c<o;++c)t[c]=a.charCodeAt(c);a=t}Te.chmod(s,146|n);var u=Te.open(s,"w");Te.write(u,a,0,a.length,0,k),Te.close(u),Te.chmod(s,n)}return s},createDevice:function(e,r,a,i){var f=Fe.join2("string"==typeof e?e:Te.getPath(e),r),k=Te.getMode(!!a,!!i);Te.createDevice.major||(Te.createDevice.major=64);var b=Te.makedev(Te.createDevice.major++,0);return Te.registerDevice(b,{open:function(e){e.seekable=!1},close:function(e){i&&i.buffer&&i.buffer.length&&i(10)},read:function(e,r,i,f,k){for(var b=0,n=0;n<f;n++){var s;try{s=a()}catch(e){throw new Te.ErrnoError(29)}if(void 0===s&&0===b)throw new Te.ErrnoError(6);if(null===s||void 0===s)break;b++,r[i+n]=s}return b&&(e.node.timestamp=Date.now()),b},write:function(e,r,a,f,k){for(var b=0;b<f;b++)try{i(r[a+b])}catch(e){throw new Te.ErrnoError(29)}return f&&(e.node.timestamp=Date.now()),b}}),Te.mkdev(f,k,b)},createLink:function(e,r,a,i,f){var k=Fe.join2("string"==typeof e?e:Te.getPath(e),r);return Te.symlink(a,k)},forceLoadFile:function(e){if(e.isDevice||e.isFolder||e.link||e.contents)return!0;var r=!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!p)throw new Error("Cannot load without read() or XMLHttpRequest.");try{e.contents=He(p(e.url),!0),e.usedBytes=e.contents.length}catch(e){r=!1}return r||Me(29),r},createLazyFile:function(e,r,a,i,f){function k(){this.lengthKnown=!1,this.chunks=[]}if(k.prototype.get=function(e){if(!(e>this.length-1||e<0)){var r=e%this.chunkSize,a=e/this.chunkSize|0;return this.getter(a)[r]}},k.prototype.setDataGetter=function(e){this.getter=e},k.prototype.cacheLength=function(){var e=new XMLHttpRequest;if(e.open("HEAD",a,!1),e.send(null),!(e.status>=200&&e.status<300||304===e.status))throw new Error("Couldn't load "+a+". Status: "+e.status);var r,i=Number(e.getResponseHeader("Content-length")),f=(r=e.getResponseHeader("Accept-Ranges"))&&"bytes"===r,k=(r=e.getResponseHeader("Content-Encoding"))&&"gzip"===r,b=1048576;f||(b=i);var n=this;n.setDataGetter(function(e){var r=e*b,f=(e+1)*b-1;if(f=Math.min(f,i-1),void 0===n.chunks[e]&&(n.chunks[e]=function(e,r){if(e>r)throw new Error("invalid range ("+e+", "+r+") or no bytes requested!");if(r>i-1)throw new Error("only "+i+" bytes available! programmer error!");var f=new XMLHttpRequest;if(f.open("GET",a,!1),i!==b&&f.setRequestHeader("Range","bytes="+e+"-"+r),"undefined"!=typeof Uint8Array&&(f.responseType="arraybuffer"),f.overrideMimeType&&f.overrideMimeType("text/plain; charset=x-user-defined"),f.send(null),!(f.status>=200&&f.status<300||304===f.status))throw new Error("Couldn't load "+a+". Status: "+f.status);return void 0!==f.response?new Uint8Array(f.response||[]):He(f.responseText||"",!0)}(r,f)),void 0===n.chunks[e])throw new Error("doXHR failed!");return n.chunks[e]}),!k&&i||(b=i=1,i=this.getter(0).length,b=i,console.log("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=i,this._chunkSize=b,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!w)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var b=new k;Object.defineProperties(b,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var n={isDevice:!1,contents:b}}else n={isDevice:!1,url:a};var s=Te.createFile(e,r,n,i,f);n.contents?s.contents=n.contents:n.url&&(s.contents=null,s.url=n.url),Object.defineProperties(s,{usedBytes:{get:function(){return this.contents.length}}});var t={};return Object.keys(s.stream_ops).forEach(function(e){var r=s.stream_ops[e];t[e]=function(){if(!Te.forceLoadFile(s))throw new Te.ErrnoError(29);return r.apply(null,arguments)}}),t.read=function(e,r,a,i,f){if(!Te.forceLoadFile(s))throw new Te.ErrnoError(29);var k=e.node.contents;if(f>=k.length)return 0;var b=Math.min(k.length-f,i);if(k.slice)for(var n=0;n<b;n++)r[a+n]=k[f+n];else for(n=0;n<b;n++)r[a+n]=k.get(f+n);return b},s.stream_ops=t,s},createPreloadedFile:function(e,a,i,f,k,b,n,s,t,c){Browser.init();var o=a?Ae.resolve(Fe.join2(e,a)):e;function u(i){function u(r){c&&c(),s||Te.createDataFile(e,a,r,f,k,t),b&&b(),he()}var l=!1;r.preloadPlugins.forEach(function(e){l||e.canHandle(o)&&(e.handle(i,o,u,function(){n&&n(),he()}),l=!0)}),l||u(i)}de(),"string"==typeof i?Browser.asyncLoad(i,function(e){u(e)},n):u(i)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(e,r,a){r=r||function(){},a=a||function(){};var i=Te.indexedDB();try{var f=i.open(Te.DB_NAME(),Te.DB_VERSION)}catch(e){return a(e)}f.onupgradeneeded=function(){console.log("creating db"),f.result.createObjectStore(Te.DB_STORE_NAME)},f.onsuccess=function(){var i=f.result.transaction([Te.DB_STORE_NAME],"readwrite"),k=i.objectStore(Te.DB_STORE_NAME),b=0,n=0,s=e.length;function t(){0==n?r():a()}e.forEach(function(e){var r=k.put(Te.analyzePath(e).object.contents,e);r.onsuccess=function(){++b+n==s&&t()},r.onerror=function(){b+ ++n==s&&t()}}),i.onerror=a},f.onerror=a},loadFilesFromDB:function(e,r,a){r=r||function(){},a=a||function(){};var i=Te.indexedDB();try{var f=i.open(Te.DB_NAME(),Te.DB_VERSION)}catch(e){return a(e)}f.onupgradeneeded=a,f.onsuccess=function(){var i=f.result;try{var k=i.transaction([Te.DB_STORE_NAME],"readonly")}catch(e){return void a(e)}var b=k.objectStore(Te.DB_STORE_NAME),n=0,s=0,t=e.length;function c(){0==s?r():a()}e.forEach(function(e){var r=b.get(e);r.onsuccess=function(){Te.analyzePath(e).exists&&Te.unlink(e),Te.createDataFile(Fe.dirname(e),Fe.basename(e),r.result,!0,!0,!0),++n+s==t&&c()},r.onerror=function(){n+ ++s==t&&c()}}),k.onerror=a},f.onerror=a}},Re={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(e,r){if("/"!==r[0]){var a;if(-100===e)a=Te.cwd();else{var i=Te.getStream(e);if(!i)throw new Te.ErrnoError(8);a=i.path}r=Fe.join2(a,r)}return r},doStat:function(e,r,a){try{var i=e(r)}catch(e){if(e&&e.node&&Fe.normalize(r)!==Fe.normalize(Te.getPath(e.node)))return-54;throw e}return Z[a>>2]=i.dev,Z[a+4>>2]=0,Z[a+8>>2]=i.ino,Z[a+12>>2]=i.mode,Z[a+16>>2]=i.nlink,Z[a+20>>2]=i.uid,Z[a+24>>2]=i.gid,Z[a+28>>2]=i.rdev,Z[a+32>>2]=0,Ee=[i.size>>>0,(ye=i.size,+se(ye)>=1?ye>0?(0|oe(+ce(ye/4294967296),4294967295))>>>0:~~+te((ye-+(~~ye>>>0))/4294967296)>>>0:0)],Z[a+40>>2]=Ee[0],Z[a+44>>2]=Ee[1],Z[a+48>>2]=4096,Z[a+52>>2]=i.blocks,Z[a+56>>2]=i.atime.getTime()/1e3|0,Z[a+60>>2]=0,Z[a+64>>2]=i.mtime.getTime()/1e3|0,Z[a+68>>2]=0,Z[a+72>>2]=i.ctime.getTime()/1e3|0,Z[a+76>>2]=0,Ee=[i.ino>>>0,(ye=i.ino,+se(ye)>=1?ye>0?(0|oe(+ce(ye/4294967296),4294967295))>>>0:~~+te((ye-+(~~ye>>>0))/4294967296)>>>0:0)],Z[a+80>>2]=Ee[0],Z[a+84>>2]=Ee[1],0},doMsync:function(e,r,a,i){var f=new Uint8Array(V.subarray(e,e+a));Te.msync(r,f,0,a,i)},doMkdir:function(e,r){return"/"===(e=Fe.normalize(e))[e.length-1]&&(e=e.substr(0,e.length-1)),Te.mkdir(e,r,0),0},doMknod:function(e,r,a){switch(61440&r){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}return Te.mknod(e,r,a),0},doReadlink:function(e,r,a){if(a<=0)return-28;var i=Te.readlink(e),f=Math.min(a,W(i)),k=J[r+f];return Y(i,r,a+1),J[r+f]=k,f},doAccess:function(e,r){if(-8&r)return-28;var a;if(!(a=Te.lookupPath(e,{follow:!0}).node))return-44;var i="";return 4&r&&(i+="r"),2&r&&(i+="w"),1&r&&(i+="x"),i&&Te.nodePermissions(a,i)?-2:0},doDup:function(e,r,a){var i=Te.getStream(a);return i&&Te.close(i),Te.open(e,r,0,a,a).fd},doReadv:function(e,r,a,i){for(var f=0,k=0;k<a;k++){var b=Z[r+8*k>>2],n=Z[r+(8*k+4)>>2],s=Te.read(e,J,b,n,i);if(s<0)return-1;if(f+=s,s<n)break}return f},doWritev:function(e,r,a,i){for(var f=0,k=0;k<a;k++){var b=Z[r+8*k>>2],n=Z[r+(8*k+4)>>2],s=Te.write(e,J,b,n,i);if(s<0)return-1;f+=s}return f},varargs:0,get:function(e){return Re.varargs+=4,Z[Re.varargs-4>>2]},getStr:function(){return H(Re.get())},getStreamFromFD:function(e){void 0===e&&(e=Re.get());var r=Te.getStream(e);if(!r)throw new Te.ErrnoError(8);return r},get64:function(){var e=Re.get();Re.get();return e},getZero:function(){Re.get()}};var Oe={};function Ie(){if(!Ie.strings){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:d};for(var r in Oe)e[r]=Oe[r];var a=[];for(var r in e)a.push(r+"="+e[r]);Ie.strings=a}return Ie.strings}var ze=(Y("GMT",332480,4),332480);function Ne(){if(!Ne.called){Ne.called=!0,Z[Ke()>>2]=60*(new Date).getTimezoneOffset();var e=(new Date).getFullYear(),r=new Date(e,0,1),a=new Date(e,6,1);Z[Ve()>>2]=Number(r.getTimezoneOffset()!=a.getTimezoneOffset());var i=n(r),f=n(a),k=B(He(i),"i8",j),b=B(He(f),"i8",j);a.getTimezoneOffset()<r.getTimezoneOffset()?(Z[Je()>>2]=k,Z[Je()+4>>2]=b):(Z[Je()>>2]=b,Z[Je()+4>>2]=k)}function n(e){var r=e.toTimeString().match(/\(([A-Za-z ]+)\)$/);return r?r[1]:"GMT"}}function je(e){return e%4==0&&(e%100!=0||e%400==0)}function Ue(e,r){for(var a=0,i=0;i<=r;a+=e[i++]);return a}var Be=[31,29,31,30,31,30,31,31,30,31,30,31],Ce=[31,28,31,30,31,30,31,31,30,31,30,31];function Le(e,r){for(var a=new Date(e.getTime());r>0;){var i=je(a.getFullYear()),f=a.getMonth(),k=(i?Be:Ce)[f];if(!(r>k-a.getDate()))return a.setDate(a.getDate()+r),a;r-=k-a.getDate()+1,a.setDate(1),f<11?a.setMonth(f+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1))}return a}function He(e,r,a){var i=a>0?a:W(e)+1,f=new Array(i),k=q(e,f,0,f.length);return r&&(f.length=k),f}Te.staticInit();var qe={a:function(e,r,a,i){me("Assertion failed: "+H(e)+", at: "+[r?H(r):"unknown filename",a,i?H(i):"unknown function"])},y:function(){},i:function(e,r){Re.varargs=r;try{var a=Re.getStr(),i=Re.get();return Re.doStat(Te.stat,a,i)}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),-e.errno}},B:function(e,r){Re.varargs=r;try{var a=Re.getStreamFromFD(),i=Re.get();return Re.doStat(Te.stat,a.path,i)}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),-e.errno}},u:function(e,r){return function(e,r){Re.varargs=r;try{return 0}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),-e.errno}}(0,r)},h:function(e,r){Re.varargs=r;try{var a=Re.getStreamFromFD();switch(Re.get()){case 0:return(i=Re.get())<0?-28:Te.open(a.path,a.flags,0,i).fd;case 1:case 2:return 0;case 3:return a.flags;case 4:var i=Re.get();return a.flags|=i,0;case 12:return i=Re.get(),K[i+0>>1]=2,0;case 13:case 14:return 0;case 16:case 8:return-28;case 9:return Me(28),-1;default:return-28}}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),-e.errno}},e:function(e,r){Re.varargs=r;try{var a=Re.getStr(),i=Re.get(),f=Re.get();return Te.open(a,i,f).fd}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),-e.errno}},A:function(e,r){Re.varargs=r;try{var a=Re.getStreamFromFD(),i=Re.get();switch(i){case 21509:case 21505:return a.tty?0:-59;case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:return a.tty?0:-59;case 21519:if(!a.tty)return-59;var f=Re.get();return Z[f>>2]=0,0;case 21520:return a.tty?-28:-59;case 21531:return f=Re.get(),Te.ioctl(a,i,f);case 21523:case 21524:return a.tty?0:-59;default:me("bad ioctl syscall "+i)}}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),-e.errno}},v:function(e,r){Re.varargs=r;try{var a=Re.getStr(),i=Re.get(),f=Re.get();return Re.doReadlink(a,i,f)}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),-e.errno}},d:function(){},j:function(){me()},q:function(e,r,a){V.set(V.subarray(r,r+a),e)},r:function(e){me("OOM")},s:function(e,r){var a=0;return Ie().forEach(function(i,f){var k=r+a;Z[e+4*f>>2]=k,function(e,r,a){for(var i=0;i<e.length;++i)J[r++>>0]=e.charCodeAt(i);a||(J[r>>0]=0)}(i,k),a+=i.length+1}),0},t:function(e,r){var a=Ie();Z[e>>2]=a.length;var i=0;return a.forEach(function(e){i+=e.length+1}),Z[r>>2]=i,0},b:function(e){},c:function(e){try{var r=Re.getStreamFromFD(e);return Te.close(r),0}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),e.errno}},g:function(e,r){try{var a=Re.getStreamFromFD(e),i=a.tty?2:Te.isDir(a.mode)?3:Te.isLink(a.mode)?7:4;return J[r>>0]=i,0}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),e.errno}},w:function(e,r,a,i){try{var f=Re.getStreamFromFD(e),k=Re.doReadv(f,r,a);return Z[i>>2]=k,0}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),e.errno}},o:function(e,r,a,i,f){try{var k=Re.getStreamFromFD(e),b=4294967296*a+(r>>>0);return b<=-9007199254740992||b>=9007199254740992?-61:(Te.llseek(k,b,i),Ee=[k.position>>>0,(ye=k.position,+se(ye)>=1?ye>0?(0|oe(+ce(ye/4294967296),4294967295))>>>0:~~+te((ye-+(~~ye>>>0))/4294967296)>>>0:0)],Z[f>>2]=Ee[0],Z[f+4>>2]=Ee[1],k.getdents&&0===b&&0===i&&(k.getdents=null),0)}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),e.errno}},z:function(e,r,a,i){try{var f=Re.getStreamFromFD(e),k=Re.doWritev(f,r,a);return Z[i>>2]=k,0}catch(e){return void 0!==Te&&e instanceof Te.ErrnoError||me(e),e.errno}},D:function(e){return 0},m:function(e,r){var a=new Date(1e3*Z[e>>2]);Z[r>>2]=a.getUTCSeconds(),Z[r+4>>2]=a.getUTCMinutes(),Z[r+8>>2]=a.getUTCHours(),Z[r+12>>2]=a.getUTCDate(),Z[r+16>>2]=a.getUTCMonth(),Z[r+20>>2]=a.getUTCFullYear()-1900,Z[r+24>>2]=a.getUTCDay(),Z[r+36>>2]=0,Z[r+32>>2]=0;var i=Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0),f=(a.getTime()-i)/864e5|0;return Z[r+28>>2]=f,Z[r+40>>2]=ze,r},l:function(e,r){Ne();var a=new Date(1e3*Z[e>>2]);Z[r>>2]=a.getSeconds(),Z[r+4>>2]=a.getMinutes(),Z[r+8>>2]=a.getHours(),Z[r+12>>2]=a.getDate(),Z[r+16>>2]=a.getMonth(),Z[r+20>>2]=a.getFullYear()-1900,Z[r+24>>2]=a.getDay();var i=new Date(a.getFullYear(),0,1),f=(a.getTime()-i.getTime())/864e5|0;Z[r+28>>2]=f,Z[r+36>>2]=-60*a.getTimezoneOffset();var k=new Date(a.getFullYear(),6,1).getTimezoneOffset(),b=i.getTimezoneOffset(),n=0|(k!=b&&a.getTimezoneOffset()==Math.min(b,k));Z[r+32>>2]=n;var s=Z[Je()+(n?4:0)>>2];return Z[r+40>>2]=s,r},memory:T,n:function(e){Ne();var r=new Date(Z[e+20>>2]+1900,Z[e+16>>2],Z[e+12>>2],Z[e+8>>2],Z[e+4>>2],Z[e>>2],0),a=Z[e+32>>2],i=r.getTimezoneOffset(),f=new Date(r.getFullYear(),0,1),k=new Date(r.getFullYear(),6,1).getTimezoneOffset(),b=f.getTimezoneOffset(),n=Math.min(b,k);if(a<0)Z[e+32>>2]=Number(k!=b&&n==i);else if(a>0!=(n==i)){var s=Math.max(b,k),t=a>0?n:s;r.setTime(r.getTime()+6e4*(t-i))}Z[e+24>>2]=r.getDay();var c=(r.getTime()-f.getTime())/864e5|0;return Z[e+28>>2]=c,r.getTime()/1e3|0},C:function(){return function(e,r){switch(r){case 0:return 32e3;case 1:case 2:case 3:return 255;case 4:case 5:case 16:case 17:case 18:return 4096;case 6:case 7:case 20:return 1;case 8:return 0;case 9:case 10:case 11:case 12:case 14:case 15:case 19:return-1;case 13:return 64}return Me(28),-1}.apply(null,arguments)},x:function(e){return(e=+e)>=0?+ce(e+.5):+te(e-.5)},f:function(e,r,a,i){var f=Z[i+40>>2],k={tm_sec:Z[i>>2],tm_min:Z[i+4>>2],tm_hour:Z[i+8>>2],tm_mday:Z[i+12>>2],tm_mon:Z[i+16>>2],tm_year:Z[i+20>>2],tm_wday:Z[i+24>>2],tm_yday:Z[i+28>>2],tm_isdst:Z[i+32>>2],tm_gmtoff:Z[i+36>>2],tm_zone:f?H(f):""},b=H(a),n={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var s in n)b=b.replace(new RegExp(s,"g"),n[s]);var t=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],c=["January","February","March","April","May","June","July","August","September","October","November","December"];function o(e,r,a){for(var i="number"==typeof e?e.toString():e||"";i.length<r;)i=a[0]+i;return i}function u(e,r){return o(e,r,"0")}function l(e,r){function a(e){return e<0?-1:e>0?1:0}var i;return 0===(i=a(e.getFullYear()-r.getFullYear()))&&0===(i=a(e.getMonth()-r.getMonth()))&&(i=a(e.getDate()-r.getDate())),i}function v(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function d(e){var r=Le(new Date(e.tm_year+1900,0,1),e.tm_yday),a=new Date(r.getFullYear(),0,4),i=new Date(r.getFullYear()+1,0,4),f=v(a),k=v(i);return l(f,r)<=0?l(k,r)<=0?r.getFullYear()+1:r.getFullYear():r.getFullYear()-1}var h={"%a":function(e){return t[e.tm_wday].substring(0,3)},"%A":function(e){return t[e.tm_wday]},"%b":function(e){return c[e.tm_mon].substring(0,3)},"%B":function(e){return c[e.tm_mon]},"%C":function(e){return u((e.tm_year+1900)/100|0,2)},"%d":function(e){return u(e.tm_mday,2)},"%e":function(e){return o(e.tm_mday,2," ")},"%g":function(e){return d(e).toString().substring(2)},"%G":function(e){return d(e)},"%H":function(e){return u(e.tm_hour,2)},"%I":function(e){var r=e.tm_hour;return 0==r?r=12:r>12&&(r-=12),u(r,2)},"%j":function(e){return u(e.tm_mday+Ue(je(e.tm_year+1900)?Be:Ce,e.tm_mon-1),3)},"%m":function(e){return u(e.tm_mon+1,2)},"%M":function(e){return u(e.tm_min,2)},"%n":function(){return"\n"},"%p":function(e){return e.tm_hour>=0&&e.tm_hour<12?"AM":"PM"},"%S":function(e){return u(e.tm_sec,2)},"%t":function(){return"\t"},"%u":function(e){return e.tm_wday||7},"%U":function(e){var r=new Date(e.tm_year+1900,0,1),a=0===r.getDay()?r:Le(r,7-r.getDay()),i=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(l(a,i)<0){var f=Ue(je(i.getFullYear())?Be:Ce,i.getMonth()-1)-31,k=31-a.getDate()+f+i.getDate();return u(Math.ceil(k/7),2)}return 0===l(a,r)?"01":"00"},"%V":function(e){var r,a=new Date(e.tm_year+1900,0,4),i=new Date(e.tm_year+1901,0,4),f=v(a),k=v(i),b=Le(new Date(e.tm_year+1900,0,1),e.tm_yday);return l(b,f)<0?"53":l(k,b)<=0?"01":(r=f.getFullYear()<e.tm_year+1900?e.tm_yday+32-f.getDate():e.tm_yday+1-f.getDate(),u(Math.ceil(r/7),2))},"%w":function(e){return e.tm_wday},"%W":function(e){var r=new Date(e.tm_year,0,1),a=1===r.getDay()?r:Le(r,0===r.getDay()?1:7-r.getDay()+1),i=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(l(a,i)<0){var f=Ue(je(i.getFullYear())?Be:Ce,i.getMonth()-1)-31,k=31-a.getDate()+f+i.getDate();return u(Math.ceil(k/7),2)}return 0===l(a,r)?"01":"00"},"%y":function(e){return(e.tm_year+1900).toString().substring(2)},"%Y":function(e){return e.tm_year+1900},"%z":function(e){var r=e.tm_gmtoff,a=r>=0;return r=(r=Math.abs(r)/60)/60*100+r%60,(a?"+":"-")+String("0000"+r).slice(-4)},"%Z":function(e){return e.tm_zone},"%%":function(){return"%"}};for(var s in h)b.indexOf(s)>=0&&(b=b.replace(new RegExp(s,"g"),h[s](k)));var m,w,p=He(b,!1);return p.length>r?0:(m=p,w=e,J.set(m,w),p.length-1)},p:function(e,r,a){for(var i=H(r),f="\\!@#$^&*()+=-[]/{}|:<>?,.",k=0,b=f.length;k<b;++k)i=i.replace(new RegExp("\\"+f[k],"g"),"\\"+f[k]);var n={"%A":"%a","%B":"%b","%c":"%a %b %d %H:%M:%S %Y","%D":"%m\\/%d\\/%y","%e":"%d","%F":"%Y-%m-%d","%h":"%b","%R":"%H\\:%M","%r":"%I\\:%M\\:%S\\s%p","%T":"%H\\:%M\\:%S","%x":"%m\\/%d\\/(?:%y|%Y)","%X":"%H\\:%M\\:%S"};for(var s in n)i=i.replace(s,n[s]);var t={"%a":"(?:Sun(?:day)?)|(?:Mon(?:day)?)|(?:Tue(?:sday)?)|(?:Wed(?:nesday)?)|(?:Thu(?:rsday)?)|(?:Fri(?:day)?)|(?:Sat(?:urday)?)","%b":"(?:Jan(?:uary)?)|(?:Feb(?:ruary)?)|(?:Mar(?:ch)?)|(?:Apr(?:il)?)|May|(?:Jun(?:e)?)|(?:Jul(?:y)?)|(?:Aug(?:ust)?)|(?:Sep(?:tember)?)|(?:Oct(?:ober)?)|(?:Nov(?:ember)?)|(?:Dec(?:ember)?)","%C":"\\d\\d","%d":"0[1-9]|[1-9](?!\\d)|1\\d|2\\d|30|31","%H":"\\d(?!\\d)|[0,1]\\d|20|21|22|23","%I":"\\d(?!\\d)|0\\d|10|11|12","%j":"00[1-9]|0?[1-9](?!\\d)|0?[1-9]\\d(?!\\d)|[1,2]\\d\\d|3[0-6]\\d","%m":"0[1-9]|[1-9](?!\\d)|10|11|12","%M":"0\\d|\\d(?!\\d)|[1-5]\\d","%n":"\\s","%p":"AM|am|PM|pm|A\\.M\\.|a\\.m\\.|P\\.M\\.|p\\.m\\.","%S":"0\\d|\\d(?!\\d)|[1-5]\\d|60","%U":"0\\d|\\d(?!\\d)|[1-4]\\d|50|51|52|53","%W":"0\\d|\\d(?!\\d)|[1-4]\\d|50|51|52|53","%w":"[0-6]","%y":"\\d\\d","%Y":"\\d\\d\\d\\d","%%":"%","%t":"\\s"};for(var c in t)i=i.replace(c,"("+c+t[c]+")");var o=[];for(k=i.indexOf("%");k>=0;k=i.indexOf("%"))o.push(i[k+1]),i=i.replace(new RegExp("\\%"+i[k+1],"g"),"");var u=new RegExp("^"+i,"i").exec(H(e));if(u){var l,v=function(){function e(e,r,a){return"number"!=typeof e||isNaN(e)?r:e>=r?e<=a?e:a:r}return{year:e(Z[a+20>>2]+1900,1970,9999),month:e(Z[a+16>>2],0,11),day:e(Z[a+12>>2],1,31),hour:e(Z[a+8>>2],0,23),min:e(Z[a+4>>2],0,59),sec:e(Z[a>>2],0,59)}}(),d=function(e){var r=o.indexOf(e);if(r>=0)return u[r+1]};if((l=d("S"))&&(v.sec=parseInt(l)),(l=d("M"))&&(v.min=parseInt(l)),l=d("H"))v.hour=parseInt(l);else if(l=d("I")){var h=parseInt(l);(l=d("p"))&&(h+="P"===l.toUpperCase()[0]?12:0),v.hour=h}if(l=d("Y"))v.year=parseInt(l);else if(l=d("y")){var m=parseInt(l);(l=d("C"))?m+=100*parseInt(l):m+=m<69?2e3:1900,v.year=m}if((l=d("m"))?v.month=parseInt(l)-1:(l=d("b"))&&(v.month={JAN:0,FEB:1,MAR:2,APR:3,MAY:4,JUN:5,JUL:6,AUG:7,SEP:8,OCT:9,NOV:10,DEC:11}[l.substring(0,3).toUpperCase()]||0),l=d("d"))v.day=parseInt(l);else if(l=d("j"))for(var w=parseInt(l),p=je(v.year),g=0;g<12;++g){var y=Ue(p?Be:Ce,g-1);w<=y+(p?Be:Ce)[g]&&(v.day=w-y)}else if(l=d("a")){var E=l.substring(0,3).toUpperCase();if(l=d("U")){var _={SUN:0,MON:1,TUE:2,WED:3,THU:4,FRI:5,SAT:6}[E],D=parseInt(l);F=0===(S=new Date(v.year,0,1)).getDay()?Le(S,_+7*(D-1)):Le(S,7-S.getDay()+_+7*(D-1)),v.day=F.getDate(),v.month=F.getMonth()}else if(l=d("W")){var S,F;_={MON:0,TUE:1,WED:2,THU:3,FRI:4,SAT:5,SUN:6}[E],D=parseInt(l),F=1===(S=new Date(v.year,0,1)).getDay()?Le(S,_+7*(D-1)):Le(S,7-S.getDay()+1+_+7*(D-1)),v.day=F.getDate(),v.month=F.getMonth()}}var M=new Date(v.year,v.month,v.day,v.hour,v.min,v.sec,0);return Z[a>>2]=M.getSeconds(),Z[a+4>>2]=M.getMinutes(),Z[a+8>>2]=M.getHours(),Z[a+12>>2]=M.getDate(),Z[a+16>>2]=M.getMonth(),Z[a+20>>2]=M.getFullYear()-1900,Z[a+24>>2]=M.getDay(),Z[a+28>>2]=Ue(je(M.getFullYear())?Be:Ce,M.getMonth()-1)+M.getDate()-1,Z[a+32>>2]=0,e+He(u[0]).length-1}return 0},table:I,k:function(e){var r=Date.now()/1e3|0;return e&&(Z[e>>2]=r),r}},Ye=function(){var e={env:qe,wasi_unstable:qe};function a(e,a){var i=e.exports;r.asm=i,he()}function i(e){a(e.instance)}function f(r){return(P||!m&&!w||"function"!=typeof fetch?new Promise(function(e,r){e(De())}):fetch(_e,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+_e+"'";return e.arrayBuffer()}).catch(function(){return De()})).then(function(r){return R.instantiate(r,e)}).then(r,function(e){M("failed to asynchronously prepare wasm: "+e),me(e)})}if(de(),r.instantiateWasm)try{return r.instantiateWasm(e,a)}catch(e){return M("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(P||"function"!=typeof R.instantiateStreaming||ge(_e)||"function"!=typeof fetch)return f(i);fetch(_e,{credentials:"same-origin"}).then(function(r){return R.instantiateStreaming(r,e).then(i,function(e){M("wasm streaming compile failed: "+e),M("falling back to ArrayBuffer instantiation"),f(i)})})}(),{}}();r.asm=Ye;var We,Ge=r.___wasm_call_ctors=function(){return r.asm.E.apply(null,arguments)},Xe=(r._main=function(){return r.asm.F.apply(null,arguments)},r.___errno_location=function(){return r.asm.G.apply(null,arguments)},r._malloc=function(){return r.asm.H.apply(null,arguments)}),Je=r.__get_tzname=function(){return r.asm.I.apply(null,arguments)},Ve=r.__get_daylight=function(){return r.asm.J.apply(null,arguments)},Ke=r.__get_timezone=function(){return r.asm.K.apply(null,arguments)},Ze=r.stackAlloc=function(){return r.asm.L.apply(null,arguments)},$e=r.__growWasmMemory=function(){return r.asm.M.apply(null,arguments)};r.dynCall_vi=function(){return r.asm.N.apply(null,arguments)};if(r.asm=Ye,r.callMain=fr,we)if(ge(we)||(we=S(we)),o||l){var Qe=y(we);V.set(Qe,1024)}else{de();var er=function(e){e.byteLength&&(e=new Uint8Array(e)),V.set(e,1024),r.memoryInitializerRequest&&delete r.memoryInitializerRequest.response,he()},rr=function(){g(we,er,function(){throw"could not load memory initializer "+we})};if(r.memoryInitializerRequest){var ar=function(){var e=r.memoryInitializerRequest,a=e.response;if(200!==e.status&&0!==e.status)return console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+e.status+", retrying "+we),void rr();er(a)};r.memoryInitializerRequest.response?setTimeout(ar,0):r.memoryInitializerRequest.addEventListener("load",ar)}else rr()}function ir(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function fr(e){var a=r._main,i=(e=e||[]).length+1,f=Ze(4*(i+1));Z[f>>2]=G(d);for(var k=1;k<i;k++)Z[(f>>2)+k]=G(e[k-1]);Z[(f>>2)+i]=0;try{a(i,f)}catch(e){if(e instanceof ir)return;if("SimulateInfiniteLoop"==e)return void!0;var b=e;e&&"object"==typeof e&&e.stack&&(b=[e,e.stack]),M("exception thrown: "+b),h(1,e)}finally{!0}}function kr(e){function a(){We||(We=!0,z||(!0,r.noFSInit||Te.init.initialized||Te.init(),xe.init(),ie(ke),Te.ignorePermissions=!1,ie(be),r.onRuntimeInitialized&&r.onRuntimeInitialized(),br&&fr(e),function(){if(r.postRun)for("function"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)e=r.postRun.shift(),ne.unshift(e);var e;ie(ne)}()))}e=e||v,ue>0||(!function(){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)e=r.preRun.shift(),fe.unshift(e);var e;ie(fe)}(),ue>0||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),a()},1)):a()))}if(ve=function e(){We||kr(),We||(ve=e)},r.run=kr,r.preInit)for("function"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();var br=!0;function nr(e,i,t){if(!a)return"{}";if(f=e,k=[],b=[],n=[],t=t||[],r.callMain(t.concat(i)),Te.streams[1]=Te.open("/dev/stdout",577,0),Te.streams[2]=Te.open("/dev/stderr",577,0),b.length)return s(b).trim();if(n.length){var c=s(n),o=c;if(o.indexOf(":")>-1){var u=o.split(":");o=u[u.length-1].trim()}var l=new Error(o);throw l.stack=c,l}return""}return r.noInitialRun&&(br=!1),!0,kr(),e.json=function(e,r){if(!a)return{};var i=nr(JSON.stringify(e),r,["-c"]).trim();return-1!==i.indexOf("\n")?i.split("\n").filter(function(e){return e}).reduce(function(e,r){return e.concat(JSON.parse(r))},[]):JSON.parse(i)},e.raw=nr,e.onInitialized={addListener:function(e){a&&e(),i.push(e)}},e.promised={},e.promised.json=function(){var r=arguments;return new Promise(function(a,i){e.onInitialized.addListener(function(){try{a(e.json.apply(e,r))}catch(e){i(e)}})})},e.promised.raw=function(){var r=arguments;return new Promise(function(a,i){e.onInitialized.addListener(function(){try{a(e.raw.apply(e,r))}catch(e){i(e)}})})},e}("object"==typeof jq?jq:{});"object"==typeof exports&&"object"==typeof module?module.exports=jq:"function"==typeof define&&define.amd?define([],function(){return jq}):"object"==typeof exports&&(exports.jq=jq);
}).call(this)}).call(this,require('_process'),require("buffer").Buffer,"/../3rdparty/jq-web")
},{"_process":208,"buffer":82,"crypto":105,"fs":78,"path":201}],"json_diff":[function(require,module,exports){
const { SequenceMatcher } = require('@ewoudenberg/difflib')
const { extendedTypeOf, roundObj } = require('./util')
const { colorize, colorizeToCallback } = require('./colorize')

class JsonDiff {
  constructor (options) {
    options.outputKeys = options.outputKeys || []
    options.excludeKeys = options.excludeKeys || []
    this.options = options
  }

  isScalar (obj) {
    return typeof obj !== 'object' || obj === null
  }

  objectDiff (obj1, obj2) {
    let result = {}
    let score = 0
    let equal = true

    for (const [key, value] of Object.entries(obj1)) {
      if (!this.options.outputNewOnly) {
        const postfix = '__deleted'

        if (!(key in obj2) && !(this.options.excludeKeys.includes(key))) {
          result[`${key}${postfix}`] = value
          score -= 30
          equal = false
        }
      }
    }

    for (const [key, value] of Object.entries(obj2)) {
      const postfix = !this.options.outputNewOnly ? '__added' : ''

      if (!(key in obj1) && !(this.options.excludeKeys.includes(key))) {
        result[`${key}${postfix}`] = value
        score -= 30
        equal = false
      }
    }

    for (const [key, value1] of Object.entries(obj1)) {
      if (key in obj2) {
        if (this.options.excludeKeys.includes(key)) {
          continue
        }
        score += 20
        const value2 = obj2[key]
        const change = this.diff(value1, value2)
        if (!change.equal) {
          result[key] = change.result
          equal = false
        } else if (this.options.full || this.options.outputKeys.includes(key)) {
          result[key] = value1
        }
        // console.log(`key ${key} change.score=${change.score} ${change.result}`)
        score += Math.min(20, Math.max(-10, change.score / 5)) // BATMAN!
      }
    }

    if (equal) {
      score = 100 * Math.max(Object.keys(obj1).length, 0.5)
      if (!this.options.full) {
        result = undefined
      }
    } else {
      score = Math.max(0, score)
    }

    // console.log(`objectDiff(${JSON.stringify(obj1, null, 2)} <=> ${JSON.stringify(obj2, null, 2)}) == ${JSON.stringify({score, result, equal})}`)
    return { score, result, equal }
  }

  findMatchingObject (item, index, fuzzyOriginals) {
    // console.log('findMatchingObject: ' + JSON.stringify({item, fuzzyOriginals}, null, 2))
    let bestMatch = null

    for (const [key, { item: candidate, index: matchIndex }] of Object.entries(fuzzyOriginals)) {
      if (key !== '__next') {
        const indexDistance = Math.abs(matchIndex - index)
        if (extendedTypeOf(item) === extendedTypeOf(candidate)) {
          const { score } = this.diff(item, candidate)
          if (
            !bestMatch ||
            score > bestMatch.score ||
            (score === bestMatch.score &&
              indexDistance < bestMatch.indexDistance)
          ) {
            bestMatch = { score, key, indexDistance }
          }
        }
      }
    }

    // console.log('findMatchingObject result = ' + JSON.stringify(bestMatch, null, 2));
    return bestMatch
  }

  scalarize (array, originals, fuzzyOriginals) {
    // console.log('scalarize', array, originals, fuzzyOriginals);
    const fuzzyMatches = []
    if (fuzzyOriginals) {
      // Find best fuzzy match for each object in the array
      const keyScores = {}
      for (let index = 0; index < array.length; index++) {
        const item = array[index]
        if (this.isScalar(item)) {
          continue
        }
        const bestMatch = this.findMatchingObject(item, index, fuzzyOriginals)
        if (bestMatch && (!keyScores[bestMatch.key] || bestMatch.score > keyScores[bestMatch.key].score)) {
          keyScores[bestMatch.key] = { score: bestMatch.score, index }
        }
      }
      for (const [key, match] of Object.entries(keyScores)) {
        fuzzyMatches[match.index] = key
      }
    }

    const result = []
    for (let index = 0; index < array.length; index++) {
      const item = array[index]
      if (this.isScalar(item)) {
        result.push(item)
      } else {
        const key = fuzzyMatches[index] || '__$!SCALAR' + originals.__next++
        originals[key] = { item, index }
        result.push(key)
      }
    }
    // console.log('Scalarize result', result);
    return result
  }

  isScalarized (item, originals) {
    return typeof item === 'string' && item in originals
  }

  descalarize (item, originals) {
    if (this.isScalarized(item, originals)) {
      return originals[item].item
    } else {
      return item
    }
  }

  arrayDiff (obj1, obj2) {
    const originals1 = { __next: 1 }
    const seq1 = this.scalarize(obj1, originals1)
    const originals2 = { __next: originals1.__next }
    const seq2 = this.scalarize(obj2, originals2, originals1)

    if (this.options.sort) {
      seq1.sort()
      seq2.sort()
    }
    const opcodes = new SequenceMatcher(null, seq1, seq2).getOpcodes()

    // console.log(`arrayDiff:\nobj1 = ${JSON.stringify(obj1, null, 2)}\nobj2 = ${JSON.stringify(obj2, null, 2)}\nseq1 = ${JSON.stringify(seq1, null, 2)}\nseq2 = ${JSON.stringify(seq2, null, 2)}\nopcodes = ${JSON.stringify(opcodes, null, 2)}`)

    let result = []
    let score = 0
    let equal = true

    for (const [op, i1, i2, j1, j2] of opcodes) {
      let i, j
      let asc, end
      let asc1, end1
      let asc2, end2
      if (!(op === 'equal' || (this.options.keysOnly && op === 'replace'))) {
        equal = false
      }

      switch (op) {
        case 'equal':
          for (
            i = i1, end = i2, asc = i1 <= end;
            asc ? i < end : i > end;
            asc ? i++ : i--
          ) {
            const item = seq1[i]
            if (this.isScalarized(item, originals1)) {
              if (!this.isScalarized(item, originals2)) {
                throw new Error(
                  `internal bug: isScalarized(item, originals1) != isScalarized(item, originals2) for item ${JSON.stringify(
                    item
                  )}`
                )
              }
              const item1 = this.descalarize(item, originals1)
              const item2 = this.descalarize(item, originals2)
              const change = this.diff(item1, item2)
              if (!change.equal) {
                result.push(['~', change.result])
                equal = false
              } else {
                if (this.options.full || this.options.keepUnchangedValues) {
                  result.push([' ', item1])
                } else {
                  result.push([' '])
                }
              }
            } else {
              if (this.options.full || this.options.keepUnchangedValues) {
                result.push([' ', item])
              } else {
                result.push([' '])
              }
            }
            score += 10
          }
          break
        case 'delete':
          for (
            i = i1, end1 = i2, asc1 = i1 <= end1;
            asc1 ? i < end1 : i > end1;
            asc1 ? i++ : i--
          ) {
            result.push(['-', this.descalarize(seq1[i], originals1)])
            score -= 5
          }
          break
        case 'insert':
          for (
            j = j1, end2 = j2, asc2 = j1 <= end2;
            asc2 ? j < end2 : j > end2;
            asc2 ? j++ : j--
          ) {
            result.push(['+', this.descalarize(seq2[j], originals2)])
            score -= 5
          }
          break
        case 'replace':
          if (!this.options.keysOnly) {
            let asc3, end3
            let asc4, end4
            for (
              i = i1, end3 = i2, asc3 = i1 <= end3;
              asc3 ? i < end3 : i > end3;
              asc3 ? i++ : i--
            ) {
              result.push(['-', this.descalarize(seq1[i], originals1)])
              score -= 5
            }
            for (
              j = j1, end4 = j2, asc4 = j1 <= end4;
              asc4 ? j < end4 : j > end4;
              asc4 ? j++ : j--
            ) {
              result.push(['+', this.descalarize(seq2[j], originals2)])
              score -= 5
            }
          } else {
            let asc5, end5
            for (
              i = i1, end5 = i2, asc5 = i1 <= end5;
              asc5 ? i < end5 : i > end5;
              asc5 ? i++ : i--
            ) {
              const change = this.diff(
                this.descalarize(seq1[i], originals1),
                this.descalarize(seq2[i - i1 + j1], originals2)
              )
              if (!change.equal) {
                result.push(['~', change.result])
                equal = false
              } else {
                result.push([' '])
              }
            }
          }
          break
      }
    }

    if (equal || opcodes.length === 0) {
      if (!this.options.full) {
        result = undefined
      } else {
        result = obj1
      }
      score = 100
    } else {
      score = Math.max(0, score)
    }

    return { score, result, equal }
  }

  diff (obj1, obj2) {
    const type1 = extendedTypeOf(obj1)
    const type2 = extendedTypeOf(obj2)

    if (type1 === type2) {
      switch (type1) {
        case 'object':
          return this.objectDiff(obj1, obj2)

        case 'array':
          return this.arrayDiff(obj1, obj2)
      }
    }

    // Compare primitives or complex objects of different types
    let score = 100
    let result = obj1
    let equal
    if (!this.options.keysOnly) {
      if (type1 === 'date' && type2 === 'date') {
        equal = obj1.getTime() === obj2.getTime()
      } else {
        equal = obj1 === obj2
      }
      if (!equal) {
        score = 0

        if (this.options.outputNewOnly) {
          result = obj2
        } else {
          result = { __old: obj1, __new: obj2 }
        }
      } else if (!this.options.full) {
        result = undefined
      }
    } else {
      equal = true
      result = undefined
    }

    // console.log(`diff: equal ${equal} obj1 ${obj1} obj2 ${obj2} score ${score} ${result || ''}`)

    return { score, result, equal }
  }
}

function diff (obj1, obj2, options = {}) {
  if (options.precision !== undefined) {
    obj1 = roundObj(obj1, options.precision)
    obj2 = roundObj(obj2, options.precision)
  }
  return new JsonDiff(options).diff(obj1, obj2).result
}

function diffString (obj1, obj2, options = {}) {
  return colorize(diff(obj1, obj2, options), options)
}

module.exports = { diff, diffString, colorize, colorizeToCallback }

},{"./colorize":183,"./util":184,"@ewoudenberg/difflib":14}],"lodash":[function(require,module,exports){
(function (global){(function (){
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&t(n[r],r,n)!==!1;);return n}function e(n,t){for(var r=null==n?0:n.length;r--&&t(n[r],r,n)!==!1;);return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return!1;
return!0}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function o(n,t){return!!(null==n?0:n.length)&&y(n,t,0)>-1}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return!0;return!1}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);
return r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}function p(n){return n.split("")}function _(n){return n.match(Bt)||[]}function v(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,!1}),e}function g(n,t,r,e){for(var u=n.length,i=r+(e?1:-1);e?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function y(n,t,r){return t===t?q(n,t,r):g(n,b,r)}function d(n,t,r,e){
for(var u=r-1,i=n.length;++u<i;)if(e(n[u],t))return u;return-1}function b(n){return n!==n}function w(n,t){var r=null==n?0:n.length;return r?k(n,t)/r:Sn}function m(n){return function(t){return null==t?Y:t[n]}}function x(n){return function(t){return null==n?Y:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function A(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}function k(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==Y&&(r=r===Y?i:r+i);
}return r}function O(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function I(n,t){return c(t,function(t){return[t,n[t]]})}function R(n){return function(t){return n(t)}}function z(n,t){return c(t,function(t){return n[t]})}function E(n,t){return n.has(t)}function S(n,t){for(var r=-1,e=n.length;++r<e&&y(t,n[r],0)>-1;);return r}function W(n,t){for(var r=n.length;r--&&y(t,n[r],0)>-1;);return r}function L(n,t){for(var r=n.length,e=0;r--;)n[r]===t&&++e;return e}function C(n){return"\\"+Gr[n]}function U(n,t){
return null==n?Y:n[t]}function B(n){return Dr.test(n)}function T(n){return Mr.test(n)}function $(n){for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}function D(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n]}),r}function M(n,t){return function(r){return n(t(r))}}function F(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&o!==un||(n[r]=un,i[u++]=r)}return i}function N(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=n}),r}function P(n){
var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function q(n,t,r){for(var e=r-1,u=n.length;++e<u;)if(n[e]===t)return e;return-1}function Z(n,t,r){for(var e=r+1;e--;)if(n[e]===t)return e;return e}function K(n){return B(n)?G(n):se(n)}function V(n){return B(n)?H(n):p(n)}function G(n){for(var t=Tr.lastIndex=0;Tr.test(n);)++t;return t}function H(n){return n.match(Tr)||[]}function J(n){return n.match($r)||[]}var Y,Q="4.17.20",X=200,nn="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",tn="Expected a function",rn="__lodash_hash_undefined__",en=500,un="__lodash_placeholder__",on=1,fn=2,cn=4,an=1,ln=2,sn=1,hn=2,pn=4,_n=8,vn=16,gn=32,yn=64,dn=128,bn=256,wn=512,mn=30,xn="...",jn=800,An=16,kn=1,On=2,In=3,Rn=1/0,zn=9007199254740991,En=1.7976931348623157e308,Sn=NaN,Wn=4294967295,Ln=Wn-1,Cn=Wn>>>1,Un=[["ary",dn],["bind",sn],["bindKey",hn],["curry",_n],["curryRight",vn],["flip",wn],["partial",gn],["partialRight",yn],["rearg",bn]],Bn="[object Arguments]",Tn="[object Array]",$n="[object AsyncFunction]",Dn="[object Boolean]",Mn="[object Date]",Fn="[object DOMException]",Nn="[object Error]",Pn="[object Function]",qn="[object GeneratorFunction]",Zn="[object Map]",Kn="[object Number]",Vn="[object Null]",Gn="[object Object]",Hn="[object Promise]",Jn="[object Proxy]",Yn="[object RegExp]",Qn="[object Set]",Xn="[object String]",nt="[object Symbol]",tt="[object Undefined]",rt="[object WeakMap]",et="[object WeakSet]",ut="[object ArrayBuffer]",it="[object DataView]",ot="[object Float32Array]",ft="[object Float64Array]",ct="[object Int8Array]",at="[object Int16Array]",lt="[object Int32Array]",st="[object Uint8Array]",ht="[object Uint8ClampedArray]",pt="[object Uint16Array]",_t="[object Uint32Array]",vt=/\b__p \+= '';/g,gt=/\b(__p \+=) '' \+/g,yt=/(__e\(.*?\)|\b__t\)) \+\n'';/g,dt=/&(?:amp|lt|gt|quot|#39);/g,bt=/[&<>"']/g,wt=RegExp(dt.source),mt=RegExp(bt.source),xt=/<%-([\s\S]+?)%>/g,jt=/<%([\s\S]+?)%>/g,At=/<%=([\s\S]+?)%>/g,kt=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Ot=/^\w*$/,It=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Rt=/[\\^$.*+?()[\]{}|]/g,zt=RegExp(Rt.source),Et=/^\s+|\s+$/g,St=/^\s+/,Wt=/\s+$/,Lt=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Ct=/\{\n\/\* \[wrapped with (.+)\] \*/,Ut=/,? & /,Bt=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Tt=/\\(\\)?/g,$t=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Dt=/\w*$/,Mt=/^[-+]0x[0-9a-f]+$/i,Ft=/^0b[01]+$/i,Nt=/^\[object .+?Constructor\]$/,Pt=/^0o[0-7]+$/i,qt=/^(?:0|[1-9]\d*)$/,Zt=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Kt=/($^)/,Vt=/['\n\r\u2028\u2029\\]/g,Gt="\\ud800-\\udfff",Ht="\\u0300-\\u036f",Jt="\\ufe20-\\ufe2f",Yt="\\u20d0-\\u20ff",Qt=Ht+Jt+Yt,Xt="\\u2700-\\u27bf",nr="a-z\\xdf-\\xf6\\xf8-\\xff",tr="\\xac\\xb1\\xd7\\xf7",rr="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",er="\\u2000-\\u206f",ur=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",ir="A-Z\\xc0-\\xd6\\xd8-\\xde",or="\\ufe0e\\ufe0f",fr=tr+rr+er+ur,cr="['\u2019]",ar="["+Gt+"]",lr="["+fr+"]",sr="["+Qt+"]",hr="\\d+",pr="["+Xt+"]",_r="["+nr+"]",vr="[^"+Gt+fr+hr+Xt+nr+ir+"]",gr="\\ud83c[\\udffb-\\udfff]",yr="(?:"+sr+"|"+gr+")",dr="[^"+Gt+"]",br="(?:\\ud83c[\\udde6-\\uddff]){2}",wr="[\\ud800-\\udbff][\\udc00-\\udfff]",mr="["+ir+"]",xr="\\u200d",jr="(?:"+_r+"|"+vr+")",Ar="(?:"+mr+"|"+vr+")",kr="(?:"+cr+"(?:d|ll|m|re|s|t|ve))?",Or="(?:"+cr+"(?:D|LL|M|RE|S|T|VE))?",Ir=yr+"?",Rr="["+or+"]?",zr="(?:"+xr+"(?:"+[dr,br,wr].join("|")+")"+Rr+Ir+")*",Er="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Sr="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",Wr=Rr+Ir+zr,Lr="(?:"+[pr,br,wr].join("|")+")"+Wr,Cr="(?:"+[dr+sr+"?",sr,br,wr,ar].join("|")+")",Ur=RegExp(cr,"g"),Br=RegExp(sr,"g"),Tr=RegExp(gr+"(?="+gr+")|"+Cr+Wr,"g"),$r=RegExp([mr+"?"+_r+"+"+kr+"(?="+[lr,mr,"$"].join("|")+")",Ar+"+"+Or+"(?="+[lr,mr+jr,"$"].join("|")+")",mr+"?"+jr+"+"+kr,mr+"+"+Or,Sr,Er,hr,Lr].join("|"),"g"),Dr=RegExp("["+xr+Gt+Qt+or+"]"),Mr=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Fr=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Nr=-1,Pr={};
Pr[ot]=Pr[ft]=Pr[ct]=Pr[at]=Pr[lt]=Pr[st]=Pr[ht]=Pr[pt]=Pr[_t]=!0,Pr[Bn]=Pr[Tn]=Pr[ut]=Pr[Dn]=Pr[it]=Pr[Mn]=Pr[Nn]=Pr[Pn]=Pr[Zn]=Pr[Kn]=Pr[Gn]=Pr[Yn]=Pr[Qn]=Pr[Xn]=Pr[rt]=!1;var qr={};qr[Bn]=qr[Tn]=qr[ut]=qr[it]=qr[Dn]=qr[Mn]=qr[ot]=qr[ft]=qr[ct]=qr[at]=qr[lt]=qr[Zn]=qr[Kn]=qr[Gn]=qr[Yn]=qr[Qn]=qr[Xn]=qr[nt]=qr[st]=qr[ht]=qr[pt]=qr[_t]=!0,qr[Nn]=qr[Pn]=qr[rt]=!1;var Zr={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a",
"\xc7":"C","\xe7":"c","\xd0":"D","\xf0":"d","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xd1":"N","\xf1":"n","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xdd":"Y","\xfd":"y","\xff":"y","\xc6":"Ae",
"\xe6":"ae","\xde":"Th","\xfe":"th","\xdf":"ss","\u0100":"A","\u0102":"A","\u0104":"A","\u0101":"a","\u0103":"a","\u0105":"a","\u0106":"C","\u0108":"C","\u010a":"C","\u010c":"C","\u0107":"c","\u0109":"c","\u010b":"c","\u010d":"c","\u010e":"D","\u0110":"D","\u010f":"d","\u0111":"d","\u0112":"E","\u0114":"E","\u0116":"E","\u0118":"E","\u011a":"E","\u0113":"e","\u0115":"e","\u0117":"e","\u0119":"e","\u011b":"e","\u011c":"G","\u011e":"G","\u0120":"G","\u0122":"G","\u011d":"g","\u011f":"g","\u0121":"g",
"\u0123":"g","\u0124":"H","\u0126":"H","\u0125":"h","\u0127":"h","\u0128":"I","\u012a":"I","\u012c":"I","\u012e":"I","\u0130":"I","\u0129":"i","\u012b":"i","\u012d":"i","\u012f":"i","\u0131":"i","\u0134":"J","\u0135":"j","\u0136":"K","\u0137":"k","\u0138":"k","\u0139":"L","\u013b":"L","\u013d":"L","\u013f":"L","\u0141":"L","\u013a":"l","\u013c":"l","\u013e":"l","\u0140":"l","\u0142":"l","\u0143":"N","\u0145":"N","\u0147":"N","\u014a":"N","\u0144":"n","\u0146":"n","\u0148":"n","\u014b":"n","\u014c":"O",
"\u014e":"O","\u0150":"O","\u014d":"o","\u014f":"o","\u0151":"o","\u0154":"R","\u0156":"R","\u0158":"R","\u0155":"r","\u0157":"r","\u0159":"r","\u015a":"S","\u015c":"S","\u015e":"S","\u0160":"S","\u015b":"s","\u015d":"s","\u015f":"s","\u0161":"s","\u0162":"T","\u0164":"T","\u0166":"T","\u0163":"t","\u0165":"t","\u0167":"t","\u0168":"U","\u016a":"U","\u016c":"U","\u016e":"U","\u0170":"U","\u0172":"U","\u0169":"u","\u016b":"u","\u016d":"u","\u016f":"u","\u0171":"u","\u0173":"u","\u0174":"W","\u0175":"w",
"\u0176":"Y","\u0177":"y","\u0178":"Y","\u0179":"Z","\u017b":"Z","\u017d":"Z","\u017a":"z","\u017c":"z","\u017e":"z","\u0132":"IJ","\u0133":"ij","\u0152":"Oe","\u0153":"oe","\u0149":"'n","\u017f":"s"},Kr={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Vr={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},Gr={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Hr=parseFloat,Jr=parseInt,Yr="object"==typeof global&&global&&global.Object===Object&&global,Qr="object"==typeof self&&self&&self.Object===Object&&self,Xr=Yr||Qr||Function("return this")(),ne="object"==typeof exports&&exports&&!exports.nodeType&&exports,te=ne&&"object"==typeof module&&module&&!module.nodeType&&module,re=te&&te.exports===ne,ee=re&&Yr.process,ue=function(){
try{var n=te&&te.require&&te.require("util").types;return n?n:ee&&ee.binding&&ee.binding("util")}catch(n){}}(),ie=ue&&ue.isArrayBuffer,oe=ue&&ue.isDate,fe=ue&&ue.isMap,ce=ue&&ue.isRegExp,ae=ue&&ue.isSet,le=ue&&ue.isTypedArray,se=m("length"),he=x(Zr),pe=x(Kr),_e=x(Vr),ve=function p(x){function q(n){if(oc(n)&&!yh(n)&&!(n instanceof Bt)){if(n instanceof H)return n;if(yl.call(n,"__wrapped__"))return to(n)}return new H(n)}function G(){}function H(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,
this.__index__=0,this.__values__=Y}function Bt(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Wn,this.__views__=[]}function Gt(){var n=new Bt(this.__wrapped__);return n.__actions__=Uu(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Uu(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Uu(this.__views__),n}function Ht(){if(this.__filtered__){var n=new Bt(this);n.__dir__=-1,
n.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function Jt(){var n=this.__wrapped__.value(),t=this.__dir__,r=yh(n),e=t<0,u=r?n.length:0,i=Ai(0,u,this.__views__),o=i.start,f=i.end,c=f-o,a=e?f:o-1,l=this.__iteratees__,s=l.length,h=0,p=Vl(c,this.__takeCount__);if(!r||!e&&u==c&&p==c)return du(n,this.__actions__);var _=[];n:for(;c--&&h<p;){a+=t;for(var v=-1,g=n[a];++v<s;){var y=l[v],d=y.iteratee,b=y.type,w=d(g);if(b==On)g=w;else if(!w){if(b==kn)continue n;break n}}_[h++]=g}return _}function Yt(n){
var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Qt(){this.__data__=es?es(null):{},this.size=0}function Xt(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t}function nr(n){var t=this.__data__;if(es){var r=t[n];return r===rn?Y:r}return yl.call(t,n)?t[n]:Y}function tr(n){var t=this.__data__;return es?t[n]!==Y:yl.call(t,n)}function rr(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=es&&t===Y?rn:t,this}function er(n){
var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function ur(){this.__data__=[],this.size=0}function ir(n){var t=this.__data__,r=Er(t,n);return!(r<0)&&(r==t.length-1?t.pop():Sl.call(t,r,1),--this.size,!0)}function or(n){var t=this.__data__,r=Er(t,n);return r<0?Y:t[r][1]}function fr(n){return Er(this.__data__,n)>-1}function cr(n,t){var r=this.__data__,e=Er(r,n);return e<0?(++this.size,r.push([n,t])):r[e][1]=t,this}function ar(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){
var e=n[t];this.set(e[0],e[1])}}function lr(){this.size=0,this.__data__={hash:new Yt,map:new(Xl||er),string:new Yt}}function sr(n){var t=wi(this,n).delete(n);return this.size-=t?1:0,t}function hr(n){return wi(this,n).get(n)}function pr(n){return wi(this,n).has(n)}function _r(n,t){var r=wi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this}function vr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new ar;++t<r;)this.add(n[t])}function gr(n){return this.__data__.set(n,rn),this}function yr(n){
return this.__data__.has(n)}function dr(n){this.size=(this.__data__=new er(n)).size}function br(){this.__data__=new er,this.size=0}function wr(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r}function mr(n){return this.__data__.get(n)}function xr(n){return this.__data__.has(n)}function jr(n,t){var r=this.__data__;if(r instanceof er){var e=r.__data__;if(!Xl||e.length<X-1)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new ar(e)}return r.set(n,t),this.size=r.size,this}function Ar(n,t){
var r=yh(n),e=!r&&gh(n),u=!r&&!e&&bh(n),i=!r&&!e&&!u&&Ah(n),o=r||e||u||i,f=o?O(n.length,ll):[],c=f.length;for(var a in n)!t&&!yl.call(n,a)||o&&("length"==a||u&&("offset"==a||"parent"==a)||i&&("buffer"==a||"byteLength"==a||"byteOffset"==a)||Wi(a,c))||f.push(a);return f}function kr(n){var t=n.length;return t?n[Xe(0,t-1)]:Y}function Or(n,t){return Yi(Uu(n),$r(t,0,n.length))}function Ir(n){return Yi(Uu(n))}function Rr(n,t,r){(r===Y||Kf(n[t],r))&&(r!==Y||t in n)||Cr(n,t,r)}function zr(n,t,r){var e=n[t];
yl.call(n,t)&&Kf(e,r)&&(r!==Y||t in n)||Cr(n,t,r)}function Er(n,t){for(var r=n.length;r--;)if(Kf(n[r][0],t))return r;return-1}function Sr(n,t,r,e){return vs(n,function(n,u,i){t(e,n,r(n),i)}),e}function Wr(n,t){return n&&Bu(t,Fc(t),n)}function Lr(n,t){return n&&Bu(t,Nc(t),n)}function Cr(n,t,r){"__proto__"==t&&Ul?Ul(n,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):n[t]=r}function Tr(n,t){for(var r=-1,e=t.length,u=el(e),i=null==n;++r<e;)u[r]=i?Y:$c(n,t[r]);return u}function $r(n,t,r){return n===n&&(r!==Y&&(n=n<=r?n:r),
t!==Y&&(n=n>=t?n:t)),n}function Dr(n,t,e,u,i,o){var f,c=t&on,a=t&fn,l=t&cn;if(e&&(f=i?e(n,u,i,o):e(n)),f!==Y)return f;if(!ic(n))return n;var s=yh(n);if(s){if(f=Ii(n),!c)return Uu(n,f)}else{var h=Is(n),p=h==Pn||h==qn;if(bh(n))return ku(n,c);if(h==Gn||h==Bn||p&&!i){if(f=a||p?{}:Ri(n),!c)return a?$u(n,Lr(f,n)):Tu(n,Wr(f,n))}else{if(!qr[h])return i?n:{};f=zi(n,h,c)}}o||(o=new dr);var _=o.get(n);if(_)return _;o.set(n,f),jh(n)?n.forEach(function(r){f.add(Dr(r,t,e,r,n,o))}):mh(n)&&n.forEach(function(r,u){
f.set(u,Dr(r,t,e,u,n,o))});var v=l?a?gi:vi:a?Nc:Fc,g=s?Y:v(n);return r(g||n,function(r,u){g&&(u=r,r=n[u]),zr(f,u,Dr(r,t,e,u,n,o))}),f}function Mr(n){var t=Fc(n);return function(r){return Zr(r,n,t)}}function Zr(n,t,r){var e=r.length;if(null==n)return!e;for(n=cl(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===Y&&!(u in n)||!i(o))return!1}return!0}function Kr(n,t,r){if("function"!=typeof n)throw new sl(tn);return Es(function(){n.apply(Y,r)},t)}function Vr(n,t,r,e){var u=-1,i=o,a=!0,l=n.length,s=[],h=t.length;
if(!l)return s;r&&(t=c(t,R(r))),e?(i=f,a=!1):t.length>=X&&(i=E,a=!1,t=new vr(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p);if(p=e||0!==p?p:0,a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p)}else i(t,_,e)||s.push(p)}return s}function Gr(n,t){var r=!0;return vs(n,function(n,e,u){return r=!!t(n,e,u)}),r}function Yr(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===Y?o===o&&!yc(o):r(o,f)))var f=o,c=i}return c}function Qr(n,t,r,e){var u=n.length;for(r=jc(r),r<0&&(r=-r>u?0:u+r),
e=e===Y||e>u?u:jc(e),e<0&&(e+=u),e=r>e?0:Ac(e);r<e;)n[r++]=t;return n}function ne(n,t){var r=[];return vs(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function te(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=Si),u||(u=[]);++i<o;){var f=n[i];t>0&&r(f)?t>1?te(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f)}return u}function ee(n,t){return n&&ys(n,t,Fc)}function ue(n,t){return n&&ds(n,t,Fc)}function se(n,t){return i(t,function(t){return rc(n[t])})}function ve(n,t){t=ju(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[Qi(t[r++])];
return r&&r==e?n:Y}function ye(n,t,r){var e=t(n);return yh(n)?e:a(e,r(n))}function de(n){return null==n?n===Y?tt:Vn:Cl&&Cl in cl(n)?ji(n):qi(n)}function be(n,t){return n>t}function we(n,t){return null!=n&&yl.call(n,t)}function me(n,t){return null!=n&&t in cl(n)}function xe(n,t,r){return n>=Vl(t,r)&&n<Kl(t,r)}function je(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=el(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,R(t))),s=Vl(p.length,s),l[a]=!r&&(t||u>=120&&p.length>=120)?new vr(a&&p):Y}p=n[0];
var _=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],y=t?t(g):g;if(g=r||0!==g?g:0,!(v?E(v,y):e(h,y,r))){for(a=i;--a;){var d=l[a];if(!(d?E(d,y):e(n[a],y,r)))continue n}v&&v.push(y),h.push(g)}}return h}function Ae(n,t,r,e){return ee(n,function(n,u,i){t(e,r(n),u,i)}),e}function ke(t,r,e){r=ju(r,t),t=Ki(t,r);var u=null==t?t:t[Qi(mo(r))];return null==u?Y:n(u,t,e)}function Oe(n){return oc(n)&&de(n)==Bn}function Ie(n){return oc(n)&&de(n)==ut}function Re(n){return oc(n)&&de(n)==Mn}function ze(n,t,r,e,u){
return n===t||(null==n||null==t||!oc(n)&&!oc(t)?n!==n&&t!==t:Ee(n,t,r,e,ze,u))}function Ee(n,t,r,e,u,i){var o=yh(n),f=yh(t),c=o?Tn:Is(n),a=f?Tn:Is(t);c=c==Bn?Gn:c,a=a==Bn?Gn:a;var l=c==Gn,s=a==Gn,h=c==a;if(h&&bh(n)){if(!bh(t))return!1;o=!0,l=!1}if(h&&!l)return i||(i=new dr),o||Ah(n)?si(n,t,r,e,u,i):hi(n,t,c,r,e,u,i);if(!(r&an)){var p=l&&yl.call(n,"__wrapped__"),_=s&&yl.call(t,"__wrapped__");if(p||_){var v=p?n.value():n,g=_?t.value():t;return i||(i=new dr),u(v,g,r,e,i)}}return!!h&&(i||(i=new dr),pi(n,t,r,e,u,i));
}function Se(n){return oc(n)&&Is(n)==Zn}function We(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=cl(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return!1}for(;++u<i;){f=r[u];var c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===Y&&!(c in n))return!1}else{var s=new dr;if(e)var h=e(a,l,c,n,t,s);if(!(h===Y?ze(l,a,an|ln,e,s):h))return!1}}return!0}function Le(n){return!(!ic(n)||Ti(n))&&(rc(n)?jl:Nt).test(Xi(n))}function Ce(n){return oc(n)&&de(n)==Yn}function Ue(n){return oc(n)&&Is(n)==Qn;
}function Be(n){return oc(n)&&uc(n.length)&&!!Pr[de(n)]}function Te(n){return"function"==typeof n?n:null==n?Sa:"object"==typeof n?yh(n)?Pe(n[0],n[1]):Ne(n):Da(n)}function $e(n){if(!$i(n))return Zl(n);var t=[];for(var r in cl(n))yl.call(n,r)&&"constructor"!=r&&t.push(r);return t}function De(n){if(!ic(n))return Pi(n);var t=$i(n),r=[];for(var e in n)("constructor"!=e||!t&&yl.call(n,e))&&r.push(e);return r}function Me(n,t){return n<t}function Fe(n,t){var r=-1,e=Vf(n)?el(n.length):[];return vs(n,function(n,u,i){
e[++r]=t(n,u,i)}),e}function Ne(n){var t=mi(n);return 1==t.length&&t[0][2]?Mi(t[0][0],t[0][1]):function(r){return r===n||We(r,n,t)}}function Pe(n,t){return Ci(n)&&Di(t)?Mi(Qi(n),t):function(r){var e=$c(r,n);return e===Y&&e===t?Mc(r,n):ze(t,e,an|ln)}}function qe(n,t,r,e,u){n!==t&&ys(t,function(i,o){if(u||(u=new dr),ic(i))Ze(n,t,o,r,qe,e,u);else{var f=e?e(Gi(n,o),i,o+"",n,t,u):Y;f===Y&&(f=i),Rr(n,o,f)}},Nc)}function Ze(n,t,r,e,u,i,o){var f=Gi(n,r),c=Gi(t,r),a=o.get(c);if(a)return Rr(n,r,a),Y;var l=i?i(f,c,r+"",n,t,o):Y,s=l===Y;
if(s){var h=yh(c),p=!h&&bh(c),_=!h&&!p&&Ah(c);l=c,h||p||_?yh(f)?l=f:Gf(f)?l=Uu(f):p?(s=!1,l=ku(c,!0)):_?(s=!1,l=Eu(c,!0)):l=[]:_c(c)||gh(c)?(l=f,gh(f)?l=Oc(f):ic(f)&&!rc(f)||(l=Ri(c))):s=!1}s&&(o.set(c,l),u(l,c,e,i,o),o.delete(c)),Rr(n,r,l)}function Ke(n,t){var r=n.length;if(r)return t+=t<0?r:0,Wi(t,r)?n[t]:Y}function Ve(n,t,r){t=t.length?c(t,function(n){return yh(n)?function(t){return ve(t,1===n.length?n[0]:n)}:n}):[Sa];var e=-1;return t=c(t,R(bi())),A(Fe(n,function(n,r,u){return{criteria:c(t,function(t){
return t(n)}),index:++e,value:n}}),function(n,t){return Wu(n,t,r)})}function Ge(n,t){return He(n,t,function(t,r){return Mc(n,r)})}function He(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=ve(n,o);r(f,o)&&iu(i,ju(o,n),f)}return i}function Je(n){return function(t){return ve(t,n)}}function Ye(n,t,r,e){var u=e?d:y,i=-1,o=t.length,f=n;for(n===t&&(t=Uu(t)),r&&(f=c(n,R(r)));++i<o;)for(var a=0,l=t[i],s=r?r(l):l;(a=u(f,s,a,e))>-1;)f!==n&&Sl.call(f,a,1),Sl.call(n,a,1);return n}function Qe(n,t){for(var r=n?t.length:0,e=r-1;r--;){
var u=t[r];if(r==e||u!==i){var i=u;Wi(u)?Sl.call(n,u,1):vu(n,u)}}return n}function Xe(n,t){return n+Ml(Jl()*(t-n+1))}function nu(n,t,r,e){for(var u=-1,i=Kl(Dl((t-n)/(r||1)),0),o=el(i);i--;)o[e?i:++u]=n,n+=r;return o}function tu(n,t){var r="";if(!n||t<1||t>zn)return r;do t%2&&(r+=n),t=Ml(t/2),t&&(n+=n);while(t);return r}function ru(n,t){return Ss(Zi(n,t,Sa),n+"")}function eu(n){return kr(na(n))}function uu(n,t){var r=na(n);return Yi(r,$r(t,0,r.length))}function iu(n,t,r,e){if(!ic(n))return n;t=ju(t,n);
for(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var c=Qi(t[u]),a=r;if("__proto__"===c||"constructor"===c||"prototype"===c)return n;if(u!=o){var l=f[c];a=e?e(l,c,f):Y,a===Y&&(a=ic(l)?l:Wi(t[u+1])?[]:{})}zr(f,c,a),f=f[c]}return n}function ou(n){return Yi(na(n))}function fu(n,t,r){var e=-1,u=n.length;t<0&&(t=-t>u?0:u+t),r=r>u?u:r,r<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=el(u);++e<u;)i[e]=n[e+t];return i}function cu(n,t){var r;return vs(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function au(n,t,r){
var e=0,u=null==n?e:n.length;if("number"==typeof t&&t===t&&u<=Cn){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!yc(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return lu(n,t,Sa,r)}function lu(n,t,r,e){var u=0,i=null==n?0:n.length;if(0===i)return 0;t=r(t);for(var o=t!==t,f=null===t,c=yc(t),a=t===Y;u<i;){var l=Ml((u+i)/2),s=r(n[l]),h=s!==Y,p=null===s,_=s===s,v=yc(s);if(o)var g=e||_;else g=a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):!p&&!v&&(e?s<=t:s<t);g?u=l+1:i=l}return Vl(i,Ln)}function su(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){
var o=n[r],f=t?t(o):o;if(!r||!Kf(f,c)){var c=f;i[u++]=0===o?0:o}}return i}function hu(n){return"number"==typeof n?n:yc(n)?Sn:+n}function pu(n){if("string"==typeof n)return n;if(yh(n))return c(n,pu)+"";if(yc(n))return ps?ps.call(n):"";var t=n+"";return"0"==t&&1/n==-Rn?"-0":t}function _u(n,t,r){var e=-1,u=o,i=n.length,c=!0,a=[],l=a;if(r)c=!1,u=f;else if(i>=X){var s=t?null:js(n);if(s)return N(s);c=!1,u=E,l=new vr}else l=t?[]:a;n:for(;++e<i;){var h=n[e],p=t?t(h):h;if(h=r||0!==h?h:0,c&&p===p){for(var _=l.length;_--;)if(l[_]===p)continue n;
t&&l.push(p),a.push(h)}else u(l,p,r)||(l!==a&&l.push(p),a.push(h))}return a}function vu(n,t){return t=ju(t,n),n=Ki(n,t),null==n||delete n[Qi(mo(t))]}function gu(n,t,r,e){return iu(n,t,r(ve(n,t)),e)}function yu(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?fu(n,e?0:i,e?i+1:u):fu(n,e?i+1:0,e?u:i)}function du(n,t){var r=n;return r instanceof Bt&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function bu(n,t,r){var e=n.length;if(e<2)return e?_u(n[0]):[];
for(var u=-1,i=el(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=Vr(i[u]||o,n[f],t,r));return _u(te(i,1),t,r)}function wu(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;){r(o,n[e],e<i?t[e]:Y)}return o}function mu(n){return Gf(n)?n:[]}function xu(n){return"function"==typeof n?n:Sa}function ju(n,t){return yh(n)?n:Ci(n,t)?[n]:Ws(Rc(n))}function Au(n,t,r){var e=n.length;return r=r===Y?e:r,!t&&r>=e?n:fu(n,t,r)}function ku(n,t){if(t)return n.slice();var r=n.length,e=Il?Il(r):new n.constructor(r);
return n.copy(e),e}function Ou(n){var t=new n.constructor(n.byteLength);return new Ol(t).set(new Ol(n)),t}function Iu(n,t){return new n.constructor(t?Ou(n.buffer):n.buffer,n.byteOffset,n.byteLength)}function Ru(n){var t=new n.constructor(n.source,Dt.exec(n));return t.lastIndex=n.lastIndex,t}function zu(n){return hs?cl(hs.call(n)):{}}function Eu(n,t){return new n.constructor(t?Ou(n.buffer):n.buffer,n.byteOffset,n.length)}function Su(n,t){if(n!==t){var r=n!==Y,e=null===n,u=n===n,i=yc(n),o=t!==Y,f=null===t,c=t===t,a=yc(t);
if(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return-1}return 0}function Wu(n,t,r){for(var e=-1,u=n.criteria,i=t.criteria,o=u.length,f=r.length;++e<o;){var c=Su(u[e],i[e]);if(c){if(e>=f)return c;return c*("desc"==r[e]?-1:1)}}return n.index-t.index}function Lu(n,t,r,e){for(var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Kl(i-o,0),l=el(c+a),s=!e;++f<c;)l[f]=t[f];for(;++u<o;)(s||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];return l;
}function Cu(n,t,r,e){for(var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Kl(i-f,0),s=el(l+a),h=!e;++u<l;)s[u]=n[u];for(var p=u;++c<a;)s[p+c]=t[c];for(;++o<f;)(h||u<i)&&(s[p+r[o]]=n[u++]);return s}function Uu(n,t){var r=-1,e=n.length;for(t||(t=el(e));++r<e;)t[r]=n[r];return t}function Bu(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):Y;c===Y&&(c=n[f]),u?Cr(r,f,c):zr(r,f,c)}return r}function Tu(n,t){return Bu(n,ks(n),t)}function $u(n,t){return Bu(n,Os(n),t);
}function Du(n,r){return function(e,u){var i=yh(e)?t:Sr,o=r?r():{};return i(e,n,bi(u,2),o)}}function Mu(n){return ru(function(t,r){var e=-1,u=r.length,i=u>1?r[u-1]:Y,o=u>2?r[2]:Y;for(i=n.length>3&&"function"==typeof i?(u--,i):Y,o&&Li(r[0],r[1],o)&&(i=u<3?Y:i,u=1),t=cl(t);++e<u;){var f=r[e];f&&n(t,f,e,i)}return t})}function Fu(n,t){return function(r,e){if(null==r)return r;if(!Vf(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=cl(r);(t?i--:++i<u)&&e(o[i],i,o)!==!1;);return r}}function Nu(n){return function(t,r,e){
for(var u=-1,i=cl(t),o=e(t),f=o.length;f--;){var c=o[n?f:++u];if(r(i[c],c,i)===!1)break}return t}}function Pu(n,t,r){function e(){return(this&&this!==Xr&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=t&sn,i=Ku(n);return e}function qu(n){return function(t){t=Rc(t);var r=B(t)?V(t):Y,e=r?r[0]:t.charAt(0),u=r?Au(r,1).join(""):t.slice(1);return e[n]()+u}}function Zu(n){return function(t){return l(Oa(oa(t).replace(Ur,"")),n,"")}}function Ku(n){return function(){var t=arguments;switch(t.length){
case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=_s(n.prototype),e=n.apply(r,t);return ic(e)?e:r}}function Vu(t,r,e){function u(){for(var o=arguments.length,f=el(o),c=o,a=di(u);c--;)f[c]=arguments[c];var l=o<3&&f[0]!==a&&f[o-1]!==a?[]:F(f,a);
return o-=l.length,o<e?ui(t,r,Ju,u.placeholder,Y,f,l,Y,Y,e-o):n(this&&this!==Xr&&this instanceof u?i:t,this,f)}var i=Ku(t);return u}function Gu(n){return function(t,r,e){var u=cl(t);if(!Vf(t)){var i=bi(r,3);t=Fc(t),r=function(n){return i(u[n],n,u)}}var o=n(t,r,e);return o>-1?u[i?t[o]:o]:Y}}function Hu(n){return _i(function(t){var r=t.length,e=r,u=H.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if("function"!=typeof i)throw new sl(tn);if(u&&!o&&"wrapper"==yi(i))var o=new H([],!0)}for(e=o?e:r;++e<r;){
i=t[e];var f=yi(i),c="wrapper"==f?As(i):Y;o=c&&Bi(c[0])&&c[1]==(dn|_n|gn|bn)&&!c[4].length&&1==c[9]?o[yi(c[0])].apply(o,c[3]):1==i.length&&Bi(i)?o[f]():o.thru(i)}return function(){var n=arguments,e=n[0];if(o&&1==n.length&&yh(e))return o.plant(e).value();for(var u=0,i=r?t[u].apply(this,n):e;++u<r;)i=t[u].call(this,i);return i}})}function Ju(n,t,r,e,u,i,o,f,c,a){function l(){for(var y=arguments.length,d=el(y),b=y;b--;)d[b]=arguments[b];if(_)var w=di(l),m=L(d,w);if(e&&(d=Lu(d,e,u,_)),i&&(d=Cu(d,i,o,_)),
y-=m,_&&y<a){return ui(n,t,Ju,l.placeholder,r,d,F(d,w),f,c,a-y)}var x=h?r:this,j=p?x[n]:n;return y=d.length,f?d=Vi(d,f):v&&y>1&&d.reverse(),s&&c<y&&(d.length=c),this&&this!==Xr&&this instanceof l&&(j=g||Ku(j)),j.apply(x,d)}var s=t&dn,h=t&sn,p=t&hn,_=t&(_n|vn),v=t&wn,g=p?Y:Ku(n);return l}function Yu(n,t){return function(r,e){return Ae(r,n,t(e),{})}}function Qu(n,t){return function(r,e){var u;if(r===Y&&e===Y)return t;if(r!==Y&&(u=r),e!==Y){if(u===Y)return e;"string"==typeof r||"string"==typeof e?(r=pu(r),
e=pu(e)):(r=hu(r),e=hu(e)),u=n(r,e)}return u}}function Xu(t){return _i(function(r){return r=c(r,R(bi())),ru(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ni(n,t){t=t===Y?" ":pu(t);var r=t.length;if(r<2)return r?tu(t,n):t;var e=tu(t,Dl(n/K(t)));return B(t)?Au(V(e),0,n).join(""):e.slice(0,n)}function ti(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=el(l+c),h=this&&this!==Xr&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];
return n(h,o?e:this,s)}var o=r&sn,f=Ku(t);return i}function ri(n){return function(t,r,e){return e&&"number"!=typeof e&&Li(t,r,e)&&(r=e=Y),t=xc(t),r===Y?(r=t,t=0):r=xc(r),e=e===Y?t<r?1:-1:xc(e),nu(t,r,e,n)}}function ei(n){return function(t,r){return"string"==typeof t&&"string"==typeof r||(t=kc(t),r=kc(r)),n(t,r)}}function ui(n,t,r,e,u,i,o,f,c,a){var l=t&_n,s=l?o:Y,h=l?Y:o,p=l?i:Y,_=l?Y:i;t|=l?gn:yn,t&=~(l?yn:gn),t&pn||(t&=~(sn|hn));var v=[n,t,u,p,s,_,h,f,c,a],g=r.apply(Y,v);return Bi(n)&&zs(g,v),g.placeholder=e,
Hi(g,n,t)}function ii(n){var t=fl[n];return function(n,r){if(n=kc(n),r=null==r?0:Vl(jc(r),292),r&&Pl(n)){var e=(Rc(n)+"e").split("e");return e=(Rc(t(e[0]+"e"+(+e[1]+r)))+"e").split("e"),+(e[0]+"e"+(+e[1]-r))}return t(n)}}function oi(n){return function(t){var r=Is(t);return r==Zn?D(t):r==Qn?P(t):I(t,n(t))}}function fi(n,t,r,e,u,i,o,f){var c=t&hn;if(!c&&"function"!=typeof n)throw new sl(tn);var a=e?e.length:0;if(a||(t&=~(gn|yn),e=u=Y),o=o===Y?o:Kl(jc(o),0),f=f===Y?f:jc(f),a-=u?u.length:0,t&yn){var l=e,s=u;
e=u=Y}var h=c?Y:As(n),p=[n,t,r,e,u,l,s,i,o,f];if(h&&Ni(p,h),n=p[0],t=p[1],r=p[2],e=p[3],u=p[4],f=p[9]=p[9]===Y?c?0:n.length:Kl(p[9]-a,0),!f&&t&(_n|vn)&&(t&=~(_n|vn)),t&&t!=sn)_=t==_n||t==vn?Vu(n,t,f):t!=gn&&t!=(sn|gn)||u.length?Ju.apply(Y,p):ti(n,t,r,e);else var _=Pu(n,t,r);return Hi((h?bs:zs)(_,p),n,t)}function ci(n,t,r,e){return n===Y||Kf(n,_l[r])&&!yl.call(e,r)?t:n}function ai(n,t,r,e,u,i){return ic(n)&&ic(t)&&(i.set(t,n),qe(n,t,Y,ai,i),i.delete(t)),n}function li(n){return _c(n)?Y:n}function si(n,t,r,e,u,i){
var o=r&an,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&ln?new vr:Y;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==Y){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!E(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else if(v!==g&&!u(v,g,r,e,i)){p=!1;break}}return i.delete(n),i.delete(t),p}function hi(n,t,r,e,u,i,o){switch(r){case it:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;
n=n.buffer,t=t.buffer;case ut:return!(n.byteLength!=t.byteLength||!i(new Ol(n),new Ol(t)));case Dn:case Mn:case Kn:return Kf(+n,+t);case Nn:return n.name==t.name&&n.message==t.message;case Yn:case Xn:return n==t+"";case Zn:var f=D;case Qn:var c=e&an;if(f||(f=N),n.size!=t.size&&!c)return!1;var a=o.get(n);if(a)return a==t;e|=ln,o.set(n,t);var l=si(f(n),f(t),e,u,i,o);return o.delete(n),l;case nt:if(hs)return hs.call(n)==hs.call(t)}return!1}function pi(n,t,r,e,u,i){var o=r&an,f=vi(n),c=f.length;if(c!=vi(t).length&&!o)return!1;
for(var a=c;a--;){var l=f[a];if(!(o?l in t:yl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===Y?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_="constructor"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&"constructor"in n&&"constructor"in t&&!("function"==typeof d&&d instanceof d&&"function"==typeof b&&b instanceof b)&&(p=!1)}return i.delete(n),
i.delete(t),p}function _i(n){return Ss(Zi(n,Y,ho),n+"")}function vi(n){return ye(n,Fc,ks)}function gi(n){return ye(n,Nc,Os)}function yi(n){for(var t=n.name+"",r=is[t],e=yl.call(is,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function di(n){return(yl.call(q,"placeholder")?q:n).placeholder}function bi(){var n=q.iteratee||Wa;return n=n===Wa?Te:n,arguments.length?n(arguments[0],arguments[1]):n}function wi(n,t){var r=n.__data__;return Ui(t)?r["string"==typeof t?"string":"hash"]:r.map;
}function mi(n){for(var t=Fc(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,Di(u)]}return t}function xi(n,t){var r=U(n,t);return Le(r)?r:Y}function ji(n){var t=yl.call(n,Cl),r=n[Cl];try{n[Cl]=Y;var e=!0}catch(n){}var u=wl.call(n);return e&&(t?n[Cl]=r:delete n[Cl]),u}function Ai(n,t,r){for(var e=-1,u=r.length;++e<u;){var i=r[e],o=i.size;switch(i.type){case"drop":n+=o;break;case"dropRight":t-=o;break;case"take":t=Vl(t,n+o);break;case"takeRight":n=Kl(n,t-o)}}return{start:n,end:t}}function ki(n){var t=n.match(Ct);
return t?t[1].split(Ut):[]}function Oi(n,t,r){t=ju(t,n);for(var e=-1,u=t.length,i=!1;++e<u;){var o=Qi(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&uc(u)&&Wi(o,u)&&(yh(n)||gh(n)))}function Ii(n){var t=n.length,r=new n.constructor(t);return t&&"string"==typeof n[0]&&yl.call(n,"index")&&(r.index=n.index,r.input=n.input),r}function Ri(n){return"function"!=typeof n.constructor||$i(n)?{}:_s(Rl(n))}function zi(n,t,r){var e=n.constructor;switch(t){case ut:return Ou(n);
case Dn:case Mn:return new e(+n);case it:return Iu(n,r);case ot:case ft:case ct:case at:case lt:case st:case ht:case pt:case _t:return Eu(n,r);case Zn:return new e;case Kn:case Xn:return new e(n);case Yn:return Ru(n);case Qn:return new e;case nt:return zu(n)}}function Ei(n,t){var r=t.length;if(!r)return n;var e=r-1;return t[e]=(r>1?"& ":"")+t[e],t=t.join(r>2?", ":" "),n.replace(Lt,"{\n/* [wrapped with "+t+"] */\n")}function Si(n){return yh(n)||gh(n)||!!(Wl&&n&&n[Wl])}function Wi(n,t){var r=typeof n;
return t=null==t?zn:t,!!t&&("number"==r||"symbol"!=r&&qt.test(n))&&n>-1&&n%1==0&&n<t}function Li(n,t,r){if(!ic(r))return!1;var e=typeof t;return!!("number"==e?Vf(r)&&Wi(t,r.length):"string"==e&&t in r)&&Kf(r[t],n)}function Ci(n,t){if(yh(n))return!1;var r=typeof n;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=n&&!yc(n))||(Ot.test(n)||!kt.test(n)||null!=t&&n in cl(t))}function Ui(n){var t=typeof n;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==n:null===n}function Bi(n){
var t=yi(n),r=q[t];if("function"!=typeof r||!(t in Bt.prototype))return!1;if(n===r)return!0;var e=As(r);return!!e&&n===e[0]}function Ti(n){return!!bl&&bl in n}function $i(n){var t=n&&n.constructor;return n===("function"==typeof t&&t.prototype||_l)}function Di(n){return n===n&&!ic(n)}function Mi(n,t){return function(r){return null!=r&&(r[n]===t&&(t!==Y||n in cl(r)))}}function Fi(n){var t=Wf(n,function(n){return r.size===en&&r.clear(),n}),r=t.cache;return t}function Ni(n,t){var r=n[1],e=t[1],u=r|e,i=u<(sn|hn|dn),o=e==dn&&r==_n||e==dn&&r==bn&&n[7].length<=t[8]||e==(dn|bn)&&t[7].length<=t[8]&&r==_n;
if(!i&&!o)return n;e&sn&&(n[2]=t[2],u|=r&sn?0:pn);var f=t[3];if(f){var c=n[3];n[3]=c?Lu(c,f,t[4]):f,n[4]=c?F(n[3],un):t[4]}return f=t[5],f&&(c=n[5],n[5]=c?Cu(c,f,t[6]):f,n[6]=c?F(n[5],un):t[6]),f=t[7],f&&(n[7]=f),e&dn&&(n[8]=null==n[8]?t[8]:Vl(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u,n}function Pi(n){var t=[];if(null!=n)for(var r in cl(n))t.push(r);return t}function qi(n){return wl.call(n)}function Zi(t,r,e){return r=Kl(r===Y?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Kl(u.length-r,0),f=el(o);++i<o;)f[i]=u[r+i];
i=-1;for(var c=el(r+1);++i<r;)c[i]=u[i];return c[r]=e(f),n(t,this,c)}}function Ki(n,t){return t.length<2?n:ve(n,fu(t,0,-1))}function Vi(n,t){for(var r=n.length,e=Vl(t.length,r),u=Uu(n);e--;){var i=t[e];n[e]=Wi(i,r)?u[i]:Y}return n}function Gi(n,t){if(("constructor"!==t||"function"!=typeof n[t])&&"__proto__"!=t)return n[t]}function Hi(n,t,r){var e=t+"";return Ss(n,Ei(e,no(ki(e),r)))}function Ji(n){var t=0,r=0;return function(){var e=Gl(),u=An-(e-r);if(r=e,u>0){if(++t>=jn)return arguments[0]}else t=0;
return n.apply(Y,arguments)}}function Yi(n,t){var r=-1,e=n.length,u=e-1;for(t=t===Y?e:t;++r<t;){var i=Xe(r,u),o=n[i];n[i]=n[r],n[r]=o}return n.length=t,n}function Qi(n){if("string"==typeof n||yc(n))return n;var t=n+"";return"0"==t&&1/n==-Rn?"-0":t}function Xi(n){if(null!=n){try{return gl.call(n)}catch(n){}try{return n+""}catch(n){}}return""}function no(n,t){return r(Un,function(r){var e="_."+r[0];t&r[1]&&!o(n,e)&&n.push(e)}),n.sort()}function to(n){if(n instanceof Bt)return n.clone();var t=new H(n.__wrapped__,n.__chain__);
return t.__actions__=Uu(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function ro(n,t,r){t=(r?Li(n,t,r):t===Y)?1:Kl(jc(t),0);var e=null==n?0:n.length;if(!e||t<1)return[];for(var u=0,i=0,o=el(Dl(e/t));u<e;)o[i++]=fu(n,u,u+=t);return o}function eo(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){var i=n[t];i&&(u[e++]=i)}return u}function uo(){var n=arguments.length;if(!n)return[];for(var t=el(n-1),r=arguments[0],e=n;e--;)t[e-1]=arguments[e];return a(yh(r)?Uu(r):[r],te(t,1));
}function io(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===Y?1:jc(t),fu(n,t<0?0:t,e)):[]}function oo(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===Y?1:jc(t),t=e-t,fu(n,0,t<0?0:t)):[]}function fo(n,t){return n&&n.length?yu(n,bi(t,3),!0,!0):[]}function co(n,t){return n&&n.length?yu(n,bi(t,3),!0):[]}function ao(n,t,r,e){var u=null==n?0:n.length;return u?(r&&"number"!=typeof r&&Li(n,t,r)&&(r=0,e=u),Qr(n,t,r,e)):[]}function lo(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:jc(r);
return u<0&&(u=Kl(e+u,0)),g(n,bi(t,3),u)}function so(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return r!==Y&&(u=jc(r),u=r<0?Kl(e+u,0):Vl(u,e-1)),g(n,bi(t,3),u,!0)}function ho(n){return(null==n?0:n.length)?te(n,1):[]}function po(n){return(null==n?0:n.length)?te(n,Rn):[]}function _o(n,t){return(null==n?0:n.length)?(t=t===Y?1:jc(t),te(n,t)):[]}function vo(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e}function go(n){return n&&n.length?n[0]:Y}function yo(n,t,r){
var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:jc(r);return u<0&&(u=Kl(e+u,0)),y(n,t,u)}function bo(n){return(null==n?0:n.length)?fu(n,0,-1):[]}function wo(n,t){return null==n?"":ql.call(n,t)}function mo(n){var t=null==n?0:n.length;return t?n[t-1]:Y}function xo(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;return r!==Y&&(u=jc(r),u=u<0?Kl(e+u,0):Vl(u,e-1)),t===t?Z(n,t,u):g(n,b,u,!0)}function jo(n,t){return n&&n.length?Ke(n,jc(t)):Y}function Ao(n,t){return n&&n.length&&t&&t.length?Ye(n,t):n;
}function ko(n,t,r){return n&&n.length&&t&&t.length?Ye(n,t,bi(r,2)):n}function Oo(n,t,r){return n&&n.length&&t&&t.length?Ye(n,t,Y,r):n}function Io(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=bi(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),u.push(e))}return Qe(n,u),r}function Ro(n){return null==n?n:Yl.call(n)}function zo(n,t,r){var e=null==n?0:n.length;return e?(r&&"number"!=typeof r&&Li(n,t,r)?(t=0,r=e):(t=null==t?0:jc(t),r=r===Y?e:jc(r)),fu(n,t,r)):[]}function Eo(n,t){
return au(n,t)}function So(n,t,r){return lu(n,t,bi(r,2))}function Wo(n,t){var r=null==n?0:n.length;if(r){var e=au(n,t);if(e<r&&Kf(n[e],t))return e}return-1}function Lo(n,t){return au(n,t,!0)}function Co(n,t,r){return lu(n,t,bi(r,2),!0)}function Uo(n,t){if(null==n?0:n.length){var r=au(n,t,!0)-1;if(Kf(n[r],t))return r}return-1}function Bo(n){return n&&n.length?su(n):[]}function To(n,t){return n&&n.length?su(n,bi(t,2)):[]}function $o(n){var t=null==n?0:n.length;return t?fu(n,1,t):[]}function Do(n,t,r){
return n&&n.length?(t=r||t===Y?1:jc(t),fu(n,0,t<0?0:t)):[]}function Mo(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===Y?1:jc(t),t=e-t,fu(n,t<0?0:t,e)):[]}function Fo(n,t){return n&&n.length?yu(n,bi(t,3),!1,!0):[]}function No(n,t){return n&&n.length?yu(n,bi(t,3)):[]}function Po(n){return n&&n.length?_u(n):[]}function qo(n,t){return n&&n.length?_u(n,bi(t,2)):[]}function Zo(n,t){return t="function"==typeof t?t:Y,n&&n.length?_u(n,Y,t):[]}function Ko(n){if(!n||!n.length)return[];var t=0;return n=i(n,function(n){
if(Gf(n))return t=Kl(n.length,t),!0}),O(t,function(t){return c(n,m(t))})}function Vo(t,r){if(!t||!t.length)return[];var e=Ko(t);return null==r?e:c(e,function(t){return n(r,Y,t)})}function Go(n,t){return wu(n||[],t||[],zr)}function Ho(n,t){return wu(n||[],t||[],iu)}function Jo(n){var t=q(n);return t.__chain__=!0,t}function Yo(n,t){return t(n),n}function Qo(n,t){return t(n)}function Xo(){return Jo(this)}function nf(){return new H(this.value(),this.__chain__)}function tf(){this.__values__===Y&&(this.__values__=mc(this.value()));
var n=this.__index__>=this.__values__.length;return{done:n,value:n?Y:this.__values__[this.__index__++]}}function rf(){return this}function ef(n){for(var t,r=this;r instanceof G;){var e=to(r);e.__index__=0,e.__values__=Y,t?u.__wrapped__=e:t=e;var u=e;r=r.__wrapped__}return u.__wrapped__=n,t}function uf(){var n=this.__wrapped__;if(n instanceof Bt){var t=n;return this.__actions__.length&&(t=new Bt(this)),t=t.reverse(),t.__actions__.push({func:Qo,args:[Ro],thisArg:Y}),new H(t,this.__chain__)}return this.thru(Ro);
}function of(){return du(this.__wrapped__,this.__actions__)}function ff(n,t,r){var e=yh(n)?u:Gr;return r&&Li(n,t,r)&&(t=Y),e(n,bi(t,3))}function cf(n,t){return(yh(n)?i:ne)(n,bi(t,3))}function af(n,t){return te(vf(n,t),1)}function lf(n,t){return te(vf(n,t),Rn)}function sf(n,t,r){return r=r===Y?1:jc(r),te(vf(n,t),r)}function hf(n,t){return(yh(n)?r:vs)(n,bi(t,3))}function pf(n,t){return(yh(n)?e:gs)(n,bi(t,3))}function _f(n,t,r,e){n=Vf(n)?n:na(n),r=r&&!e?jc(r):0;var u=n.length;return r<0&&(r=Kl(u+r,0)),
gc(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&y(n,t,r)>-1}function vf(n,t){return(yh(n)?c:Fe)(n,bi(t,3))}function gf(n,t,r,e){return null==n?[]:(yh(t)||(t=null==t?[]:[t]),r=e?Y:r,yh(r)||(r=null==r?[]:[r]),Ve(n,t,r))}function yf(n,t,r){var e=yh(n)?l:j,u=arguments.length<3;return e(n,bi(t,4),r,u,vs)}function df(n,t,r){var e=yh(n)?s:j,u=arguments.length<3;return e(n,bi(t,4),r,u,gs)}function bf(n,t){return(yh(n)?i:ne)(n,Lf(bi(t,3)))}function wf(n){return(yh(n)?kr:eu)(n)}function mf(n,t,r){return t=(r?Li(n,t,r):t===Y)?1:jc(t),
(yh(n)?Or:uu)(n,t)}function xf(n){return(yh(n)?Ir:ou)(n)}function jf(n){if(null==n)return 0;if(Vf(n))return gc(n)?K(n):n.length;var t=Is(n);return t==Zn||t==Qn?n.size:$e(n).length}function Af(n,t,r){var e=yh(n)?h:cu;return r&&Li(n,t,r)&&(t=Y),e(n,bi(t,3))}function kf(n,t){if("function"!=typeof t)throw new sl(tn);return n=jc(n),function(){if(--n<1)return t.apply(this,arguments)}}function Of(n,t,r){return t=r?Y:t,t=n&&null==t?n.length:t,fi(n,dn,Y,Y,Y,Y,t)}function If(n,t){var r;if("function"!=typeof t)throw new sl(tn);
return n=jc(n),function(){return--n>0&&(r=t.apply(this,arguments)),n<=1&&(t=Y),r}}function Rf(n,t,r){t=r?Y:t;var e=fi(n,_n,Y,Y,Y,Y,Y,t);return e.placeholder=Rf.placeholder,e}function zf(n,t,r){t=r?Y:t;var e=fi(n,vn,Y,Y,Y,Y,Y,t);return e.placeholder=zf.placeholder,e}function Ef(n,t,r){function e(t){var r=h,e=p;return h=p=Y,d=t,v=n.apply(e,r)}function u(n){return d=n,g=Es(f,t),b?e(n):v}function i(n){var r=n-y,e=n-d,u=t-r;return w?Vl(u,_-e):u}function o(n){var r=n-y,e=n-d;return y===Y||r>=t||r<0||w&&e>=_;
}function f(){var n=ih();return o(n)?c(n):(g=Es(f,i(n)),Y)}function c(n){return g=Y,m&&h?e(n):(h=p=Y,v)}function a(){g!==Y&&xs(g),d=0,h=y=p=g=Y}function l(){return g===Y?v:c(ih())}function s(){var n=ih(),r=o(n);if(h=arguments,p=this,y=n,r){if(g===Y)return u(y);if(w)return xs(g),g=Es(f,t),e(y)}return g===Y&&(g=Es(f,t)),v}var h,p,_,v,g,y,d=0,b=!1,w=!1,m=!0;if("function"!=typeof n)throw new sl(tn);return t=kc(t)||0,ic(r)&&(b=!!r.leading,w="maxWait"in r,_=w?Kl(kc(r.maxWait)||0,t):_,m="trailing"in r?!!r.trailing:m),
s.cancel=a,s.flush=l,s}function Sf(n){return fi(n,wn)}function Wf(n,t){if("function"!=typeof n||null!=t&&"function"!=typeof t)throw new sl(tn);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Wf.Cache||ar),r}function Lf(n){if("function"!=typeof n)throw new sl(tn);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:
return!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function Cf(n){return If(2,n)}function Uf(n,t){if("function"!=typeof n)throw new sl(tn);return t=t===Y?t:jc(t),ru(n,t)}function Bf(t,r){if("function"!=typeof t)throw new sl(tn);return r=null==r?0:Kl(jc(r),0),ru(function(e){var u=e[r],i=Au(e,0,r);return u&&a(i,u),n(t,this,i)})}function Tf(n,t,r){var e=!0,u=!0;if("function"!=typeof n)throw new sl(tn);return ic(r)&&(e="leading"in r?!!r.leading:e,u="trailing"in r?!!r.trailing:u),
Ef(n,t,{leading:e,maxWait:t,trailing:u})}function $f(n){return Of(n,1)}function Df(n,t){return sh(xu(t),n)}function Mf(){if(!arguments.length)return[];var n=arguments[0];return yh(n)?n:[n]}function Ff(n){return Dr(n,cn)}function Nf(n,t){return t="function"==typeof t?t:Y,Dr(n,cn,t)}function Pf(n){return Dr(n,on|cn)}function qf(n,t){return t="function"==typeof t?t:Y,Dr(n,on|cn,t)}function Zf(n,t){return null==t||Zr(n,t,Fc(t))}function Kf(n,t){return n===t||n!==n&&t!==t}function Vf(n){return null!=n&&uc(n.length)&&!rc(n);
}function Gf(n){return oc(n)&&Vf(n)}function Hf(n){return n===!0||n===!1||oc(n)&&de(n)==Dn}function Jf(n){return oc(n)&&1===n.nodeType&&!_c(n)}function Yf(n){if(null==n)return!0;if(Vf(n)&&(yh(n)||"string"==typeof n||"function"==typeof n.splice||bh(n)||Ah(n)||gh(n)))return!n.length;var t=Is(n);if(t==Zn||t==Qn)return!n.size;if($i(n))return!$e(n).length;for(var r in n)if(yl.call(n,r))return!1;return!0}function Qf(n,t){return ze(n,t)}function Xf(n,t,r){r="function"==typeof r?r:Y;var e=r?r(n,t):Y;return e===Y?ze(n,t,Y,r):!!e;
}function nc(n){if(!oc(n))return!1;var t=de(n);return t==Nn||t==Fn||"string"==typeof n.message&&"string"==typeof n.name&&!_c(n)}function tc(n){return"number"==typeof n&&Pl(n)}function rc(n){if(!ic(n))return!1;var t=de(n);return t==Pn||t==qn||t==$n||t==Jn}function ec(n){return"number"==typeof n&&n==jc(n)}function uc(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=zn}function ic(n){var t=typeof n;return null!=n&&("object"==t||"function"==t)}function oc(n){return null!=n&&"object"==typeof n}function fc(n,t){
return n===t||We(n,t,mi(t))}function cc(n,t,r){return r="function"==typeof r?r:Y,We(n,t,mi(t),r)}function ac(n){return pc(n)&&n!=+n}function lc(n){if(Rs(n))throw new il(nn);return Le(n)}function sc(n){return null===n}function hc(n){return null==n}function pc(n){return"number"==typeof n||oc(n)&&de(n)==Kn}function _c(n){if(!oc(n)||de(n)!=Gn)return!1;var t=Rl(n);if(null===t)return!0;var r=yl.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&gl.call(r)==ml}function vc(n){
return ec(n)&&n>=-zn&&n<=zn}function gc(n){return"string"==typeof n||!yh(n)&&oc(n)&&de(n)==Xn}function yc(n){return"symbol"==typeof n||oc(n)&&de(n)==nt}function dc(n){return n===Y}function bc(n){return oc(n)&&Is(n)==rt}function wc(n){return oc(n)&&de(n)==et}function mc(n){if(!n)return[];if(Vf(n))return gc(n)?V(n):Uu(n);if(Ll&&n[Ll])return $(n[Ll]());var t=Is(n);return(t==Zn?D:t==Qn?N:na)(n)}function xc(n){if(!n)return 0===n?n:0;if(n=kc(n),n===Rn||n===-Rn){return(n<0?-1:1)*En}return n===n?n:0}function jc(n){
var t=xc(n),r=t%1;return t===t?r?t-r:t:0}function Ac(n){return n?$r(jc(n),0,Wn):0}function kc(n){if("number"==typeof n)return n;if(yc(n))return Sn;if(ic(n)){var t="function"==typeof n.valueOf?n.valueOf():n;n=ic(t)?t+"":t}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(Et,"");var r=Ft.test(n);return r||Pt.test(n)?Jr(n.slice(2),r?2:8):Mt.test(n)?Sn:+n}function Oc(n){return Bu(n,Nc(n))}function Ic(n){return n?$r(jc(n),-zn,zn):0===n?n:0}function Rc(n){return null==n?"":pu(n)}function zc(n,t){var r=_s(n);
return null==t?r:Wr(r,t)}function Ec(n,t){return v(n,bi(t,3),ee)}function Sc(n,t){return v(n,bi(t,3),ue)}function Wc(n,t){return null==n?n:ys(n,bi(t,3),Nc)}function Lc(n,t){return null==n?n:ds(n,bi(t,3),Nc)}function Cc(n,t){return n&&ee(n,bi(t,3))}function Uc(n,t){return n&&ue(n,bi(t,3))}function Bc(n){return null==n?[]:se(n,Fc(n))}function Tc(n){return null==n?[]:se(n,Nc(n))}function $c(n,t,r){var e=null==n?Y:ve(n,t);return e===Y?r:e}function Dc(n,t){return null!=n&&Oi(n,t,we)}function Mc(n,t){return null!=n&&Oi(n,t,me);
}function Fc(n){return Vf(n)?Ar(n):$e(n)}function Nc(n){return Vf(n)?Ar(n,!0):De(n)}function Pc(n,t){var r={};return t=bi(t,3),ee(n,function(n,e,u){Cr(r,t(n,e,u),n)}),r}function qc(n,t){var r={};return t=bi(t,3),ee(n,function(n,e,u){Cr(r,e,t(n,e,u))}),r}function Zc(n,t){return Kc(n,Lf(bi(t)))}function Kc(n,t){if(null==n)return{};var r=c(gi(n),function(n){return[n]});return t=bi(t),He(n,r,function(n,r){return t(n,r[0])})}function Vc(n,t,r){t=ju(t,n);var e=-1,u=t.length;for(u||(u=1,n=Y);++e<u;){var i=null==n?Y:n[Qi(t[e])];
i===Y&&(e=u,i=r),n=rc(i)?i.call(n):i}return n}function Gc(n,t,r){return null==n?n:iu(n,t,r)}function Hc(n,t,r,e){return e="function"==typeof e?e:Y,null==n?n:iu(n,t,r,e)}function Jc(n,t,e){var u=yh(n),i=u||bh(n)||Ah(n);if(t=bi(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:ic(n)&&rc(o)?_s(Rl(n)):{}}return(i?r:ee)(n,function(n,r,u){return t(e,n,r,u)}),e}function Yc(n,t){return null==n||vu(n,t)}function Qc(n,t,r){return null==n?n:gu(n,t,xu(r))}function Xc(n,t,r,e){return e="function"==typeof e?e:Y,
null==n?n:gu(n,t,xu(r),e)}function na(n){return null==n?[]:z(n,Fc(n))}function ta(n){return null==n?[]:z(n,Nc(n))}function ra(n,t,r){return r===Y&&(r=t,t=Y),r!==Y&&(r=kc(r),r=r===r?r:0),t!==Y&&(t=kc(t),t=t===t?t:0),$r(kc(n),t,r)}function ea(n,t,r){return t=xc(t),r===Y?(r=t,t=0):r=xc(r),n=kc(n),xe(n,t,r)}function ua(n,t,r){if(r&&"boolean"!=typeof r&&Li(n,t,r)&&(t=r=Y),r===Y&&("boolean"==typeof t?(r=t,t=Y):"boolean"==typeof n&&(r=n,n=Y)),n===Y&&t===Y?(n=0,t=1):(n=xc(n),t===Y?(t=n,n=0):t=xc(t)),n>t){
var e=n;n=t,t=e}if(r||n%1||t%1){var u=Jl();return Vl(n+u*(t-n+Hr("1e-"+((u+"").length-1))),t)}return Xe(n,t)}function ia(n){return Jh(Rc(n).toLowerCase())}function oa(n){return n=Rc(n),n&&n.replace(Zt,he).replace(Br,"")}function fa(n,t,r){n=Rc(n),t=pu(t);var e=n.length;r=r===Y?e:$r(jc(r),0,e);var u=r;return r-=t.length,r>=0&&n.slice(r,u)==t}function ca(n){return n=Rc(n),n&&mt.test(n)?n.replace(bt,pe):n}function aa(n){return n=Rc(n),n&&zt.test(n)?n.replace(Rt,"\\$&"):n}function la(n,t,r){n=Rc(n),t=jc(t);
var e=t?K(n):0;if(!t||e>=t)return n;var u=(t-e)/2;return ni(Ml(u),r)+n+ni(Dl(u),r)}function sa(n,t,r){n=Rc(n),t=jc(t);var e=t?K(n):0;return t&&e<t?n+ni(t-e,r):n}function ha(n,t,r){n=Rc(n),t=jc(t);var e=t?K(n):0;return t&&e<t?ni(t-e,r)+n:n}function pa(n,t,r){return r||null==t?t=0:t&&(t=+t),Hl(Rc(n).replace(St,""),t||0)}function _a(n,t,r){return t=(r?Li(n,t,r):t===Y)?1:jc(t),tu(Rc(n),t)}function va(){var n=arguments,t=Rc(n[0]);return n.length<3?t:t.replace(n[1],n[2])}function ga(n,t,r){return r&&"number"!=typeof r&&Li(n,t,r)&&(t=r=Y),
(r=r===Y?Wn:r>>>0)?(n=Rc(n),n&&("string"==typeof t||null!=t&&!xh(t))&&(t=pu(t),!t&&B(n))?Au(V(n),0,r):n.split(t,r)):[]}function ya(n,t,r){return n=Rc(n),r=null==r?0:$r(jc(r),0,n.length),t=pu(t),n.slice(r,r+t.length)==t}function da(n,t,r){var e=q.templateSettings;r&&Li(n,t,r)&&(t=Y),n=Rc(n),t=zh({},t,e,ci);var u,i,o=zh({},t.imports,e.imports,ci),f=Fc(o),c=z(o,f),a=0,l=t.interpolate||Kt,s="__p += '",h=al((t.escape||Kt).source+"|"+l.source+"|"+(l===At?$t:Kt).source+"|"+(t.evaluate||Kt).source+"|$","g"),p="//# sourceURL="+(yl.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Nr+"]")+"\n";
n.replace(h,function(t,r,e,o,f,c){return e||(e=o),s+=n.slice(a,c).replace(Vt,C),r&&(u=!0,s+="' +\n__e("+r+") +\n'"),f&&(i=!0,s+="';\n"+f+";\n__p += '"),e&&(s+="' +\n((__t = ("+e+")) == null ? '' : __t) +\n'"),a=c+t.length,t}),s+="';\n";var _=yl.call(t,"variable")&&t.variable;_||(s="with (obj) {\n"+s+"\n}\n"),s=(i?s.replace(vt,""):s).replace(gt,"$1").replace(yt,"$1;"),s="function("+(_||"obj")+") {\n"+(_?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(u?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+s+"return __p\n}";
var v=Yh(function(){return ol(f,p+"return "+s).apply(Y,c)});if(v.source=s,nc(v))throw v;return v}function ba(n){return Rc(n).toLowerCase()}function wa(n){return Rc(n).toUpperCase()}function ma(n,t,r){if(n=Rc(n),n&&(r||t===Y))return n.replace(Et,"");if(!n||!(t=pu(t)))return n;var e=V(n),u=V(t);return Au(e,S(e,u),W(e,u)+1).join("")}function xa(n,t,r){if(n=Rc(n),n&&(r||t===Y))return n.replace(Wt,"");if(!n||!(t=pu(t)))return n;var e=V(n);return Au(e,0,W(e,V(t))+1).join("")}function ja(n,t,r){if(n=Rc(n),
n&&(r||t===Y))return n.replace(St,"");if(!n||!(t=pu(t)))return n;var e=V(n);return Au(e,S(e,V(t))).join("")}function Aa(n,t){var r=mn,e=xn;if(ic(t)){var u="separator"in t?t.separator:u;r="length"in t?jc(t.length):r,e="omission"in t?pu(t.omission):e}n=Rc(n);var i=n.length;if(B(n)){var o=V(n);i=o.length}if(r>=i)return n;var f=r-K(e);if(f<1)return e;var c=o?Au(o,0,f).join(""):n.slice(0,f);if(u===Y)return c+e;if(o&&(f+=c.length-f),xh(u)){if(n.slice(f).search(u)){var a,l=c;for(u.global||(u=al(u.source,Rc(Dt.exec(u))+"g")),
u.lastIndex=0;a=u.exec(l);)var s=a.index;c=c.slice(0,s===Y?f:s)}}else if(n.indexOf(pu(u),f)!=f){var h=c.lastIndexOf(u);h>-1&&(c=c.slice(0,h))}return c+e}function ka(n){return n=Rc(n),n&&wt.test(n)?n.replace(dt,_e):n}function Oa(n,t,r){return n=Rc(n),t=r?Y:t,t===Y?T(n)?J(n):_(n):n.match(t)||[]}function Ia(t){var r=null==t?0:t.length,e=bi();return t=r?c(t,function(n){if("function"!=typeof n[1])throw new sl(tn);return[e(n[0]),n[1]]}):[],ru(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e);
}})}function Ra(n){return Mr(Dr(n,on))}function za(n){return function(){return n}}function Ea(n,t){return null==n||n!==n?t:n}function Sa(n){return n}function Wa(n){return Te("function"==typeof n?n:Dr(n,on))}function La(n){return Ne(Dr(n,on))}function Ca(n,t){return Pe(n,Dr(t,on))}function Ua(n,t,e){var u=Fc(t),i=se(t,u);null!=e||ic(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=se(t,Fc(t)));var o=!(ic(e)&&"chain"in e&&!e.chain),f=rc(n);return r(i,function(r){var e=t[r];n[r]=e,f&&(n.prototype[r]=function(){
var t=this.__chain__;if(o||t){var r=n(this.__wrapped__);return(r.__actions__=Uu(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))})}),n}function Ba(){return Xr._===this&&(Xr._=xl),this}function Ta(){}function $a(n){return n=jc(n),ru(function(t){return Ke(t,n)})}function Da(n){return Ci(n)?m(Qi(n)):Je(n)}function Ma(n){return function(t){return null==n?Y:ve(n,t)}}function Fa(){return[]}function Na(){return!1}function Pa(){return{};
}function qa(){return""}function Za(){return!0}function Ka(n,t){if(n=jc(n),n<1||n>zn)return[];var r=Wn,e=Vl(n,Wn);t=bi(t),n-=Wn;for(var u=O(e,t);++r<n;)t(r);return u}function Va(n){return yh(n)?c(n,Qi):yc(n)?[n]:Uu(Ws(Rc(n)))}function Ga(n){var t=++dl;return Rc(n)+t}function Ha(n){return n&&n.length?Yr(n,Sa,be):Y}function Ja(n,t){return n&&n.length?Yr(n,bi(t,2),be):Y}function Ya(n){return w(n,Sa)}function Qa(n,t){return w(n,bi(t,2))}function Xa(n){return n&&n.length?Yr(n,Sa,Me):Y}function nl(n,t){
return n&&n.length?Yr(n,bi(t,2),Me):Y}function tl(n){return n&&n.length?k(n,Sa):0}function rl(n,t){return n&&n.length?k(n,bi(t,2)):0}x=null==x?Xr:ge.defaults(Xr.Object(),x,ge.pick(Xr,Fr));var el=x.Array,ul=x.Date,il=x.Error,ol=x.Function,fl=x.Math,cl=x.Object,al=x.RegExp,ll=x.String,sl=x.TypeError,hl=el.prototype,pl=ol.prototype,_l=cl.prototype,vl=x["__core-js_shared__"],gl=pl.toString,yl=_l.hasOwnProperty,dl=0,bl=function(){var n=/[^.]+$/.exec(vl&&vl.keys&&vl.keys.IE_PROTO||"");return n?"Symbol(src)_1."+n:"";
}(),wl=_l.toString,ml=gl.call(cl),xl=Xr._,jl=al("^"+gl.call(yl).replace(Rt,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Al=re?x.Buffer:Y,kl=x.Symbol,Ol=x.Uint8Array,Il=Al?Al.allocUnsafe:Y,Rl=M(cl.getPrototypeOf,cl),zl=cl.create,El=_l.propertyIsEnumerable,Sl=hl.splice,Wl=kl?kl.isConcatSpreadable:Y,Ll=kl?kl.iterator:Y,Cl=kl?kl.toStringTag:Y,Ul=function(){try{var n=xi(cl,"defineProperty");return n({},"",{}),n}catch(n){}}(),Bl=x.clearTimeout!==Xr.clearTimeout&&x.clearTimeout,Tl=ul&&ul.now!==Xr.Date.now&&ul.now,$l=x.setTimeout!==Xr.setTimeout&&x.setTimeout,Dl=fl.ceil,Ml=fl.floor,Fl=cl.getOwnPropertySymbols,Nl=Al?Al.isBuffer:Y,Pl=x.isFinite,ql=hl.join,Zl=M(cl.keys,cl),Kl=fl.max,Vl=fl.min,Gl=ul.now,Hl=x.parseInt,Jl=fl.random,Yl=hl.reverse,Ql=xi(x,"DataView"),Xl=xi(x,"Map"),ns=xi(x,"Promise"),ts=xi(x,"Set"),rs=xi(x,"WeakMap"),es=xi(cl,"create"),us=rs&&new rs,is={},os=Xi(Ql),fs=Xi(Xl),cs=Xi(ns),as=Xi(ts),ls=Xi(rs),ss=kl?kl.prototype:Y,hs=ss?ss.valueOf:Y,ps=ss?ss.toString:Y,_s=function(){
function n(){}return function(t){if(!ic(t))return{};if(zl)return zl(t);n.prototype=t;var r=new n;return n.prototype=Y,r}}();q.templateSettings={escape:xt,evaluate:jt,interpolate:At,variable:"",imports:{_:q}},q.prototype=G.prototype,q.prototype.constructor=q,H.prototype=_s(G.prototype),H.prototype.constructor=H,Bt.prototype=_s(G.prototype),Bt.prototype.constructor=Bt,Yt.prototype.clear=Qt,Yt.prototype.delete=Xt,Yt.prototype.get=nr,Yt.prototype.has=tr,Yt.prototype.set=rr,er.prototype.clear=ur,er.prototype.delete=ir,
er.prototype.get=or,er.prototype.has=fr,er.prototype.set=cr,ar.prototype.clear=lr,ar.prototype.delete=sr,ar.prototype.get=hr,ar.prototype.has=pr,ar.prototype.set=_r,vr.prototype.add=vr.prototype.push=gr,vr.prototype.has=yr,dr.prototype.clear=br,dr.prototype.delete=wr,dr.prototype.get=mr,dr.prototype.has=xr,dr.prototype.set=jr;var vs=Fu(ee),gs=Fu(ue,!0),ys=Nu(),ds=Nu(!0),bs=us?function(n,t){return us.set(n,t),n}:Sa,ws=Ul?function(n,t){return Ul(n,"toString",{configurable:!0,enumerable:!1,value:za(t),
writable:!0})}:Sa,ms=ru,xs=Bl||function(n){return Xr.clearTimeout(n)},js=ts&&1/N(new ts([,-0]))[1]==Rn?function(n){return new ts(n)}:Ta,As=us?function(n){return us.get(n)}:Ta,ks=Fl?function(n){return null==n?[]:(n=cl(n),i(Fl(n),function(t){return El.call(n,t)}))}:Fa,Os=Fl?function(n){for(var t=[];n;)a(t,ks(n)),n=Rl(n);return t}:Fa,Is=de;(Ql&&Is(new Ql(new ArrayBuffer(1)))!=it||Xl&&Is(new Xl)!=Zn||ns&&Is(ns.resolve())!=Hn||ts&&Is(new ts)!=Qn||rs&&Is(new rs)!=rt)&&(Is=function(n){var t=de(n),r=t==Gn?n.constructor:Y,e=r?Xi(r):"";
if(e)switch(e){case os:return it;case fs:return Zn;case cs:return Hn;case as:return Qn;case ls:return rt}return t});var Rs=vl?rc:Na,zs=Ji(bs),Es=$l||function(n,t){return Xr.setTimeout(n,t)},Ss=Ji(ws),Ws=Fi(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(""),n.replace(It,function(n,r,e,u){t.push(e?u.replace(Tt,"$1"):r||n)}),t}),Ls=ru(function(n,t){return Gf(n)?Vr(n,te(t,1,Gf,!0)):[]}),Cs=ru(function(n,t){var r=mo(t);return Gf(r)&&(r=Y),Gf(n)?Vr(n,te(t,1,Gf,!0),bi(r,2)):[]}),Us=ru(function(n,t){
var r=mo(t);return Gf(r)&&(r=Y),Gf(n)?Vr(n,te(t,1,Gf,!0),Y,r):[]}),Bs=ru(function(n){var t=c(n,mu);return t.length&&t[0]===n[0]?je(t):[]}),Ts=ru(function(n){var t=mo(n),r=c(n,mu);return t===mo(r)?t=Y:r.pop(),r.length&&r[0]===n[0]?je(r,bi(t,2)):[]}),$s=ru(function(n){var t=mo(n),r=c(n,mu);return t="function"==typeof t?t:Y,t&&r.pop(),r.length&&r[0]===n[0]?je(r,Y,t):[]}),Ds=ru(Ao),Ms=_i(function(n,t){var r=null==n?0:n.length,e=Tr(n,t);return Qe(n,c(t,function(n){return Wi(n,r)?+n:n}).sort(Su)),e}),Fs=ru(function(n){
return _u(te(n,1,Gf,!0))}),Ns=ru(function(n){var t=mo(n);return Gf(t)&&(t=Y),_u(te(n,1,Gf,!0),bi(t,2))}),Ps=ru(function(n){var t=mo(n);return t="function"==typeof t?t:Y,_u(te(n,1,Gf,!0),Y,t)}),qs=ru(function(n,t){return Gf(n)?Vr(n,t):[]}),Zs=ru(function(n){return bu(i(n,Gf))}),Ks=ru(function(n){var t=mo(n);return Gf(t)&&(t=Y),bu(i(n,Gf),bi(t,2))}),Vs=ru(function(n){var t=mo(n);return t="function"==typeof t?t:Y,bu(i(n,Gf),Y,t)}),Gs=ru(Ko),Hs=ru(function(n){var t=n.length,r=t>1?n[t-1]:Y;return r="function"==typeof r?(n.pop(),
r):Y,Vo(n,r)}),Js=_i(function(n){var t=n.length,r=t?n[0]:0,e=this.__wrapped__,u=function(t){return Tr(t,n)};return!(t>1||this.__actions__.length)&&e instanceof Bt&&Wi(r)?(e=e.slice(r,+r+(t?1:0)),e.__actions__.push({func:Qo,args:[u],thisArg:Y}),new H(e,this.__chain__).thru(function(n){return t&&!n.length&&n.push(Y),n})):this.thru(u)}),Ys=Du(function(n,t,r){yl.call(n,r)?++n[r]:Cr(n,r,1)}),Qs=Gu(lo),Xs=Gu(so),nh=Du(function(n,t,r){yl.call(n,r)?n[r].push(t):Cr(n,r,[t])}),th=ru(function(t,r,e){var u=-1,i="function"==typeof r,o=Vf(t)?el(t.length):[];
return vs(t,function(t){o[++u]=i?n(r,t,e):ke(t,r,e)}),o}),rh=Du(function(n,t,r){Cr(n,r,t)}),eh=Du(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),uh=ru(function(n,t){if(null==n)return[];var r=t.length;return r>1&&Li(n,t[0],t[1])?t=[]:r>2&&Li(t[0],t[1],t[2])&&(t=[t[0]]),Ve(n,te(t,1),[])}),ih=Tl||function(){return Xr.Date.now()},oh=ru(function(n,t,r){var e=sn;if(r.length){var u=F(r,di(oh));e|=gn}return fi(n,e,t,r,u)}),fh=ru(function(n,t,r){var e=sn|hn;if(r.length){var u=F(r,di(fh));e|=gn;
}return fi(t,e,n,r,u)}),ch=ru(function(n,t){return Kr(n,1,t)}),ah=ru(function(n,t,r){return Kr(n,kc(t)||0,r)});Wf.Cache=ar;var lh=ms(function(t,r){r=1==r.length&&yh(r[0])?c(r[0],R(bi())):c(te(r,1),R(bi()));var e=r.length;return ru(function(u){for(var i=-1,o=Vl(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);return n(t,this,u)})}),sh=ru(function(n,t){return fi(n,gn,Y,t,F(t,di(sh)))}),hh=ru(function(n,t){return fi(n,yn,Y,t,F(t,di(hh)))}),ph=_i(function(n,t){return fi(n,bn,Y,Y,Y,t)}),_h=ei(be),vh=ei(function(n,t){
return n>=t}),gh=Oe(function(){return arguments}())?Oe:function(n){return oc(n)&&yl.call(n,"callee")&&!El.call(n,"callee")},yh=el.isArray,dh=ie?R(ie):Ie,bh=Nl||Na,wh=oe?R(oe):Re,mh=fe?R(fe):Se,xh=ce?R(ce):Ce,jh=ae?R(ae):Ue,Ah=le?R(le):Be,kh=ei(Me),Oh=ei(function(n,t){return n<=t}),Ih=Mu(function(n,t){if($i(t)||Vf(t))return Bu(t,Fc(t),n),Y;for(var r in t)yl.call(t,r)&&zr(n,r,t[r])}),Rh=Mu(function(n,t){Bu(t,Nc(t),n)}),zh=Mu(function(n,t,r,e){Bu(t,Nc(t),n,e)}),Eh=Mu(function(n,t,r,e){Bu(t,Fc(t),n,e);
}),Sh=_i(Tr),Wh=ru(function(n,t){n=cl(n);var r=-1,e=t.length,u=e>2?t[2]:Y;for(u&&Li(t[0],t[1],u)&&(e=1);++r<e;)for(var i=t[r],o=Nc(i),f=-1,c=o.length;++f<c;){var a=o[f],l=n[a];(l===Y||Kf(l,_l[a])&&!yl.call(n,a))&&(n[a]=i[a])}return n}),Lh=ru(function(t){return t.push(Y,ai),n($h,Y,t)}),Ch=Yu(function(n,t,r){null!=t&&"function"!=typeof t.toString&&(t=wl.call(t)),n[t]=r},za(Sa)),Uh=Yu(function(n,t,r){null!=t&&"function"!=typeof t.toString&&(t=wl.call(t)),yl.call(n,t)?n[t].push(r):n[t]=[r]},bi),Bh=ru(ke),Th=Mu(function(n,t,r){
qe(n,t,r)}),$h=Mu(function(n,t,r,e){qe(n,t,r,e)}),Dh=_i(function(n,t){var r={};if(null==n)return r;var e=!1;t=c(t,function(t){return t=ju(t,n),e||(e=t.length>1),t}),Bu(n,gi(n),r),e&&(r=Dr(r,on|fn|cn,li));for(var u=t.length;u--;)vu(r,t[u]);return r}),Mh=_i(function(n,t){return null==n?{}:Ge(n,t)}),Fh=oi(Fc),Nh=oi(Nc),Ph=Zu(function(n,t,r){return t=t.toLowerCase(),n+(r?ia(t):t)}),qh=Zu(function(n,t,r){return n+(r?"-":"")+t.toLowerCase()}),Zh=Zu(function(n,t,r){return n+(r?" ":"")+t.toLowerCase()}),Kh=qu("toLowerCase"),Vh=Zu(function(n,t,r){
return n+(r?"_":"")+t.toLowerCase()}),Gh=Zu(function(n,t,r){return n+(r?" ":"")+Jh(t)}),Hh=Zu(function(n,t,r){return n+(r?" ":"")+t.toUpperCase()}),Jh=qu("toUpperCase"),Yh=ru(function(t,r){try{return n(t,Y,r)}catch(n){return nc(n)?n:new il(n)}}),Qh=_i(function(n,t){return r(t,function(t){t=Qi(t),Cr(n,t,oh(n[t],n))}),n}),Xh=Hu(),np=Hu(!0),tp=ru(function(n,t){return function(r){return ke(r,n,t)}}),rp=ru(function(n,t){return function(r){return ke(n,r,t)}}),ep=Xu(c),up=Xu(u),ip=Xu(h),op=ri(),fp=ri(!0),cp=Qu(function(n,t){
return n+t},0),ap=ii("ceil"),lp=Qu(function(n,t){return n/t},1),sp=ii("floor"),hp=Qu(function(n,t){return n*t},1),pp=ii("round"),_p=Qu(function(n,t){return n-t},0);return q.after=kf,q.ary=Of,q.assign=Ih,q.assignIn=Rh,q.assignInWith=zh,q.assignWith=Eh,q.at=Sh,q.before=If,q.bind=oh,q.bindAll=Qh,q.bindKey=fh,q.castArray=Mf,q.chain=Jo,q.chunk=ro,q.compact=eo,q.concat=uo,q.cond=Ia,q.conforms=Ra,q.constant=za,q.countBy=Ys,q.create=zc,q.curry=Rf,q.curryRight=zf,q.debounce=Ef,q.defaults=Wh,q.defaultsDeep=Lh,
q.defer=ch,q.delay=ah,q.difference=Ls,q.differenceBy=Cs,q.differenceWith=Us,q.drop=io,q.dropRight=oo,q.dropRightWhile=fo,q.dropWhile=co,q.fill=ao,q.filter=cf,q.flatMap=af,q.flatMapDeep=lf,q.flatMapDepth=sf,q.flatten=ho,q.flattenDeep=po,q.flattenDepth=_o,q.flip=Sf,q.flow=Xh,q.flowRight=np,q.fromPairs=vo,q.functions=Bc,q.functionsIn=Tc,q.groupBy=nh,q.initial=bo,q.intersection=Bs,q.intersectionBy=Ts,q.intersectionWith=$s,q.invert=Ch,q.invertBy=Uh,q.invokeMap=th,q.iteratee=Wa,q.keyBy=rh,q.keys=Fc,q.keysIn=Nc,
q.map=vf,q.mapKeys=Pc,q.mapValues=qc,q.matches=La,q.matchesProperty=Ca,q.memoize=Wf,q.merge=Th,q.mergeWith=$h,q.method=tp,q.methodOf=rp,q.mixin=Ua,q.negate=Lf,q.nthArg=$a,q.omit=Dh,q.omitBy=Zc,q.once=Cf,q.orderBy=gf,q.over=ep,q.overArgs=lh,q.overEvery=up,q.overSome=ip,q.partial=sh,q.partialRight=hh,q.partition=eh,q.pick=Mh,q.pickBy=Kc,q.property=Da,q.propertyOf=Ma,q.pull=Ds,q.pullAll=Ao,q.pullAllBy=ko,q.pullAllWith=Oo,q.pullAt=Ms,q.range=op,q.rangeRight=fp,q.rearg=ph,q.reject=bf,q.remove=Io,q.rest=Uf,
q.reverse=Ro,q.sampleSize=mf,q.set=Gc,q.setWith=Hc,q.shuffle=xf,q.slice=zo,q.sortBy=uh,q.sortedUniq=Bo,q.sortedUniqBy=To,q.split=ga,q.spread=Bf,q.tail=$o,q.take=Do,q.takeRight=Mo,q.takeRightWhile=Fo,q.takeWhile=No,q.tap=Yo,q.throttle=Tf,q.thru=Qo,q.toArray=mc,q.toPairs=Fh,q.toPairsIn=Nh,q.toPath=Va,q.toPlainObject=Oc,q.transform=Jc,q.unary=$f,q.union=Fs,q.unionBy=Ns,q.unionWith=Ps,q.uniq=Po,q.uniqBy=qo,q.uniqWith=Zo,q.unset=Yc,q.unzip=Ko,q.unzipWith=Vo,q.update=Qc,q.updateWith=Xc,q.values=na,q.valuesIn=ta,
q.without=qs,q.words=Oa,q.wrap=Df,q.xor=Zs,q.xorBy=Ks,q.xorWith=Vs,q.zip=Gs,q.zipObject=Go,q.zipObjectDeep=Ho,q.zipWith=Hs,q.entries=Fh,q.entriesIn=Nh,q.extend=Rh,q.extendWith=zh,Ua(q,q),q.add=cp,q.attempt=Yh,q.camelCase=Ph,q.capitalize=ia,q.ceil=ap,q.clamp=ra,q.clone=Ff,q.cloneDeep=Pf,q.cloneDeepWith=qf,q.cloneWith=Nf,q.conformsTo=Zf,q.deburr=oa,q.defaultTo=Ea,q.divide=lp,q.endsWith=fa,q.eq=Kf,q.escape=ca,q.escapeRegExp=aa,q.every=ff,q.find=Qs,q.findIndex=lo,q.findKey=Ec,q.findLast=Xs,q.findLastIndex=so,
q.findLastKey=Sc,q.floor=sp,q.forEach=hf,q.forEachRight=pf,q.forIn=Wc,q.forInRight=Lc,q.forOwn=Cc,q.forOwnRight=Uc,q.get=$c,q.gt=_h,q.gte=vh,q.has=Dc,q.hasIn=Mc,q.head=go,q.identity=Sa,q.includes=_f,q.indexOf=yo,q.inRange=ea,q.invoke=Bh,q.isArguments=gh,q.isArray=yh,q.isArrayBuffer=dh,q.isArrayLike=Vf,q.isArrayLikeObject=Gf,q.isBoolean=Hf,q.isBuffer=bh,q.isDate=wh,q.isElement=Jf,q.isEmpty=Yf,q.isEqual=Qf,q.isEqualWith=Xf,q.isError=nc,q.isFinite=tc,q.isFunction=rc,q.isInteger=ec,q.isLength=uc,q.isMap=mh,
q.isMatch=fc,q.isMatchWith=cc,q.isNaN=ac,q.isNative=lc,q.isNil=hc,q.isNull=sc,q.isNumber=pc,q.isObject=ic,q.isObjectLike=oc,q.isPlainObject=_c,q.isRegExp=xh,q.isSafeInteger=vc,q.isSet=jh,q.isString=gc,q.isSymbol=yc,q.isTypedArray=Ah,q.isUndefined=dc,q.isWeakMap=bc,q.isWeakSet=wc,q.join=wo,q.kebabCase=qh,q.last=mo,q.lastIndexOf=xo,q.lowerCase=Zh,q.lowerFirst=Kh,q.lt=kh,q.lte=Oh,q.max=Ha,q.maxBy=Ja,q.mean=Ya,q.meanBy=Qa,q.min=Xa,q.minBy=nl,q.stubArray=Fa,q.stubFalse=Na,q.stubObject=Pa,q.stubString=qa,
q.stubTrue=Za,q.multiply=hp,q.nth=jo,q.noConflict=Ba,q.noop=Ta,q.now=ih,q.pad=la,q.padEnd=sa,q.padStart=ha,q.parseInt=pa,q.random=ua,q.reduce=yf,q.reduceRight=df,q.repeat=_a,q.replace=va,q.result=Vc,q.round=pp,q.runInContext=p,q.sample=wf,q.size=jf,q.snakeCase=Vh,q.some=Af,q.sortedIndex=Eo,q.sortedIndexBy=So,q.sortedIndexOf=Wo,q.sortedLastIndex=Lo,q.sortedLastIndexBy=Co,q.sortedLastIndexOf=Uo,q.startCase=Gh,q.startsWith=ya,q.subtract=_p,q.sum=tl,q.sumBy=rl,q.template=da,q.times=Ka,q.toFinite=xc,q.toInteger=jc,
q.toLength=Ac,q.toLower=ba,q.toNumber=kc,q.toSafeInteger=Ic,q.toString=Rc,q.toUpper=wa,q.trim=ma,q.trimEnd=xa,q.trimStart=ja,q.truncate=Aa,q.unescape=ka,q.uniqueId=Ga,q.upperCase=Hh,q.upperFirst=Jh,q.each=hf,q.eachRight=pf,q.first=go,Ua(q,function(){var n={};return ee(q,function(t,r){yl.call(q.prototype,r)||(n[r]=t)}),n}(),{chain:!1}),q.VERSION=Q,r(["bind","bindKey","curry","curryRight","partial","partialRight"],function(n){q[n].placeholder=q}),r(["drop","take"],function(n,t){Bt.prototype[n]=function(r){
r=r===Y?1:Kl(jc(r),0);var e=this.__filtered__&&!t?new Bt(this):this.clone();return e.__filtered__?e.__takeCount__=Vl(r,e.__takeCount__):e.__views__.push({size:Vl(r,Wn),type:n+(e.__dir__<0?"Right":"")}),e},Bt.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()}}),r(["filter","map","takeWhile"],function(n,t){var r=t+1,e=r==kn||r==In;Bt.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:bi(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),r(["head","last"],function(n,t){
var r="take"+(t?"Right":"");Bt.prototype[n]=function(){return this[r](1).value()[0]}}),r(["initial","tail"],function(n,t){var r="drop"+(t?"":"Right");Bt.prototype[n]=function(){return this.__filtered__?new Bt(this):this[r](1)}}),Bt.prototype.compact=function(){return this.filter(Sa)},Bt.prototype.find=function(n){return this.filter(n).head()},Bt.prototype.findLast=function(n){return this.reverse().find(n)},Bt.prototype.invokeMap=ru(function(n,t){return"function"==typeof n?new Bt(this):this.map(function(r){
return ke(r,n,t)})}),Bt.prototype.reject=function(n){return this.filter(Lf(bi(n)))},Bt.prototype.slice=function(n,t){n=jc(n);var r=this;return r.__filtered__&&(n>0||t<0)?new Bt(r):(n<0?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==Y&&(t=jc(t),r=t<0?r.dropRight(-t):r.take(t-n)),r)},Bt.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Bt.prototype.toArray=function(){return this.take(Wn)},ee(Bt.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=q[e?"take"+("last"==t?"Right":""):t],i=e||/^find/.test(t);
u&&(q.prototype[t]=function(){var t=this.__wrapped__,o=e?[1]:arguments,f=t instanceof Bt,c=o[0],l=f||yh(t),s=function(n){var t=u.apply(q,a([n],o));return e&&h?t[0]:t};l&&r&&"function"==typeof c&&1!=c.length&&(f=l=!1);var h=this.__chain__,p=!!this.__actions__.length,_=i&&!h,v=f&&!p;if(!i&&l){t=v?t:new Bt(this);var g=n.apply(t,o);return g.__actions__.push({func:Qo,args:[s],thisArg:Y}),new H(g,h)}return _&&v?n.apply(this,o):(g=this.thru(s),_?e?g.value()[0]:g.value():g)})}),r(["pop","push","shift","sort","splice","unshift"],function(n){
var t=hl[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:pop|shift)$/.test(n);q.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(yh(u)?u:[],n)}return this[r](function(r){return t.apply(yh(r)?r:[],n)})}}),ee(Bt.prototype,function(n,t){var r=q[t];if(r){var e=r.name+"";yl.call(is,e)||(is[e]=[]),is[e].push({name:t,func:r})}}),is[Ju(Y,hn).name]=[{name:"wrapper",func:Y}],Bt.prototype.clone=Gt,Bt.prototype.reverse=Ht,Bt.prototype.value=Jt,q.prototype.at=Js,
q.prototype.chain=Xo,q.prototype.commit=nf,q.prototype.next=tf,q.prototype.plant=ef,q.prototype.reverse=uf,q.prototype.toJSON=q.prototype.valueOf=q.prototype.value=of,q.prototype.first=q.prototype.head,Ll&&(q.prototype[Ll]=rf),q},ge=ve();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(Xr._=ge,define(function(){return ge})):te?((te.exports=ge)._=ge,ne._=ge):Xr._=ge}).call(this);
}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[6,3,7]);
